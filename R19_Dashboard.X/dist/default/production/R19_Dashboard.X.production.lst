

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Dec 27 19:37:13 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79  0000                     
    80                           ; Version 2.00
    81                           ; Generated 27/05/2018 GMT
    82                           ; 
    83                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F46K80 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataBANK0
   116  006B62                     __pidataBANK0:
   117                           	opt stack 0
   118                           
   119                           ;initializer for main@F12754
   120  006B62  0000               	dw	0
   121  006B64  0001               	dw	1
   122  006B66  0000               	dw	0
   123  006B68  0000               	dw	0
   124  006B6A  0000               	dw	0
   125  006B6C  0000               	dw	0
   126  006B6E  0000               	dw	0
   127  006B70  0000               	dw	0
   128  006B72  0000               	dw	0
   129  006B74  0000               	dw	0
   130  006B76  0000               	dw	0
   131  0000                     _BRGCON3	set	3653
   132  0000                     _BRGCON2	set	3652
   133  0000                     _BRGCON1	set	3651
   134  0000                     _RXF5SIDL	set	3829
   135  0000                     _RXF5SIDH	set	3828
   136  0000                     _RXF5EIDL	set	3831
   137  0000                     _RXF5EIDH	set	3830
   138  0000                     _RXF4SIDL	set	3825
   139  0000                     _RXF4SIDH	set	3824
   140  0000                     _RXF4EIDL	set	3827
   141  0000                     _RXF4EIDH	set	3826
   142  0000                     _RXF3SIDL	set	3821
   143  0000                     _RXF3SIDH	set	3820
   144  0000                     _RXF3EIDL	set	3823
   145  0000                     _RXF3EIDH	set	3822
   146  0000                     _RXF2SIDL	set	3817
   147  0000                     _RXF2SIDH	set	3816
   148  0000                     _RXF2EIDL	set	3819
   149  0000                     _RXF2EIDH	set	3818
   150  0000                     _RXF1SIDL	set	3813
   151  0000                     _RXF1SIDH	set	3812
   152  0000                     _RXF1EIDL	set	3815
   153  0000                     _RXF1EIDH	set	3814
   154  0000                     _RXF0SIDL	set	3809
   155  0000                     _RXF0SIDH	set	3808
   156  0000                     _RXF0EIDL	set	3811
   157  0000                     _RXF0EIDH	set	3810
   158  0000                     _RXM1SIDL	set	3837
   159  0000                     _RXM1SIDH	set	3836
   160  0000                     _RXM1EIDL	set	3839
   161  0000                     _RXM1EIDH	set	3838
   162  0000                     _RXM0SIDL	set	3833
   163  0000                     _RXM0SIDH	set	3832
   164  0000                     _RXM0EIDL	set	3835
   165  0000                     _RXM0EIDH	set	3834
   166  0000                     _RXB1D7	set	3901
   167  0000                     _RXB1D6	set	3900
   168  0000                     _RXB1D5	set	3899
   169  0000                     _RXB1D4	set	3898
   170  0000                     _RXB1D3	set	3897
   171  0000                     _RXB1D2	set	3896
   172  0000                     _RXB1D1	set	3895
   173  0000                     _RXB1D0	set	3894
   174  0000                     _RXB1DLC	set	3893
   175  0000                     _RXB1SIDH	set	3889
   176  0000                     _RXB1EIDL	set	3892
   177  0000                     _RXB1EIDH	set	3891
   178  0000                     _RXB1SIDL	set	3890
   179  0000                     _RXB1CONbits	set	3888
   180  0000                     _TXB2D7	set	3853
   181  0000                     _TXB2D6	set	3852
   182  0000                     _TXB2D5	set	3851
   183  0000                     _TXB2D4	set	3850
   184  0000                     _TXB2D3	set	3849
   185  0000                     _TXB2D2	set	3848
   186  0000                     _TXB2D1	set	3847
   187  0000                     _TXB2D0	set	3846
   188  0000                     _TXB2DLC	set	3845
   189  0000                     _TXB2SIDL	set	3842
   190  0000                     _TXB2SIDH	set	3841
   191  0000                     _TXB2EIDL	set	3844
   192  0000                     _TXB2EIDH	set	3843
   193  0000                     _TXB2CONbits	set	3840
   194  0000                     _TXB1D7	set	3869
   195  0000                     _TXB1D6	set	3868
   196  0000                     _TXB1D5	set	3867
   197  0000                     _TXB1D4	set	3866
   198  0000                     _TXB1D3	set	3865
   199  0000                     _TXB1D2	set	3864
   200  0000                     _TXB1D1	set	3863
   201  0000                     _TXB1D0	set	3862
   202  0000                     _TXB1DLC	set	3861
   203  0000                     _TXB1SIDL	set	3858
   204  0000                     _TXB1SIDH	set	3857
   205  0000                     _TXB1EIDL	set	3860
   206  0000                     _TXB1EIDH	set	3859
   207  0000                     _TXB1CONbits	set	3856
   208  0000                     _TXB0D7	set	3885
   209  0000                     _TXB0D6	set	3884
   210  0000                     _TXB0D5	set	3883
   211  0000                     _TXB0D4	set	3882
   212  0000                     _TXB0D3	set	3881
   213  0000                     _TXB0D2	set	3880
   214  0000                     _TXB0D1	set	3879
   215  0000                     _TXB0D0	set	3878
   216  0000                     _TXB0DLC	set	3877
   217  0000                     _TXB0SIDL	set	3874
   218  0000                     _TXB0SIDH	set	3873
   219  0000                     _TXB0EIDL	set	3876
   220  0000                     _TXB0EIDH	set	3875
   221  0000                     _TXB0CONbits	set	3872
   222  0000                     _WPUB	set	3931
   223  0000                     _ANCON1	set	3932
   224  0000                     _ANCON0	set	3933
   225  0000                     _CIOCONbits	set	3952
   226  0000                     _PORTDbits	set	3971
   227  0000                     _PORTAbits	set	3968
   228  0000                     _LATAbits	set	3977
   229  0000                     _T0CONbits	set	4053
   230  0000                     _TMR0L	set	4054
   231  0000                     _TMR0H	set	4055
   232  0000                     _T0CON	set	4053
   233  0000                     _REFOCON	set	3994
   234  0000                     _OSCTUNE	set	3995
   235  0000                     _OSCCON2	set	4050
   236  0000                     _OSCCON	set	4051
   237  0000                     _INTCONbits	set	4082
   238  0000                     _RCONbits	set	4048
   239  0000                     _COMSTATbits	set	3953
   240  0000                     _RXB0D7	set	3949
   241  0000                     _RXB0D6	set	3948
   242  0000                     _RXB0D5	set	3947
   243  0000                     _RXB0D4	set	3946
   244  0000                     _RXB0D3	set	3945
   245  0000                     _RXB0D2	set	3944
   246  0000                     _RXB0D1	set	3943
   247  0000                     _RXB0D0	set	3942
   248  0000                     _RXB0DLC	set	3941
   249  0000                     _RXB0SIDH	set	3937
   250  0000                     _RXB0EIDL	set	3940
   251  0000                     _RXB0EIDH	set	3939
   252  0000                     _RXB0SIDL	set	3938
   253  0000                     _RXB0CONbits	set	3936
   254  0000                     _PIE5bits	set	3958
   255  0000                     _PIR5bits	set	3959
   256  0000                     _ECANCON	set	3954
   257  0000                     _CANSTAT	set	3950
   258  0000                     _CANCON	set	3951
   259  0000                     _SSPSTATbits	set	4039
   260  0000                     _SSPCON1bits	set	4038
   261  0000                     _SSPADD	set	4040
   262  0000                     _SSPCON1	set	4038
   263  0000                     _SSPSTAT	set	4039
   264  0000                     _TRISD	set	3989
   265  0000                     _TRISC	set	3988
   266  0000                     _TRISB	set	3987
   267  0000                     _TRISA	set	3986
   268  0000                     _TRISE	set	3990
   269  0000                     _LATC	set	3979
   270  0000                     _LATB	set	3978
   271  0000                     _LATA	set	3977
   272  0000                     _LATD	set	3980
   273  0000                     _LATE	set	3981
   274  0000                     _T1GCONbits	set	4010
   275  0000                     _T1CONbits	set	4045
   276  0000                     _PIE1bits	set	3997
   277  0000                     _PIR1bits	set	3998
   278  0000                     _TMR1L	set	4046
   279  0000                     _TMR1H	set	4047
   280  0000                     _T1GCON	set	4010
   281  0000                     _T1CON	set	4045
   282  0000                     _LATCbits	set	3979
   283  0000                     _SSPBUF	set	4041
   284  0000                     _LATDbits	set	3980
   285                           
   286                           	psect	smallconst
   287  000F00                     __psmallconst:
   288                           	opt stack 0
   289  000F00  00                 	db	0
   290  000F01                     STR_14:
   291  000F01  42                 	db	66	;'B'
   292  000F02  53                 	db	83	;'S'
   293  000F03  50                 	db	80	;'P'
   294  000F04  44                 	db	68	;'D'
   295  000F05  20                 	db	32
   296  000F06  53                 	db	83	;'S'
   297  000F07  74                 	db	116	;'t'
   298  000F08  61                 	db	97	;'a'
   299  000F09  74                 	db	116	;'t'
   300  000F0A  65                 	db	101	;'e'
   301  000F0B  00                 	db	0
   302  000F0C                     STR_32:
   303  000F0C  47                 	db	71	;'G'
   304  000F0D  65                 	db	101	;'e'
   305  000F0E  61                 	db	97	;'a'
   306  000F0F  72                 	db	114	;'r'
   307  000F10  20                 	db	32
   308  000F11  53                 	db	83	;'S'
   309  000F12  68                 	db	104	;'h'
   310  000F13  69                 	db	105	;'i'
   311  000F14  66                 	db	102	;'f'
   312  000F15  74                 	db	116	;'t'
   313  000F16  00                 	db	0
   314  000F17                     STR_2:
   315  000F17  47                 	db	71	;'G'
   316  000F18  61                 	db	97	;'a'
   317  000F19  69                 	db	105	;'i'
   318  000F1A  6E                 	db	110	;'n'
   319  000F1B  2F                 	db	47
   320  000F1C  4C                 	db	76	;'L'
   321  000F1D  6F                 	db	111	;'o'
   322  000F1E  73                 	db	115	;'s'
   323  000F1F  73                 	db	115	;'s'
   324  000F20  00                 	db	0
   325  000F21                     STR_30:
   326  000F21  41                 	db	65	;'A'
   327  000F22  6E                 	db	110	;'n'
   328  000F23  74                 	db	116	;'t'
   329  000F24  69                 	db	105	;'i'
   330  000F25  20                 	db	32
   331  000F26  4C                 	db	76	;'L'
   332  000F27  61                 	db	97	;'a'
   333  000F28  67                 	db	103	;'g'
   334  000F29  00                 	db	0
   335  000F2A                     STR_23:
   336  000F2A  57                 	db	87	;'W'
   337  000F2B  61                 	db	97	;'a'
   338  000F2C  72                 	db	114	;'r'
   339  000F2D  6E                 	db	110	;'n'
   340  000F2E  69                 	db	105	;'i'
   341  000F2F  6E                 	db	110	;'n'
   342  000F30  67                 	db	103	;'g'
   343  000F31  00                 	db	0
   344  000F32                     STR_15:
   345  000F32  4C                 	db	76	;'L'
   346  000F33  61                 	db	97	;'a'
   347  000F34  75                 	db	117	;'u'
   348  000F35  6E                 	db	110	;'n'
   349  000F36  63                 	db	99	;'c'
   350  000F37  68                 	db	104	;'h'
   351  000F38  00                 	db	0
   352  000F39                     STR_17:
   353  000F39  43                 	db	67	;'C'
   354  000F3A  6C                 	db	108	;'l'
   355  000F3B  75                 	db	117	;'u'
   356  000F3C  74                 	db	116	;'t'
   357  000F3D  63                 	db	99	;'c'
   358  000F3E  68                 	db	104	;'h'
   359  000F3F  00                 	db	0
   360  000F40                     STR_22:
   361  000F40  4E                 	db	78	;'N'
   362  000F41  6F                 	db	111	;'o'
   363  000F42  72                 	db	114	;'r'
   364  000F43  6D                 	db	109	;'m'
   365  000F44  61                 	db	97	;'a'
   366  000F45  6C                 	db	108	;'l'
   367  000F46  00                 	db	0
   368  000F47                     STR_6:
   369  000F47  53                 	db	83	;'S'
   370  000F48  70                 	db	112	;'p'
   371  000F49  65                 	db	101	;'e'
   372  000F4A  65                 	db	101	;'e'
   373  000F4B  64                 	db	100	;'d'
   374  000F4C  00                 	db	0
   375  000F4D                     STR_18:
   376  000F4D  52                 	db	82	;'R'
   377  000F4E  61                 	db	97	;'a'
   378  000F4F  64                 	db	100	;'d'
   379  000F50  69                 	db	105	;'i'
   380  000F51  6F                 	db	111	;'o'
   381  000F52  00                 	db	0
   382  000F53                     STR_3:
   383  000F53  57                 	db	87	;'W'
   384  000F54  61                 	db	97	;'a'
   385  000F55  74                 	db	116	;'t'
   386  000F56  65                 	db	101	;'e'
   387  000F57  72                 	db	114	;'r'
   388  000F58  00                 	db	0
   389  000F59                     STR_24:
   390  000F59  45                 	db	69	;'E'
   391  000F5A  72                 	db	114	;'r'
   392  000F5B  72                 	db	114	;'r'
   393  000F5C  6F                 	db	111	;'o'
   394  000F5D  72                 	db	114	;'r'
   395  000F5E  00                 	db	0
   396  000F5F                     STR_31:
   397  000F5F  4C                 	db	76	;'L'
   398  000F60  69                 	db	105	;'i'
   399  000F61  6D                 	db	109	;'m'
   400  000F62  69                 	db	105	;'i'
   401  000F63  74                 	db	116	;'t'
   402  000F64  00                 	db	0
   403  000F65                     STR_29:
   404  000F65  49                 	db	73	;'I'
   405  000F66  64                 	db	100	;'d'
   406  000F67  6C                 	db	108	;'l'
   407  000F68  65                 	db	101	;'e'
   408  000F69  00                 	db	0
   409  000F6A                     STR_13:
   410  000F6A  46                 	db	70	;'F'
   411  000F6B  75                 	db	117	;'u'
   412  000F6C  65                 	db	101	;'e'
   413  000F6D  6C                 	db	108	;'l'
   414  000F6E  00                 	db	0
   415  000F6F                     STR_16:
   416  000F6F  41                 	db	65	;'A'
   417  000F70  75                 	db	117	;'u'
   418  000F71  74                 	db	116	;'t'
   419  000F72  6F                 	db	111	;'o'
   420  000F73  00                 	db	0
   421  000F74                     STR_7:
   422  000F74  42                 	db	66	;'B'
   423  000F75  69                 	db	105	;'i'
   424  000F76  61                 	db	97	;'a'
   425  000F77  73                 	db	115	;'s'
   426  000F78  00                 	db	0
   427  000F79                     STR_33:
   428  000F79  54                 	db	84	;'T'
   429  000F7A  65                 	db	101	;'e'
   430  000F7B  73                 	db	115	;'s'
   431  000F7C  74                 	db	116	;'t'
   432  000F7D  00                 	db	0
   433  000F7E                     STR_11:
   434  000F7E  45                 	db	69	;'E'
   435  000F7F  54                 	db	84	;'T'
   436  000F80  43                 	db	67	;'C'
   437  000F81  00                 	db	0
   438  000F82                     STR_1:
   439  000F82  4B                 	db	75	;'K'
   440  000F83  50                 	db	80	;'P'
   441  000F84  48                 	db	72	;'H'
   442  000F85  00                 	db	0
   443  000F86                     STR_5:
   444  000F86  52                 	db	82	;'R'
   445  000F87  50                 	db	80	;'P'
   446  000F88  4D                 	db	77	;'M'
   447  000F89  00                 	db	0
   448  000F8A                     STR_4:
   449  000F8A  4F                 	db	79	;'O'
   450  000F8B  69                 	db	105	;'i'
   451  000F8C  6C                 	db	108	;'l'
   452  000F8D  00                 	db	0
   453  000F8E                     STR_9:
   454  000F8E  54                 	db	84	;'T'
   455  000F8F  50                 	db	80	;'P'
   456  000F90  00                 	db	0
   457  000F91                     STR_8:
   458  000F91  25                 	db	37
   459  000F92  00                 	db	0
   460  000F93                     STR_19:
   461  000F93  2B                 	db	43
   462  000F94  00                 	db	0
   463  000F95                     STR_20:
   464  000F95  2D                 	db	45
   465  000F96  00                 	db	0
   466  000F97                     STR_21:
   467  000F97  2E                 	db	46
   468  000F98  00                 	db	0
   469  000F99                     STR_12:
   470  000F99  56                 	db	86	;'V'
   471  000F9A  00                 	db	0
   472  000F9B                     STR_36:
   473  000F9B  6B                 	db	107	;'k'
   474  000F9C  00                 	db	0
   475  0000                     
   476                           ; #config settings
   477  000F9D  00                 	db	0	; dummy byte at the end
   478  0000                     
   479                           	psect	cinit
   480  00685E                     __pcinit:
   481                           	opt stack 0
   482  00685E                     start_initialization:
   483                           	opt stack 0
   484  00685E                     __initialization:
   485                           	opt stack 0
   486                           
   487                           ; Initialize objects allocated to BANK0 (22 bytes)
   488                           ; load TBLPTR registers with __pidataBANK0
   489  00685E  0E62               	movlw	low __pidataBANK0
   490  006860  6EF6               	movwf	tblptrl,c
   491  006862  0E6B               	movlw	high __pidataBANK0
   492  006864  6EF7               	movwf	tblptrh,c
   493  006866  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   494  006868  6EF8               	movwf	tblptru,c
   495  00686A  EE00  F0D1         	lfsr	0,__pdataBANK0
   496  00686E  EE10 F016          	lfsr	1,22
   497  006872                     copy_data0:
   498  006872  0009               	tblrd		*+
   499  006874  CFF5 FFEE          	movff	tablat,postinc0
   500  006878  50E5               	movf	postdec1,w,c
   501  00687A  50E1               	movf	fsr1l,w,c
   502  00687C  E1FA               	bnz	copy_data0
   503                           
   504                           ; Clear objects allocated to BANK0 (35 bytes)
   505  00687E  EE00  F0AE         	lfsr	0,__pbssBANK0
   506  006882  0E23               	movlw	35
   507  006884                     clear_0:
   508  006884  6AEE               	clrf	postinc0,c
   509  006886  06E8               	decf	wreg,f,c
   510  006888  E1FD               	bnz	clear_0
   511                           
   512                           ; Clear objects allocated to COMRAM (13 bytes)
   513  00688A  EE00  F047         	lfsr	0,__pbssCOMRAM
   514  00688E  0E0D               	movlw	13
   515  006890                     clear_1:
   516  006890  6AEE               	clrf	postinc0,c
   517  006892  06E8               	decf	wreg,f,c
   518  006894  E1FD               	bnz	clear_1
   519  006896                     end_of_initialization:
   520                           	opt stack 0
   521  006896                     __end_of__initialization:
   522                           	opt stack 0
   523  006896  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   524  006898  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   525  00689A  0100               	movlb	0
   526  00689C  EF66  F01C         	goto	_main	;jump to C main() function
   527                           tblptru	equ	0xFF8
   528                           tblptrh	equ	0xFF7
   529                           tblptrl	equ	0xFF6
   530                           tablat	equ	0xFF5
   531                           postinc0	equ	0xFEE
   532                           wreg	equ	0xFE8
   533                           postdec1	equ	0xFE5
   534                           fsr1l	equ	0xFE1
   535                           
   536                           	psect	bssCOMRAM
   537  000047                     __pbssCOMRAM:
   538                           	opt stack 0
   539  000047                     _timer0ReloadVal:
   540                           	opt stack 0
   541  000047                     	ds	2
   542  000049                     _TMR0_InterruptHandler:
   543                           	opt stack 0
   544  000049                     	ds	2
   545  00004B                     _TMR1_InterruptHandler:
   546                           	opt stack 0
   547  00004B                     	ds	2
   548  00004D                     _timer1ReloadVal:
   549                           	opt stack 0
   550  00004D                     	ds	2
   551  00004F                     _cmd_offset:
   552                           	opt stack 0
   553  00004F                     	ds	2
   554  000051                     _dli:
   555                           	opt stack 0
   556  000051                     	ds	2
   557  000053                     _up_blink:
   558                           	opt stack 0
   559  000053                     	ds	1
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           postinc0	equ	0xFEE
   565                           wreg	equ	0xFE8
   566                           postdec1	equ	0xFE5
   567                           fsr1l	equ	0xFE1
   568                           
   569                           	psect	bssBANK0
   570  0000AE                     __pbssBANK0:
   571                           	opt stack 0
   572  0000AE                     main@F12762:
   573                           	opt stack 0
   574  0000AE                     	ds	20
   575  0000C2                     _refresh_screen:
   576                           	opt stack 0
   577  0000C2                     	ds	1
   578  0000C3                     _canMessage:
   579                           	opt stack 0
   580  0000C3                     	ds	14
   581                           tblptru	equ	0xFF8
   582                           tblptrh	equ	0xFF7
   583                           tblptrl	equ	0xFF6
   584                           tablat	equ	0xFF5
   585                           postinc0	equ	0xFEE
   586                           wreg	equ	0xFE8
   587                           postdec1	equ	0xFE5
   588                           fsr1l	equ	0xFE1
   589                           
   590                           	psect	dataBANK0
   591  0000D1                     __pdataBANK0:
   592                           	opt stack 0
   593  0000D1                     main@F12754:
   594                           	opt stack 0
   595  0000D1                     	ds	22
   596                           tblptru	equ	0xFF8
   597                           tblptrh	equ	0xFF7
   598                           tblptrl	equ	0xFF6
   599                           tablat	equ	0xFF5
   600                           postinc0	equ	0xFEE
   601                           wreg	equ	0xFE8
   602                           postdec1	equ	0xFE5
   603                           fsr1l	equ	0xFE1
   604                           
   605                           	psect	cstackBANK0
   606  000060                     __pcstackBANK0:
   607                           	opt stack 0
   608  000060                     main@message:
   609                           	opt stack 0
   610                           
   611                           ; 20 bytes @ 0x0
   612  000060                     	ds	20
   613  000074                     main@timer_started:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x14
   617  000074                     	ds	1
   618  000075                     main@drs:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x15
   622  000075                     	ds	1
   623  000076                     main@oilP:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x16
   627  000076                     	ds	2
   628  000078                     main@bias:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x18
   632  000078                     	ds	2
   633  00007A                     main@brake_p:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x1A
   637  00007A                     	ds	2
   638  00007C                     main@launch:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x1C
   642  00007C                     	ds	1
   643  00007D                     main@autoShift:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x1D
   647  00007D                     	ds	1
   648  00007E                     main@clutch:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x1E
   652  00007E                     	ds	1
   653  00007F                     main@BSPD_counter:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x1F
   657  00007F                     	ds	2
   658  000081                     main@radio:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0x21
   662  000081                     	ds	1
   663  000082                     main@bspd:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0x22
   667  000082                     	ds	2
   668  000084                     main@rpm:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x24
   672  000084                     	ds	2
   673  000086                     main@fuel:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0x26
   677  000086                     	ds	2
   678  000088                     main@speed:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x28
   682  000088                     	ds	2
   683  00008A                     main@gear:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x2A
   687  00008A                     	ds	2
   688  00008C                     main@engTemp:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x2C
   692  00008C                     	ds	2
   693  00008E                     main@oilTemp:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x2E
   697  00008E                     	ds	2
   698  000090                     main@battVolts:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x30
   702  000090                     	ds	2
   703  000092                     main@gasP:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x32
   707  000092                     	ds	2
   708  000094                     main@etc:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x34
   712  000094                     	ds	2
   713  000096                     main@tp:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x36
   717  000096                     	ds	2
   718  000098                     main@lap_time:
   719                           	opt stack 0
   720                           
   721                           ; 22 bytes @ 0x38
   722  000098                     	ds	22
   723                           tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           tblptrl	equ	0xFF6
   726                           tablat	equ	0xFF5
   727                           postinc0	equ	0xFEE
   728                           wreg	equ	0xFE8
   729                           postdec1	equ	0xFE5
   730                           fsr1l	equ	0xFE1
   731                           
   732                           	psect	cstackCOMRAM
   733  000001                     __pcstackCOMRAM:
   734                           	opt stack 0
   735  000001                     ??_INTERRUPT_InterruptManager:
   736  000001                     
   737                           ; 1 bytes @ 0x0
   738  000001                     	ds	2
   739  000003                     ??_cmd_incrementn:
   740  000003                     ??_ECAN_Initialize:
   741  000003                     ??_wait2secs:
   742  000003                     ?_strlen:
   743                           	opt stack 0
   744  000003                     ?___wmul:
   745                           	opt stack 0
   746  000003                     ?___awdiv:
   747                           	opt stack 0
   748  000003                     ?_convertReg2ExtendedCANid:
   749                           	opt stack 0
   750  000003                     ?_convertReg2StandardCANid:
   751                           	opt stack 0
   752  000003                     ?___xxtofl:
   753                           	opt stack 0
   754  000003                     SPI_Exchange8bit@data:
   755                           	opt stack 0
   756  000003                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   757                           	opt stack 0
   758  000003                     convertReg2StandardCANid@tempRXBn_SIDL:
   759                           	opt stack 0
   760  000003                     TMR1_SetInterruptHandler@InterruptHandler:
   761                           	opt stack 0
   762  000003                     TMR0_SetInterruptHandler@InterruptHandler:
   763                           	opt stack 0
   764  000003                     ___wmul@multiplier:
   765                           	opt stack 0
   766  000003                     ___awdiv@dividend:
   767                           	opt stack 0
   768  000003                     strlen@s:
   769                           	opt stack 0
   770  000003                     ___xxtofl@val:
   771                           	opt stack 0
   772                           
   773                           ; 4 bytes @ 0x2
   774  000003                     	ds	1
   775  000004                     ?_rd16:
   776                           	opt stack 0
   777  000004                     host_command@command:
   778                           	opt stack 0
   779  000004                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   780                           	opt stack 0
   781  000004                     wr8@addr:
   782                           	opt stack 0
   783  000004                     wr16@addr:
   784                           	opt stack 0
   785  000004                     wr32@addr:
   786                           	opt stack 0
   787  000004                     rd16@addr:
   788                           	opt stack 0
   789                           
   790                           ; 4 bytes @ 0x3
   791  000004                     	ds	1
   792  000005                     ??_strlen:
   793  000005                     ??_TMR0_Initialize:
   794  000005                     ??_TMR1_Initialize:
   795  000005                     cmd_incrementn@n:
   796                           	opt stack 0
   797  000005                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   798                           	opt stack 0
   799  000005                     ___wmul@multiplicand:
   800                           	opt stack 0
   801  000005                     ___awdiv@divisor:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0x4
   805  000005                     	ds	2
   806  000007                     ??_convertReg2ExtendedCANid:
   807  000007                     ??_convertReg2StandardCANid:
   808  000007                     ??___xxtofl:
   809  000007                     ___awdiv@counter:
   810                           	opt stack 0
   811  000007                     ___wmul@product:
   812                           	opt stack 0
   813  000007                     strlen@a:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x6
   817  000007                     	ds	1
   818  000008                     ??_rd16:
   819  000008                     wr8@value:
   820                           	opt stack 0
   821  000008                     ___awdiv@sign:
   822                           	opt stack 0
   823  000008                     wr16@value:
   824                           	opt stack 0
   825  000008                     wr32@value:
   826                           	opt stack 0
   827                           
   828                           ; 4 bytes @ 0x7
   829  000008                     	ds	1
   830  000009                     convertReg2StandardCANid@tempRXBn_SIDH:
   831                           	opt stack 0
   832  000009                     ___awdiv@quotient:
   833                           	opt stack 0
   834  000009                     wr8s@addr:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0x8
   838  000009                     	ds	1
   839  00000A                     rd16@temp:
   840                           	opt stack 0
   841  00000A                     convertReg2StandardCANid@returnValue:
   842                           	opt stack 0
   843                           
   844                           ; 4 bytes @ 0x9
   845  00000A                     	ds	1
   846  00000B                     ?___awmod:
   847                           	opt stack 0
   848  00000B                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   849                           	opt stack 0
   850  00000B                     ___xxtofl@sign:
   851                           	opt stack 0
   852  00000B                     ___awmod@dividend:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0xA
   856  00000B                     	ds	1
   857  00000C                     ??_wr32:
   858  00000C                     ___xxtofl@exp:
   859                           	opt stack 0
   860  00000C                     convertReg2ExtendedCANid@returnValue:
   861                           	opt stack 0
   862                           
   863                           ; 4 bytes @ 0xB
   864  00000C                     	ds	1
   865  00000D                     wr8s@s:
   866                           	opt stack 0
   867  00000D                     ___awmod@divisor:
   868                           	opt stack 0
   869  00000D                     ___xxtofl@arg:
   870                           	opt stack 0
   871                           
   872                           ; 4 bytes @ 0xC
   873  00000D                     	ds	1
   874  00000E                     convertReg2StandardCANid@ConvertedID:
   875                           	opt stack 0
   876                           
   877                           ; 4 bytes @ 0xD
   878  00000E                     	ds	1
   879  00000F                     ??_wr8s:
   880  00000F                     ___awmod@counter:
   881                           	opt stack 0
   882                           
   883                           ; 1 bytes @ 0xE
   884  00000F                     	ds	1
   885  000010                     ??_FT800_Init:
   886  000010                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   887                           	opt stack 0
   888  000010                     ___awmod@sign:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0xF
   892  000010                     	ds	1
   893  000011                     wr8s@l:
   894                           	opt stack 0
   895  000011                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   896                           	opt stack 0
   897  000011                     cmd@command:
   898                           	opt stack 0
   899  000011                     ___flge@ff1:
   900                           	opt stack 0
   901                           
   902                           ; 4 bytes @ 0x10
   903  000011                     	ds	1
   904  000012                     wr8s@i:
   905                           	opt stack 0
   906  000012                     convertReg2ExtendedCANid@ConvertedID:
   907                           	opt stack 0
   908                           
   909                           ; 4 bytes @ 0x11
   910  000012                     	ds	3
   911  000015                     ??_cmd:
   912  000015                     ___flge@ff2:
   913                           	opt stack 0
   914                           
   915                           ; 4 bytes @ 0x14
   916  000015                     	ds	1
   917  000016                     CAN_receive@tempCanMsg:
   918                           	opt stack 0
   919                           
   920                           ; 2 bytes @ 0x15
   921  000016                     	ds	2
   922  000018                     CAN_receive@returnValue:
   923                           	opt stack 0
   924                           
   925                           ; 1 bytes @ 0x17
   926  000018                     	ds	1
   927  000019                     ??_display_labels:
   928  000019                     ??___flge:
   929  000019                     display_status@autoShift:
   930                           	opt stack 0
   931  000019                     display_laptime@current_int:
   932                           	opt stack 0
   933  000019                     display_waterTemp@temp:
   934                           	opt stack 0
   935  000019                     display_oilTemp@temp:
   936                           	opt stack 0
   937  000019                     display_bspd@bspd:
   938                           	opt stack 0
   939  000019                     display_battery@volts:
   940                           	opt stack 0
   941  000019                     display_fuel_level@fuel:
   942                           	opt stack 0
   943  000019                     display_gasPres@gasPres:
   944                           	opt stack 0
   945  000019                     display_tp@tp:
   946                           	opt stack 0
   947  000019                     display_etc@etc:
   948                           	opt stack 0
   949  000019                     display_speed@speed:
   950                           	opt stack 0
   951  000019                     display_brake_bias@bias:
   952                           	opt stack 0
   953  000019                     display_rpm@rpm:
   954                           	opt stack 0
   955  000019                     display_gear@gear:
   956                           	opt stack 0
   957                           
   958                           ; 2 bytes @ 0x18
   959  000019                     	ds	1
   960  00001A                     display_status@clutch:
   961                           	opt stack 0
   962                           
   963                           ; 1 bytes @ 0x19
   964  00001A                     	ds	1
   965  00001B                     ??_display_rpm:
   966  00001B                     ??_display_speed:
   967  00001B                     ??_display_waterTemp:
   968  00001B                     ??_display_oilTemp:
   969  00001B                     ??_display_etc:
   970  00001B                     ??_display_gear:
   971  00001B                     ??_display_fuel_level:
   972  00001B                     ??_display_bspd:
   973  00001B                     ??_display_battery:
   974  00001B                     ??_display_tp:
   975  00001B                     ??_display_gasPres:
   976  00001B                     ??_display_brake_bias:
   977  00001B                     display_status@radio:
   978                           	opt stack 0
   979  00001B                     display_laptime@current_dec:
   980                           	opt stack 0
   981                           
   982                           ; 2 bytes @ 0x1A
   983  00001B                     	ds	1
   984  00001C                     ??_display_status:
   985                           
   986                           ; 1 bytes @ 0x1B
   987  00001C                     	ds	1
   988  00001D                     display_laptime@best_int:
   989                           	opt stack 0
   990                           
   991                           ; 2 bytes @ 0x1C
   992  00001D                     	ds	2
   993  00001F                     display_bottom_section@volts:
   994                           	opt stack 0
   995  00001F                     display_laptime@best_dec:
   996                           	opt stack 0
   997                           
   998                           ; 2 bytes @ 0x1E
   999  00001F                     	ds	1
  1000  000020                     display_status@launch:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x1F
  1004  000020                     	ds	1
  1005  000021                     display_bottom_section@tp:
  1006                           	opt stack 0
  1007  000021                     display_laptime@last_int:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x20
  1011  000021                     	ds	2
  1012  000023                     display_laptime@last_dec:
  1013                           	opt stack 0
  1014  000023                     display_rpm@first_digit:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x22
  1018  000023                     	ds	2
  1019  000025                     display_laptime@lap:
  1020                           	opt stack 0
  1021  000025                     display_rpm@second_digit:
  1022                           	opt stack 0
  1023                           
  1024                           ; 2 bytes @ 0x24
  1025  000025                     	ds	2
  1026  000027                     display_laptime@best_lap:
  1027                           	opt stack 0
  1028  000027                     display_rpm@diff:
  1029                           	opt stack 0
  1030                           
  1031                           ; 2 bytes @ 0x26
  1032  000027                     	ds	2
  1033  000029                     ??_display_laptime:
  1034  000029                     display_rpm@n:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x28
  1038  000029                     	ds	2
  1039  00002B                     display_rpm@i:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0x2A
  1043  00002B                     	ds	2
  1044  00002D                     display@rpm:
  1045                           	opt stack 0
  1046  00002D                     display_laptime@time_difference_decimal:
  1047                           	opt stack 0
  1048                           
  1049                           ; 2 bytes @ 0x2C
  1050  00002D                     	ds	2
  1051  00002F                     display@oilP:
  1052                           	opt stack 0
  1053  00002F                     display_laptime@time_difference_integer:
  1054                           	opt stack 0
  1055                           
  1056                           ; 2 bytes @ 0x2E
  1057  00002F                     	ds	2
  1058  000031                     display@gasPres:
  1059                           	opt stack 0
  1060                           
  1061                           ; 2 bytes @ 0x30
  1062  000031                     	ds	2
  1063  000033                     display@fuel:
  1064                           	opt stack 0
  1065                           
  1066                           ; 2 bytes @ 0x32
  1067  000033                     	ds	2
  1068  000035                     display@tp:
  1069                           	opt stack 0
  1070                           
  1071                           ; 2 bytes @ 0x34
  1072  000035                     	ds	2
  1073  000037                     display@bspd:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x36
  1077  000037                     	ds	2
  1078  000039                     display@etc:
  1079                           	opt stack 0
  1080                           
  1081                           ; 2 bytes @ 0x38
  1082  000039                     	ds	2
  1083  00003B                     display@speed:
  1084                           	opt stack 0
  1085                           
  1086                           ; 2 bytes @ 0x3A
  1087  00003B                     	ds	2
  1088  00003D                     display@gear:
  1089                           	opt stack 0
  1090                           
  1091                           ; 2 bytes @ 0x3C
  1092  00003D                     	ds	2
  1093  00003F                     display@engTemp:
  1094                           	opt stack 0
  1095                           
  1096                           ; 2 bytes @ 0x3E
  1097  00003F                     	ds	2
  1098  000041                     display@oilTemp:
  1099                           	opt stack 0
  1100                           
  1101                           ; 2 bytes @ 0x40
  1102  000041                     	ds	2
  1103  000043                     display@battVolts:
  1104                           	opt stack 0
  1105                           
  1106                           ; 2 bytes @ 0x42
  1107  000043                     	ds	2
  1108  000045                     ??_main:
  1109                           
  1110                           ; 1 bytes @ 0x44
  1111  000045                     	ds	2
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           postinc0	equ	0xFEE
  1117                           wreg	equ	0xFE8
  1118                           postdec1	equ	0xFE5
  1119                           fsr1l	equ	0xFE1
  1120                           
  1121 ;;
  1122 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1123 ;;
  1124 ;; *************** function _main *****************
  1125 ;; Defined at:
  1126 ;;		line 42 in file "main.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  lap_time       22   56[BANK0 ] struct .
  1131 ;;  message        20    0[BANK0 ] unsigned char [20]
  1132 ;;  tp              2   54[BANK0 ] int 
  1133 ;;  etc             2   52[BANK0 ] int 
  1134 ;;  gasP            2   50[BANK0 ] int 
  1135 ;;  battVolts       2   48[BANK0 ] int 
  1136 ;;  oilTemp         2   46[BANK0 ] int 
  1137 ;;  engTemp         2   44[BANK0 ] int 
  1138 ;;  gear            2   42[BANK0 ] int 
  1139 ;;  speed           2   40[BANK0 ] int 
  1140 ;;  fuel            2   38[BANK0 ] int 
  1141 ;;  rpm             2   36[BANK0 ] int 
  1142 ;;  bspd            2   34[BANK0 ] int 
  1143 ;;  BSPD_counter    2   31[BANK0 ] int 
  1144 ;;  brake_p         2   26[BANK0 ] int 
  1145 ;;  bias            2   24[BANK0 ] int 
  1146 ;;  oilP            2   22[BANK0 ] int 
  1147 ;;  radio           1   33[BANK0 ] _Bool 
  1148 ;;  clutch          1   30[BANK0 ] _Bool 
  1149 ;;  autoShift       1   29[BANK0 ] _Bool 
  1150 ;;  launch          1   28[BANK0 ] _Bool 
  1151 ;;  drs             1   21[BANK0 ] _Bool 
  1152 ;;  timer_starte    1   20[BANK0 ] _Bool 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1163 ;;      Locals:         0      78       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1165 ;;      Totals:         2      78       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1166 ;;Total ram usage:       80 bytes
  1167 ;; Hardware stack levels required when called:   10
  1168 ;; This function calls:
  1169 ;;		_CAN_receive
  1170 ;;		_FT800_Init
  1171 ;;		_SYSTEM_Initialize
  1172 ;;		_TMR0_StopTimer
  1173 ;;		_TMR1_Reload
  1174 ;;		_TMR1_SetInterruptHandler
  1175 ;;		___awdiv
  1176 ;;		___awmod
  1177 ;;		___flge
  1178 ;;		___xxtofl
  1179 ;;		_display
  1180 ;;		_display_bottom_section
  1181 ;;		_display_brake_bias
  1182 ;;		_display_end
  1183 ;;		_display_etc
  1184 ;;		_display_fuel_level
  1185 ;;		_display_gasPres
  1186 ;;		_display_gear
  1187 ;;		_display_grids
  1188 ;;		_display_labels
  1189 ;;		_display_laptime
  1190 ;;		_display_oilTemp
  1191 ;;		_display_rpm
  1192 ;;		_display_speed
  1193 ;;		_display_start
  1194 ;;		_display_status
  1195 ;;		_display_waterTemp
  1196 ;;		_wait2secs
  1197 ;; This function is called by:
  1198 ;;		Startup code after reset
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text0
  1203  0038CC                     __ptext0:
  1204                           	opt stack 0
  1205  0038CC                     _main:
  1206                           	opt stack 21
  1207                           
  1208                           ;main.c: 43:     Lap_time lap_time= {0,1,0,0,0,0,0,0,0,0,0};
  1209                           
  1210                           ;incstack = 0
  1211  0038CC  EE20  F0D1         	lfsr	2,main@F12754
  1212  0038D0  EE10  F098         	lfsr	1,main@lap_time
  1213  0038D4  0E15               	movlw	21
  1214  0038D6                     u1831:
  1215  0038D6  CFDB FFE3          	movff	plusw2,plusw1
  1216  0038DA  06E8               	decf	wreg,f,c
  1217  0038DC  E2FC               	bc	u1831
  1218                           
  1219                           ;main.c: 44:     _Bool timer_started = 0;
  1220  0038DE  0E00               	movlw	0
  1221  0038E0  0100               	movlb	0	; () banked
  1222  0038E2  6F74               	movwf	main@timer_started& (0+255),b
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;main.c: 45:     _Bool launch, autoShift, clutch, drs, radio = 0;
  1226  0038E4  0E00               	movlw	0
  1227  0038E6  6F81               	movwf	main@radio& (0+255),b
  1228                           
  1229                           ;main.c: 46:     char message[20] = {'\0'};
  1230  0038E8  EE20  F0AE         	lfsr	2,main@F12762
  1231  0038EC  EE10  F060         	lfsr	1,main@message
  1232  0038F0  0E13               	movlw	19
  1233  0038F2                     u1841:
  1234  0038F2  CFDB FFE3          	movff	plusw2,plusw1
  1235  0038F6  06E8               	decf	wreg,f,c
  1236  0038F8  E2FC               	bc	u1841
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;main.c: 47:     int rpm = 0, oilP = 0, fuel = 0, tp = 0, speed = 0, gear = 0, engTemp =
      +                           0, oilTemp = 0, battVolts = 0, bias = 0;
  1240  0038FA  0E00               	movlw	0
  1241  0038FC  6F85               	movwf	(main@rpm+1)& (0+255),b
  1242  0038FE  0E00               	movlw	0
  1243  003900  6F84               	movwf	main@rpm& (0+255),b
  1244                           
  1245                           ; BSR set to: 0
  1246  003902  0E00               	movlw	0
  1247  003904  6F77               	movwf	(main@oilP+1)& (0+255),b
  1248  003906  0E00               	movlw	0
  1249  003908  6F76               	movwf	main@oilP& (0+255),b
  1250                           
  1251                           ; BSR set to: 0
  1252  00390A  0E00               	movlw	0
  1253  00390C  6F87               	movwf	(main@fuel+1)& (0+255),b
  1254  00390E  0E00               	movlw	0
  1255  003910  6F86               	movwf	main@fuel& (0+255),b
  1256                           
  1257                           ; BSR set to: 0
  1258  003912  0E00               	movlw	0
  1259  003914  6F97               	movwf	(main@tp+1)& (0+255),b
  1260  003916  0E00               	movlw	0
  1261  003918  6F96               	movwf	main@tp& (0+255),b
  1262                           
  1263                           ; BSR set to: 0
  1264  00391A  0E00               	movlw	0
  1265  00391C  6F89               	movwf	(main@speed+1)& (0+255),b
  1266  00391E  0E00               	movlw	0
  1267  003920  6F88               	movwf	main@speed& (0+255),b
  1268                           
  1269                           ; BSR set to: 0
  1270  003922  0E00               	movlw	0
  1271  003924  6F8B               	movwf	(main@gear+1)& (0+255),b
  1272  003926  0E00               	movlw	0
  1273  003928  6F8A               	movwf	main@gear& (0+255),b
  1274                           
  1275                           ; BSR set to: 0
  1276  00392A  0E00               	movlw	0
  1277  00392C  6F8D               	movwf	(main@engTemp+1)& (0+255),b
  1278  00392E  0E00               	movlw	0
  1279  003930  6F8C               	movwf	main@engTemp& (0+255),b
  1280                           
  1281                           ; BSR set to: 0
  1282  003932  0E00               	movlw	0
  1283  003934  6F8F               	movwf	(main@oilTemp+1)& (0+255),b
  1284  003936  0E00               	movlw	0
  1285  003938  6F8E               	movwf	main@oilTemp& (0+255),b
  1286                           
  1287                           ; BSR set to: 0
  1288  00393A  0E00               	movlw	0
  1289  00393C  6F91               	movwf	(main@battVolts+1)& (0+255),b
  1290  00393E  0E00               	movlw	0
  1291  003940  6F90               	movwf	main@battVolts& (0+255),b
  1292                           
  1293                           ; BSR set to: 0
  1294  003942  0E00               	movlw	0
  1295  003944  6F79               	movwf	(main@bias+1)& (0+255),b
  1296  003946  0E00               	movlw	0
  1297  003948  6F78               	movwf	main@bias& (0+255),b
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;main.c: 48:     int gasP = 0;
  1301  00394A  0E00               	movlw	0
  1302  00394C  6F93               	movwf	(main@gasP+1)& (0+255),b
  1303  00394E  0E00               	movlw	0
  1304  003950  6F92               	movwf	main@gasP& (0+255),b
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;main.c: 49:     int etc = 0;
  1308  003952  0E00               	movlw	0
  1309  003954  6F95               	movwf	(main@etc+1)& (0+255),b
  1310  003956  0E00               	movlw	0
  1311  003958  6F94               	movwf	main@etc& (0+255),b
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;main.c: 50:     int BSPD_counter = 0;
  1315  00395A  0E00               	movlw	0
  1316  00395C  6F80               	movwf	(main@BSPD_counter+1)& (0+255),b
  1317  00395E  0E00               	movlw	0
  1318  003960  6F7F               	movwf	main@BSPD_counter& (0+255),b
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;main.c: 51:     int bspd = 0;
  1322  003962  0E00               	movlw	0
  1323  003964  6F83               	movwf	(main@bspd+1)& (0+255),b
  1324  003966  0E00               	movlw	0
  1325  003968  6F82               	movwf	main@bspd& (0+255),b
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;main.c: 52:     int brake_p = 0;
  1329  00396A  0E00               	movlw	0
  1330  00396C  6F7B               	movwf	(main@brake_p+1)& (0+255),b
  1331  00396E  0E00               	movlw	0
  1332  003970  6F7A               	movwf	main@brake_p& (0+255),b
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;main.c: 53:     wait2secs();
  1336  003972  EC97  F035         	call	_wait2secs	;wreg free
  1337                           
  1338                           ;main.c: 56:     SYSTEM_Initialize();
  1339  003976  EC6B  F035         	call	_SYSTEM_Initialize	;wreg free
  1340                           
  1341                           ;main.c: 59:     CIOCONbits.CLKSEL = 1;
  1342  00397A  8070               	bsf	3952,0,c	;volatile
  1343                           
  1344                           ;main.c: 60:     CIOCONbits.ENDRHI = 1;
  1345  00397C  8A70               	bsf	3952,5,c	;volatile
  1346                           
  1347                           ;main.c: 61:     CIOCONbits.TX2SRC = 0;
  1348  00397E  9E70               	bcf	3952,7,c	;volatile
  1349                           
  1350                           ;main.c: 62:     CIOCONbits.TX2EN = 1;
  1351  003980  8C70               	bsf	3952,6,c	;volatile
  1352                           
  1353                           ;main.c: 63:     RXB0CONbits.RXM0 = 1;
  1354  003982  8A60               	bsf	3936,5,c	;volatile
  1355                           
  1356                           ;main.c: 64:     RXB0CONbits.RXM1 = 0;
  1357  003984  9C60               	bcf	3936,6,c	;volatile
  1358                           
  1359                           ;main.c: 65:     RXB0CONbits.RB0DBEN = 0;
  1360  003986  9460               	bcf	3936,2,c	;volatile
  1361                           
  1362                           ;main.c: 66:     PIE5bits.RXB0IE = 0;
  1363  003988  9076               	bcf	3958,0,c	;volatile
  1364                           
  1365                           ;main.c: 67:     PIE5bits.RXB1IE = 0;
  1366  00398A  9276               	bcf	3958,1,c	;volatile
  1367                           
  1368                           ;main.c: 68:     PIR5bits.ERRIF = 0;
  1369  00398C  9A77               	bcf	3959,5,c	;volatile
  1370                           
  1371                           ;main.c: 69:     PIR5bits.WAKIF = 0;
  1372  00398E  9C77               	bcf	3959,6,c	;volatile
  1373                           
  1374                           ;main.c: 77:     RXF2SIDH = 0xC8;
  1375  003990  0EC8               	movlw	200
  1376  003992  010E               	movlb	14	; () banked
  1377  003994  6FE8               	movwf	232,b	;volatile
  1378                           
  1379                           ; BSR set to: 14
  1380                           ;main.c: 78:     RXF2SIDL = 0x40;
  1381  003996  0E40               	movlw	64
  1382  003998  6FE9               	movwf	233,b	;volatile
  1383                           
  1384                           ; BSR set to: 14
  1385                           ;main.c: 79:     RXM0SIDH = 0xFE;
  1386  00399A  0EFE               	movlw	254
  1387  00399C  6FF8               	movwf	248,b	;volatile
  1388                           
  1389                           ; BSR set to: 14
  1390                           ;main.c: 80:     RXM0SIDL = 0b00011111;
  1391  00399E  0E1F               	movlw	31
  1392  0039A0  6FF9               	movwf	249,b	;volatile
  1393                           
  1394                           ; BSR set to: 14
  1395                           ;main.c: 81:     RXM1SIDH = 0xFE;
  1396  0039A2  0EFE               	movlw	254
  1397  0039A4  6FFC               	movwf	252,b	;volatile
  1398                           
  1399                           ; BSR set to: 14
  1400                           ;main.c: 82:     RXM1SIDL = 0x00011111;
  1401  0039A6  0E11               	movlw	17
  1402  0039A8  6FFD               	movwf	253,b	;volatile
  1403                           
  1404                           ; BSR set to: 14
  1405                           ;main.c: 85:     SSPSTATbits.SMP = 0;
  1406  0039AA  9EC7               	bcf	4039,7,c	;volatile
  1407                           
  1408                           ; BSR set to: 14
  1409                           ;main.c: 86:     SSPSTATbits.CKE = 1;
  1410  0039AC  8CC7               	bsf	4039,6,c	;volatile
  1411                           
  1412                           ; BSR set to: 14
  1413                           ;main.c: 87:     SSPCON1bits.SSPEN = 1;
  1414  0039AE  8AC6               	bsf	4038,5,c	;volatile
  1415                           
  1416                           ; BSR set to: 14
  1417                           ;main.c: 88:     SSPCON1bits.CKP = 1;
  1418  0039B0  88C6               	bsf	4038,4,c	;volatile
  1419                           
  1420                           ; BSR set to: 14
  1421                           ;main.c: 89:     SSPCON1bits.SSPM = 0b0010;
  1422  0039B2  50C6               	movf	4038,w,c	;volatile
  1423  0039B4  0BF0               	andlw	-16
  1424  0039B6  0902               	iorlw	2
  1425  0039B8  6EC6               	movwf	4038,c	;volatile
  1426                           
  1427                           ; BSR set to: 14
  1428                           ;main.c: 90:     FT800_Init();
  1429  0039BA  ECBD  F029         	call	_FT800_Init	;wreg free
  1430                           
  1431                           ;main.c: 92:     wait2secs();
  1432  0039BE  EC97  F035         	call	_wait2secs	;wreg free
  1433                           
  1434                           ;main.c: 93:     SSPCON1bits.SSPM = 0b0001;
  1435  0039C2  50C6               	movf	4038,w,c	;volatile
  1436  0039C4  0BF0               	andlw	-16
  1437  0039C6  0901               	iorlw	1
  1438  0039C8  6EC6               	movwf	4038,c	;volatile
  1439                           
  1440                           ;main.c: 102:     display(rpm, oilP, gasP, fuel, tp, bspd, etc, speed, gear, engTemp, oi
      +                          lTemp, battVolts);
  1441  0039CA  C084  F02D         	movff	main@rpm,display@rpm
  1442  0039CE  C085  F02E         	movff	main@rpm+1,display@rpm+1
  1443  0039D2  C076  F02F         	movff	main@oilP,display@oilP
  1444  0039D6  C077  F030         	movff	main@oilP+1,display@oilP+1
  1445  0039DA  C092  F031         	movff	main@gasP,display@gasPres
  1446  0039DE  C093  F032         	movff	main@gasP+1,display@gasPres+1
  1447  0039E2  C086  F033         	movff	main@fuel,display@fuel
  1448  0039E6  C087  F034         	movff	main@fuel+1,display@fuel+1
  1449  0039EA  C096  F035         	movff	main@tp,display@tp
  1450  0039EE  C097  F036         	movff	main@tp+1,display@tp+1
  1451  0039F2  C082  F037         	movff	main@bspd,display@bspd
  1452  0039F6  C083  F038         	movff	main@bspd+1,display@bspd+1
  1453  0039FA  C094  F039         	movff	main@etc,display@etc
  1454  0039FE  C095  F03A         	movff	main@etc+1,display@etc+1
  1455  003A02  C088  F03B         	movff	main@speed,display@speed
  1456  003A06  C089  F03C         	movff	main@speed+1,display@speed+1
  1457  003A0A  C08A  F03D         	movff	main@gear,display@gear
  1458  003A0E  C08B  F03E         	movff	main@gear+1,display@gear+1
  1459  003A12  C08C  F03F         	movff	main@engTemp,display@engTemp
  1460  003A16  C08D  F040         	movff	main@engTemp+1,display@engTemp+1
  1461  003A1A  C08E  F041         	movff	main@oilTemp,display@oilTemp
  1462  003A1E  C08F  F042         	movff	main@oilTemp+1,display@oilTemp+1
  1463  003A22  C090  F043         	movff	main@battVolts,display@battVolts
  1464  003A26  C091  F044         	movff	main@battVolts+1,display@battVolts+1
  1465  003A2A  EC9F  F032         	call	_display	;wreg free
  1466                           
  1467                           ;main.c: 105:     TMR1_SetInterruptHandler(&refresh);
  1468  003A2E  0ED6               	movlw	low _refresh
  1469  003A30  6E03               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  1470  003A32  0E6B               	movlw	high _refresh
  1471  003A34  6E04               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  1472  003A36  ECE1  F035         	call	_TMR1_SetInterruptHandler	;wreg free
  1473                           
  1474                           ;main.c: 107:     TMR0_StopTimer();
  1475  003A3A  ECEF  F035         	call	_TMR0_StopTimer	;wreg free
  1476                           
  1477                           ;main.c: 108:     (INTCONbits.GIE = 1);
  1478  003A3E  8EF2               	bsf	intcon,7,c	;volatile
  1479                           
  1480                           ;main.c: 109:     (INTCONbits.PEIE = 1);
  1481  003A40  8CF2               	bsf	intcon,6,c	;volatile
  1482  003A42                     
  1483                           ;main.c: 112:         if (CAN_receive(&canMessage)) {
  1484  003A42  0EC3               	movlw	low _canMessage
  1485  003A44  6E16               	movwf	CAN_receive@tempCanMsg,c
  1486  003A46  0E00               	movlw	high _canMessage
  1487  003A48  6E17               	movwf	CAN_receive@tempCanMsg+1,c
  1488  003A4A  EC76  F02C         	call	_CAN_receive	;wreg free
  1489  003A4E  0900               	iorlw	0
  1490  003A50  B4D8               	btfsc	status,2,c
  1491  003A52  D158               	goto	l865
  1492                           
  1493                           ;main.c: 113:             if (canMessage.frame.id == 0x640) {
  1494  003A54  0E40               	movlw	64
  1495  003A56  0100               	movlb	0	; () banked
  1496  003A58  19C4               	xorwf	(_canMessage+1)& (0+255),w,b
  1497  003A5A  E144               	bnz	l4572
  1498  003A5C  0E06               	movlw	6
  1499  003A5E  19C5               	xorwf	(_canMessage+2)& (0+255),w,b
  1500  003A60  11C6               	iorwf	(_canMessage+3)& (0+255),w,b
  1501  003A62  11C7               	iorwf	(_canMessage+4)& (0+255),w,b
  1502  003A64  A4D8               	btfss	status,2,c
  1503  003A66  D03E               	goto	l856
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;main.c: 114:                 rpm = ((canMessage.frame.data0 << 8) | canMessage.frame.da
      +                          ta1);
  1507  003A68  51CA               	movf	(_canMessage+7)& (0+255),w,b
  1508  003A6A  C0C9  F045         	movff	_canMessage+6,??_main
  1509  003A6E  6A46               	clrf	(??_main+1)& (0+255),c
  1510  003A70  C045  F046         	movff	??_main,??_main+1
  1511  003A74  6A45               	clrf	??_main,c
  1512  003A76  1045               	iorwf	??_main,w,c
  1513  003A78  6F84               	movwf	main@rpm& (0+255),b
  1514  003A7A  5046               	movf	??_main+1,w,c
  1515  003A7C  6F85               	movwf	(main@rpm+1)& (0+255),b
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;main.c: 115:                 oilP = ((canMessage.frame.data2 << 8) | canMessage.frame.d
      +                          ata3) / 10;
  1519  003A7E  51CC               	movf	(_canMessage+9)& (0+255),w,b
  1520  003A80  C0CB  F045         	movff	_canMessage+8,??_main
  1521  003A84  6A46               	clrf	(??_main+1)& (0+255),c
  1522  003A86  C045  F046         	movff	??_main,??_main+1
  1523  003A8A  6A45               	clrf	??_main,c
  1524  003A8C  1045               	iorwf	??_main,w,c
  1525  003A8E  6E03               	movwf	___awdiv@dividend,c
  1526  003A90  5046               	movf	??_main+1,w,c
  1527  003A92  6E04               	movwf	___awdiv@dividend+1,c
  1528  003A94  0E00               	movlw	0
  1529  003A96  6E06               	movwf	___awdiv@divisor+1,c
  1530  003A98  0E0A               	movlw	10
  1531  003A9A  6E05               	movwf	___awdiv@divisor,c
  1532  003A9C  EC25  F033         	call	___awdiv	;wreg free
  1533  003AA0  C003  F076         	movff	?___awdiv,main@oilP
  1534  003AA4  C004  F077         	movff	?___awdiv+1,main@oilP+1
  1535                           
  1536                           ;main.c: 116:                 gasP = ((canMessage.frame.data4 << 8) | canMessage.frame.d
      +                          ata5) / 10;
  1537  003AA8  0100               	movlb	0	; () banked
  1538  003AAA  51CE               	movf	(_canMessage+11)& (0+255),w,b
  1539  003AAC  C0CD  F045         	movff	_canMessage+10,??_main
  1540  003AB0  6A46               	clrf	(??_main+1)& (0+255),c
  1541  003AB2  C045  F046         	movff	??_main,??_main+1
  1542  003AB6  6A45               	clrf	??_main,c
  1543  003AB8  1045               	iorwf	??_main,w,c
  1544  003ABA  6E03               	movwf	___awdiv@dividend,c
  1545  003ABC  5046               	movf	??_main+1,w,c
  1546  003ABE  6E04               	movwf	___awdiv@dividend+1,c
  1547  003AC0  0E00               	movlw	0
  1548  003AC2  6E06               	movwf	___awdiv@divisor+1,c
  1549  003AC4  0E0A               	movlw	10
  1550  003AC6  6E05               	movwf	___awdiv@divisor,c
  1551  003AC8  EC25  F033         	call	___awdiv	;wreg free
  1552  003ACC  C003  F092         	movff	?___awdiv,main@gasP
  1553  003AD0  C004  F093         	movff	?___awdiv+1,main@gasP+1
  1554                           
  1555                           ;main.c: 117:                 tp = canMessage.frame.data6;
  1556  003AD4  C0CF  F096         	movff	_canMessage+12,main@tp
  1557  003AD8  0100               	movlb	0	; () banked
  1558  003ADA  6B97               	clrf	(main@tp+1)& (0+255),b
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;main.c: 118:                 speed = canMessage.frame.data7;
  1562  003ADC  C0D0  F088         	movff	_canMessage+13,main@speed
  1563  003AE0  6B89               	clrf	(main@speed+1)& (0+255),b
  1564                           
  1565                           ;main.c: 119:             } else if (canMessage.frame.id == 0x641) {
  1566  003AE2  D110               	goto	l865
  1567  003AE4                     l856:
  1568  003AE4                     l4572:
  1569                           
  1570                           ; BSR set to: 0
  1571  003AE4  0E41               	movlw	65
  1572  003AE6  19C4               	xorwf	(_canMessage+1)& (0+255),w,b
  1573  003AE8  E123               	bnz	l4580
  1574  003AEA  0E06               	movlw	6
  1575  003AEC  19C5               	xorwf	(_canMessage+2)& (0+255),w,b
  1576  003AEE  11C6               	iorwf	(_canMessage+3)& (0+255),w,b
  1577  003AF0  11C7               	iorwf	(_canMessage+4)& (0+255),w,b
  1578  003AF2  A4D8               	btfss	status,2,c
  1579  003AF4  D01D               	goto	l858
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;main.c: 120:                 brake_p = ((canMessage.frame.data0 << 8) | canMessage.fram
      +                          e.data1) / 10;
  1583  003AF6  51CA               	movf	(_canMessage+7)& (0+255),w,b
  1584  003AF8  C0C9  F045         	movff	_canMessage+6,??_main
  1585  003AFC  6A46               	clrf	(??_main+1)& (0+255),c
  1586  003AFE  C045  F046         	movff	??_main,??_main+1
  1587  003B02  6A45               	clrf	??_main,c
  1588  003B04  1045               	iorwf	??_main,w,c
  1589  003B06  6E03               	movwf	___awdiv@dividend,c
  1590  003B08  5046               	movf	??_main+1,w,c
  1591  003B0A  6E04               	movwf	___awdiv@dividend+1,c
  1592  003B0C  0E00               	movlw	0
  1593  003B0E  6E06               	movwf	___awdiv@divisor+1,c
  1594  003B10  0E0A               	movlw	10
  1595  003B12  6E05               	movwf	___awdiv@divisor,c
  1596  003B14  EC25  F033         	call	___awdiv	;wreg free
  1597  003B18  C003  F07A         	movff	?___awdiv,main@brake_p
  1598  003B1C  C004  F07B         	movff	?___awdiv+1,main@brake_p+1
  1599                           
  1600                           ;main.c: 121:                 gear = canMessage.frame.data6;
  1601  003B20  C0CF  F08A         	movff	_canMessage+12,main@gear
  1602  003B24  0100               	movlb	0	; () banked
  1603  003B26  6B8B               	clrf	(main@gear+1)& (0+255),b
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;main.c: 122:                 bias = canMessage.frame.data7;
  1607  003B28  C0D0  F078         	movff	_canMessage+13,main@bias
  1608  003B2C  6B79               	clrf	(main@bias+1)& (0+255),b
  1609                           
  1610                           ;main.c: 123:             } else if (canMessage.frame.id == 0x642) {
  1611  003B2E  D0EA               	goto	l865
  1612  003B30                     l858:
  1613  003B30                     l4580:
  1614                           
  1615                           ; BSR set to: 0
  1616  003B30  0E42               	movlw	66
  1617  003B32  19C4               	xorwf	(_canMessage+1)& (0+255),w,b
  1618  003B34  E110               	bnz	l4584
  1619  003B36  0E06               	movlw	6
  1620  003B38  19C5               	xorwf	(_canMessage+2)& (0+255),w,b
  1621  003B3A  11C6               	iorwf	(_canMessage+3)& (0+255),w,b
  1622  003B3C  11C7               	iorwf	(_canMessage+4)& (0+255),w,b
  1623  003B3E  A4D8               	btfss	status,2,c
  1624  003B40  D00A               	goto	l860
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;main.c: 124:                 engTemp = canMessage.frame.data0;
  1628  003B42  C0C9  F08C         	movff	_canMessage+6,main@engTemp
  1629  003B46  6B8D               	clrf	(main@engTemp+1)& (0+255),b
  1630                           
  1631                           ;main.c: 125:                 oilTemp = canMessage.frame.data1;
  1632  003B48  C0CA  F08E         	movff	_canMessage+7,main@oilTemp
  1633  003B4C  6B8F               	clrf	(main@oilTemp+1)& (0+255),b
  1634                           
  1635                           ;main.c: 126:                 battVolts = canMessage.frame.data2;
  1636  003B4E  C0CB  F090         	movff	_canMessage+8,main@battVolts
  1637  003B52  6B91               	clrf	(main@battVolts+1)& (0+255),b
  1638                           
  1639                           ;main.c: 127:             } else if (canMessage.frame.id == 0x643) {
  1640  003B54  D0D7               	goto	l865
  1641  003B56                     l860:
  1642  003B56                     l4584:
  1643                           
  1644                           ; BSR set to: 0
  1645  003B56  0E43               	movlw	67
  1646  003B58  19C4               	xorwf	(_canMessage+1)& (0+255),w,b
  1647  003B5A  E15B               	bnz	l4588
  1648  003B5C  0E06               	movlw	6
  1649  003B5E  19C5               	xorwf	(_canMessage+2)& (0+255),w,b
  1650  003B60  11C6               	iorwf	(_canMessage+3)& (0+255),w,b
  1651  003B62  11C7               	iorwf	(_canMessage+4)& (0+255),w,b
  1652  003B64  A4D8               	btfss	status,2,c
  1653  003B66  D055               	goto	l862
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;main.c: 128:                 radio = canMessage.frame.data0 >> 7;
  1657  003B68  45C9               	rlncf	(_canMessage+6)& (0+255),w,b
  1658  003B6A  0B01               	andlw	1
  1659  003B6C  B4D8               	btfsc	status,2,c
  1660  003B6E  D002               	goto	u1900
  1661  003B70  0E01               	movlw	1
  1662  003B72  D001               	goto	u1910
  1663  003B74                     u1900:
  1664  003B74  0E00               	movlw	0
  1665  003B76                     u1910:
  1666  003B76  6F81               	movwf	main@radio& (0+255),b
  1667                           
  1668                           ;main.c: 129:                 drs = canMessage.frame.data0 >> 6 & 0b1;
  1669  003B78  C0C9  F045         	movff	_canMessage+6,??_main
  1670  003B7C  0E06               	movlw	6
  1671  003B7E  6E46               	movwf	(??_main+1)& (0+255),c
  1672  003B80                     u1925:
  1673  003B80  90D8               	bcf	status,0,c
  1674  003B82  3245               	rrcf	??_main,f,c
  1675  003B84  2E46               	decfsz	(??_main+1)& (0+255),f,c
  1676  003B86  D7FC               	goto	u1925
  1677  003B88  A045               	btfss	??_main,0,c
  1678  003B8A  D002               	goto	u1930
  1679  003B8C  0E01               	movlw	1
  1680  003B8E  D001               	goto	u1940
  1681  003B90                     u1930:
  1682  003B90  0E00               	movlw	0
  1683  003B92                     u1940:
  1684  003B92  6F75               	movwf	main@drs& (0+255),b
  1685                           
  1686                           ;main.c: 130:                 etc = canMessage.frame.data0 >> 3 & 0b111;
  1687  003B94  C0C9  F045         	movff	_canMessage+6,??_main
  1688  003B98  90D8               	bcf	status,0,c
  1689  003B9A  3245               	rrcf	??_main,f,c
  1690  003B9C  90D8               	bcf	status,0,c
  1691  003B9E  3245               	rrcf	??_main,f,c
  1692  003BA0  90D8               	bcf	status,0,c
  1693  003BA2  3245               	rrcf	??_main,f,c
  1694  003BA4  0E07               	movlw	7
  1695  003BA6  1645               	andwf	??_main,f,c
  1696  003BA8  5045               	movf	??_main,w,c
  1697  003BAA  6F94               	movwf	main@etc& (0+255),b
  1698  003BAC  6B95               	clrf	(main@etc+1)& (0+255),b
  1699                           
  1700                           ;main.c: 131:                 fuel = canMessage.frame.data0 >> 2 & 0b1;
  1701  003BAE  C0C9  F045         	movff	_canMessage+6,??_main
  1702  003BB2  90D8               	bcf	status,0,c
  1703  003BB4  3245               	rrcf	??_main,f,c
  1704  003BB6  90D8               	bcf	status,0,c
  1705  003BB8  3245               	rrcf	??_main,f,c
  1706  003BBA  0E01               	movlw	1
  1707  003BBC  1645               	andwf	??_main,f,c
  1708  003BBE  5045               	movf	??_main,w,c
  1709  003BC0  6F86               	movwf	main@fuel& (0+255),b
  1710  003BC2  6B87               	clrf	(main@fuel+1)& (0+255),b
  1711                           
  1712                           ;main.c: 132:                 launch = canMessage.frame.data1 >> 7 & 0b1;
  1713  003BC4  6A45               	clrf	??_main& (0+255),c
  1714  003BC6  AFCA               	btfss	(_canMessage+7)& (0+255),7,b
  1715  003BC8  D001               	bra	u1955
  1716  003BCA  2A45               	incf	??_main& (0+255),f,c
  1717  003BCC                     u1955:
  1718  003BCC  A045               	btfss	??_main,0,c
  1719  003BCE  D002               	goto	u1960
  1720  003BD0  0E01               	movlw	1
  1721  003BD2  D001               	goto	u1970
  1722  003BD4                     u1960:
  1723  003BD4  0E00               	movlw	0
  1724  003BD6                     u1970:
  1725  003BD6  6F7C               	movwf	main@launch& (0+255),b
  1726                           
  1727                           ;main.c: 133:                 autoShift = canMessage.frame.data1 >> 6 & 0b1;
  1728  003BD8  C0CA  F045         	movff	_canMessage+7,??_main
  1729  003BDC  0E06               	movlw	6
  1730  003BDE  6E46               	movwf	(??_main+1)& (0+255),c
  1731  003BE0                     u1985:
  1732  003BE0  90D8               	bcf	status,0,c
  1733  003BE2  3245               	rrcf	??_main,f,c
  1734  003BE4  2E46               	decfsz	(??_main+1)& (0+255),f,c
  1735  003BE6  D7FC               	goto	u1985
  1736  003BE8  A045               	btfss	??_main,0,c
  1737  003BEA  D002               	goto	u1990
  1738  003BEC  0E01               	movlw	1
  1739  003BEE  D001               	goto	u2000
  1740  003BF0                     u1990:
  1741  003BF0  0E00               	movlw	0
  1742  003BF2                     u2000:
  1743  003BF2  6F7D               	movwf	main@autoShift& (0+255),b
  1744                           
  1745                           ;main.c: 134:                 clutch = canMessage.frame.data1 >> 5 & 0b1;
  1746  003BF4  C0CA  F045         	movff	_canMessage+7,??_main
  1747  003BF8  0E05               	movlw	5
  1748  003BFA  6E46               	movwf	(??_main+1)& (0+255),c
  1749  003BFC                     u2015:
  1750  003BFC  90D8               	bcf	status,0,c
  1751  003BFE  3245               	rrcf	??_main,f,c
  1752  003C00  2E46               	decfsz	(??_main+1)& (0+255),f,c
  1753  003C02  D7FC               	goto	u2015
  1754  003C04  A045               	btfss	??_main,0,c
  1755  003C06  D002               	goto	u2020
  1756  003C08  0E01               	movlw	1
  1757  003C0A  D001               	goto	u2030
  1758  003C0C                     u2020:
  1759  003C0C  0E00               	movlw	0
  1760  003C0E                     u2030:
  1761  003C0E  6F7E               	movwf	main@clutch& (0+255),b
  1762                           
  1763                           ;main.c: 135:             } else if (canMessage.frame.id == 0x644) {
  1764  003C10  D079               	goto	l865
  1765  003C12                     l862:
  1766  003C12                     l4588:
  1767                           
  1768                           ; BSR set to: 0
  1769  003C12  0E44               	movlw	68
  1770  003C14  19C4               	xorwf	(_canMessage+1)& (0+255),w,b
  1771  003C16  E176               	bnz	l855
  1772  003C18  0E06               	movlw	6
  1773  003C1A  19C5               	xorwf	(_canMessage+2)& (0+255),w,b
  1774  003C1C  11C6               	iorwf	(_canMessage+3)& (0+255),w,b
  1775  003C1E  11C7               	iorwf	(_canMessage+4)& (0+255),w,b
  1776  003C20  A4D8               	btfss	status,2,c
  1777  003C22  D070               	goto	l865
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;main.c: 136:                 lap_time.last = ((canMessage.frame.data0 << 8) | canMessag
      +                          e.frame.data1);
  1781  003C24  51CA               	movf	(_canMessage+7)& (0+255),w,b
  1782  003C26  C0C9  F045         	movff	_canMessage+6,??_main
  1783  003C2A  6A46               	clrf	(??_main+1)& (0+255),c
  1784  003C2C  C045  F046         	movff	??_main,??_main+1
  1785  003C30  6A45               	clrf	??_main,c
  1786  003C32  1045               	iorwf	??_main,w,c
  1787  003C34  6FA0               	movwf	(main@lap_time+8)& (0+255),b
  1788  003C36  5046               	movf	??_main+1,w,c
  1789  003C38  6FA1               	movwf	(main@lap_time+9)& (0+255),b
  1790                           
  1791                           ;main.c: 137:                 lap_time.current = ((canMessage.frame.data2 << 8) | canMes
      +                          sage.frame.data3);
  1792  003C3A  51CC               	movf	(_canMessage+9)& (0+255),w,b
  1793  003C3C  C0CB  F045         	movff	_canMessage+8,??_main
  1794  003C40  6A46               	clrf	(??_main+1)& (0+255),c
  1795  003C42  C045  F046         	movff	??_main,??_main+1
  1796  003C46  6A45               	clrf	??_main,c
  1797  003C48  1045               	iorwf	??_main,w,c
  1798  003C4A  6F98               	movwf	main@lap_time& (0+255),b
  1799  003C4C  5046               	movf	??_main+1,w,c
  1800  003C4E  6F99               	movwf	(main@lap_time+1)& (0+255),b
  1801                           
  1802                           ;main.c: 138:                 lap_time.current_number = ((canMessage.frame.data4 << 8) |
      +                           canMessage.frame.data5);
  1803  003C50  51CE               	movf	(_canMessage+11)& (0+255),w,b
  1804  003C52  C0CD  F045         	movff	_canMessage+10,??_main
  1805  003C56  6A46               	clrf	(??_main+1)& (0+255),c
  1806  003C58  C045  F046         	movff	??_main,??_main+1
  1807  003C5C  6A45               	clrf	??_main,c
  1808  003C5E  1045               	iorwf	??_main,w,c
  1809  003C60  6F9A               	movwf	(main@lap_time+2)& (0+255),b
  1810  003C62  5046               	movf	??_main+1,w,c
  1811  003C64  6F9B               	movwf	(main@lap_time+3)& (0+255),b
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;main.c: 139:                 lap_time.last_int = lap_time.last/100;
  1815  003C66  C0A0  F003         	movff	main@lap_time+8,___awdiv@dividend
  1816  003C6A  C0A1  F004         	movff	main@lap_time+9,___awdiv@dividend+1
  1817  003C6E  0E00               	movlw	0
  1818  003C70  6E06               	movwf	___awdiv@divisor+1,c
  1819  003C72  0E64               	movlw	100
  1820  003C74  6E05               	movwf	___awdiv@divisor,c
  1821  003C76  EC25  F033         	call	___awdiv	;wreg free
  1822  003C7A  C003  F0A2         	movff	?___awdiv,main@lap_time+10
  1823  003C7E  C004  F0A3         	movff	?___awdiv+1,main@lap_time+11
  1824                           
  1825                           ;main.c: 140:                 lap_time.last_dec = lap_time.last%100;
  1826  003C82  C0A0  F00B         	movff	main@lap_time+8,___awmod@dividend
  1827  003C86  C0A1  F00C         	movff	main@lap_time+9,___awmod@dividend+1
  1828  003C8A  0E00               	movlw	0
  1829  003C8C  6E0E               	movwf	___awmod@divisor+1,c
  1830  003C8E  0E64               	movlw	100
  1831  003C90  6E0D               	movwf	___awmod@divisor,c
  1832  003C92  ECA3  F033         	call	___awmod	;wreg free
  1833  003C96  C00B  F0A4         	movff	?___awmod,main@lap_time+12
  1834  003C9A  C00C  F0A5         	movff	?___awmod+1,main@lap_time+13
  1835                           
  1836                           ;main.c: 141:                 lap_time.current_int = lap_time.current/100;
  1837  003C9E  C098  F003         	movff	main@lap_time,___awdiv@dividend
  1838  003CA2  C099  F004         	movff	main@lap_time+1,___awdiv@dividend+1
  1839  003CA6  0E00               	movlw	0
  1840  003CA8  6E06               	movwf	___awdiv@divisor+1,c
  1841  003CAA  0E64               	movlw	100
  1842  003CAC  6E05               	movwf	___awdiv@divisor,c
  1843  003CAE  EC25  F033         	call	___awdiv	;wreg free
  1844  003CB2  C003  F09C         	movff	?___awdiv,main@lap_time+4
  1845  003CB6  C004  F09D         	movff	?___awdiv+1,main@lap_time+5
  1846                           
  1847                           ;main.c: 142:                 lap_time.current_dec = lap_time.current%100;
  1848  003CBA  C098  F00B         	movff	main@lap_time,___awmod@dividend
  1849  003CBE  C099  F00C         	movff	main@lap_time+1,___awmod@dividend+1
  1850  003CC2  0E00               	movlw	0
  1851  003CC4  6E0E               	movwf	___awmod@divisor+1,c
  1852  003CC6  0E64               	movlw	100
  1853  003CC8  6E0D               	movwf	___awmod@divisor,c
  1854  003CCA  ECA3  F033         	call	___awmod	;wreg free
  1855  003CCE  C00B  F09E         	movff	?___awmod,main@lap_time+6
  1856  003CD2  C00C  F09F         	movff	?___awmod+1,main@lap_time+7
  1857                           
  1858                           ;main.c: 143:                 if(lap_time.current < lap_time.best) {
  1859  003CD6  0100               	movlb	0	; () banked
  1860  003CD8  51A6               	movf	(main@lap_time+14)& (0+255),w,b
  1861  003CDA  5D98               	subwf	main@lap_time& (0+255),w,b
  1862  003CDC  5199               	movf	(main@lap_time+1)& (0+255),w,b
  1863  003CDE  0A80               	xorlw	128
  1864  003CE0  6E45               	movwf	??_main& (0+255),c
  1865  003CE2  51A7               	movf	(main@lap_time+15)& (0+255),w,b
  1866  003CE4  0A80               	xorlw	128
  1867  003CE6  5845               	subwfb	??_main& (0+255),w,c
  1868  003CE8  B0D8               	btfsc	status,0,c
  1869  003CEA  D00C               	goto	l865
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 144:                     lap_time.best = lap_time.current;
  1873  003CEC  C098  F0A6         	movff	main@lap_time,main@lap_time+14
  1874  003CF0  C099  F0A7         	movff	main@lap_time+1,main@lap_time+15
  1875                           
  1876                           ;main.c: 145:                     lap_time.best_int = lap_time.current_int;
  1877  003CF4  C09C  F0AA         	movff	main@lap_time+4,main@lap_time+18
  1878  003CF8  C09D  F0AB         	movff	main@lap_time+5,main@lap_time+19
  1879                           
  1880                           ;main.c: 146:                     lap_time.best_dec = lap_time.current_dec;
  1881  003CFC  C09E  F0AC         	movff	main@lap_time+6,main@lap_time+20
  1882  003D00  C09F  F0AD         	movff	main@lap_time+7,main@lap_time+21
  1883  003D04                     l865:
  1884  003D04                     l855:
  1885                           
  1886                           ;main.c: 150:         if(refresh_screen) {
  1887                           
  1888                           ; BSR set to: 0
  1889  003D04  0100               	movlb	0	; () banked
  1890  003D06  51C2               	movf	_refresh_screen& (0+255),w,b
  1891  003D08  B4D8               	btfsc	status,2,c
  1892  003D0A  D69B               	goto	l854
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;main.c: 151:             if(tp > 21 && brake_p > 1.44) {
  1896  003D0C  BF97               	btfsc	(main@tp+1)& (0+255),7,b
  1897  003D0E  D02D               	goto	l867
  1898  003D10  5197               	movf	(main@tp+1)& (0+255),w,b
  1899  003D12  E104               	bnz	u2070
  1900  003D14  0E16               	movlw	22
  1901  003D16  5D96               	subwf	main@tp& (0+255),w,b
  1902  003D18  A0D8               	btfss	status,0,c
  1903  003D1A  D027               	goto	l867
  1904  003D1C                     u2070:
  1905                           
  1906                           ; BSR set to: 0
  1907  003D1C  0EEC               	movlw	236
  1908  003D1E  6E11               	movwf	___flge@ff1,c
  1909  003D20  0E51               	movlw	81
  1910  003D22  6E12               	movwf	___flge@ff1+1,c
  1911  003D24  0EB8               	movlw	184
  1912  003D26  6E13               	movwf	___flge@ff1+2,c
  1913  003D28  0E3F               	movlw	63
  1914  003D2A  6E14               	movwf	___flge@ff1+3,c
  1915  003D2C  C07A  F003         	movff	main@brake_p,___xxtofl@val
  1916  003D30  C07B  F004         	movff	main@brake_p+1,___xxtofl@val+1
  1917  003D34  0E00               	movlw	0
  1918  003D36  BE04               	btfsc	___xxtofl@val+1,7,c
  1919  003D38  0EFF               	movlw	-1
  1920  003D3A  6E05               	movwf	___xxtofl@val+2,c
  1921  003D3C  6E06               	movwf	___xxtofl@val+3,c
  1922  003D3E  0E01               	movlw	1
  1923  003D40  EC2D  F02E         	call	___xxtofl
  1924  003D44  C003  F015         	movff	?___xxtofl,___flge@ff2
  1925  003D48  C004  F016         	movff	?___xxtofl+1,___flge@ff2+1
  1926  003D4C  C005  F017         	movff	?___xxtofl+2,___flge@ff2+2
  1927  003D50  C006  F018         	movff	?___xxtofl+3,___flge@ff2+3
  1928  003D54  ECCD  F02E         	call	___flge	;wreg free
  1929  003D58  B0D8               	btfsc	status,0,c
  1930  003D5A  D007               	goto	l867
  1931                           
  1932                           ;main.c: 152:                 BSPD_counter++;
  1933  003D5C  0100               	movlb	0	; () banked
  1934  003D5E  4B7F               	infsnz	main@BSPD_counter& (0+255),f,b
  1935  003D60  2B80               	incf	(main@BSPD_counter+1)& (0+255),f,b
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;main.c: 153:                 bspd = 1;
  1939  003D62  0E00               	movlw	0
  1940  003D64  6F83               	movwf	(main@bspd+1)& (0+255),b
  1941  003D66  0E01               	movlw	1
  1942  003D68  D008               	goto	L1
  1943  003D6A                     l867:
  1944                           
  1945                           ;main.c: 156:                 BSPD_counter = 0;
  1946                           
  1947                           ; BSR set to: 0
  1948  003D6A  0E00               	movlw	0
  1949  003D6C  0100               	movlb	0	; () banked
  1950  003D6E  6F80               	movwf	(main@BSPD_counter+1)& (0+255),b
  1951  003D70  0E00               	movlw	0
  1952  003D72  6F7F               	movwf	main@BSPD_counter& (0+255),b
  1953                           
  1954                           ;main.c: 157:                 bspd = 0;
  1955  003D74  0E00               	movlw	0
  1956  003D76  6F83               	movwf	(main@bspd+1)& (0+255),b
  1957  003D78  0E00               	movlw	0
  1958  003D7A                     L1:
  1959  003D7A  6F82               	movwf	main@bspd& (0+255),b
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;main.c: 159:             if(BSPD_counter >= 33) bspd = 2;
  1963                           
  1964                           ; BSR set to: 0
  1965                           
  1966                           ;main.c: 158:             }
  1967  003D7C  BF80               	btfsc	(main@BSPD_counter+1)& (0+255),7,b
  1968  003D7E  D00A               	goto	l869
  1969  003D80  5180               	movf	(main@BSPD_counter+1)& (0+255),w,b
  1970  003D82  E104               	bnz	u2090
  1971  003D84  0E21               	movlw	33
  1972  003D86  5D7F               	subwf	main@BSPD_counter& (0+255),w,b
  1973  003D88  A0D8               	btfss	status,0,c
  1974  003D8A  D004               	goto	l869
  1975  003D8C                     u2090:
  1976                           
  1977                           ; BSR set to: 0
  1978  003D8C  0E00               	movlw	0
  1979  003D8E  6F83               	movwf	(main@bspd+1)& (0+255),b
  1980  003D90  0E02               	movlw	2
  1981  003D92  6F82               	movwf	main@bspd& (0+255),b
  1982  003D94                     l869:
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;main.c: 160:             display_start();
  1986                           
  1987                           ; BSR set to: 0
  1988  003D94  EC90  F034         	call	_display_start	;wreg free
  1989                           
  1990                           ;main.c: 161:             display_labels();
  1991  003D98  ECCF  F007         	call	_display_labels	;wreg free
  1992                           
  1993                           ;main.c: 162:             display_grids();
  1994  003D9C  EC44  F01F         	call	_display_grids	;wreg free
  1995                           
  1996                           ;main.c: 163:             display_bottom_section(battVolts, tp);
  1997  003DA0  C090  F01F         	movff	main@battVolts,display_bottom_section@volts
  1998  003DA4  C091  F020         	movff	main@battVolts+1,display_bottom_section@volts+1
  1999  003DA8  C096  F021         	movff	main@tp,display_bottom_section@tp
  2000  003DAC  C097  F022         	movff	main@tp+1,display_bottom_section@tp+1
  2001  003DB0  EC56  F032         	call	_display_bottom_section	;wreg free
  2002                           
  2003                           ;main.c: 164:             display_rpm(rpm);
  2004  003DB4  C084  F019         	movff	main@rpm,display_rpm@rpm
  2005  003DB8  C085  F01A         	movff	main@rpm+1,display_rpm@rpm+1
  2006  003DBC  EC81  F019         	call	_display_rpm	;wreg free
  2007                           
  2008                           ;main.c: 165:             display_speed(speed);
  2009  003DC0  C088  F019         	movff	main@speed,display_speed@speed
  2010  003DC4  C089  F01A         	movff	main@speed+1,display_speed@speed+1
  2011  003DC8  EC75  F030         	call	_display_speed	;wreg free
  2012                           
  2013                           ;main.c: 166:             display_waterTemp(engTemp);
  2014  003DCC  C08C  F019         	movff	main@engTemp,display_waterTemp@temp
  2015  003DD0  C08D  F01A         	movff	main@engTemp+1,display_waterTemp@temp+1
  2016  003DD4  ECE9  F02F         	call	_display_waterTemp	;wreg free
  2017                           
  2018                           ;main.c: 167:             display_oilTemp(oilTemp);
  2019  003DD8  C08E  F019         	movff	main@oilTemp,display_oilTemp@temp
  2020  003DDC  C08F  F01A         	movff	main@oilTemp+1,display_oilTemp@temp+1
  2021  003DE0  EC01  F031         	call	_display_oilTemp	;wreg free
  2022                           
  2023                           ;main.c: 168:             display_etc(etc);
  2024  003DE4  C094  F019         	movff	main@etc,display_etc@etc
  2025  003DE8  C095  F01A         	movff	main@etc+1,display_etc@etc+1
  2026  003DEC  ECBA  F00F         	call	_display_etc	;wreg free
  2027                           
  2028                           ;main.c: 169:             display_brake_bias(bias);
  2029  003DF0  C078  F019         	movff	main@bias,display_brake_bias@bias
  2030  003DF4  C079  F01A         	movff	main@bias+1,display_brake_bias@bias+1
  2031  003DF8  EC5D  F02F         	call	_display_brake_bias	;wreg free
  2032                           
  2033                           ;main.c: 170:             display_gasPres(gasP);
  2034  003DFC  C092  F019         	movff	main@gasP,display_gasPres@gasPres
  2035  003E00  C093  F01A         	movff	main@gasP+1,display_gasPres@gasPres+1
  2036  003E04  EC16  F028         	call	_display_gasPres	;wreg free
  2037                           
  2038                           ;main.c: 171:             display_gear(gear);
  2039  003E08  C08A  F019         	movff	main@gear,display_gear@gear
  2040  003E0C  C08B  F01A         	movff	main@gear+1,display_gear@gear+1
  2041  003E10  EC0B  F022         	call	_display_gear	;wreg free
  2042                           
  2043                           ;main.c: 172:             display_fuel_level(fuel);
  2044  003E14  C086  F019         	movff	main@fuel,display_fuel_level@fuel
  2045  003E18  C087  F01A         	movff	main@fuel+1,display_fuel_level@fuel+1
  2046  003E1C  EC3C  F02B         	call	_display_fuel_level	;wreg free
  2047                           
  2048                           ;main.c: 173:             display_status(launch, autoShift, clutch, radio);
  2049  003E20  C07D  F019         	movff	main@autoShift,display_status@autoShift
  2050  003E24  C07E  F01A         	movff	main@clutch,display_status@clutch
  2051  003E28  C081  F01B         	movff	main@radio,display_status@radio
  2052  003E2C  0100               	movlb	0	; () banked
  2053  003E2E  517C               	movf	main@launch& (0+255),w,b
  2054  003E30  EC3A  F013         	call	_display_status
  2055                           
  2056                           ;main.c: 174:             display_laptime(lap_time.current_int, lap_time.current_dec, la
      +                          p_time.best_int, lap_time.best_dec,
  2057  003E34  C09C  F019         	movff	main@lap_time+4,display_laptime@current_int
  2058  003E38  C09D  F01A         	movff	main@lap_time+5,display_laptime@current_int+1
  2059  003E3C  C09E  F01B         	movff	main@lap_time+6,display_laptime@current_dec
  2060  003E40  C09F  F01C         	movff	main@lap_time+7,display_laptime@current_dec+1
  2061  003E44  C0AA  F01D         	movff	main@lap_time+18,display_laptime@best_int
  2062  003E48  C0AB  F01E         	movff	main@lap_time+19,display_laptime@best_int+1
  2063  003E4C  C0AC  F01F         	movff	main@lap_time+20,display_laptime@best_dec
  2064  003E50  C0AD  F020         	movff	main@lap_time+21,display_laptime@best_dec+1
  2065  003E54  C0A2  F021         	movff	main@lap_time+10,display_laptime@last_int
  2066  003E58  C0A3  F022         	movff	main@lap_time+11,display_laptime@last_int+1
  2067  003E5C  C0A4  F023         	movff	main@lap_time+12,display_laptime@last_dec
  2068  003E60  C0A5  F024         	movff	main@lap_time+13,display_laptime@last_dec+1
  2069  003E64  C09A  F025         	movff	main@lap_time+2,display_laptime@lap
  2070  003E68  C09B  F026         	movff	main@lap_time+3,display_laptime@lap+1
  2071  003E6C  C0A8  F027         	movff	main@lap_time+16,display_laptime@best_lap
  2072  003E70  C0A9  F028         	movff	main@lap_time+17,display_laptime@best_lap+1
  2073  003E74  EC96  F016         	call	_display_laptime	;wreg free
  2074                           
  2075                           ;main.c: 176:             display_end();
  2076  003E78  EC0C  F034         	call	_display_end	;wreg free
  2077                           
  2078                           ;main.c: 186:             refresh_screen = 0;
  2079  003E7C  0E00               	movlw	0
  2080  003E7E  0100               	movlb	0	; () banked
  2081  003E80  6FC2               	movwf	_refresh_screen& (0+255),b
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;main.c: 187:             TMR1_Reload();
  2085  003E82  ECDC  F035         	call	_TMR1_Reload	;wreg free
  2086                           
  2087                           ;main.c: 189:     }
  2088                           
  2089                           ;main.c: 188:         }
  2090  003E86  D5DD               	goto	l854
  2091  003E88                     __end_of_main:
  2092                           	opt stack 0
  2093                           tblptru	equ	0xFF8
  2094                           tblptrh	equ	0xFF7
  2095                           tblptrl	equ	0xFF6
  2096                           tablat	equ	0xFF5
  2097                           intcon	equ	0xFF2
  2098                           postinc0	equ	0xFEE
  2099                           wreg	equ	0xFE8
  2100                           postdec1	equ	0xFE5
  2101                           plusw1	equ	0xFE3
  2102                           fsr1l	equ	0xFE1
  2103                           plusw2	equ	0xFDB
  2104                           status	equ	0xFD8
  2105                           
  2106 ;; *************** function _wait2secs *****************
  2107 ;; Defined at:
  2108 ;;		line 27 in file "main.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;		None
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      void 
  2115 ;; Registers used:
  2116 ;;		wreg
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2126 ;;Total ram usage:        2 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    4
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_main
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text1
  2137  006B2E                     __ptext1:
  2138                           	opt stack 0
  2139  006B2E                     _wait2secs:
  2140                           	opt stack 26
  2141                           
  2142                           ;main.c: 28:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2143                           
  2144                           ;incstack = 0
  2145  006B2E  0EA3               	movlw	163
  2146  006B30  6E04               	movwf	(??_wait2secs+1)& (0+255),c
  2147  006B32  0E57               	movlw	87
  2148  006B34  6E03               	movwf	??_wait2secs& (0+255),c
  2149  006B36  0E02               	movlw	2
  2150  006B38                     u2107:
  2151  006B38  2EE8               	decfsz	wreg,f,c
  2152  006B3A  D7FE               	bra	u2107
  2153  006B3C  2E03               	decfsz	??_wait2secs& (0+255),f,c
  2154  006B3E  D7FC               	bra	u2107
  2155  006B40  2E04               	decfsz	(??_wait2secs+1)& (0+255),f,c
  2156  006B42  D7FA               	bra	u2107
  2157  006B44  D000               	nop2	
  2158  006B46  0012               	return		;funcret
  2159  006B48                     __end_of_wait2secs:
  2160                           	opt stack 0
  2161                           tblptru	equ	0xFF8
  2162                           tblptrh	equ	0xFF7
  2163                           tblptrl	equ	0xFF6
  2164                           tablat	equ	0xFF5
  2165                           intcon	equ	0xFF2
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           postdec1	equ	0xFE5
  2169                           plusw1	equ	0xFE3
  2170                           fsr1l	equ	0xFE1
  2171                           plusw2	equ	0xFDB
  2172                           status	equ	0xFD8
  2173                           
  2174 ;; *************** function _display_status *****************
  2175 ;; Defined at:
  2176 ;;		line 165 in file "display.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  launch          1    wreg     _Bool 
  2179 ;;  autoShift       1   24[COMRAM] _Bool 
  2180 ;;  clutch          1   25[COMRAM] _Bool 
  2181 ;;  radio           1   26[COMRAM] _Bool 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  launch          1   31[COMRAM] _Bool 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2193 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2196 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2197 ;;Total ram usage:        8 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    7
  2200 ;; This function calls:
  2201 ;;		_cmd
  2202 ;;		_cmd_incrementn
  2203 ;;		_wr16
  2204 ;;		_wr8s
  2205 ;; This function is called by:
  2206 ;;		_main
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text2
  2211  002674                     __ptext2:
  2212                           	opt stack 0
  2213  002674                     _display_status:
  2214                           	opt stack 23
  2215                           
  2216                           ;incstack = 0
  2217                           ;display_status@launch stored from wreg
  2218  002674  6E20               	movwf	display_status@launch,c
  2219                           
  2220                           ;display.c: 166:     cmd(((31UL<<24)|(((9UL)&15UL)<<0)));
  2221  002676  0E09               	movlw	9
  2222  002678  6E11               	movwf	cmd@command,c
  2223  00267A  0E00               	movlw	0
  2224  00267C  6E12               	movwf	cmd@command+1,c
  2225  00267E  0E00               	movlw	0
  2226  002680  6E13               	movwf	cmd@command+2,c
  2227  002682  0E1F               	movlw	31
  2228  002684  6E14               	movwf	cmd@command+3,c
  2229  002686  EC70  F034         	call	_cmd	;wreg free
  2230                           
  2231                           ;display.c: 167:     if(launch) {
  2232  00268A  5020               	movf	display_status@launch,w,c
  2233  00268C  B4D8               	btfsc	status,2,c
  2234  00268E  D00B               	goto	l657
  2235                           
  2236                           ;display.c: 168:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  2237  002690  0E00               	movlw	0
  2238  002692  6E11               	movwf	cmd@command,c
  2239  002694  0EFF               	movlw	255
  2240  002696  6E12               	movwf	cmd@command+1,c
  2241  002698  0E00               	movlw	0
  2242  00269A  6E13               	movwf	cmd@command+2,c
  2243  00269C  0E04               	movlw	4
  2244  00269E  6E14               	movwf	cmd@command+3,c
  2245  0026A0  EC70  F034         	call	_cmd	;wreg free
  2246                           
  2247                           ;display.c: 169:     } else {
  2248  0026A4  D00A               	goto	l658
  2249  0026A6                     l657:
  2250                           
  2251                           ;display.c: 170:         cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255U
      +                          L)<<0)));
  2252  0026A6  0E3C               	movlw	60
  2253  0026A8  6E11               	movwf	cmd@command,c
  2254  0026AA  0E3C               	movlw	60
  2255  0026AC  6E12               	movwf	cmd@command+1,c
  2256  0026AE  0E3C               	movlw	60
  2257  0026B0  6E13               	movwf	cmd@command+2,c
  2258  0026B2  0E04               	movlw	4
  2259  0026B4  6E14               	movwf	cmd@command+3,c
  2260  0026B6  EC70  F034         	call	_cmd	;wreg free
  2261  0026BA                     l658:
  2262                           
  2263                           ;display.c: 172:     cmd(((2UL<<30)|(((10)&511UL)<<21)|(((215)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  2264  0026BA  0E00               	movlw	0
  2265  0026BC  6E11               	movwf	cmd@command,c
  2266  0026BE  0E70               	movlw	112
  2267  0026C0  6E12               	movwf	cmd@command+1,c
  2268  0026C2  0E4D               	movlw	77
  2269  0026C4  6E13               	movwf	cmd@command+2,c
  2270  0026C6  0E81               	movlw	129
  2271  0026C8  6E14               	movwf	cmd@command+3,c
  2272  0026CA  EC70  F034         	call	_cmd	;wreg free
  2273                           
  2274                           ;display.c: 173:     cmd(((2UL<<30)|(((90)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  2275  0026CE  0E00               	movlw	0
  2276  0026D0  6E11               	movwf	cmd@command,c
  2277  0026D2  0E60               	movlw	96
  2278  0026D4  6E12               	movwf	cmd@command+1,c
  2279  0026D6  0E4E               	movlw	78
  2280  0026D8  6E13               	movwf	cmd@command+2,c
  2281  0026DA  0E8B               	movlw	139
  2282  0026DC  6E14               	movwf	cmd@command+3,c
  2283  0026DE  EC70  F034         	call	_cmd	;wreg free
  2284                           
  2285                           ;display.c: 175:     if (autoShift) {
  2286  0026E2  5019               	movf	display_status@autoShift,w,c
  2287  0026E4  B4D8               	btfsc	status,2,c
  2288  0026E6  D00B               	goto	l659
  2289                           
  2290                           ;display.c: 176:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  2291  0026E8  0E00               	movlw	0
  2292  0026EA  6E11               	movwf	cmd@command,c
  2293  0026EC  0EFF               	movlw	255
  2294  0026EE  6E12               	movwf	cmd@command+1,c
  2295  0026F0  0E00               	movlw	0
  2296  0026F2  6E13               	movwf	cmd@command+2,c
  2297  0026F4  0E04               	movlw	4
  2298  0026F6  6E14               	movwf	cmd@command+3,c
  2299  0026F8  EC70  F034         	call	_cmd	;wreg free
  2300                           
  2301                           ;display.c: 177:     } else {
  2302  0026FC  D00A               	goto	l660
  2303  0026FE                     l659:
  2304                           
  2305                           ;display.c: 178:         cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255U
      +                          L)<<0)));
  2306  0026FE  0E3C               	movlw	60
  2307  002700  6E11               	movwf	cmd@command,c
  2308  002702  0E3C               	movlw	60
  2309  002704  6E12               	movwf	cmd@command+1,c
  2310  002706  0E3C               	movlw	60
  2311  002708  6E13               	movwf	cmd@command+2,c
  2312  00270A  0E04               	movlw	4
  2313  00270C  6E14               	movwf	cmd@command+3,c
  2314  00270E  EC70  F034         	call	_cmd	;wreg free
  2315  002712                     l660:
  2316                           
  2317                           ;display.c: 180:     cmd(((2UL<<30)|(((100)&511UL)<<21)|(((215)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  2318  002712  0E00               	movlw	0
  2319  002714  6E11               	movwf	cmd@command,c
  2320  002716  0E70               	movlw	112
  2321  002718  6E12               	movwf	cmd@command+1,c
  2322  00271A  0E8D               	movlw	141
  2323  00271C  6E13               	movwf	cmd@command+2,c
  2324  00271E  0E8C               	movlw	140
  2325  002720  6E14               	movwf	cmd@command+3,c
  2326  002722  EC70  F034         	call	_cmd	;wreg free
  2327                           
  2328                           ;display.c: 181:     cmd(((2UL<<30)|(((180)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  2329  002726  0E00               	movlw	0
  2330  002728  6E11               	movwf	cmd@command,c
  2331  00272A  0E60               	movlw	96
  2332  00272C  6E12               	movwf	cmd@command+1,c
  2333  00272E  0E8E               	movlw	142
  2334  002730  6E13               	movwf	cmd@command+2,c
  2335  002732  0E96               	movlw	150
  2336  002734  6E14               	movwf	cmd@command+3,c
  2337  002736  EC70  F034         	call	_cmd	;wreg free
  2338                           
  2339                           ;display.c: 183:     if (clutch) {
  2340  00273A  501A               	movf	display_status@clutch,w,c
  2341  00273C  B4D8               	btfsc	status,2,c
  2342  00273E  D00B               	goto	l661
  2343                           
  2344                           ;display.c: 184:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  2345  002740  0E00               	movlw	0
  2346  002742  6E11               	movwf	cmd@command,c
  2347  002744  0EFF               	movlw	255
  2348  002746  6E12               	movwf	cmd@command+1,c
  2349  002748  0E00               	movlw	0
  2350  00274A  6E13               	movwf	cmd@command+2,c
  2351  00274C  0E04               	movlw	4
  2352  00274E  6E14               	movwf	cmd@command+3,c
  2353  002750  EC70  F034         	call	_cmd	;wreg free
  2354                           
  2355                           ;display.c: 185:     } else {
  2356  002754  D00A               	goto	l662
  2357  002756                     l661:
  2358                           
  2359                           ;display.c: 186:         cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255U
      +                          L)<<0)));
  2360  002756  0E3C               	movlw	60
  2361  002758  6E11               	movwf	cmd@command,c
  2362  00275A  0E3C               	movlw	60
  2363  00275C  6E12               	movwf	cmd@command+1,c
  2364  00275E  0E3C               	movlw	60
  2365  002760  6E13               	movwf	cmd@command+2,c
  2366  002762  0E04               	movlw	4
  2367  002764  6E14               	movwf	cmd@command+3,c
  2368  002766  EC70  F034         	call	_cmd	;wreg free
  2369  00276A                     l662:
  2370                           
  2371                           ;display.c: 188:     cmd(((2UL<<30)|(((10)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  2372  00276A  0E00               	movlw	0
  2373  00276C  6E11               	movwf	cmd@command,c
  2374  00276E  0EE0               	movlw	224
  2375  002770  6E12               	movwf	cmd@command+1,c
  2376  002772  0E4B               	movlw	75
  2377  002774  6E13               	movwf	cmd@command+2,c
  2378  002776  0E81               	movlw	129
  2379  002778  6E14               	movwf	cmd@command+3,c
  2380  00277A  EC70  F034         	call	_cmd	;wreg free
  2381                           
  2382                           ;display.c: 189:     cmd(((2UL<<30)|(((90)&511UL)<<21)|(((205)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  2383  00277E  0E00               	movlw	0
  2384  002780  6E11               	movwf	cmd@command,c
  2385  002782  0ED0               	movlw	208
  2386  002784  6E12               	movwf	cmd@command+1,c
  2387  002786  0E4C               	movlw	76
  2388  002788  6E13               	movwf	cmd@command+2,c
  2389  00278A  0E8B               	movlw	139
  2390  00278C  6E14               	movwf	cmd@command+3,c
  2391  00278E  EC70  F034         	call	_cmd	;wreg free
  2392                           
  2393                           ;display.c: 191:     if (radio) {
  2394  002792  501B               	movf	display_status@radio,w,c
  2395  002794  B4D8               	btfsc	status,2,c
  2396  002796  D00B               	goto	l663
  2397                           
  2398                           ;display.c: 192:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  2399  002798  0E00               	movlw	0
  2400  00279A  6E11               	movwf	cmd@command,c
  2401  00279C  0EFF               	movlw	255
  2402  00279E  6E12               	movwf	cmd@command+1,c
  2403  0027A0  0E00               	movlw	0
  2404  0027A2  6E13               	movwf	cmd@command+2,c
  2405  0027A4  0E04               	movlw	4
  2406  0027A6  6E14               	movwf	cmd@command+3,c
  2407  0027A8  EC70  F034         	call	_cmd	;wreg free
  2408                           
  2409                           ;display.c: 193:     } else {
  2410  0027AC  D00A               	goto	l664
  2411  0027AE                     l663:
  2412                           
  2413                           ;display.c: 194:         cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255U
      +                          L)<<0)));
  2414  0027AE  0E3C               	movlw	60
  2415  0027B0  6E11               	movwf	cmd@command,c
  2416  0027B2  0E3C               	movlw	60
  2417  0027B4  6E12               	movwf	cmd@command+1,c
  2418  0027B6  0E3C               	movlw	60
  2419  0027B8  6E13               	movwf	cmd@command+2,c
  2420  0027BA  0E04               	movlw	4
  2421  0027BC  6E14               	movwf	cmd@command+3,c
  2422  0027BE  EC70  F034         	call	_cmd	;wreg free
  2423  0027C2                     l664:
  2424                           
  2425                           ;display.c: 196:     cmd(((2UL<<30)|(((100)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  2426  0027C2  0E00               	movlw	0
  2427  0027C4  6E11               	movwf	cmd@command,c
  2428  0027C6  0EE0               	movlw	224
  2429  0027C8  6E12               	movwf	cmd@command+1,c
  2430  0027CA  0E8B               	movlw	139
  2431  0027CC  6E13               	movwf	cmd@command+2,c
  2432  0027CE  0E8C               	movlw	140
  2433  0027D0  6E14               	movwf	cmd@command+3,c
  2434  0027D2  EC70  F034         	call	_cmd	;wreg free
  2435                           
  2436                           ;display.c: 197:     cmd(((2UL<<30)|(((180)&511UL)<<21)|(((205)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  2437  0027D6  0E00               	movlw	0
  2438  0027D8  6E11               	movwf	cmd@command,c
  2439  0027DA  0ED0               	movlw	208
  2440  0027DC  6E12               	movwf	cmd@command+1,c
  2441  0027DE  0E8C               	movlw	140
  2442  0027E0  6E13               	movwf	cmd@command+2,c
  2443  0027E2  0E96               	movlw	150
  2444  0027E4  6E14               	movwf	cmd@command+3,c
  2445  0027E6  EC70  F034         	call	_cmd	;wreg free
  2446                           
  2447                           ;display.c: 199:     if (launch) {
  2448  0027EA  5020               	movf	display_status@launch,w,c
  2449  0027EC  B4D8               	btfsc	status,2,c
  2450  0027EE  D00B               	goto	l665
  2451                           
  2452                           ;display.c: 200:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<
      +                          <0)));
  2453  0027F0  0E00               	movlw	0
  2454  0027F2  6E11               	movwf	cmd@command,c
  2455  0027F4  0E00               	movlw	0
  2456  0027F6  6E12               	movwf	cmd@command+1,c
  2457  0027F8  0E00               	movlw	0
  2458  0027FA  6E13               	movwf	cmd@command+2,c
  2459  0027FC  0E04               	movlw	4
  2460  0027FE  6E14               	movwf	cmd@command+3,c
  2461  002800  EC70  F034         	call	_cmd	;wreg free
  2462                           
  2463                           ;display.c: 201:     } else {
  2464  002804  D00A               	goto	l666
  2465  002806                     l665:
  2466                           
  2467                           ;display.c: 202:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&2
      +                          55UL)<<0)));
  2468  002806  0EFF               	movlw	255
  2469  002808  6E11               	movwf	cmd@command,c
  2470  00280A  0EFF               	movlw	255
  2471  00280C  6E12               	movwf	cmd@command+1,c
  2472  00280E  0EFF               	movlw	255
  2473  002810  6E13               	movwf	cmd@command+2,c
  2474  002812  0E04               	movlw	4
  2475  002814  6E14               	movwf	cmd@command+3,c
  2476  002816  EC70  F034         	call	_cmd	;wreg free
  2477  00281A                     l666:
  2478                           
  2479                           ;display.c: 204:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 50);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 222);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "Launch"));
  2480  00281A  0E0C               	movlw	12
  2481  00281C  6E11               	movwf	cmd@command,c
  2482  00281E  0EFF               	movlw	255
  2483  002820  6E12               	movwf	cmd@command+1,c
  2484  002822  0EFF               	movlw	255
  2485  002824  6E13               	movwf	cmd@command+2,c
  2486  002826  0EFF               	movlw	255
  2487  002828  6E14               	movwf	cmd@command+3,c
  2488  00282A  EC70  F034         	call	_cmd	;wreg free
  2489  00282E  504F               	movf	_cmd_offset,w,c
  2490  002830  6E1C               	movwf	??_display_status& (0+255),c
  2491  002832  5050               	movf	_cmd_offset+1,w,c
  2492  002834  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2493  002836  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2494  002838  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2495  00283A  0E00               	movlw	0
  2496  00283C  241C               	addwf	??_display_status,w,c
  2497  00283E  6E04               	movwf	wr16@addr,c
  2498  002840  0E80               	movlw	128
  2499  002842  201D               	addwfc	??_display_status+1,w,c
  2500  002844  6E05               	movwf	wr16@addr+1,c
  2501  002846  0E10               	movlw	16
  2502  002848  201E               	addwfc	??_display_status+2,w,c
  2503  00284A  6E06               	movwf	wr16@addr+2,c
  2504  00284C  0E00               	movlw	0
  2505  00284E  201F               	addwfc	??_display_status+3,w,c
  2506  002850  6E07               	movwf	wr16@addr+3,c
  2507  002852  0E00               	movlw	0
  2508  002854  6E09               	movwf	wr16@value+1,c
  2509  002856  0E32               	movlw	50
  2510  002858  6E08               	movwf	wr16@value,c
  2511  00285A  EC48  F035         	call	_wr16	;wreg free
  2512  00285E  0E02               	movlw	2
  2513  002860  EC89  F035         	call	_cmd_incrementn
  2514  002864  504F               	movf	_cmd_offset,w,c
  2515  002866  6E1C               	movwf	??_display_status& (0+255),c
  2516  002868  5050               	movf	_cmd_offset+1,w,c
  2517  00286A  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2518  00286C  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2519  00286E  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2520  002870  0E00               	movlw	0
  2521  002872  241C               	addwf	??_display_status,w,c
  2522  002874  6E04               	movwf	wr16@addr,c
  2523  002876  0E80               	movlw	128
  2524  002878  201D               	addwfc	??_display_status+1,w,c
  2525  00287A  6E05               	movwf	wr16@addr+1,c
  2526  00287C  0E10               	movlw	16
  2527  00287E  201E               	addwfc	??_display_status+2,w,c
  2528  002880  6E06               	movwf	wr16@addr+2,c
  2529  002882  0E00               	movlw	0
  2530  002884  201F               	addwfc	??_display_status+3,w,c
  2531  002886  6E07               	movwf	wr16@addr+3,c
  2532  002888  0E00               	movlw	0
  2533  00288A  6E09               	movwf	wr16@value+1,c
  2534  00288C  0EDE               	movlw	222
  2535  00288E  6E08               	movwf	wr16@value,c
  2536  002890  EC48  F035         	call	_wr16	;wreg free
  2537  002894  0E02               	movlw	2
  2538  002896  EC89  F035         	call	_cmd_incrementn
  2539  00289A  504F               	movf	_cmd_offset,w,c
  2540  00289C  6E1C               	movwf	??_display_status& (0+255),c
  2541  00289E  5050               	movf	_cmd_offset+1,w,c
  2542  0028A0  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2543  0028A2  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2544  0028A4  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2545  0028A6  0E00               	movlw	0
  2546  0028A8  241C               	addwf	??_display_status,w,c
  2547  0028AA  6E04               	movwf	wr16@addr,c
  2548  0028AC  0E80               	movlw	128
  2549  0028AE  201D               	addwfc	??_display_status+1,w,c
  2550  0028B0  6E05               	movwf	wr16@addr+1,c
  2551  0028B2  0E10               	movlw	16
  2552  0028B4  201E               	addwfc	??_display_status+2,w,c
  2553  0028B6  6E06               	movwf	wr16@addr+2,c
  2554  0028B8  0E00               	movlw	0
  2555  0028BA  201F               	addwfc	??_display_status+3,w,c
  2556  0028BC  6E07               	movwf	wr16@addr+3,c
  2557  0028BE  0E00               	movlw	0
  2558  0028C0  6E09               	movwf	wr16@value+1,c
  2559  0028C2  0E1C               	movlw	28
  2560  0028C4  6E08               	movwf	wr16@value,c
  2561  0028C6  EC48  F035         	call	_wr16	;wreg free
  2562  0028CA  0E02               	movlw	2
  2563  0028CC  EC89  F035         	call	_cmd_incrementn
  2564  0028D0  504F               	movf	_cmd_offset,w,c
  2565  0028D2  6E1C               	movwf	??_display_status& (0+255),c
  2566  0028D4  5050               	movf	_cmd_offset+1,w,c
  2567  0028D6  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2568  0028D8  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2569  0028DA  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2570  0028DC  0E00               	movlw	0
  2571  0028DE  241C               	addwf	??_display_status,w,c
  2572  0028E0  6E04               	movwf	wr16@addr,c
  2573  0028E2  0E80               	movlw	128
  2574  0028E4  201D               	addwfc	??_display_status+1,w,c
  2575  0028E6  6E05               	movwf	wr16@addr+1,c
  2576  0028E8  0E10               	movlw	16
  2577  0028EA  201E               	addwfc	??_display_status+2,w,c
  2578  0028EC  6E06               	movwf	wr16@addr+2,c
  2579  0028EE  0E00               	movlw	0
  2580  0028F0  201F               	addwfc	??_display_status+3,w,c
  2581  0028F2  6E07               	movwf	wr16@addr+3,c
  2582  0028F4  0E06               	movlw	6
  2583  0028F6  6E09               	movwf	wr16@value+1,c
  2584  0028F8  0E00               	movlw	0
  2585  0028FA  6E08               	movwf	wr16@value,c
  2586  0028FC  EC48  F035         	call	_wr16	;wreg free
  2587  002900  0E02               	movlw	2
  2588  002902  EC89  F035         	call	_cmd_incrementn
  2589  002906  504F               	movf	_cmd_offset,w,c
  2590  002908  6E1C               	movwf	??_display_status& (0+255),c
  2591  00290A  5050               	movf	_cmd_offset+1,w,c
  2592  00290C  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2593  00290E  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2594  002910  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2595  002912  0E00               	movlw	0
  2596  002914  241C               	addwf	??_display_status,w,c
  2597  002916  6E09               	movwf	wr8s@addr,c
  2598  002918  0E80               	movlw	128
  2599  00291A  201D               	addwfc	??_display_status+1,w,c
  2600  00291C  6E0A               	movwf	wr8s@addr+1,c
  2601  00291E  0E10               	movlw	16
  2602  002920  201E               	addwfc	??_display_status+2,w,c
  2603  002922  6E0B               	movwf	wr8s@addr+2,c
  2604  002924  0E00               	movlw	0
  2605  002926  201F               	addwfc	??_display_status+3,w,c
  2606  002928  6E0C               	movwf	wr8s@addr+3,c
  2607  00292A  0E32               	movlw	low STR_15
  2608  00292C  6E0D               	movwf	wr8s@s,c
  2609  00292E  0E0F               	movlw	high STR_15
  2610  002930  6E0E               	movwf	wr8s@s+1,c
  2611  002932  EC67  F033         	call	_wr8s	;wreg free
  2612  002936  EC89  F035         	call	_cmd_incrementn
  2613                           
  2614                           ;display.c: 206:     if (autoShift) {
  2615  00293A  5019               	movf	display_status@autoShift,w,c
  2616  00293C  B4D8               	btfsc	status,2,c
  2617  00293E  D00B               	goto	l667
  2618                           
  2619                           ;display.c: 207:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<
      +                          <0)));
  2620  002940  0E00               	movlw	0
  2621  002942  6E11               	movwf	cmd@command,c
  2622  002944  0E00               	movlw	0
  2623  002946  6E12               	movwf	cmd@command+1,c
  2624  002948  0E00               	movlw	0
  2625  00294A  6E13               	movwf	cmd@command+2,c
  2626  00294C  0E04               	movlw	4
  2627  00294E  6E14               	movwf	cmd@command+3,c
  2628  002950  EC70  F034         	call	_cmd	;wreg free
  2629                           
  2630                           ;display.c: 208:     } else {
  2631  002954  D00A               	goto	l668
  2632  002956                     l667:
  2633                           
  2634                           ;display.c: 209:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&2
      +                          55UL)<<0)));
  2635  002956  0EFF               	movlw	255
  2636  002958  6E11               	movwf	cmd@command,c
  2637  00295A  0EFF               	movlw	255
  2638  00295C  6E12               	movwf	cmd@command+1,c
  2639  00295E  0EFF               	movlw	255
  2640  002960  6E13               	movwf	cmd@command+2,c
  2641  002962  0E04               	movlw	4
  2642  002964  6E14               	movwf	cmd@command+3,c
  2643  002966  EC70  F034         	call	_cmd	;wreg free
  2644  00296A                     l668:
  2645                           
  2646                           ;display.c: 211:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 140);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 222);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s
      +                          (1081344UL +cmd_offset, "Auto"));
  2647  00296A  0E0C               	movlw	12
  2648  00296C  6E11               	movwf	cmd@command,c
  2649  00296E  0EFF               	movlw	255
  2650  002970  6E12               	movwf	cmd@command+1,c
  2651  002972  0EFF               	movlw	255
  2652  002974  6E13               	movwf	cmd@command+2,c
  2653  002976  0EFF               	movlw	255
  2654  002978  6E14               	movwf	cmd@command+3,c
  2655  00297A  EC70  F034         	call	_cmd	;wreg free
  2656  00297E  504F               	movf	_cmd_offset,w,c
  2657  002980  6E1C               	movwf	??_display_status& (0+255),c
  2658  002982  5050               	movf	_cmd_offset+1,w,c
  2659  002984  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2660  002986  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2661  002988  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2662  00298A  0E00               	movlw	0
  2663  00298C  241C               	addwf	??_display_status,w,c
  2664  00298E  6E04               	movwf	wr16@addr,c
  2665  002990  0E80               	movlw	128
  2666  002992  201D               	addwfc	??_display_status+1,w,c
  2667  002994  6E05               	movwf	wr16@addr+1,c
  2668  002996  0E10               	movlw	16
  2669  002998  201E               	addwfc	??_display_status+2,w,c
  2670  00299A  6E06               	movwf	wr16@addr+2,c
  2671  00299C  0E00               	movlw	0
  2672  00299E  201F               	addwfc	??_display_status+3,w,c
  2673  0029A0  6E07               	movwf	wr16@addr+3,c
  2674  0029A2  0E00               	movlw	0
  2675  0029A4  6E09               	movwf	wr16@value+1,c
  2676  0029A6  0E8C               	movlw	140
  2677  0029A8  6E08               	movwf	wr16@value,c
  2678  0029AA  EC48  F035         	call	_wr16	;wreg free
  2679  0029AE  0E02               	movlw	2
  2680  0029B0  EC89  F035         	call	_cmd_incrementn
  2681  0029B4  504F               	movf	_cmd_offset,w,c
  2682  0029B6  6E1C               	movwf	??_display_status& (0+255),c
  2683  0029B8  5050               	movf	_cmd_offset+1,w,c
  2684  0029BA  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2685  0029BC  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2686  0029BE  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2687  0029C0  0E00               	movlw	0
  2688  0029C2  241C               	addwf	??_display_status,w,c
  2689  0029C4  6E04               	movwf	wr16@addr,c
  2690  0029C6  0E80               	movlw	128
  2691  0029C8  201D               	addwfc	??_display_status+1,w,c
  2692  0029CA  6E05               	movwf	wr16@addr+1,c
  2693  0029CC  0E10               	movlw	16
  2694  0029CE  201E               	addwfc	??_display_status+2,w,c
  2695  0029D0  6E06               	movwf	wr16@addr+2,c
  2696  0029D2  0E00               	movlw	0
  2697  0029D4  201F               	addwfc	??_display_status+3,w,c
  2698  0029D6  6E07               	movwf	wr16@addr+3,c
  2699  0029D8  0E00               	movlw	0
  2700  0029DA  6E09               	movwf	wr16@value+1,c
  2701  0029DC  0EDE               	movlw	222
  2702  0029DE  6E08               	movwf	wr16@value,c
  2703  0029E0  EC48  F035         	call	_wr16	;wreg free
  2704  0029E4  0E02               	movlw	2
  2705  0029E6  EC89  F035         	call	_cmd_incrementn
  2706  0029EA  504F               	movf	_cmd_offset,w,c
  2707  0029EC  6E1C               	movwf	??_display_status& (0+255),c
  2708  0029EE  5050               	movf	_cmd_offset+1,w,c
  2709  0029F0  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2710  0029F2  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2711  0029F4  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2712  0029F6  0E00               	movlw	0
  2713  0029F8  241C               	addwf	??_display_status,w,c
  2714  0029FA  6E04               	movwf	wr16@addr,c
  2715  0029FC  0E80               	movlw	128
  2716  0029FE  201D               	addwfc	??_display_status+1,w,c
  2717  002A00  6E05               	movwf	wr16@addr+1,c
  2718  002A02  0E10               	movlw	16
  2719  002A04  201E               	addwfc	??_display_status+2,w,c
  2720  002A06  6E06               	movwf	wr16@addr+2,c
  2721  002A08  0E00               	movlw	0
  2722  002A0A  201F               	addwfc	??_display_status+3,w,c
  2723  002A0C  6E07               	movwf	wr16@addr+3,c
  2724  002A0E  0E00               	movlw	0
  2725  002A10  6E09               	movwf	wr16@value+1,c
  2726  002A12  0E1C               	movlw	28
  2727  002A14  6E08               	movwf	wr16@value,c
  2728  002A16  EC48  F035         	call	_wr16	;wreg free
  2729  002A1A  0E02               	movlw	2
  2730  002A1C  EC89  F035         	call	_cmd_incrementn
  2731  002A20  504F               	movf	_cmd_offset,w,c
  2732  002A22  6E1C               	movwf	??_display_status& (0+255),c
  2733  002A24  5050               	movf	_cmd_offset+1,w,c
  2734  002A26  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2735  002A28  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2736  002A2A  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2737  002A2C  0E00               	movlw	0
  2738  002A2E  241C               	addwf	??_display_status,w,c
  2739  002A30  6E04               	movwf	wr16@addr,c
  2740  002A32  0E80               	movlw	128
  2741  002A34  201D               	addwfc	??_display_status+1,w,c
  2742  002A36  6E05               	movwf	wr16@addr+1,c
  2743  002A38  0E10               	movlw	16
  2744  002A3A  201E               	addwfc	??_display_status+2,w,c
  2745  002A3C  6E06               	movwf	wr16@addr+2,c
  2746  002A3E  0E00               	movlw	0
  2747  002A40  201F               	addwfc	??_display_status+3,w,c
  2748  002A42  6E07               	movwf	wr16@addr+3,c
  2749  002A44  0E06               	movlw	6
  2750  002A46  6E09               	movwf	wr16@value+1,c
  2751  002A48  0E00               	movlw	0
  2752  002A4A  6E08               	movwf	wr16@value,c
  2753  002A4C  EC48  F035         	call	_wr16	;wreg free
  2754  002A50  0E02               	movlw	2
  2755  002A52  EC89  F035         	call	_cmd_incrementn
  2756  002A56  504F               	movf	_cmd_offset,w,c
  2757  002A58  6E1C               	movwf	??_display_status& (0+255),c
  2758  002A5A  5050               	movf	_cmd_offset+1,w,c
  2759  002A5C  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2760  002A5E  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2761  002A60  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2762  002A62  0E00               	movlw	0
  2763  002A64  241C               	addwf	??_display_status,w,c
  2764  002A66  6E09               	movwf	wr8s@addr,c
  2765  002A68  0E80               	movlw	128
  2766  002A6A  201D               	addwfc	??_display_status+1,w,c
  2767  002A6C  6E0A               	movwf	wr8s@addr+1,c
  2768  002A6E  0E10               	movlw	16
  2769  002A70  201E               	addwfc	??_display_status+2,w,c
  2770  002A72  6E0B               	movwf	wr8s@addr+2,c
  2771  002A74  0E00               	movlw	0
  2772  002A76  201F               	addwfc	??_display_status+3,w,c
  2773  002A78  6E0C               	movwf	wr8s@addr+3,c
  2774  002A7A  0E6F               	movlw	low STR_16
  2775  002A7C  6E0D               	movwf	wr8s@s,c
  2776  002A7E  0E0F               	movlw	high STR_16
  2777  002A80  6E0E               	movwf	wr8s@s+1,c
  2778  002A82  EC67  F033         	call	_wr8s	;wreg free
  2779  002A86  EC89  F035         	call	_cmd_incrementn
  2780                           
  2781                           ;display.c: 213:     if (clutch) {
  2782  002A8A  501A               	movf	display_status@clutch,w,c
  2783  002A8C  B4D8               	btfsc	status,2,c
  2784  002A8E  D00B               	goto	l669
  2785                           
  2786                           ;display.c: 214:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<
      +                          <0)));
  2787  002A90  0E00               	movlw	0
  2788  002A92  6E11               	movwf	cmd@command,c
  2789  002A94  0E00               	movlw	0
  2790  002A96  6E12               	movwf	cmd@command+1,c
  2791  002A98  0E00               	movlw	0
  2792  002A9A  6E13               	movwf	cmd@command+2,c
  2793  002A9C  0E04               	movlw	4
  2794  002A9E  6E14               	movwf	cmd@command+3,c
  2795  002AA0  EC70  F034         	call	_cmd	;wreg free
  2796                           
  2797                           ;display.c: 215:     } else {
  2798  002AA4  D00A               	goto	l670
  2799  002AA6                     l669:
  2800                           
  2801                           ;display.c: 216:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&2
      +                          55UL)<<0)));
  2802  002AA6  0EFF               	movlw	255
  2803  002AA8  6E11               	movwf	cmd@command,c
  2804  002AAA  0EFF               	movlw	255
  2805  002AAC  6E12               	movwf	cmd@command+1,c
  2806  002AAE  0EFF               	movlw	255
  2807  002AB0  6E13               	movwf	cmd@command+2,c
  2808  002AB2  0E04               	movlw	4
  2809  002AB4  6E14               	movwf	cmd@command+3,c
  2810  002AB6  EC70  F034         	call	_cmd	;wreg free
  2811  002ABA                     l670:
  2812                           
  2813                           ;display.c: 218:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 50);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 197);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "Clutch"));
  2814  002ABA  0E0C               	movlw	12
  2815  002ABC  6E11               	movwf	cmd@command,c
  2816  002ABE  0EFF               	movlw	255
  2817  002AC0  6E12               	movwf	cmd@command+1,c
  2818  002AC2  0EFF               	movlw	255
  2819  002AC4  6E13               	movwf	cmd@command+2,c
  2820  002AC6  0EFF               	movlw	255
  2821  002AC8  6E14               	movwf	cmd@command+3,c
  2822  002ACA  EC70  F034         	call	_cmd	;wreg free
  2823  002ACE  504F               	movf	_cmd_offset,w,c
  2824  002AD0  6E1C               	movwf	??_display_status& (0+255),c
  2825  002AD2  5050               	movf	_cmd_offset+1,w,c
  2826  002AD4  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2827  002AD6  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2828  002AD8  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2829  002ADA  0E00               	movlw	0
  2830  002ADC  241C               	addwf	??_display_status,w,c
  2831  002ADE  6E04               	movwf	wr16@addr,c
  2832  002AE0  0E80               	movlw	128
  2833  002AE2  201D               	addwfc	??_display_status+1,w,c
  2834  002AE4  6E05               	movwf	wr16@addr+1,c
  2835  002AE6  0E10               	movlw	16
  2836  002AE8  201E               	addwfc	??_display_status+2,w,c
  2837  002AEA  6E06               	movwf	wr16@addr+2,c
  2838  002AEC  0E00               	movlw	0
  2839  002AEE  201F               	addwfc	??_display_status+3,w,c
  2840  002AF0  6E07               	movwf	wr16@addr+3,c
  2841  002AF2  0E00               	movlw	0
  2842  002AF4  6E09               	movwf	wr16@value+1,c
  2843  002AF6  0E32               	movlw	50
  2844  002AF8  6E08               	movwf	wr16@value,c
  2845  002AFA  EC48  F035         	call	_wr16	;wreg free
  2846  002AFE  0E02               	movlw	2
  2847  002B00  EC89  F035         	call	_cmd_incrementn
  2848  002B04  504F               	movf	_cmd_offset,w,c
  2849  002B06  6E1C               	movwf	??_display_status& (0+255),c
  2850  002B08  5050               	movf	_cmd_offset+1,w,c
  2851  002B0A  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2852  002B0C  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2853  002B0E  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2854  002B10  0E00               	movlw	0
  2855  002B12  241C               	addwf	??_display_status,w,c
  2856  002B14  6E04               	movwf	wr16@addr,c
  2857  002B16  0E80               	movlw	128
  2858  002B18  201D               	addwfc	??_display_status+1,w,c
  2859  002B1A  6E05               	movwf	wr16@addr+1,c
  2860  002B1C  0E10               	movlw	16
  2861  002B1E  201E               	addwfc	??_display_status+2,w,c
  2862  002B20  6E06               	movwf	wr16@addr+2,c
  2863  002B22  0E00               	movlw	0
  2864  002B24  201F               	addwfc	??_display_status+3,w,c
  2865  002B26  6E07               	movwf	wr16@addr+3,c
  2866  002B28  0E00               	movlw	0
  2867  002B2A  6E09               	movwf	wr16@value+1,c
  2868  002B2C  0EC5               	movlw	197
  2869  002B2E  6E08               	movwf	wr16@value,c
  2870  002B30  EC48  F035         	call	_wr16	;wreg free
  2871  002B34  0E02               	movlw	2
  2872  002B36  EC89  F035         	call	_cmd_incrementn
  2873  002B3A  504F               	movf	_cmd_offset,w,c
  2874  002B3C  6E1C               	movwf	??_display_status& (0+255),c
  2875  002B3E  5050               	movf	_cmd_offset+1,w,c
  2876  002B40  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2877  002B42  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2878  002B44  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2879  002B46  0E00               	movlw	0
  2880  002B48  241C               	addwf	??_display_status,w,c
  2881  002B4A  6E04               	movwf	wr16@addr,c
  2882  002B4C  0E80               	movlw	128
  2883  002B4E  201D               	addwfc	??_display_status+1,w,c
  2884  002B50  6E05               	movwf	wr16@addr+1,c
  2885  002B52  0E10               	movlw	16
  2886  002B54  201E               	addwfc	??_display_status+2,w,c
  2887  002B56  6E06               	movwf	wr16@addr+2,c
  2888  002B58  0E00               	movlw	0
  2889  002B5A  201F               	addwfc	??_display_status+3,w,c
  2890  002B5C  6E07               	movwf	wr16@addr+3,c
  2891  002B5E  0E00               	movlw	0
  2892  002B60  6E09               	movwf	wr16@value+1,c
  2893  002B62  0E1C               	movlw	28
  2894  002B64  6E08               	movwf	wr16@value,c
  2895  002B66  EC48  F035         	call	_wr16	;wreg free
  2896  002B6A  0E02               	movlw	2
  2897  002B6C  EC89  F035         	call	_cmd_incrementn
  2898  002B70  504F               	movf	_cmd_offset,w,c
  2899  002B72  6E1C               	movwf	??_display_status& (0+255),c
  2900  002B74  5050               	movf	_cmd_offset+1,w,c
  2901  002B76  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2902  002B78  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2903  002B7A  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2904  002B7C  0E00               	movlw	0
  2905  002B7E  241C               	addwf	??_display_status,w,c
  2906  002B80  6E04               	movwf	wr16@addr,c
  2907  002B82  0E80               	movlw	128
  2908  002B84  201D               	addwfc	??_display_status+1,w,c
  2909  002B86  6E05               	movwf	wr16@addr+1,c
  2910  002B88  0E10               	movlw	16
  2911  002B8A  201E               	addwfc	??_display_status+2,w,c
  2912  002B8C  6E06               	movwf	wr16@addr+2,c
  2913  002B8E  0E00               	movlw	0
  2914  002B90  201F               	addwfc	??_display_status+3,w,c
  2915  002B92  6E07               	movwf	wr16@addr+3,c
  2916  002B94  0E06               	movlw	6
  2917  002B96  6E09               	movwf	wr16@value+1,c
  2918  002B98  0E00               	movlw	0
  2919  002B9A  6E08               	movwf	wr16@value,c
  2920  002B9C  EC48  F035         	call	_wr16	;wreg free
  2921  002BA0  0E02               	movlw	2
  2922  002BA2  EC89  F035         	call	_cmd_incrementn
  2923  002BA6  504F               	movf	_cmd_offset,w,c
  2924  002BA8  6E1C               	movwf	??_display_status& (0+255),c
  2925  002BAA  5050               	movf	_cmd_offset+1,w,c
  2926  002BAC  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2927  002BAE  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2928  002BB0  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2929  002BB2  0E00               	movlw	0
  2930  002BB4  241C               	addwf	??_display_status,w,c
  2931  002BB6  6E09               	movwf	wr8s@addr,c
  2932  002BB8  0E80               	movlw	128
  2933  002BBA  201D               	addwfc	??_display_status+1,w,c
  2934  002BBC  6E0A               	movwf	wr8s@addr+1,c
  2935  002BBE  0E10               	movlw	16
  2936  002BC0  201E               	addwfc	??_display_status+2,w,c
  2937  002BC2  6E0B               	movwf	wr8s@addr+2,c
  2938  002BC4  0E00               	movlw	0
  2939  002BC6  201F               	addwfc	??_display_status+3,w,c
  2940  002BC8  6E0C               	movwf	wr8s@addr+3,c
  2941  002BCA  0E39               	movlw	low STR_17
  2942  002BCC  6E0D               	movwf	wr8s@s,c
  2943  002BCE  0E0F               	movlw	high STR_17
  2944  002BD0  6E0E               	movwf	wr8s@s+1,c
  2945  002BD2  EC67  F033         	call	_wr8s	;wreg free
  2946  002BD6  EC89  F035         	call	_cmd_incrementn
  2947                           
  2948                           ;display.c: 220:     if (radio) {
  2949  002BDA  501B               	movf	display_status@radio,w,c
  2950  002BDC  B4D8               	btfsc	status,2,c
  2951  002BDE  D00B               	goto	l671
  2952                           
  2953                           ;display.c: 221:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<
      +                          <0)));
  2954  002BE0  0E00               	movlw	0
  2955  002BE2  6E11               	movwf	cmd@command,c
  2956  002BE4  0E00               	movlw	0
  2957  002BE6  6E12               	movwf	cmd@command+1,c
  2958  002BE8  0E00               	movlw	0
  2959  002BEA  6E13               	movwf	cmd@command+2,c
  2960  002BEC  0E04               	movlw	4
  2961  002BEE  6E14               	movwf	cmd@command+3,c
  2962  002BF0  EC70  F034         	call	_cmd	;wreg free
  2963                           
  2964                           ;display.c: 222:     } else {
  2965  002BF4  D00A               	goto	l672
  2966  002BF6                     l671:
  2967                           
  2968                           ;display.c: 223:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&2
      +                          55UL)<<0)));
  2969  002BF6  0EFF               	movlw	255
  2970  002BF8  6E11               	movwf	cmd@command,c
  2971  002BFA  0EFF               	movlw	255
  2972  002BFC  6E12               	movwf	cmd@command+1,c
  2973  002BFE  0EFF               	movlw	255
  2974  002C00  6E13               	movwf	cmd@command+2,c
  2975  002C02  0E04               	movlw	4
  2976  002C04  6E14               	movwf	cmd@command+3,c
  2977  002C06  EC70  F034         	call	_cmd	;wreg free
  2978  002C0A                     l672:
  2979                           
  2980                           ;display.c: 225:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 140);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 197);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s
      +                          (1081344UL +cmd_offset, "Radio"));
  2981  002C0A  0E0C               	movlw	12
  2982  002C0C  6E11               	movwf	cmd@command,c
  2983  002C0E  0EFF               	movlw	255
  2984  002C10  6E12               	movwf	cmd@command+1,c
  2985  002C12  0EFF               	movlw	255
  2986  002C14  6E13               	movwf	cmd@command+2,c
  2987  002C16  0EFF               	movlw	255
  2988  002C18  6E14               	movwf	cmd@command+3,c
  2989  002C1A  EC70  F034         	call	_cmd	;wreg free
  2990  002C1E  504F               	movf	_cmd_offset,w,c
  2991  002C20  6E1C               	movwf	??_display_status& (0+255),c
  2992  002C22  5050               	movf	_cmd_offset+1,w,c
  2993  002C24  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2994  002C26  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2995  002C28  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2996  002C2A  0E00               	movlw	0
  2997  002C2C  241C               	addwf	??_display_status,w,c
  2998  002C2E  6E04               	movwf	wr16@addr,c
  2999  002C30  0E80               	movlw	128
  3000  002C32  201D               	addwfc	??_display_status+1,w,c
  3001  002C34  6E05               	movwf	wr16@addr+1,c
  3002  002C36  0E10               	movlw	16
  3003  002C38  201E               	addwfc	??_display_status+2,w,c
  3004  002C3A  6E06               	movwf	wr16@addr+2,c
  3005  002C3C  0E00               	movlw	0
  3006  002C3E  201F               	addwfc	??_display_status+3,w,c
  3007  002C40  6E07               	movwf	wr16@addr+3,c
  3008  002C42  0E00               	movlw	0
  3009  002C44  6E09               	movwf	wr16@value+1,c
  3010  002C46  0E8C               	movlw	140
  3011  002C48  6E08               	movwf	wr16@value,c
  3012  002C4A  EC48  F035         	call	_wr16	;wreg free
  3013  002C4E  0E02               	movlw	2
  3014  002C50  EC89  F035         	call	_cmd_incrementn
  3015  002C54  504F               	movf	_cmd_offset,w,c
  3016  002C56  6E1C               	movwf	??_display_status& (0+255),c
  3017  002C58  5050               	movf	_cmd_offset+1,w,c
  3018  002C5A  6E1D               	movwf	(??_display_status+1)& (0+255),c
  3019  002C5C  6A1E               	clrf	(??_display_status+2)& (0+255),c
  3020  002C5E  6A1F               	clrf	(??_display_status+3)& (0+255),c
  3021  002C60  0E00               	movlw	0
  3022  002C62  241C               	addwf	??_display_status,w,c
  3023  002C64  6E04               	movwf	wr16@addr,c
  3024  002C66  0E80               	movlw	128
  3025  002C68  201D               	addwfc	??_display_status+1,w,c
  3026  002C6A  6E05               	movwf	wr16@addr+1,c
  3027  002C6C  0E10               	movlw	16
  3028  002C6E  201E               	addwfc	??_display_status+2,w,c
  3029  002C70  6E06               	movwf	wr16@addr+2,c
  3030  002C72  0E00               	movlw	0
  3031  002C74  201F               	addwfc	??_display_status+3,w,c
  3032  002C76  6E07               	movwf	wr16@addr+3,c
  3033  002C78  0E00               	movlw	0
  3034  002C7A  6E09               	movwf	wr16@value+1,c
  3035  002C7C  0EC5               	movlw	197
  3036  002C7E  6E08               	movwf	wr16@value,c
  3037  002C80  EC48  F035         	call	_wr16	;wreg free
  3038  002C84  0E02               	movlw	2
  3039  002C86  EC89  F035         	call	_cmd_incrementn
  3040  002C8A  504F               	movf	_cmd_offset,w,c
  3041  002C8C  6E1C               	movwf	??_display_status& (0+255),c
  3042  002C8E  5050               	movf	_cmd_offset+1,w,c
  3043  002C90  6E1D               	movwf	(??_display_status+1)& (0+255),c
  3044  002C92  6A1E               	clrf	(??_display_status+2)& (0+255),c
  3045  002C94  6A1F               	clrf	(??_display_status+3)& (0+255),c
  3046  002C96  0E00               	movlw	0
  3047  002C98  241C               	addwf	??_display_status,w,c
  3048  002C9A  6E04               	movwf	wr16@addr,c
  3049  002C9C  0E80               	movlw	128
  3050  002C9E  201D               	addwfc	??_display_status+1,w,c
  3051  002CA0  6E05               	movwf	wr16@addr+1,c
  3052  002CA2  0E10               	movlw	16
  3053  002CA4  201E               	addwfc	??_display_status+2,w,c
  3054  002CA6  6E06               	movwf	wr16@addr+2,c
  3055  002CA8  0E00               	movlw	0
  3056  002CAA  201F               	addwfc	??_display_status+3,w,c
  3057  002CAC  6E07               	movwf	wr16@addr+3,c
  3058  002CAE  0E00               	movlw	0
  3059  002CB0  6E09               	movwf	wr16@value+1,c
  3060  002CB2  0E1C               	movlw	28
  3061  002CB4  6E08               	movwf	wr16@value,c
  3062  002CB6  EC48  F035         	call	_wr16	;wreg free
  3063  002CBA  0E02               	movlw	2
  3064  002CBC  EC89  F035         	call	_cmd_incrementn
  3065  002CC0  504F               	movf	_cmd_offset,w,c
  3066  002CC2  6E1C               	movwf	??_display_status& (0+255),c
  3067  002CC4  5050               	movf	_cmd_offset+1,w,c
  3068  002CC6  6E1D               	movwf	(??_display_status+1)& (0+255),c
  3069  002CC8  6A1E               	clrf	(??_display_status+2)& (0+255),c
  3070  002CCA  6A1F               	clrf	(??_display_status+3)& (0+255),c
  3071  002CCC  0E00               	movlw	0
  3072  002CCE  241C               	addwf	??_display_status,w,c
  3073  002CD0  6E04               	movwf	wr16@addr,c
  3074  002CD2  0E80               	movlw	128
  3075  002CD4  201D               	addwfc	??_display_status+1,w,c
  3076  002CD6  6E05               	movwf	wr16@addr+1,c
  3077  002CD8  0E10               	movlw	16
  3078  002CDA  201E               	addwfc	??_display_status+2,w,c
  3079  002CDC  6E06               	movwf	wr16@addr+2,c
  3080  002CDE  0E00               	movlw	0
  3081  002CE0  201F               	addwfc	??_display_status+3,w,c
  3082  002CE2  6E07               	movwf	wr16@addr+3,c
  3083  002CE4  0E06               	movlw	6
  3084  002CE6  6E09               	movwf	wr16@value+1,c
  3085  002CE8  0E00               	movlw	0
  3086  002CEA  6E08               	movwf	wr16@value,c
  3087  002CEC  EC48  F035         	call	_wr16	;wreg free
  3088  002CF0  0E02               	movlw	2
  3089  002CF2  EC89  F035         	call	_cmd_incrementn
  3090  002CF6  504F               	movf	_cmd_offset,w,c
  3091  002CF8  6E1C               	movwf	??_display_status& (0+255),c
  3092  002CFA  5050               	movf	_cmd_offset+1,w,c
  3093  002CFC  6E1D               	movwf	(??_display_status+1)& (0+255),c
  3094  002CFE  6A1E               	clrf	(??_display_status+2)& (0+255),c
  3095  002D00  6A1F               	clrf	(??_display_status+3)& (0+255),c
  3096  002D02  0E00               	movlw	0
  3097  002D04  241C               	addwf	??_display_status,w,c
  3098  002D06  6E09               	movwf	wr8s@addr,c
  3099  002D08  0E80               	movlw	128
  3100  002D0A  201D               	addwfc	??_display_status+1,w,c
  3101  002D0C  6E0A               	movwf	wr8s@addr+1,c
  3102  002D0E  0E10               	movlw	16
  3103  002D10  201E               	addwfc	??_display_status+2,w,c
  3104  002D12  6E0B               	movwf	wr8s@addr+2,c
  3105  002D14  0E00               	movlw	0
  3106  002D16  201F               	addwfc	??_display_status+3,w,c
  3107  002D18  6E0C               	movwf	wr8s@addr+3,c
  3108  002D1A  0E4D               	movlw	low STR_18
  3109  002D1C  6E0D               	movwf	wr8s@s,c
  3110  002D1E  0E0F               	movlw	high STR_18
  3111  002D20  6E0E               	movwf	wr8s@s+1,c
  3112  002D22  EC67  F033         	call	_wr8s	;wreg free
  3113  002D26  EC89  F035         	call	_cmd_incrementn
  3114  002D2A  0012               	return		;funcret
  3115  002D2C                     __end_of_display_status:
  3116                           	opt stack 0
  3117                           tblptru	equ	0xFF8
  3118                           tblptrh	equ	0xFF7
  3119                           tblptrl	equ	0xFF6
  3120                           tablat	equ	0xFF5
  3121                           intcon	equ	0xFF2
  3122                           postinc0	equ	0xFEE
  3123                           wreg	equ	0xFE8
  3124                           postdec1	equ	0xFE5
  3125                           plusw1	equ	0xFE3
  3126                           fsr1l	equ	0xFE1
  3127                           plusw2	equ	0xFDB
  3128                           status	equ	0xFD8
  3129                           
  3130 ;; *************** function _display_laptime *****************
  3131 ;; Defined at:
  3132 ;;		line 228 in file "display.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  current_int     2   24[COMRAM] int 
  3135 ;;  current_dec     2   26[COMRAM] int 
  3136 ;;  best_int        2   28[COMRAM] int 
  3137 ;;  best_dec        2   30[COMRAM] int 
  3138 ;;  last_int        2   32[COMRAM] int 
  3139 ;;  last_dec        2   34[COMRAM] int 
  3140 ;;  lap             2   36[COMRAM] int 
  3141 ;;  best_lap        2   38[COMRAM] int 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  time_differe    2   46[COMRAM] int 
  3144 ;;  time_differe    2   44[COMRAM] int 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3154 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3155 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3156 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3157 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3158 ;;Total ram usage:       24 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    7
  3161 ;; This function calls:
  3162 ;;		_cmd
  3163 ;;		_cmd_incrementn
  3164 ;;		_wr16
  3165 ;;		_wr8s
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text3
  3172  002D2C                     __ptext3:
  3173                           	opt stack 0
  3174  002D2C                     _display_laptime:
  3175                           	opt stack 23
  3176                           
  3177                           ;display.c: 238:     int time_difference_integer = last_int - best_int;
  3178                           
  3179                           ;incstack = 0
  3180  002D2C  C01D  F029         	movff	display_laptime@best_int,??_display_laptime
  3181  002D30  C01E  F02A         	movff	display_laptime@best_int+1,??_display_laptime+1
  3182  002D34  1E29               	comf	??_display_laptime,f,c
  3183  002D36  1E2A               	comf	??_display_laptime+1,f,c
  3184  002D38  4A29               	infsnz	??_display_laptime,f,c
  3185  002D3A  2A2A               	incf	??_display_laptime+1,f,c
  3186  002D3C  5021               	movf	display_laptime@last_int,w,c
  3187  002D3E  2429               	addwf	??_display_laptime,w,c
  3188  002D40  6E2F               	movwf	display_laptime@time_difference_integer,c
  3189  002D42  5022               	movf	display_laptime@last_int+1,w,c
  3190  002D44  202A               	addwfc	??_display_laptime+1,w,c
  3191  002D46  6E30               	movwf	display_laptime@time_difference_integer+1,c
  3192                           
  3193                           ;display.c: 239:     int time_difference_decimal = last_dec - best_dec;
  3194  002D48  C01F  F029         	movff	display_laptime@best_dec,??_display_laptime
  3195  002D4C  C020  F02A         	movff	display_laptime@best_dec+1,??_display_laptime+1
  3196  002D50  1E29               	comf	??_display_laptime,f,c
  3197  002D52  1E2A               	comf	??_display_laptime+1,f,c
  3198  002D54  4A29               	infsnz	??_display_laptime,f,c
  3199  002D56  2A2A               	incf	??_display_laptime+1,f,c
  3200  002D58  5023               	movf	display_laptime@last_dec,w,c
  3201  002D5A  2429               	addwf	??_display_laptime,w,c
  3202  002D5C  6E2D               	movwf	display_laptime@time_difference_decimal,c
  3203  002D5E  5024               	movf	display_laptime@last_dec+1,w,c
  3204  002D60  202A               	addwfc	??_display_laptime+1,w,c
  3205  002D62  6E2E               	movwf	display_laptime@time_difference_decimal+1,c
  3206                           
  3207                           ;display.c: 241:     if(time_difference_integer > 0) {
  3208  002D64  BE30               	btfsc	display_laptime@time_difference_integer+1,7,c
  3209  002D66  D0A0               	goto	l676
  3210  002D68  5030               	movf	display_laptime@time_difference_integer+1,w,c
  3211  002D6A  E103               	bnz	u1560
  3212  002D6C  042F               	decf	display_laptime@time_difference_integer,w,c
  3213  002D6E  A0D8               	btfss	status,0,c
  3214  002D70  D09B               	goto	l676
  3215  002D72                     u1560:
  3216                           
  3217                           ;display.c: 242:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  3218  002D72  0E00               	movlw	0
  3219  002D74  6E11               	movwf	cmd@command,c
  3220  002D76  0E00               	movlw	0
  3221  002D78  6E12               	movwf	cmd@command+1,c
  3222  002D7A  0EFF               	movlw	255
  3223  002D7C  6E13               	movwf	cmd@command+2,c
  3224  002D7E  0E04               	movlw	4
  3225  002D80  6E14               	movwf	cmd@command+3,c
  3226  002D82  EC70  F034         	call	_cmd	;wreg free
  3227                           
  3228                           ;display.c: 243:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 362);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 195);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "+"));
  3229  002D86  0E0C               	movlw	12
  3230  002D88  6E11               	movwf	cmd@command,c
  3231  002D8A  0EFF               	movlw	255
  3232  002D8C  6E12               	movwf	cmd@command+1,c
  3233  002D8E  0EFF               	movlw	255
  3234  002D90  6E13               	movwf	cmd@command+2,c
  3235  002D92  0EFF               	movlw	255
  3236  002D94  6E14               	movwf	cmd@command+3,c
  3237  002D96  EC70  F034         	call	_cmd	;wreg free
  3238  002D9A  504F               	movf	_cmd_offset,w,c
  3239  002D9C  6E29               	movwf	??_display_laptime& (0+255),c
  3240  002D9E  5050               	movf	_cmd_offset+1,w,c
  3241  002DA0  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3242  002DA2  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3243  002DA4  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3244  002DA6  0E00               	movlw	0
  3245  002DA8  2429               	addwf	??_display_laptime,w,c
  3246  002DAA  6E04               	movwf	wr16@addr,c
  3247  002DAC  0E80               	movlw	128
  3248  002DAE  202A               	addwfc	??_display_laptime+1,w,c
  3249  002DB0  6E05               	movwf	wr16@addr+1,c
  3250  002DB2  0E10               	movlw	16
  3251  002DB4  202B               	addwfc	??_display_laptime+2,w,c
  3252  002DB6  6E06               	movwf	wr16@addr+2,c
  3253  002DB8  0E00               	movlw	0
  3254  002DBA  202C               	addwfc	??_display_laptime+3,w,c
  3255  002DBC  6E07               	movwf	wr16@addr+3,c
  3256  002DBE  0E01               	movlw	1
  3257  002DC0  6E09               	movwf	wr16@value+1,c
  3258  002DC2  0E6A               	movlw	106
  3259  002DC4  6E08               	movwf	wr16@value,c
  3260  002DC6  EC48  F035         	call	_wr16	;wreg free
  3261  002DCA  0E02               	movlw	2
  3262  002DCC  EC89  F035         	call	_cmd_incrementn
  3263  002DD0  504F               	movf	_cmd_offset,w,c
  3264  002DD2  6E29               	movwf	??_display_laptime& (0+255),c
  3265  002DD4  5050               	movf	_cmd_offset+1,w,c
  3266  002DD6  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3267  002DD8  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3268  002DDA  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3269  002DDC  0E00               	movlw	0
  3270  002DDE  2429               	addwf	??_display_laptime,w,c
  3271  002DE0  6E04               	movwf	wr16@addr,c
  3272  002DE2  0E80               	movlw	128
  3273  002DE4  202A               	addwfc	??_display_laptime+1,w,c
  3274  002DE6  6E05               	movwf	wr16@addr+1,c
  3275  002DE8  0E10               	movlw	16
  3276  002DEA  202B               	addwfc	??_display_laptime+2,w,c
  3277  002DEC  6E06               	movwf	wr16@addr+2,c
  3278  002DEE  0E00               	movlw	0
  3279  002DF0  202C               	addwfc	??_display_laptime+3,w,c
  3280  002DF2  6E07               	movwf	wr16@addr+3,c
  3281  002DF4  0E00               	movlw	0
  3282  002DF6  6E09               	movwf	wr16@value+1,c
  3283  002DF8  0EC3               	movlw	195
  3284  002DFA  6E08               	movwf	wr16@value,c
  3285  002DFC  EC48  F035         	call	_wr16	;wreg free
  3286  002E00  0E02               	movlw	2
  3287  002E02  EC89  F035         	call	_cmd_incrementn
  3288  002E06  504F               	movf	_cmd_offset,w,c
  3289  002E08  6E29               	movwf	??_display_laptime& (0+255),c
  3290  002E0A  5050               	movf	_cmd_offset+1,w,c
  3291  002E0C  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3292  002E0E  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3293  002E10  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3294  002E12  0E00               	movlw	0
  3295  002E14  2429               	addwf	??_display_laptime,w,c
  3296  002E16  6E04               	movwf	wr16@addr,c
  3297  002E18  0E80               	movlw	128
  3298  002E1A  202A               	addwfc	??_display_laptime+1,w,c
  3299  002E1C  6E05               	movwf	wr16@addr+1,c
  3300  002E1E  0E10               	movlw	16
  3301  002E20  202B               	addwfc	??_display_laptime+2,w,c
  3302  002E22  6E06               	movwf	wr16@addr+2,c
  3303  002E24  0E00               	movlw	0
  3304  002E26  202C               	addwfc	??_display_laptime+3,w,c
  3305  002E28  6E07               	movwf	wr16@addr+3,c
  3306  002E2A  0E00               	movlw	0
  3307  002E2C  6E09               	movwf	wr16@value+1,c
  3308  002E2E  0E1E               	movlw	30
  3309  002E30  6E08               	movwf	wr16@value,c
  3310  002E32  EC48  F035         	call	_wr16	;wreg free
  3311  002E36  0E02               	movlw	2
  3312  002E38  EC89  F035         	call	_cmd_incrementn
  3313  002E3C  504F               	movf	_cmd_offset,w,c
  3314  002E3E  6E29               	movwf	??_display_laptime& (0+255),c
  3315  002E40  5050               	movf	_cmd_offset+1,w,c
  3316  002E42  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3317  002E44  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3318  002E46  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3319  002E48  0E00               	movlw	0
  3320  002E4A  2429               	addwf	??_display_laptime,w,c
  3321  002E4C  6E04               	movwf	wr16@addr,c
  3322  002E4E  0E80               	movlw	128
  3323  002E50  202A               	addwfc	??_display_laptime+1,w,c
  3324  002E52  6E05               	movwf	wr16@addr+1,c
  3325  002E54  0E10               	movlw	16
  3326  002E56  202B               	addwfc	??_display_laptime+2,w,c
  3327  002E58  6E06               	movwf	wr16@addr+2,c
  3328  002E5A  0E00               	movlw	0
  3329  002E5C  202C               	addwfc	??_display_laptime+3,w,c
  3330  002E5E  6E07               	movwf	wr16@addr+3,c
  3331  002E60  0E00               	movlw	0
  3332  002E62  6E09               	movwf	wr16@value+1,c
  3333  002E64  0E00               	movlw	0
  3334  002E66  6E08               	movwf	wr16@value,c
  3335  002E68  EC48  F035         	call	_wr16	;wreg free
  3336  002E6C  0E02               	movlw	2
  3337  002E6E  EC89  F035         	call	_cmd_incrementn
  3338  002E72  504F               	movf	_cmd_offset,w,c
  3339  002E74  6E29               	movwf	??_display_laptime& (0+255),c
  3340  002E76  5050               	movf	_cmd_offset+1,w,c
  3341  002E78  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3342  002E7A  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3343  002E7C  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3344  002E7E  0E00               	movlw	0
  3345  002E80  2429               	addwf	??_display_laptime,w,c
  3346  002E82  6E09               	movwf	wr8s@addr,c
  3347  002E84  0E80               	movlw	128
  3348  002E86  202A               	addwfc	??_display_laptime+1,w,c
  3349  002E88  6E0A               	movwf	wr8s@addr+1,c
  3350  002E8A  0E10               	movlw	16
  3351  002E8C  202B               	addwfc	??_display_laptime+2,w,c
  3352  002E8E  6E0B               	movwf	wr8s@addr+2,c
  3353  002E90  0E00               	movlw	0
  3354  002E92  202C               	addwfc	??_display_laptime+3,w,c
  3355  002E94  6E0C               	movwf	wr8s@addr+3,c
  3356  002E96  0E93               	movlw	low STR_19
  3357  002E98  6E0D               	movwf	wr8s@s,c
  3358  002E9A  0E0F               	movlw	high STR_19
  3359  002E9C  6E0E               	movwf	wr8s@s+1,c
  3360  002E9E  EC67  F033         	call	_wr8s	;wreg free
  3361  002EA2  EC89  F035         	call	_cmd_incrementn
  3362                           
  3363                           ;display.c: 244:     } else {
  3364  002EA6  D09A               	goto	l677
  3365  002EA8                     l676:
  3366                           
  3367                           ;display.c: 245:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  3368  002EA8  0E00               	movlw	0
  3369  002EAA  6E11               	movwf	cmd@command,c
  3370  002EAC  0EFF               	movlw	255
  3371  002EAE  6E12               	movwf	cmd@command+1,c
  3372  002EB0  0E00               	movlw	0
  3373  002EB2  6E13               	movwf	cmd@command+2,c
  3374  002EB4  0E04               	movlw	4
  3375  002EB6  6E14               	movwf	cmd@command+3,c
  3376  002EB8  EC70  F034         	call	_cmd	;wreg free
  3377                           
  3378                           ;display.c: 246:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 362);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 195);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "-"));
  3379  002EBC  0E0C               	movlw	12
  3380  002EBE  6E11               	movwf	cmd@command,c
  3381  002EC0  0EFF               	movlw	255
  3382  002EC2  6E12               	movwf	cmd@command+1,c
  3383  002EC4  0EFF               	movlw	255
  3384  002EC6  6E13               	movwf	cmd@command+2,c
  3385  002EC8  0EFF               	movlw	255
  3386  002ECA  6E14               	movwf	cmd@command+3,c
  3387  002ECC  EC70  F034         	call	_cmd	;wreg free
  3388  002ED0  504F               	movf	_cmd_offset,w,c
  3389  002ED2  6E29               	movwf	??_display_laptime& (0+255),c
  3390  002ED4  5050               	movf	_cmd_offset+1,w,c
  3391  002ED6  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3392  002ED8  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3393  002EDA  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3394  002EDC  0E00               	movlw	0
  3395  002EDE  2429               	addwf	??_display_laptime,w,c
  3396  002EE0  6E04               	movwf	wr16@addr,c
  3397  002EE2  0E80               	movlw	128
  3398  002EE4  202A               	addwfc	??_display_laptime+1,w,c
  3399  002EE6  6E05               	movwf	wr16@addr+1,c
  3400  002EE8  0E10               	movlw	16
  3401  002EEA  202B               	addwfc	??_display_laptime+2,w,c
  3402  002EEC  6E06               	movwf	wr16@addr+2,c
  3403  002EEE  0E00               	movlw	0
  3404  002EF0  202C               	addwfc	??_display_laptime+3,w,c
  3405  002EF2  6E07               	movwf	wr16@addr+3,c
  3406  002EF4  0E01               	movlw	1
  3407  002EF6  6E09               	movwf	wr16@value+1,c
  3408  002EF8  0E6A               	movlw	106
  3409  002EFA  6E08               	movwf	wr16@value,c
  3410  002EFC  EC48  F035         	call	_wr16	;wreg free
  3411  002F00  0E02               	movlw	2
  3412  002F02  EC89  F035         	call	_cmd_incrementn
  3413  002F06  504F               	movf	_cmd_offset,w,c
  3414  002F08  6E29               	movwf	??_display_laptime& (0+255),c
  3415  002F0A  5050               	movf	_cmd_offset+1,w,c
  3416  002F0C  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3417  002F0E  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3418  002F10  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3419  002F12  0E00               	movlw	0
  3420  002F14  2429               	addwf	??_display_laptime,w,c
  3421  002F16  6E04               	movwf	wr16@addr,c
  3422  002F18  0E80               	movlw	128
  3423  002F1A  202A               	addwfc	??_display_laptime+1,w,c
  3424  002F1C  6E05               	movwf	wr16@addr+1,c
  3425  002F1E  0E10               	movlw	16
  3426  002F20  202B               	addwfc	??_display_laptime+2,w,c
  3427  002F22  6E06               	movwf	wr16@addr+2,c
  3428  002F24  0E00               	movlw	0
  3429  002F26  202C               	addwfc	??_display_laptime+3,w,c
  3430  002F28  6E07               	movwf	wr16@addr+3,c
  3431  002F2A  0E00               	movlw	0
  3432  002F2C  6E09               	movwf	wr16@value+1,c
  3433  002F2E  0EC3               	movlw	195
  3434  002F30  6E08               	movwf	wr16@value,c
  3435  002F32  EC48  F035         	call	_wr16	;wreg free
  3436  002F36  0E02               	movlw	2
  3437  002F38  EC89  F035         	call	_cmd_incrementn
  3438  002F3C  504F               	movf	_cmd_offset,w,c
  3439  002F3E  6E29               	movwf	??_display_laptime& (0+255),c
  3440  002F40  5050               	movf	_cmd_offset+1,w,c
  3441  002F42  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3442  002F44  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3443  002F46  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3444  002F48  0E00               	movlw	0
  3445  002F4A  2429               	addwf	??_display_laptime,w,c
  3446  002F4C  6E04               	movwf	wr16@addr,c
  3447  002F4E  0E80               	movlw	128
  3448  002F50  202A               	addwfc	??_display_laptime+1,w,c
  3449  002F52  6E05               	movwf	wr16@addr+1,c
  3450  002F54  0E10               	movlw	16
  3451  002F56  202B               	addwfc	??_display_laptime+2,w,c
  3452  002F58  6E06               	movwf	wr16@addr+2,c
  3453  002F5A  0E00               	movlw	0
  3454  002F5C  202C               	addwfc	??_display_laptime+3,w,c
  3455  002F5E  6E07               	movwf	wr16@addr+3,c
  3456  002F60  0E00               	movlw	0
  3457  002F62  6E09               	movwf	wr16@value+1,c
  3458  002F64  0E1E               	movlw	30
  3459  002F66  6E08               	movwf	wr16@value,c
  3460  002F68  EC48  F035         	call	_wr16	;wreg free
  3461  002F6C  0E02               	movlw	2
  3462  002F6E  EC89  F035         	call	_cmd_incrementn
  3463  002F72  504F               	movf	_cmd_offset,w,c
  3464  002F74  6E29               	movwf	??_display_laptime& (0+255),c
  3465  002F76  5050               	movf	_cmd_offset+1,w,c
  3466  002F78  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3467  002F7A  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3468  002F7C  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3469  002F7E  0E00               	movlw	0
  3470  002F80  2429               	addwf	??_display_laptime,w,c
  3471  002F82  6E04               	movwf	wr16@addr,c
  3472  002F84  0E80               	movlw	128
  3473  002F86  202A               	addwfc	??_display_laptime+1,w,c
  3474  002F88  6E05               	movwf	wr16@addr+1,c
  3475  002F8A  0E10               	movlw	16
  3476  002F8C  202B               	addwfc	??_display_laptime+2,w,c
  3477  002F8E  6E06               	movwf	wr16@addr+2,c
  3478  002F90  0E00               	movlw	0
  3479  002F92  202C               	addwfc	??_display_laptime+3,w,c
  3480  002F94  6E07               	movwf	wr16@addr+3,c
  3481  002F96  0E00               	movlw	0
  3482  002F98  6E09               	movwf	wr16@value+1,c
  3483  002F9A  0E00               	movlw	0
  3484  002F9C  6E08               	movwf	wr16@value,c
  3485  002F9E  EC48  F035         	call	_wr16	;wreg free
  3486  002FA2  0E02               	movlw	2
  3487  002FA4  EC89  F035         	call	_cmd_incrementn
  3488  002FA8  504F               	movf	_cmd_offset,w,c
  3489  002FAA  6E29               	movwf	??_display_laptime& (0+255),c
  3490  002FAC  5050               	movf	_cmd_offset+1,w,c
  3491  002FAE  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3492  002FB0  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3493  002FB2  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3494  002FB4  0E00               	movlw	0
  3495  002FB6  2429               	addwf	??_display_laptime,w,c
  3496  002FB8  6E09               	movwf	wr8s@addr,c
  3497  002FBA  0E80               	movlw	128
  3498  002FBC  202A               	addwfc	??_display_laptime+1,w,c
  3499  002FBE  6E0A               	movwf	wr8s@addr+1,c
  3500  002FC0  0E10               	movlw	16
  3501  002FC2  202B               	addwfc	??_display_laptime+2,w,c
  3502  002FC4  6E0B               	movwf	wr8s@addr+2,c
  3503  002FC6  0E00               	movlw	0
  3504  002FC8  202C               	addwfc	??_display_laptime+3,w,c
  3505  002FCA  6E0C               	movwf	wr8s@addr+3,c
  3506  002FCC  0E95               	movlw	low STR_20
  3507  002FCE  6E0D               	movwf	wr8s@s,c
  3508  002FD0  0E0F               	movlw	high STR_20
  3509  002FD2  6E0E               	movwf	wr8s@s+1,c
  3510  002FD4  EC67  F033         	call	_wr8s	;wreg free
  3511  002FD8  EC89  F035         	call	_cmd_incrementn
  3512  002FDC                     l677:
  3513                           
  3514                           ;display.c: 248:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 415);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 195);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081
      +                          344UL +cmd_offset, "."));
  3515  002FDC  0E0C               	movlw	12
  3516  002FDE  6E11               	movwf	cmd@command,c
  3517  002FE0  0EFF               	movlw	255
  3518  002FE2  6E12               	movwf	cmd@command+1,c
  3519  002FE4  0EFF               	movlw	255
  3520  002FE6  6E13               	movwf	cmd@command+2,c
  3521  002FE8  0EFF               	movlw	255
  3522  002FEA  6E14               	movwf	cmd@command+3,c
  3523  002FEC  EC70  F034         	call	_cmd	;wreg free
  3524  002FF0  504F               	movf	_cmd_offset,w,c
  3525  002FF2  6E29               	movwf	??_display_laptime& (0+255),c
  3526  002FF4  5050               	movf	_cmd_offset+1,w,c
  3527  002FF6  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3528  002FF8  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3529  002FFA  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3530  002FFC  0E00               	movlw	0
  3531  002FFE  2429               	addwf	??_display_laptime,w,c
  3532  003000  6E04               	movwf	wr16@addr,c
  3533  003002  0E80               	movlw	128
  3534  003004  202A               	addwfc	??_display_laptime+1,w,c
  3535  003006  6E05               	movwf	wr16@addr+1,c
  3536  003008  0E10               	movlw	16
  3537  00300A  202B               	addwfc	??_display_laptime+2,w,c
  3538  00300C  6E06               	movwf	wr16@addr+2,c
  3539  00300E  0E00               	movlw	0
  3540  003010  202C               	addwfc	??_display_laptime+3,w,c
  3541  003012  6E07               	movwf	wr16@addr+3,c
  3542  003014  0E01               	movlw	1
  3543  003016  6E09               	movwf	wr16@value+1,c
  3544  003018  0E9F               	movlw	159
  3545  00301A  6E08               	movwf	wr16@value,c
  3546  00301C  EC48  F035         	call	_wr16	;wreg free
  3547  003020  0E02               	movlw	2
  3548  003022  EC89  F035         	call	_cmd_incrementn
  3549  003026  504F               	movf	_cmd_offset,w,c
  3550  003028  6E29               	movwf	??_display_laptime& (0+255),c
  3551  00302A  5050               	movf	_cmd_offset+1,w,c
  3552  00302C  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3553  00302E  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3554  003030  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3555  003032  0E00               	movlw	0
  3556  003034  2429               	addwf	??_display_laptime,w,c
  3557  003036  6E04               	movwf	wr16@addr,c
  3558  003038  0E80               	movlw	128
  3559  00303A  202A               	addwfc	??_display_laptime+1,w,c
  3560  00303C  6E05               	movwf	wr16@addr+1,c
  3561  00303E  0E10               	movlw	16
  3562  003040  202B               	addwfc	??_display_laptime+2,w,c
  3563  003042  6E06               	movwf	wr16@addr+2,c
  3564  003044  0E00               	movlw	0
  3565  003046  202C               	addwfc	??_display_laptime+3,w,c
  3566  003048  6E07               	movwf	wr16@addr+3,c
  3567  00304A  0E00               	movlw	0
  3568  00304C  6E09               	movwf	wr16@value+1,c
  3569  00304E  0EC3               	movlw	195
  3570  003050  6E08               	movwf	wr16@value,c
  3571  003052  EC48  F035         	call	_wr16	;wreg free
  3572  003056  0E02               	movlw	2
  3573  003058  EC89  F035         	call	_cmd_incrementn
  3574  00305C  504F               	movf	_cmd_offset,w,c
  3575  00305E  6E29               	movwf	??_display_laptime& (0+255),c
  3576  003060  5050               	movf	_cmd_offset+1,w,c
  3577  003062  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3578  003064  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3579  003066  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3580  003068  0E00               	movlw	0
  3581  00306A  2429               	addwf	??_display_laptime,w,c
  3582  00306C  6E04               	movwf	wr16@addr,c
  3583  00306E  0E80               	movlw	128
  3584  003070  202A               	addwfc	??_display_laptime+1,w,c
  3585  003072  6E05               	movwf	wr16@addr+1,c
  3586  003074  0E10               	movlw	16
  3587  003076  202B               	addwfc	??_display_laptime+2,w,c
  3588  003078  6E06               	movwf	wr16@addr+2,c
  3589  00307A  0E00               	movlw	0
  3590  00307C  202C               	addwfc	??_display_laptime+3,w,c
  3591  00307E  6E07               	movwf	wr16@addr+3,c
  3592  003080  0E00               	movlw	0
  3593  003082  6E09               	movwf	wr16@value+1,c
  3594  003084  0E1E               	movlw	30
  3595  003086  6E08               	movwf	wr16@value,c
  3596  003088  EC48  F035         	call	_wr16	;wreg free
  3597  00308C  0E02               	movlw	2
  3598  00308E  EC89  F035         	call	_cmd_incrementn
  3599  003092  504F               	movf	_cmd_offset,w,c
  3600  003094  6E29               	movwf	??_display_laptime& (0+255),c
  3601  003096  5050               	movf	_cmd_offset+1,w,c
  3602  003098  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3603  00309A  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3604  00309C  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3605  00309E  0E00               	movlw	0
  3606  0030A0  2429               	addwf	??_display_laptime,w,c
  3607  0030A2  6E04               	movwf	wr16@addr,c
  3608  0030A4  0E80               	movlw	128
  3609  0030A6  202A               	addwfc	??_display_laptime+1,w,c
  3610  0030A8  6E05               	movwf	wr16@addr+1,c
  3611  0030AA  0E10               	movlw	16
  3612  0030AC  202B               	addwfc	??_display_laptime+2,w,c
  3613  0030AE  6E06               	movwf	wr16@addr+2,c
  3614  0030B0  0E00               	movlw	0
  3615  0030B2  202C               	addwfc	??_display_laptime+3,w,c
  3616  0030B4  6E07               	movwf	wr16@addr+3,c
  3617  0030B6  0E00               	movlw	0
  3618  0030B8  6E09               	movwf	wr16@value+1,c
  3619  0030BA  0E00               	movlw	0
  3620  0030BC  6E08               	movwf	wr16@value,c
  3621  0030BE  EC48  F035         	call	_wr16	;wreg free
  3622  0030C2  0E02               	movlw	2
  3623  0030C4  EC89  F035         	call	_cmd_incrementn
  3624  0030C8  504F               	movf	_cmd_offset,w,c
  3625  0030CA  6E29               	movwf	??_display_laptime& (0+255),c
  3626  0030CC  5050               	movf	_cmd_offset+1,w,c
  3627  0030CE  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3628  0030D0  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3629  0030D2  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3630  0030D4  0E00               	movlw	0
  3631  0030D6  2429               	addwf	??_display_laptime,w,c
  3632  0030D8  6E09               	movwf	wr8s@addr,c
  3633  0030DA  0E80               	movlw	128
  3634  0030DC  202A               	addwfc	??_display_laptime+1,w,c
  3635  0030DE  6E0A               	movwf	wr8s@addr+1,c
  3636  0030E0  0E10               	movlw	16
  3637  0030E2  202B               	addwfc	??_display_laptime+2,w,c
  3638  0030E4  6E0B               	movwf	wr8s@addr+2,c
  3639  0030E6  0E00               	movlw	0
  3640  0030E8  202C               	addwfc	??_display_laptime+3,w,c
  3641  0030EA  6E0C               	movwf	wr8s@addr+3,c
  3642  0030EC  0E97               	movlw	low STR_21
  3643  0030EE  6E0D               	movwf	wr8s@s,c
  3644  0030F0  0E0F               	movlw	high STR_21
  3645  0030F2  6E0E               	movwf	wr8s@s+1,c
  3646  0030F4  EC67  F033         	call	_wr8s	;wreg free
  3647  0030F8  EC89  F035         	call	_cmd_incrementn
  3648                           
  3649                           ;display.c: 249:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 410);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 195);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 2048UL);cmd_incrementn(2);cmd(time_difference
      +                          _integer);
  3650  0030FC  0E2E               	movlw	46
  3651  0030FE  6E11               	movwf	cmd@command,c
  3652  003100  0EFF               	movlw	255
  3653  003102  6E12               	movwf	cmd@command+1,c
  3654  003104  0EFF               	movlw	255
  3655  003106  6E13               	movwf	cmd@command+2,c
  3656  003108  0EFF               	movlw	255
  3657  00310A  6E14               	movwf	cmd@command+3,c
  3658  00310C  EC70  F034         	call	_cmd	;wreg free
  3659  003110  504F               	movf	_cmd_offset,w,c
  3660  003112  6E29               	movwf	??_display_laptime& (0+255),c
  3661  003114  5050               	movf	_cmd_offset+1,w,c
  3662  003116  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3663  003118  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3664  00311A  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3665  00311C  0E00               	movlw	0
  3666  00311E  2429               	addwf	??_display_laptime,w,c
  3667  003120  6E04               	movwf	wr16@addr,c
  3668  003122  0E80               	movlw	128
  3669  003124  202A               	addwfc	??_display_laptime+1,w,c
  3670  003126  6E05               	movwf	wr16@addr+1,c
  3671  003128  0E10               	movlw	16
  3672  00312A  202B               	addwfc	??_display_laptime+2,w,c
  3673  00312C  6E06               	movwf	wr16@addr+2,c
  3674  00312E  0E00               	movlw	0
  3675  003130  202C               	addwfc	??_display_laptime+3,w,c
  3676  003132  6E07               	movwf	wr16@addr+3,c
  3677  003134  0E01               	movlw	1
  3678  003136  6E09               	movwf	wr16@value+1,c
  3679  003138  0E9A               	movlw	154
  3680  00313A  6E08               	movwf	wr16@value,c
  3681  00313C  EC48  F035         	call	_wr16	;wreg free
  3682  003140  0E02               	movlw	2
  3683  003142  EC89  F035         	call	_cmd_incrementn
  3684  003146  504F               	movf	_cmd_offset,w,c
  3685  003148  6E29               	movwf	??_display_laptime& (0+255),c
  3686  00314A  5050               	movf	_cmd_offset+1,w,c
  3687  00314C  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3688  00314E  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3689  003150  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3690  003152  0E00               	movlw	0
  3691  003154  2429               	addwf	??_display_laptime,w,c
  3692  003156  6E04               	movwf	wr16@addr,c
  3693  003158  0E80               	movlw	128
  3694  00315A  202A               	addwfc	??_display_laptime+1,w,c
  3695  00315C  6E05               	movwf	wr16@addr+1,c
  3696  00315E  0E10               	movlw	16
  3697  003160  202B               	addwfc	??_display_laptime+2,w,c
  3698  003162  6E06               	movwf	wr16@addr+2,c
  3699  003164  0E00               	movlw	0
  3700  003166  202C               	addwfc	??_display_laptime+3,w,c
  3701  003168  6E07               	movwf	wr16@addr+3,c
  3702  00316A  0E00               	movlw	0
  3703  00316C  6E09               	movwf	wr16@value+1,c
  3704  00316E  0EC3               	movlw	195
  3705  003170  6E08               	movwf	wr16@value,c
  3706  003172  EC48  F035         	call	_wr16	;wreg free
  3707  003176  0E02               	movlw	2
  3708  003178  EC89  F035         	call	_cmd_incrementn
  3709  00317C  504F               	movf	_cmd_offset,w,c
  3710  00317E  6E29               	movwf	??_display_laptime& (0+255),c
  3711  003180  5050               	movf	_cmd_offset+1,w,c
  3712  003182  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3713  003184  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3714  003186  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3715  003188  0E00               	movlw	0
  3716  00318A  2429               	addwf	??_display_laptime,w,c
  3717  00318C  6E04               	movwf	wr16@addr,c
  3718  00318E  0E80               	movlw	128
  3719  003190  202A               	addwfc	??_display_laptime+1,w,c
  3720  003192  6E05               	movwf	wr16@addr+1,c
  3721  003194  0E10               	movlw	16
  3722  003196  202B               	addwfc	??_display_laptime+2,w,c
  3723  003198  6E06               	movwf	wr16@addr+2,c
  3724  00319A  0E00               	movlw	0
  3725  00319C  202C               	addwfc	??_display_laptime+3,w,c
  3726  00319E  6E07               	movwf	wr16@addr+3,c
  3727  0031A0  0E00               	movlw	0
  3728  0031A2  6E09               	movwf	wr16@value+1,c
  3729  0031A4  0E1E               	movlw	30
  3730  0031A6  6E08               	movwf	wr16@value,c
  3731  0031A8  EC48  F035         	call	_wr16	;wreg free
  3732  0031AC  0E02               	movlw	2
  3733  0031AE  EC89  F035         	call	_cmd_incrementn
  3734  0031B2  504F               	movf	_cmd_offset,w,c
  3735  0031B4  6E29               	movwf	??_display_laptime& (0+255),c
  3736  0031B6  5050               	movf	_cmd_offset+1,w,c
  3737  0031B8  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3738  0031BA  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3739  0031BC  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3740  0031BE  0E00               	movlw	0
  3741  0031C0  2429               	addwf	??_display_laptime,w,c
  3742  0031C2  6E04               	movwf	wr16@addr,c
  3743  0031C4  0E80               	movlw	128
  3744  0031C6  202A               	addwfc	??_display_laptime+1,w,c
  3745  0031C8  6E05               	movwf	wr16@addr+1,c
  3746  0031CA  0E10               	movlw	16
  3747  0031CC  202B               	addwfc	??_display_laptime+2,w,c
  3748  0031CE  6E06               	movwf	wr16@addr+2,c
  3749  0031D0  0E00               	movlw	0
  3750  0031D2  202C               	addwfc	??_display_laptime+3,w,c
  3751  0031D4  6E07               	movwf	wr16@addr+3,c
  3752  0031D6  0E08               	movlw	8
  3753  0031D8  6E09               	movwf	wr16@value+1,c
  3754  0031DA  0E00               	movlw	0
  3755  0031DC  6E08               	movwf	wr16@value,c
  3756  0031DE  EC48  F035         	call	_wr16	;wreg free
  3757  0031E2  0E02               	movlw	2
  3758  0031E4  EC89  F035         	call	_cmd_incrementn
  3759  0031E8  C02F  F011         	movff	display_laptime@time_difference_integer,cmd@command
  3760  0031EC  C030  F012         	movff	display_laptime@time_difference_integer+1,cmd@command+1
  3761  0031F0  0E00               	movlw	0
  3762  0031F2  BE12               	btfsc	cmd@command+1,7,c
  3763  0031F4  0EFF               	movlw	-1
  3764  0031F6  6E13               	movwf	cmd@command+2,c
  3765  0031F8  6E14               	movwf	cmd@command+3,c
  3766  0031FA  EC70  F034         	call	_cmd	;wreg free
  3767                           
  3768                           ;display.c: 250:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 425);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 195);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd(time_difference_deci
      +                          mal);
  3769  0031FE  0E2E               	movlw	46
  3770  003200  6E11               	movwf	cmd@command,c
  3771  003202  0EFF               	movlw	255
  3772  003204  6E12               	movwf	cmd@command+1,c
  3773  003206  0EFF               	movlw	255
  3774  003208  6E13               	movwf	cmd@command+2,c
  3775  00320A  0EFF               	movlw	255
  3776  00320C  6E14               	movwf	cmd@command+3,c
  3777  00320E  EC70  F034         	call	_cmd	;wreg free
  3778  003212  504F               	movf	_cmd_offset,w,c
  3779  003214  6E29               	movwf	??_display_laptime& (0+255),c
  3780  003216  5050               	movf	_cmd_offset+1,w,c
  3781  003218  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3782  00321A  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3783  00321C  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3784  00321E  0E00               	movlw	0
  3785  003220  2429               	addwf	??_display_laptime,w,c
  3786  003222  6E04               	movwf	wr16@addr,c
  3787  003224  0E80               	movlw	128
  3788  003226  202A               	addwfc	??_display_laptime+1,w,c
  3789  003228  6E05               	movwf	wr16@addr+1,c
  3790  00322A  0E10               	movlw	16
  3791  00322C  202B               	addwfc	??_display_laptime+2,w,c
  3792  00322E  6E06               	movwf	wr16@addr+2,c
  3793  003230  0E00               	movlw	0
  3794  003232  202C               	addwfc	??_display_laptime+3,w,c
  3795  003234  6E07               	movwf	wr16@addr+3,c
  3796  003236  0E01               	movlw	1
  3797  003238  6E09               	movwf	wr16@value+1,c
  3798  00323A  0EA9               	movlw	169
  3799  00323C  6E08               	movwf	wr16@value,c
  3800  00323E  EC48  F035         	call	_wr16	;wreg free
  3801  003242  0E02               	movlw	2
  3802  003244  EC89  F035         	call	_cmd_incrementn
  3803  003248  504F               	movf	_cmd_offset,w,c
  3804  00324A  6E29               	movwf	??_display_laptime& (0+255),c
  3805  00324C  5050               	movf	_cmd_offset+1,w,c
  3806  00324E  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3807  003250  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3808  003252  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3809  003254  0E00               	movlw	0
  3810  003256  2429               	addwf	??_display_laptime,w,c
  3811  003258  6E04               	movwf	wr16@addr,c
  3812  00325A  0E80               	movlw	128
  3813  00325C  202A               	addwfc	??_display_laptime+1,w,c
  3814  00325E  6E05               	movwf	wr16@addr+1,c
  3815  003260  0E10               	movlw	16
  3816  003262  202B               	addwfc	??_display_laptime+2,w,c
  3817  003264  6E06               	movwf	wr16@addr+2,c
  3818  003266  0E00               	movlw	0
  3819  003268  202C               	addwfc	??_display_laptime+3,w,c
  3820  00326A  6E07               	movwf	wr16@addr+3,c
  3821  00326C  0E00               	movlw	0
  3822  00326E  6E09               	movwf	wr16@value+1,c
  3823  003270  0EC3               	movlw	195
  3824  003272  6E08               	movwf	wr16@value,c
  3825  003274  EC48  F035         	call	_wr16	;wreg free
  3826  003278  0E02               	movlw	2
  3827  00327A  EC89  F035         	call	_cmd_incrementn
  3828  00327E  504F               	movf	_cmd_offset,w,c
  3829  003280  6E29               	movwf	??_display_laptime& (0+255),c
  3830  003282  5050               	movf	_cmd_offset+1,w,c
  3831  003284  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3832  003286  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3833  003288  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3834  00328A  0E00               	movlw	0
  3835  00328C  2429               	addwf	??_display_laptime,w,c
  3836  00328E  6E04               	movwf	wr16@addr,c
  3837  003290  0E80               	movlw	128
  3838  003292  202A               	addwfc	??_display_laptime+1,w,c
  3839  003294  6E05               	movwf	wr16@addr+1,c
  3840  003296  0E10               	movlw	16
  3841  003298  202B               	addwfc	??_display_laptime+2,w,c
  3842  00329A  6E06               	movwf	wr16@addr+2,c
  3843  00329C  0E00               	movlw	0
  3844  00329E  202C               	addwfc	??_display_laptime+3,w,c
  3845  0032A0  6E07               	movwf	wr16@addr+3,c
  3846  0032A2  0E00               	movlw	0
  3847  0032A4  6E09               	movwf	wr16@value+1,c
  3848  0032A6  0E1E               	movlw	30
  3849  0032A8  6E08               	movwf	wr16@value,c
  3850  0032AA  EC48  F035         	call	_wr16	;wreg free
  3851  0032AE  0E02               	movlw	2
  3852  0032B0  EC89  F035         	call	_cmd_incrementn
  3853  0032B4  504F               	movf	_cmd_offset,w,c
  3854  0032B6  6E29               	movwf	??_display_laptime& (0+255),c
  3855  0032B8  5050               	movf	_cmd_offset+1,w,c
  3856  0032BA  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3857  0032BC  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3858  0032BE  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3859  0032C0  0E00               	movlw	0
  3860  0032C2  2429               	addwf	??_display_laptime,w,c
  3861  0032C4  6E04               	movwf	wr16@addr,c
  3862  0032C6  0E80               	movlw	128
  3863  0032C8  202A               	addwfc	??_display_laptime+1,w,c
  3864  0032CA  6E05               	movwf	wr16@addr+1,c
  3865  0032CC  0E10               	movlw	16
  3866  0032CE  202B               	addwfc	??_display_laptime+2,w,c
  3867  0032D0  6E06               	movwf	wr16@addr+2,c
  3868  0032D2  0E00               	movlw	0
  3869  0032D4  202C               	addwfc	??_display_laptime+3,w,c
  3870  0032D6  6E07               	movwf	wr16@addr+3,c
  3871  0032D8  0E00               	movlw	0
  3872  0032DA  6E09               	movwf	wr16@value+1,c
  3873  0032DC  0E00               	movlw	0
  3874  0032DE  6E08               	movwf	wr16@value,c
  3875  0032E0  EC48  F035         	call	_wr16	;wreg free
  3876  0032E4  0E02               	movlw	2
  3877  0032E6  EC89  F035         	call	_cmd_incrementn
  3878  0032EA  C02D  F011         	movff	display_laptime@time_difference_decimal,cmd@command
  3879  0032EE  C02E  F012         	movff	display_laptime@time_difference_decimal+1,cmd@command+1
  3880  0032F2  0E00               	movlw	0
  3881  0032F4  BE12               	btfsc	cmd@command+1,7,c
  3882  0032F6  0EFF               	movlw	-1
  3883  0032F8  6E13               	movwf	cmd@command+2,c
  3884  0032FA  6E14               	movwf	cmd@command+3,c
  3885  0032FC  EC70  F034         	call	_cmd	;wreg free
  3886  003300  0012               	return		;funcret
  3887  003302                     __end_of_display_laptime:
  3888                           	opt stack 0
  3889                           tblptru	equ	0xFF8
  3890                           tblptrh	equ	0xFF7
  3891                           tblptrl	equ	0xFF6
  3892                           tablat	equ	0xFF5
  3893                           intcon	equ	0xFF2
  3894                           postinc0	equ	0xFEE
  3895                           wreg	equ	0xFE8
  3896                           postdec1	equ	0xFE5
  3897                           plusw1	equ	0xFE3
  3898                           fsr1l	equ	0xFE1
  3899                           plusw2	equ	0xFDB
  3900                           status	equ	0xFD8
  3901                           
  3902 ;; *************** function _display_gasPres *****************
  3903 ;; Defined at:
  3904 ;;		line 327 in file "display.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  gasPres         2   24[COMRAM] int 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;		None
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      void 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3920 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3921 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3922 ;;Total ram usage:        6 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; Hardware stack levels required when called:    7
  3925 ;; This function calls:
  3926 ;;		___awdiv
  3927 ;;		___awmod
  3928 ;;		_cmd
  3929 ;;		_cmd_incrementn
  3930 ;;		_wr16
  3931 ;;		_wr8s
  3932 ;; This function is called by:
  3933 ;;		_main
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text4
  3938  00502C                     __ptext4:
  3939                           	opt stack 0
  3940  00502C                     _display_gasPres:
  3941                           	opt stack 23
  3942                           
  3943                           ;display.c: 328:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 307);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 195);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 2048UL);cmd_incrementn(2);cmd(gasPres/10);
  3944                           
  3945                           ;incstack = 0
  3946  00502C  0E2E               	movlw	46
  3947  00502E  6E11               	movwf	cmd@command,c
  3948  005030  0EFF               	movlw	255
  3949  005032  6E12               	movwf	cmd@command+1,c
  3950  005034  0EFF               	movlw	255
  3951  005036  6E13               	movwf	cmd@command+2,c
  3952  005038  0EFF               	movlw	255
  3953  00503A  6E14               	movwf	cmd@command+3,c
  3954  00503C  EC70  F034         	call	_cmd	;wreg free
  3955  005040  504F               	movf	_cmd_offset,w,c
  3956  005042  6E1B               	movwf	??_display_gasPres& (0+255),c
  3957  005044  5050               	movf	_cmd_offset+1,w,c
  3958  005046  6E1C               	movwf	(??_display_gasPres+1)& (0+255),c
  3959  005048  6A1D               	clrf	(??_display_gasPres+2)& (0+255),c
  3960  00504A  6A1E               	clrf	(??_display_gasPres+3)& (0+255),c
  3961  00504C  0E00               	movlw	0
  3962  00504E  241B               	addwf	??_display_gasPres,w,c
  3963  005050  6E04               	movwf	wr16@addr,c
  3964  005052  0E80               	movlw	128
  3965  005054  201C               	addwfc	??_display_gasPres+1,w,c
  3966  005056  6E05               	movwf	wr16@addr+1,c
  3967  005058  0E10               	movlw	16
  3968  00505A  201D               	addwfc	??_display_gasPres+2,w,c
  3969  00505C  6E06               	movwf	wr16@addr+2,c
  3970  00505E  0E00               	movlw	0
  3971  005060  201E               	addwfc	??_display_gasPres+3,w,c
  3972  005062  6E07               	movwf	wr16@addr+3,c
  3973  005064  0E01               	movlw	1
  3974  005066  6E09               	movwf	wr16@value+1,c
  3975  005068  0E33               	movlw	51
  3976  00506A  6E08               	movwf	wr16@value,c
  3977  00506C  EC48  F035         	call	_wr16	;wreg free
  3978  005070  0E02               	movlw	2
  3979  005072  EC89  F035         	call	_cmd_incrementn
  3980  005076  504F               	movf	_cmd_offset,w,c
  3981  005078  6E1B               	movwf	??_display_gasPres& (0+255),c
  3982  00507A  5050               	movf	_cmd_offset+1,w,c
  3983  00507C  6E1C               	movwf	(??_display_gasPres+1)& (0+255),c
  3984  00507E  6A1D               	clrf	(??_display_gasPres+2)& (0+255),c
  3985  005080  6A1E               	clrf	(??_display_gasPres+3)& (0+255),c
  3986  005082  0E00               	movlw	0
  3987  005084  241B               	addwf	??_display_gasPres,w,c
  3988  005086  6E04               	movwf	wr16@addr,c
  3989  005088  0E80               	movlw	128
  3990  00508A  201C               	addwfc	??_display_gasPres+1,w,c
  3991  00508C  6E05               	movwf	wr16@addr+1,c
  3992  00508E  0E10               	movlw	16
  3993  005090  201D               	addwfc	??_display_gasPres+2,w,c
  3994  005092  6E06               	movwf	wr16@addr+2,c
  3995  005094  0E00               	movlw	0
  3996  005096  201E               	addwfc	??_display_gasPres+3,w,c
  3997  005098  6E07               	movwf	wr16@addr+3,c
  3998  00509A  0E00               	movlw	0
  3999  00509C  6E09               	movwf	wr16@value+1,c
  4000  00509E  0EC3               	movlw	195
  4001  0050A0  6E08               	movwf	wr16@value,c
  4002  0050A2  EC48  F035         	call	_wr16	;wreg free
  4003  0050A6  0E02               	movlw	2
  4004  0050A8  EC89  F035         	call	_cmd_incrementn
  4005  0050AC  504F               	movf	_cmd_offset,w,c
  4006  0050AE  6E1B               	movwf	??_display_gasPres& (0+255),c
  4007  0050B0  5050               	movf	_cmd_offset+1,w,c
  4008  0050B2  6E1C               	movwf	(??_display_gasPres+1)& (0+255),c
  4009  0050B4  6A1D               	clrf	(??_display_gasPres+2)& (0+255),c
  4010  0050B6  6A1E               	clrf	(??_display_gasPres+3)& (0+255),c
  4011  0050B8  0E00               	movlw	0
  4012  0050BA  241B               	addwf	??_display_gasPres,w,c
  4013  0050BC  6E04               	movwf	wr16@addr,c
  4014  0050BE  0E80               	movlw	128
  4015  0050C0  201C               	addwfc	??_display_gasPres+1,w,c
  4016  0050C2  6E05               	movwf	wr16@addr+1,c
  4017  0050C4  0E10               	movlw	16
  4018  0050C6  201D               	addwfc	??_display_gasPres+2,w,c
  4019  0050C8  6E06               	movwf	wr16@addr+2,c
  4020  0050CA  0E00               	movlw	0
  4021  0050CC  201E               	addwfc	??_display_gasPres+3,w,c
  4022  0050CE  6E07               	movwf	wr16@addr+3,c
  4023  0050D0  0E00               	movlw	0
  4024  0050D2  6E09               	movwf	wr16@value+1,c
  4025  0050D4  0E1E               	movlw	30
  4026  0050D6  6E08               	movwf	wr16@value,c
  4027  0050D8  EC48  F035         	call	_wr16	;wreg free
  4028  0050DC  0E02               	movlw	2
  4029  0050DE  EC89  F035         	call	_cmd_incrementn
  4030  0050E2  504F               	movf	_cmd_offset,w,c
  4031  0050E4  6E1B               	movwf	??_display_gasPres& (0+255),c
  4032  0050E6  5050               	movf	_cmd_offset+1,w,c
  4033  0050E8  6E1C               	movwf	(??_display_gasPres+1)& (0+255),c
  4034  0050EA  6A1D               	clrf	(??_display_gasPres+2)& (0+255),c
  4035  0050EC  6A1E               	clrf	(??_display_gasPres+3)& (0+255),c
  4036  0050EE  0E00               	movlw	0
  4037  0050F0  241B               	addwf	??_display_gasPres,w,c
  4038  0050F2  6E04               	movwf	wr16@addr,c
  4039  0050F4  0E80               	movlw	128
  4040  0050F6  201C               	addwfc	??_display_gasPres+1,w,c
  4041  0050F8  6E05               	movwf	wr16@addr+1,c
  4042  0050FA  0E10               	movlw	16
  4043  0050FC  201D               	addwfc	??_display_gasPres+2,w,c
  4044  0050FE  6E06               	movwf	wr16@addr+2,c
  4045  005100  0E00               	movlw	0
  4046  005102  201E               	addwfc	??_display_gasPres+3,w,c
  4047  005104  6E07               	movwf	wr16@addr+3,c
  4048  005106  0E08               	movlw	8
  4049  005108  6E09               	movwf	wr16@value+1,c
  4050  00510A  0E00               	movlw	0
  4051  00510C  6E08               	movwf	wr16@value,c
  4052  00510E  EC48  F035         	call	_wr16	;wreg free
  4053  005112  0E02               	movlw	2
  4054  005114  EC89  F035         	call	_cmd_incrementn
  4055  005118  C019  F003         	movff	display_gasPres@gasPres,___awdiv@dividend
  4056  00511C  C01A  F004         	movff	display_gasPres@gasPres+1,___awdiv@dividend+1
  4057  005120  0E00               	movlw	0
  4058  005122  6E06               	movwf	___awdiv@divisor+1,c
  4059  005124  0E0A               	movlw	10
  4060  005126  6E05               	movwf	___awdiv@divisor,c
  4061  005128  EC25  F033         	call	___awdiv	;wreg free
  4062  00512C  C003  F011         	movff	?___awdiv,cmd@command
  4063  005130  C004  F012         	movff	?___awdiv+1,cmd@command+1
  4064  005134  0E00               	movlw	0
  4065  005136  BE12               	btfsc	cmd@command+1,7,c
  4066  005138  0EFF               	movlw	-1
  4067  00513A  6E13               	movwf	cmd@command+2,c
  4068  00513C  6E14               	movwf	cmd@command+3,c
  4069  00513E  EC70  F034         	call	_cmd	;wreg free
  4070                           
  4071                           ;display.c: 329:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 310);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 195);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081
      +                          344UL +cmd_offset, "."));
  4072  005142  0E0C               	movlw	12
  4073  005144  6E11               	movwf	cmd@command,c
  4074  005146  0EFF               	movlw	255
  4075  005148  6E12               	movwf	cmd@command+1,c
  4076  00514A  0EFF               	movlw	255
  4077  00514C  6E13               	movwf	cmd@command+2,c
  4078  00514E  0EFF               	movlw	255
  4079  005150  6E14               	movwf	cmd@command+3,c
  4080  005152  EC70  F034         	call	_cmd	;wreg free
  4081  005156  504F               	movf	_cmd_offset,w,c
  4082  005158  6E1B               	movwf	??_display_gasPres& (0+255),c
  4083  00515A  5050               	movf	_cmd_offset+1,w,c
  4084  00515C  6E1C               	movwf	(??_display_gasPres+1)& (0+255),c
  4085  00515E  6A1D               	clrf	(??_display_gasPres+2)& (0+255),c
  4086  005160  6A1E               	clrf	(??_display_gasPres+3)& (0+255),c
  4087  005162  0E00               	movlw	0
  4088  005164  241B               	addwf	??_display_gasPres,w,c
  4089  005166  6E04               	movwf	wr16@addr,c
  4090  005168  0E80               	movlw	128
  4091  00516A  201C               	addwfc	??_display_gasPres+1,w,c
  4092  00516C  6E05               	movwf	wr16@addr+1,c
  4093  00516E  0E10               	movlw	16
  4094  005170  201D               	addwfc	??_display_gasPres+2,w,c
  4095  005172  6E06               	movwf	wr16@addr+2,c
  4096  005174  0E00               	movlw	0
  4097  005176  201E               	addwfc	??_display_gasPres+3,w,c
  4098  005178  6E07               	movwf	wr16@addr+3,c
  4099  00517A  0E01               	movlw	1
  4100  00517C  6E09               	movwf	wr16@value+1,c
  4101  00517E  0E36               	movlw	54
  4102  005180  6E08               	movwf	wr16@value,c
  4103  005182  EC48  F035         	call	_wr16	;wreg free
  4104  005186  0E02               	movlw	2
  4105  005188  EC89  F035         	call	_cmd_incrementn
  4106  00518C  504F               	movf	_cmd_offset,w,c
  4107  00518E  6E1B               	movwf	??_display_gasPres& (0+255),c
  4108  005190  5050               	movf	_cmd_offset+1,w,c
  4109  005192  6E1C               	movwf	(??_display_gasPres+1)& (0+255),c
  4110  005194  6A1D               	clrf	(??_display_gasPres+2)& (0+255),c
  4111  005196  6A1E               	clrf	(??_display_gasPres+3)& (0+255),c
  4112  005198  0E00               	movlw	0
  4113  00519A  241B               	addwf	??_display_gasPres,w,c
  4114  00519C  6E04               	movwf	wr16@addr,c
  4115  00519E  0E80               	movlw	128
  4116  0051A0  201C               	addwfc	??_display_gasPres+1,w,c
  4117  0051A2  6E05               	movwf	wr16@addr+1,c
  4118  0051A4  0E10               	movlw	16
  4119  0051A6  201D               	addwfc	??_display_gasPres+2,w,c
  4120  0051A8  6E06               	movwf	wr16@addr+2,c
  4121  0051AA  0E00               	movlw	0
  4122  0051AC  201E               	addwfc	??_display_gasPres+3,w,c
  4123  0051AE  6E07               	movwf	wr16@addr+3,c
  4124  0051B0  0E00               	movlw	0
  4125  0051B2  6E09               	movwf	wr16@value+1,c
  4126  0051B4  0EC3               	movlw	195
  4127  0051B6  6E08               	movwf	wr16@value,c
  4128  0051B8  EC48  F035         	call	_wr16	;wreg free
  4129  0051BC  0E02               	movlw	2
  4130  0051BE  EC89  F035         	call	_cmd_incrementn
  4131  0051C2  504F               	movf	_cmd_offset,w,c
  4132  0051C4  6E1B               	movwf	??_display_gasPres& (0+255),c
  4133  0051C6  5050               	movf	_cmd_offset+1,w,c
  4134  0051C8  6E1C               	movwf	(??_display_gasPres+1)& (0+255),c
  4135  0051CA  6A1D               	clrf	(??_display_gasPres+2)& (0+255),c
  4136  0051CC  6A1E               	clrf	(??_display_gasPres+3)& (0+255),c
  4137  0051CE  0E00               	movlw	0
  4138  0051D0  241B               	addwf	??_display_gasPres,w,c
  4139  0051D2  6E04               	movwf	wr16@addr,c
  4140  0051D4  0E80               	movlw	128
  4141  0051D6  201C               	addwfc	??_display_gasPres+1,w,c
  4142  0051D8  6E05               	movwf	wr16@addr+1,c
  4143  0051DA  0E10               	movlw	16
  4144  0051DC  201D               	addwfc	??_display_gasPres+2,w,c
  4145  0051DE  6E06               	movwf	wr16@addr+2,c
  4146  0051E0  0E00               	movlw	0
  4147  0051E2  201E               	addwfc	??_display_gasPres+3,w,c
  4148  0051E4  6E07               	movwf	wr16@addr+3,c
  4149  0051E6  0E00               	movlw	0
  4150  0051E8  6E09               	movwf	wr16@value+1,c
  4151  0051EA  0E1E               	movlw	30
  4152  0051EC  6E08               	movwf	wr16@value,c
  4153  0051EE  EC48  F035         	call	_wr16	;wreg free
  4154  0051F2  0E02               	movlw	2
  4155  0051F4  EC89  F035         	call	_cmd_incrementn
  4156  0051F8  504F               	movf	_cmd_offset,w,c
  4157  0051FA  6E1B               	movwf	??_display_gasPres& (0+255),c
  4158  0051FC  5050               	movf	_cmd_offset+1,w,c
  4159  0051FE  6E1C               	movwf	(??_display_gasPres+1)& (0+255),c
  4160  005200  6A1D               	clrf	(??_display_gasPres+2)& (0+255),c
  4161  005202  6A1E               	clrf	(??_display_gasPres+3)& (0+255),c
  4162  005204  0E00               	movlw	0
  4163  005206  241B               	addwf	??_display_gasPres,w,c
  4164  005208  6E04               	movwf	wr16@addr,c
  4165  00520A  0E80               	movlw	128
  4166  00520C  201C               	addwfc	??_display_gasPres+1,w,c
  4167  00520E  6E05               	movwf	wr16@addr+1,c
  4168  005210  0E10               	movlw	16
  4169  005212  201D               	addwfc	??_display_gasPres+2,w,c
  4170  005214  6E06               	movwf	wr16@addr+2,c
  4171  005216  0E00               	movlw	0
  4172  005218  201E               	addwfc	??_display_gasPres+3,w,c
  4173  00521A  6E07               	movwf	wr16@addr+3,c
  4174  00521C  0E00               	movlw	0
  4175  00521E  6E09               	movwf	wr16@value+1,c
  4176  005220  0E00               	movlw	0
  4177  005222  6E08               	movwf	wr16@value,c
  4178  005224  EC48  F035         	call	_wr16	;wreg free
  4179  005228  0E02               	movlw	2
  4180  00522A  EC89  F035         	call	_cmd_incrementn
  4181  00522E  504F               	movf	_cmd_offset,w,c
  4182  005230  6E1B               	movwf	??_display_gasPres& (0+255),c
  4183  005232  5050               	movf	_cmd_offset+1,w,c
  4184  005234  6E1C               	movwf	(??_display_gasPres+1)& (0+255),c
  4185  005236  6A1D               	clrf	(??_display_gasPres+2)& (0+255),c
  4186  005238  6A1E               	clrf	(??_display_gasPres+3)& (0+255),c
  4187  00523A  0E00               	movlw	0
  4188  00523C  241B               	addwf	??_display_gasPres,w,c
  4189  00523E  6E09               	movwf	wr8s@addr,c
  4190  005240  0E80               	movlw	128
  4191  005242  201C               	addwfc	??_display_gasPres+1,w,c
  4192  005244  6E0A               	movwf	wr8s@addr+1,c
  4193  005246  0E10               	movlw	16
  4194  005248  201D               	addwfc	??_display_gasPres+2,w,c
  4195  00524A  6E0B               	movwf	wr8s@addr+2,c
  4196  00524C  0E00               	movlw	0
  4197  00524E  201E               	addwfc	??_display_gasPres+3,w,c
  4198  005250  6E0C               	movwf	wr8s@addr+3,c
  4199  005252  0E97               	movlw	low STR_21
  4200  005254  6E0D               	movwf	wr8s@s,c
  4201  005256  0E0F               	movlw	high STR_21
  4202  005258  6E0E               	movwf	wr8s@s+1,c
  4203  00525A  EC67  F033         	call	_wr8s	;wreg free
  4204  00525E  EC89  F035         	call	_cmd_incrementn
  4205                           
  4206                           ;display.c: 330:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 318);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 195);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd(gasPres%10);
  4207  005262  0E2E               	movlw	46
  4208  005264  6E11               	movwf	cmd@command,c
  4209  005266  0EFF               	movlw	255
  4210  005268  6E12               	movwf	cmd@command+1,c
  4211  00526A  0EFF               	movlw	255
  4212  00526C  6E13               	movwf	cmd@command+2,c
  4213  00526E  0EFF               	movlw	255
  4214  005270  6E14               	movwf	cmd@command+3,c
  4215  005272  EC70  F034         	call	_cmd	;wreg free
  4216  005276  504F               	movf	_cmd_offset,w,c
  4217  005278  6E1B               	movwf	??_display_gasPres& (0+255),c
  4218  00527A  5050               	movf	_cmd_offset+1,w,c
  4219  00527C  6E1C               	movwf	(??_display_gasPres+1)& (0+255),c
  4220  00527E  6A1D               	clrf	(??_display_gasPres+2)& (0+255),c
  4221  005280  6A1E               	clrf	(??_display_gasPres+3)& (0+255),c
  4222  005282  0E00               	movlw	0
  4223  005284  241B               	addwf	??_display_gasPres,w,c
  4224  005286  6E04               	movwf	wr16@addr,c
  4225  005288  0E80               	movlw	128
  4226  00528A  201C               	addwfc	??_display_gasPres+1,w,c
  4227  00528C  6E05               	movwf	wr16@addr+1,c
  4228  00528E  0E10               	movlw	16
  4229  005290  201D               	addwfc	??_display_gasPres+2,w,c
  4230  005292  6E06               	movwf	wr16@addr+2,c
  4231  005294  0E00               	movlw	0
  4232  005296  201E               	addwfc	??_display_gasPres+3,w,c
  4233  005298  6E07               	movwf	wr16@addr+3,c
  4234  00529A  0E01               	movlw	1
  4235  00529C  6E09               	movwf	wr16@value+1,c
  4236  00529E  0E3E               	movlw	62
  4237  0052A0  6E08               	movwf	wr16@value,c
  4238  0052A2  EC48  F035         	call	_wr16	;wreg free
  4239  0052A6  0E02               	movlw	2
  4240  0052A8  EC89  F035         	call	_cmd_incrementn
  4241  0052AC  504F               	movf	_cmd_offset,w,c
  4242  0052AE  6E1B               	movwf	??_display_gasPres& (0+255),c
  4243  0052B0  5050               	movf	_cmd_offset+1,w,c
  4244  0052B2  6E1C               	movwf	(??_display_gasPres+1)& (0+255),c
  4245  0052B4  6A1D               	clrf	(??_display_gasPres+2)& (0+255),c
  4246  0052B6  6A1E               	clrf	(??_display_gasPres+3)& (0+255),c
  4247  0052B8  0E00               	movlw	0
  4248  0052BA  241B               	addwf	??_display_gasPres,w,c
  4249  0052BC  6E04               	movwf	wr16@addr,c
  4250  0052BE  0E80               	movlw	128
  4251  0052C0  201C               	addwfc	??_display_gasPres+1,w,c
  4252  0052C2  6E05               	movwf	wr16@addr+1,c
  4253  0052C4  0E10               	movlw	16
  4254  0052C6  201D               	addwfc	??_display_gasPres+2,w,c
  4255  0052C8  6E06               	movwf	wr16@addr+2,c
  4256  0052CA  0E00               	movlw	0
  4257  0052CC  201E               	addwfc	??_display_gasPres+3,w,c
  4258  0052CE  6E07               	movwf	wr16@addr+3,c
  4259  0052D0  0E00               	movlw	0
  4260  0052D2  6E09               	movwf	wr16@value+1,c
  4261  0052D4  0EC3               	movlw	195
  4262  0052D6  6E08               	movwf	wr16@value,c
  4263  0052D8  EC48  F035         	call	_wr16	;wreg free
  4264  0052DC  0E02               	movlw	2
  4265  0052DE  EC89  F035         	call	_cmd_incrementn
  4266  0052E2  504F               	movf	_cmd_offset,w,c
  4267  0052E4  6E1B               	movwf	??_display_gasPres& (0+255),c
  4268  0052E6  5050               	movf	_cmd_offset+1,w,c
  4269  0052E8  6E1C               	movwf	(??_display_gasPres+1)& (0+255),c
  4270  0052EA  6A1D               	clrf	(??_display_gasPres+2)& (0+255),c
  4271  0052EC  6A1E               	clrf	(??_display_gasPres+3)& (0+255),c
  4272  0052EE  0E00               	movlw	0
  4273  0052F0  241B               	addwf	??_display_gasPres,w,c
  4274  0052F2  6E04               	movwf	wr16@addr,c
  4275  0052F4  0E80               	movlw	128
  4276  0052F6  201C               	addwfc	??_display_gasPres+1,w,c
  4277  0052F8  6E05               	movwf	wr16@addr+1,c
  4278  0052FA  0E10               	movlw	16
  4279  0052FC  201D               	addwfc	??_display_gasPres+2,w,c
  4280  0052FE  6E06               	movwf	wr16@addr+2,c
  4281  005300  0E00               	movlw	0
  4282  005302  201E               	addwfc	??_display_gasPres+3,w,c
  4283  005304  6E07               	movwf	wr16@addr+3,c
  4284  005306  0E00               	movlw	0
  4285  005308  6E09               	movwf	wr16@value+1,c
  4286  00530A  0E1E               	movlw	30
  4287  00530C  6E08               	movwf	wr16@value,c
  4288  00530E  EC48  F035         	call	_wr16	;wreg free
  4289  005312  0E02               	movlw	2
  4290  005314  EC89  F035         	call	_cmd_incrementn
  4291  005318  504F               	movf	_cmd_offset,w,c
  4292  00531A  6E1B               	movwf	??_display_gasPres& (0+255),c
  4293  00531C  5050               	movf	_cmd_offset+1,w,c
  4294  00531E  6E1C               	movwf	(??_display_gasPres+1)& (0+255),c
  4295  005320  6A1D               	clrf	(??_display_gasPres+2)& (0+255),c
  4296  005322  6A1E               	clrf	(??_display_gasPres+3)& (0+255),c
  4297  005324  0E00               	movlw	0
  4298  005326  241B               	addwf	??_display_gasPres,w,c
  4299  005328  6E04               	movwf	wr16@addr,c
  4300  00532A  0E80               	movlw	128
  4301  00532C  201C               	addwfc	??_display_gasPres+1,w,c
  4302  00532E  6E05               	movwf	wr16@addr+1,c
  4303  005330  0E10               	movlw	16
  4304  005332  201D               	addwfc	??_display_gasPres+2,w,c
  4305  005334  6E06               	movwf	wr16@addr+2,c
  4306  005336  0E00               	movlw	0
  4307  005338  201E               	addwfc	??_display_gasPres+3,w,c
  4308  00533A  6E07               	movwf	wr16@addr+3,c
  4309  00533C  0E00               	movlw	0
  4310  00533E  6E09               	movwf	wr16@value+1,c
  4311  005340  0E00               	movlw	0
  4312  005342  6E08               	movwf	wr16@value,c
  4313  005344  EC48  F035         	call	_wr16	;wreg free
  4314  005348  0E02               	movlw	2
  4315  00534A  EC89  F035         	call	_cmd_incrementn
  4316  00534E  C019  F00B         	movff	display_gasPres@gasPres,___awmod@dividend
  4317  005352  C01A  F00C         	movff	display_gasPres@gasPres+1,___awmod@dividend+1
  4318  005356  0E00               	movlw	0
  4319  005358  6E0E               	movwf	___awmod@divisor+1,c
  4320  00535A  0E0A               	movlw	10
  4321  00535C  6E0D               	movwf	___awmod@divisor,c
  4322  00535E  ECA3  F033         	call	___awmod	;wreg free
  4323  005362  C00B  F011         	movff	?___awmod,cmd@command
  4324  005366  C00C  F012         	movff	?___awmod+1,cmd@command+1
  4325  00536A  0E00               	movlw	0
  4326  00536C  BE12               	btfsc	cmd@command+1,7,c
  4327  00536E  0EFF               	movlw	-1
  4328  005370  6E13               	movwf	cmd@command+2,c
  4329  005372  6E14               	movwf	cmd@command+3,c
  4330  005374  EC70  F034         	call	_cmd	;wreg free
  4331  005378  0012               	return		;funcret
  4332  00537A                     __end_of_display_gasPres:
  4333                           	opt stack 0
  4334                           tblptru	equ	0xFF8
  4335                           tblptrh	equ	0xFF7
  4336                           tblptrl	equ	0xFF6
  4337                           tablat	equ	0xFF5
  4338                           intcon	equ	0xFF2
  4339                           postinc0	equ	0xFEE
  4340                           wreg	equ	0xFE8
  4341                           postdec1	equ	0xFE5
  4342                           plusw1	equ	0xFE3
  4343                           fsr1l	equ	0xFE1
  4344                           plusw2	equ	0xFDB
  4345                           status	equ	0xFD8
  4346                           
  4347 ;; *************** function _display_brake_bias *****************
  4348 ;; Defined at:
  4349 ;;		line 366 in file "display.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  bias            2   24[COMRAM] int 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4365 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;Total ram usage:        6 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    7
  4370 ;; This function calls:
  4371 ;;		_cmd
  4372 ;;		_cmd_incrementn
  4373 ;;		_wr16
  4374 ;; This function is called by:
  4375 ;;		_main
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text5
  4380  005EBA                     __ptext5:
  4381                           	opt stack 0
  4382  005EBA                     _display_brake_bias:
  4383                           	opt stack 23
  4384                           
  4385                           ;display.c: 367:     cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL
      +                          )<<0)));
  4386                           
  4387                           ;incstack = 0
  4388  005EBA  0EFF               	movlw	255
  4389  005EBC  6E11               	movwf	cmd@command,c
  4390  005EBE  0EFF               	movlw	255
  4391  005EC0  6E12               	movwf	cmd@command+1,c
  4392  005EC2  0EFF               	movlw	255
  4393  005EC4  6E13               	movwf	cmd@command+2,c
  4394  005EC6  0E04               	movlw	4
  4395  005EC8  6E14               	movwf	cmd@command+3,c
  4396  005ECA  EC70  F034         	call	_cmd	;wreg free
  4397                           
  4398                           ;display.c: 368:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 5);cmd_incrementn(2);
      +                          wr16(1081344UL +cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd_i
      +                          ncrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd(bias);
  4399  005ECE  0E2E               	movlw	46
  4400  005ED0  6E11               	movwf	cmd@command,c
  4401  005ED2  0EFF               	movlw	255
  4402  005ED4  6E12               	movwf	cmd@command+1,c
  4403  005ED6  0EFF               	movlw	255
  4404  005ED8  6E13               	movwf	cmd@command+2,c
  4405  005EDA  0EFF               	movlw	255
  4406  005EDC  6E14               	movwf	cmd@command+3,c
  4407  005EDE  EC70  F034         	call	_cmd	;wreg free
  4408  005EE2  504F               	movf	_cmd_offset,w,c
  4409  005EE4  6E1B               	movwf	??_display_brake_bias& (0+255),c
  4410  005EE6  5050               	movf	_cmd_offset+1,w,c
  4411  005EE8  6E1C               	movwf	(??_display_brake_bias+1)& (0+255),c
  4412  005EEA  6A1D               	clrf	(??_display_brake_bias+2)& (0+255),c
  4413  005EEC  6A1E               	clrf	(??_display_brake_bias+3)& (0+255),c
  4414  005EEE  0E00               	movlw	0
  4415  005EF0  241B               	addwf	??_display_brake_bias,w,c
  4416  005EF2  6E04               	movwf	wr16@addr,c
  4417  005EF4  0E80               	movlw	128
  4418  005EF6  201C               	addwfc	??_display_brake_bias+1,w,c
  4419  005EF8  6E05               	movwf	wr16@addr+1,c
  4420  005EFA  0E10               	movlw	16
  4421  005EFC  201D               	addwfc	??_display_brake_bias+2,w,c
  4422  005EFE  6E06               	movwf	wr16@addr+2,c
  4423  005F00  0E00               	movlw	0
  4424  005F02  201E               	addwfc	??_display_brake_bias+3,w,c
  4425  005F04  6E07               	movwf	wr16@addr+3,c
  4426  005F06  0E00               	movlw	0
  4427  005F08  6E09               	movwf	wr16@value+1,c
  4428  005F0A  0E05               	movlw	5
  4429  005F0C  6E08               	movwf	wr16@value,c
  4430  005F0E  EC48  F035         	call	_wr16	;wreg free
  4431  005F12  0E02               	movlw	2
  4432  005F14  EC89  F035         	call	_cmd_incrementn
  4433  005F18  504F               	movf	_cmd_offset,w,c
  4434  005F1A  6E1B               	movwf	??_display_brake_bias& (0+255),c
  4435  005F1C  5050               	movf	_cmd_offset+1,w,c
  4436  005F1E  6E1C               	movwf	(??_display_brake_bias+1)& (0+255),c
  4437  005F20  6A1D               	clrf	(??_display_brake_bias+2)& (0+255),c
  4438  005F22  6A1E               	clrf	(??_display_brake_bias+3)& (0+255),c
  4439  005F24  0E00               	movlw	0
  4440  005F26  241B               	addwf	??_display_brake_bias,w,c
  4441  005F28  6E04               	movwf	wr16@addr,c
  4442  005F2A  0E80               	movlw	128
  4443  005F2C  201C               	addwfc	??_display_brake_bias+1,w,c
  4444  005F2E  6E05               	movwf	wr16@addr+1,c
  4445  005F30  0E10               	movlw	16
  4446  005F32  201D               	addwfc	??_display_brake_bias+2,w,c
  4447  005F34  6E06               	movwf	wr16@addr+2,c
  4448  005F36  0E00               	movlw	0
  4449  005F38  201E               	addwfc	??_display_brake_bias+3,w,c
  4450  005F3A  6E07               	movwf	wr16@addr+3,c
  4451  005F3C  0E00               	movlw	0
  4452  005F3E  6E09               	movwf	wr16@value+1,c
  4453  005F40  0EEC               	movlw	236
  4454  005F42  6E08               	movwf	wr16@value,c
  4455  005F44  EC48  F035         	call	_wr16	;wreg free
  4456  005F48  0E02               	movlw	2
  4457  005F4A  EC89  F035         	call	_cmd_incrementn
  4458  005F4E  504F               	movf	_cmd_offset,w,c
  4459  005F50  6E1B               	movwf	??_display_brake_bias& (0+255),c
  4460  005F52  5050               	movf	_cmd_offset+1,w,c
  4461  005F54  6E1C               	movwf	(??_display_brake_bias+1)& (0+255),c
  4462  005F56  6A1D               	clrf	(??_display_brake_bias+2)& (0+255),c
  4463  005F58  6A1E               	clrf	(??_display_brake_bias+3)& (0+255),c
  4464  005F5A  0E00               	movlw	0
  4465  005F5C  241B               	addwf	??_display_brake_bias,w,c
  4466  005F5E  6E04               	movwf	wr16@addr,c
  4467  005F60  0E80               	movlw	128
  4468  005F62  201C               	addwfc	??_display_brake_bias+1,w,c
  4469  005F64  6E05               	movwf	wr16@addr+1,c
  4470  005F66  0E10               	movlw	16
  4471  005F68  201D               	addwfc	??_display_brake_bias+2,w,c
  4472  005F6A  6E06               	movwf	wr16@addr+2,c
  4473  005F6C  0E00               	movlw	0
  4474  005F6E  201E               	addwfc	??_display_brake_bias+3,w,c
  4475  005F70  6E07               	movwf	wr16@addr+3,c
  4476  005F72  0E00               	movlw	0
  4477  005F74  6E09               	movwf	wr16@value+1,c
  4478  005F76  0E1E               	movlw	30
  4479  005F78  6E08               	movwf	wr16@value,c
  4480  005F7A  EC48  F035         	call	_wr16	;wreg free
  4481  005F7E  0E02               	movlw	2
  4482  005F80  EC89  F035         	call	_cmd_incrementn
  4483  005F84  504F               	movf	_cmd_offset,w,c
  4484  005F86  6E1B               	movwf	??_display_brake_bias& (0+255),c
  4485  005F88  5050               	movf	_cmd_offset+1,w,c
  4486  005F8A  6E1C               	movwf	(??_display_brake_bias+1)& (0+255),c
  4487  005F8C  6A1D               	clrf	(??_display_brake_bias+2)& (0+255),c
  4488  005F8E  6A1E               	clrf	(??_display_brake_bias+3)& (0+255),c
  4489  005F90  0E00               	movlw	0
  4490  005F92  241B               	addwf	??_display_brake_bias,w,c
  4491  005F94  6E04               	movwf	wr16@addr,c
  4492  005F96  0E80               	movlw	128
  4493  005F98  201C               	addwfc	??_display_brake_bias+1,w,c
  4494  005F9A  6E05               	movwf	wr16@addr+1,c
  4495  005F9C  0E10               	movlw	16
  4496  005F9E  201D               	addwfc	??_display_brake_bias+2,w,c
  4497  005FA0  6E06               	movwf	wr16@addr+2,c
  4498  005FA2  0E00               	movlw	0
  4499  005FA4  201E               	addwfc	??_display_brake_bias+3,w,c
  4500  005FA6  6E07               	movwf	wr16@addr+3,c
  4501  005FA8  0E00               	movlw	0
  4502  005FAA  6E09               	movwf	wr16@value+1,c
  4503  005FAC  0E00               	movlw	0
  4504  005FAE  6E08               	movwf	wr16@value,c
  4505  005FB0  EC48  F035         	call	_wr16	;wreg free
  4506  005FB4  0E02               	movlw	2
  4507  005FB6  EC89  F035         	call	_cmd_incrementn
  4508  005FBA  C019  F011         	movff	display_brake_bias@bias,cmd@command
  4509  005FBE  C01A  F012         	movff	display_brake_bias@bias+1,cmd@command+1
  4510  005FC2  0E00               	movlw	0
  4511  005FC4  BE12               	btfsc	cmd@command+1,7,c
  4512  005FC6  0EFF               	movlw	-1
  4513  005FC8  6E13               	movwf	cmd@command+2,c
  4514  005FCA  6E14               	movwf	cmd@command+3,c
  4515  005FCC  EC70  F034         	call	_cmd	;wreg free
  4516  005FD0  0012               	return		;funcret
  4517  005FD2                     __end_of_display_brake_bias:
  4518                           	opt stack 0
  4519                           tblptru	equ	0xFF8
  4520                           tblptrh	equ	0xFF7
  4521                           tblptrl	equ	0xFF6
  4522                           tablat	equ	0xFF5
  4523                           intcon	equ	0xFF2
  4524                           postinc0	equ	0xFEE
  4525                           wreg	equ	0xFE8
  4526                           postdec1	equ	0xFE5
  4527                           plusw1	equ	0xFE3
  4528                           fsr1l	equ	0xFE1
  4529                           plusw2	equ	0xFDB
  4530                           status	equ	0xFD8
  4531                           
  4532 ;; *************** function _display *****************
  4533 ;; Defined at:
  4534 ;;		line 3 in file "display.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  rpm             2   44[COMRAM] int 
  4537 ;;  oilP            2   46[COMRAM] int 
  4538 ;;  gasPres         2   48[COMRAM] int 
  4539 ;;  fuel            2   50[COMRAM] int 
  4540 ;;  tp              2   52[COMRAM] int 
  4541 ;;  bspd            2   54[COMRAM] int 
  4542 ;;  etc             2   56[COMRAM] int 
  4543 ;;  speed           2   58[COMRAM] int 
  4544 ;;  gear            2   60[COMRAM] int 
  4545 ;;  engTemp         2   62[COMRAM] int 
  4546 ;;  oilTemp         2   64[COMRAM] int 
  4547 ;;  battVolts       2   66[COMRAM] int 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4559 ;;      Params:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4562 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4563 ;;Total ram usage:       24 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    9
  4566 ;; This function calls:
  4567 ;;		_display_bottom_section
  4568 ;;		_display_bspd
  4569 ;;		_display_end
  4570 ;;		_display_etc
  4571 ;;		_display_fuel_level
  4572 ;;		_display_gear
  4573 ;;		_display_grids
  4574 ;;		_display_labels
  4575 ;;		_display_oilTemp
  4576 ;;		_display_rpm
  4577 ;;		_display_speed
  4578 ;;		_display_start
  4579 ;;		_display_waterTemp
  4580 ;; This function is called by:
  4581 ;;		_main
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text6
  4586  00653E                     __ptext6:
  4587                           	opt stack 0
  4588  00653E                     _display:
  4589                           	opt stack 21
  4590                           
  4591                           ;display.c: 4:     display_start();
  4592                           
  4593                           ;incstack = 0
  4594  00653E  EC90  F034         	call	_display_start	;wreg free
  4595                           
  4596                           ;display.c: 5:     display_labels();
  4597  006542  ECCF  F007         	call	_display_labels	;wreg free
  4598                           
  4599                           ;display.c: 6:     display_grids();
  4600  006546  EC44  F01F         	call	_display_grids	;wreg free
  4601                           
  4602                           ;display.c: 7:     display_bottom_section(battVolts, tp);
  4603  00654A  C043  F01F         	movff	display@battVolts,display_bottom_section@volts
  4604  00654E  C044  F020         	movff	display@battVolts+1,display_bottom_section@volts+1
  4605  006552  C035  F021         	movff	display@tp,display_bottom_section@tp
  4606  006556  C036  F022         	movff	display@tp+1,display_bottom_section@tp+1
  4607  00655A  EC56  F032         	call	_display_bottom_section	;wreg free
  4608                           
  4609                           ;display.c: 8:     display_rpm(rpm);
  4610  00655E  C02D  F019         	movff	display@rpm,display_rpm@rpm
  4611  006562  C02E  F01A         	movff	display@rpm+1,display_rpm@rpm+1
  4612  006566  EC81  F019         	call	_display_rpm	;wreg free
  4613                           
  4614                           ;display.c: 9:     display_speed(speed);
  4615  00656A  C03B  F019         	movff	display@speed,display_speed@speed
  4616  00656E  C03C  F01A         	movff	display@speed+1,display_speed@speed+1
  4617  006572  EC75  F030         	call	_display_speed	;wreg free
  4618                           
  4619                           ;display.c: 10:     display_waterTemp(engTemp);
  4620  006576  C03F  F019         	movff	display@engTemp,display_waterTemp@temp
  4621  00657A  C040  F01A         	movff	display@engTemp+1,display_waterTemp@temp+1
  4622  00657E  ECE9  F02F         	call	_display_waterTemp	;wreg free
  4623                           
  4624                           ;display.c: 11:     display_oilTemp(oilTemp);
  4625  006582  C041  F019         	movff	display@oilTemp,display_oilTemp@temp
  4626  006586  C042  F01A         	movff	display@oilTemp+1,display_oilTemp@temp+1
  4627  00658A  EC01  F031         	call	_display_oilTemp	;wreg free
  4628                           
  4629                           ;display.c: 12:     display_etc(etc);
  4630  00658E  C039  F019         	movff	display@etc,display_etc@etc
  4631  006592  C03A  F01A         	movff	display@etc+1,display_etc@etc+1
  4632  006596  ECBA  F00F         	call	_display_etc	;wreg free
  4633                           
  4634                           ;display.c: 14:     display_gear(gear);
  4635  00659A  C03D  F019         	movff	display@gear,display_gear@gear
  4636  00659E  C03E  F01A         	movff	display@gear+1,display_gear@gear+1
  4637  0065A2  EC0B  F022         	call	_display_gear	;wreg free
  4638                           
  4639                           ;display.c: 15:     display_fuel_level(fuel);
  4640  0065A6  C033  F019         	movff	display@fuel,display_fuel_level@fuel
  4641  0065AA  C034  F01A         	movff	display@fuel+1,display_fuel_level@fuel+1
  4642  0065AE  EC3C  F02B         	call	_display_fuel_level	;wreg free
  4643                           
  4644                           ;display.c: 16:     display_bspd(bspd);
  4645  0065B2  C037  F019         	movff	display@bspd,display_bspd@bspd
  4646  0065B6  C038  F01A         	movff	display@bspd+1,display_bspd@bspd+1
  4647  0065BA  EC80  F024         	call	_display_bspd	;wreg free
  4648                           
  4649                           ;display.c: 18:     display_end();
  4650  0065BE  EC0C  F034         	call	_display_end	;wreg free
  4651  0065C2  0012               	return		;funcret
  4652  0065C4                     __end_of_display:
  4653                           	opt stack 0
  4654                           tblptru	equ	0xFF8
  4655                           tblptrh	equ	0xFF7
  4656                           tblptrl	equ	0xFF6
  4657                           tablat	equ	0xFF5
  4658                           intcon	equ	0xFF2
  4659                           postinc0	equ	0xFEE
  4660                           wreg	equ	0xFE8
  4661                           postdec1	equ	0xFE5
  4662                           plusw1	equ	0xFE3
  4663                           fsr1l	equ	0xFE1
  4664                           plusw2	equ	0xFDB
  4665                           status	equ	0xFD8
  4666                           
  4667 ;; *************** function _display_waterTemp *****************
  4668 ;; Defined at:
  4669 ;;		line 271 in file "display.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  temp            2   24[COMRAM] int 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4685 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4686 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4687 ;;Total ram usage:        6 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    7
  4690 ;; This function calls:
  4691 ;;		_cmd
  4692 ;;		_cmd_incrementn
  4693 ;;		_wr16
  4694 ;; This function is called by:
  4695 ;;		_display
  4696 ;;		_main
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text7
  4701  005FD2                     __ptext7:
  4702                           	opt stack 0
  4703  005FD2                     _display_waterTemp:
  4704                           	opt stack 23
  4705                           
  4706                           ;display.c: 272:     cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL
      +                          )<<0)));
  4707                           
  4708                           ;incstack = 0
  4709  005FD2  0EFF               	movlw	255
  4710  005FD4  6E11               	movwf	cmd@command,c
  4711  005FD6  0EFF               	movlw	255
  4712  005FD8  6E12               	movwf	cmd@command+1,c
  4713  005FDA  0EFF               	movlw	255
  4714  005FDC  6E13               	movwf	cmd@command+2,c
  4715  005FDE  0E04               	movlw	4
  4716  005FE0  6E14               	movwf	cmd@command+3,c
  4717  005FE2  EC70  F034         	call	_cmd	;wreg free
  4718                           
  4719                           ;display.c: 274:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 47);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 58);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 31);cmd_i
      +                          ncrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd(temp);
  4720  005FE6  0E2E               	movlw	46
  4721  005FE8  6E11               	movwf	cmd@command,c
  4722  005FEA  0EFF               	movlw	255
  4723  005FEC  6E12               	movwf	cmd@command+1,c
  4724  005FEE  0EFF               	movlw	255
  4725  005FF0  6E13               	movwf	cmd@command+2,c
  4726  005FF2  0EFF               	movlw	255
  4727  005FF4  6E14               	movwf	cmd@command+3,c
  4728  005FF6  EC70  F034         	call	_cmd	;wreg free
  4729  005FFA  504F               	movf	_cmd_offset,w,c
  4730  005FFC  6E1B               	movwf	??_display_waterTemp& (0+255),c
  4731  005FFE  5050               	movf	_cmd_offset+1,w,c
  4732  006000  6E1C               	movwf	(??_display_waterTemp+1)& (0+255),c
  4733  006002  6A1D               	clrf	(??_display_waterTemp+2)& (0+255),c
  4734  006004  6A1E               	clrf	(??_display_waterTemp+3)& (0+255),c
  4735  006006  0E00               	movlw	0
  4736  006008  241B               	addwf	??_display_waterTemp,w,c
  4737  00600A  6E04               	movwf	wr16@addr,c
  4738  00600C  0E80               	movlw	128
  4739  00600E  201C               	addwfc	??_display_waterTemp+1,w,c
  4740  006010  6E05               	movwf	wr16@addr+1,c
  4741  006012  0E10               	movlw	16
  4742  006014  201D               	addwfc	??_display_waterTemp+2,w,c
  4743  006016  6E06               	movwf	wr16@addr+2,c
  4744  006018  0E00               	movlw	0
  4745  00601A  201E               	addwfc	??_display_waterTemp+3,w,c
  4746  00601C  6E07               	movwf	wr16@addr+3,c
  4747  00601E  0E00               	movlw	0
  4748  006020  6E09               	movwf	wr16@value+1,c
  4749  006022  0E2F               	movlw	47
  4750  006024  6E08               	movwf	wr16@value,c
  4751  006026  EC48  F035         	call	_wr16	;wreg free
  4752  00602A  0E02               	movlw	2
  4753  00602C  EC89  F035         	call	_cmd_incrementn
  4754  006030  504F               	movf	_cmd_offset,w,c
  4755  006032  6E1B               	movwf	??_display_waterTemp& (0+255),c
  4756  006034  5050               	movf	_cmd_offset+1,w,c
  4757  006036  6E1C               	movwf	(??_display_waterTemp+1)& (0+255),c
  4758  006038  6A1D               	clrf	(??_display_waterTemp+2)& (0+255),c
  4759  00603A  6A1E               	clrf	(??_display_waterTemp+3)& (0+255),c
  4760  00603C  0E00               	movlw	0
  4761  00603E  241B               	addwf	??_display_waterTemp,w,c
  4762  006040  6E04               	movwf	wr16@addr,c
  4763  006042  0E80               	movlw	128
  4764  006044  201C               	addwfc	??_display_waterTemp+1,w,c
  4765  006046  6E05               	movwf	wr16@addr+1,c
  4766  006048  0E10               	movlw	16
  4767  00604A  201D               	addwfc	??_display_waterTemp+2,w,c
  4768  00604C  6E06               	movwf	wr16@addr+2,c
  4769  00604E  0E00               	movlw	0
  4770  006050  201E               	addwfc	??_display_waterTemp+3,w,c
  4771  006052  6E07               	movwf	wr16@addr+3,c
  4772  006054  0E00               	movlw	0
  4773  006056  6E09               	movwf	wr16@value+1,c
  4774  006058  0E3A               	movlw	58
  4775  00605A  6E08               	movwf	wr16@value,c
  4776  00605C  EC48  F035         	call	_wr16	;wreg free
  4777  006060  0E02               	movlw	2
  4778  006062  EC89  F035         	call	_cmd_incrementn
  4779  006066  504F               	movf	_cmd_offset,w,c
  4780  006068  6E1B               	movwf	??_display_waterTemp& (0+255),c
  4781  00606A  5050               	movf	_cmd_offset+1,w,c
  4782  00606C  6E1C               	movwf	(??_display_waterTemp+1)& (0+255),c
  4783  00606E  6A1D               	clrf	(??_display_waterTemp+2)& (0+255),c
  4784  006070  6A1E               	clrf	(??_display_waterTemp+3)& (0+255),c
  4785  006072  0E00               	movlw	0
  4786  006074  241B               	addwf	??_display_waterTemp,w,c
  4787  006076  6E04               	movwf	wr16@addr,c
  4788  006078  0E80               	movlw	128
  4789  00607A  201C               	addwfc	??_display_waterTemp+1,w,c
  4790  00607C  6E05               	movwf	wr16@addr+1,c
  4791  00607E  0E10               	movlw	16
  4792  006080  201D               	addwfc	??_display_waterTemp+2,w,c
  4793  006082  6E06               	movwf	wr16@addr+2,c
  4794  006084  0E00               	movlw	0
  4795  006086  201E               	addwfc	??_display_waterTemp+3,w,c
  4796  006088  6E07               	movwf	wr16@addr+3,c
  4797  00608A  0E00               	movlw	0
  4798  00608C  6E09               	movwf	wr16@value+1,c
  4799  00608E  0E1F               	movlw	31
  4800  006090  6E08               	movwf	wr16@value,c
  4801  006092  EC48  F035         	call	_wr16	;wreg free
  4802  006096  0E02               	movlw	2
  4803  006098  EC89  F035         	call	_cmd_incrementn
  4804  00609C  504F               	movf	_cmd_offset,w,c
  4805  00609E  6E1B               	movwf	??_display_waterTemp& (0+255),c
  4806  0060A0  5050               	movf	_cmd_offset+1,w,c
  4807  0060A2  6E1C               	movwf	(??_display_waterTemp+1)& (0+255),c
  4808  0060A4  6A1D               	clrf	(??_display_waterTemp+2)& (0+255),c
  4809  0060A6  6A1E               	clrf	(??_display_waterTemp+3)& (0+255),c
  4810  0060A8  0E00               	movlw	0
  4811  0060AA  241B               	addwf	??_display_waterTemp,w,c
  4812  0060AC  6E04               	movwf	wr16@addr,c
  4813  0060AE  0E80               	movlw	128
  4814  0060B0  201C               	addwfc	??_display_waterTemp+1,w,c
  4815  0060B2  6E05               	movwf	wr16@addr+1,c
  4816  0060B4  0E10               	movlw	16
  4817  0060B6  201D               	addwfc	??_display_waterTemp+2,w,c
  4818  0060B8  6E06               	movwf	wr16@addr+2,c
  4819  0060BA  0E00               	movlw	0
  4820  0060BC  201E               	addwfc	??_display_waterTemp+3,w,c
  4821  0060BE  6E07               	movwf	wr16@addr+3,c
  4822  0060C0  0E02               	movlw	2
  4823  0060C2  6E09               	movwf	wr16@value+1,c
  4824  0060C4  0E00               	movlw	0
  4825  0060C6  6E08               	movwf	wr16@value,c
  4826  0060C8  EC48  F035         	call	_wr16	;wreg free
  4827  0060CC  0E02               	movlw	2
  4828  0060CE  EC89  F035         	call	_cmd_incrementn
  4829  0060D2  C019  F011         	movff	display_waterTemp@temp,cmd@command
  4830  0060D6  C01A  F012         	movff	display_waterTemp@temp+1,cmd@command+1
  4831  0060DA  0E00               	movlw	0
  4832  0060DC  BE12               	btfsc	cmd@command+1,7,c
  4833  0060DE  0EFF               	movlw	-1
  4834  0060E0  6E13               	movwf	cmd@command+2,c
  4835  0060E2  6E14               	movwf	cmd@command+3,c
  4836  0060E4  EC70  F034         	call	_cmd	;wreg free
  4837  0060E8  0012               	return		;funcret
  4838  0060EA                     __end_of_display_waterTemp:
  4839                           	opt stack 0
  4840                           tblptru	equ	0xFF8
  4841                           tblptrh	equ	0xFF7
  4842                           tblptrl	equ	0xFF6
  4843                           tablat	equ	0xFF5
  4844                           intcon	equ	0xFF2
  4845                           postinc0	equ	0xFEE
  4846                           wreg	equ	0xFE8
  4847                           postdec1	equ	0xFE5
  4848                           plusw1	equ	0xFE3
  4849                           fsr1l	equ	0xFE1
  4850                           plusw2	equ	0xFDB
  4851                           status	equ	0xFD8
  4852                           
  4853 ;; *************** function _display_start *****************
  4854 ;; Defined at:
  4855 ;;		line 21 in file "display.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;		None
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      void 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4873 ;;Total ram usage:        0 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    7
  4876 ;; This function calls:
  4877 ;;		_cmd
  4878 ;; This function is called by:
  4879 ;;		_display
  4880 ;;		_main
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text8
  4885  006920                     __ptext8:
  4886                           	opt stack 0
  4887  006920                     _display_start:
  4888                           	opt stack 23
  4889                           
  4890                           ;display.c: 22:     cmd(4294967040UL);
  4891                           
  4892                           ;incstack = 0
  4893  006920  0E00               	movlw	0
  4894  006922  6E11               	movwf	cmd@command,c
  4895  006924  0EFF               	movlw	255
  4896  006926  6E12               	movwf	cmd@command+1,c
  4897  006928  0EFF               	movlw	255
  4898  00692A  6E13               	movwf	cmd@command+2,c
  4899  00692C  0EFF               	movlw	255
  4900  00692E  6E14               	movwf	cmd@command+3,c
  4901  006930  EC70  F034         	call	_cmd	;wreg free
  4902                           
  4903                           ;display.c: 23:     cmd(((2UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)))
      +                          ;
  4904  006934  0E00               	movlw	0
  4905  006936  6E11               	movwf	cmd@command,c
  4906  006938  0E00               	movlw	0
  4907  00693A  6E12               	movwf	cmd@command+1,c
  4908  00693C  0E00               	movlw	0
  4909  00693E  6E13               	movwf	cmd@command+2,c
  4910  006940  0E02               	movlw	2
  4911  006942  6E14               	movwf	cmd@command+3,c
  4912  006944  EC70  F034         	call	_cmd	;wreg free
  4913                           
  4914                           ;display.c: 24:     cmd(((38UL<<24)|(((1)&1UL)<<2)|(((1)&1UL)<<1)|(((1)&1UL)<<0)));
  4915  006948  0E07               	movlw	7
  4916  00694A  6E11               	movwf	cmd@command,c
  4917  00694C  0E00               	movlw	0
  4918  00694E  6E12               	movwf	cmd@command+1,c
  4919  006950  0E00               	movlw	0
  4920  006952  6E13               	movwf	cmd@command+2,c
  4921  006954  0E26               	movlw	38
  4922  006956  6E14               	movwf	cmd@command+3,c
  4923  006958  EC70  F034         	call	_cmd	;wreg free
  4924  00695C  0012               	return		;funcret
  4925  00695E                     __end_of_display_start:
  4926                           	opt stack 0
  4927                           tblptru	equ	0xFF8
  4928                           tblptrh	equ	0xFF7
  4929                           tblptrl	equ	0xFF6
  4930                           tablat	equ	0xFF5
  4931                           intcon	equ	0xFF2
  4932                           postinc0	equ	0xFEE
  4933                           wreg	equ	0xFE8
  4934                           postdec1	equ	0xFE5
  4935                           plusw1	equ	0xFE3
  4936                           fsr1l	equ	0xFE1
  4937                           plusw2	equ	0xFDB
  4938                           status	equ	0xFD8
  4939                           
  4940 ;; *************** function _display_speed *****************
  4941 ;; Defined at:
  4942 ;;		line 361 in file "display.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  speed           2   24[COMRAM] int 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4958 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4959 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4960 ;;Total ram usage:        6 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    7
  4963 ;; This function calls:
  4964 ;;		_cmd
  4965 ;;		_cmd_incrementn
  4966 ;;		_wr16
  4967 ;; This function is called by:
  4968 ;;		_display
  4969 ;;		_main
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text9
  4974  0060EA                     __ptext9:
  4975                           	opt stack 0
  4976  0060EA                     _display_speed:
  4977                           	opt stack 23
  4978                           
  4979                           ;display.c: 362:     cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL
      +                          )<<0)));
  4980                           
  4981                           ;incstack = 0
  4982  0060EA  0EFF               	movlw	255
  4983  0060EC  6E11               	movwf	cmd@command,c
  4984  0060EE  0EFF               	movlw	255
  4985  0060F0  6E12               	movwf	cmd@command+1,c
  4986  0060F2  0EFF               	movlw	255
  4987  0060F4  6E13               	movwf	cmd@command+2,c
  4988  0060F6  0E04               	movlw	4
  4989  0060F8  6E14               	movwf	cmd@command+3,c
  4990  0060FA  EC70  F034         	call	_cmd	;wreg free
  4991                           
  4992                           ;display.c: 363:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 408);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 130);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 31);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 2048UL);cmd_incrementn(2);cmd(speed);
  4993  0060FE  0E2E               	movlw	46
  4994  006100  6E11               	movwf	cmd@command,c
  4995  006102  0EFF               	movlw	255
  4996  006104  6E12               	movwf	cmd@command+1,c
  4997  006106  0EFF               	movlw	255
  4998  006108  6E13               	movwf	cmd@command+2,c
  4999  00610A  0EFF               	movlw	255
  5000  00610C  6E14               	movwf	cmd@command+3,c
  5001  00610E  EC70  F034         	call	_cmd	;wreg free
  5002  006112  504F               	movf	_cmd_offset,w,c
  5003  006114  6E1B               	movwf	??_display_speed& (0+255),c
  5004  006116  5050               	movf	_cmd_offset+1,w,c
  5005  006118  6E1C               	movwf	(??_display_speed+1)& (0+255),c
  5006  00611A  6A1D               	clrf	(??_display_speed+2)& (0+255),c
  5007  00611C  6A1E               	clrf	(??_display_speed+3)& (0+255),c
  5008  00611E  0E00               	movlw	0
  5009  006120  241B               	addwf	??_display_speed,w,c
  5010  006122  6E04               	movwf	wr16@addr,c
  5011  006124  0E80               	movlw	128
  5012  006126  201C               	addwfc	??_display_speed+1,w,c
  5013  006128  6E05               	movwf	wr16@addr+1,c
  5014  00612A  0E10               	movlw	16
  5015  00612C  201D               	addwfc	??_display_speed+2,w,c
  5016  00612E  6E06               	movwf	wr16@addr+2,c
  5017  006130  0E00               	movlw	0
  5018  006132  201E               	addwfc	??_display_speed+3,w,c
  5019  006134  6E07               	movwf	wr16@addr+3,c
  5020  006136  0E01               	movlw	1
  5021  006138  6E09               	movwf	wr16@value+1,c
  5022  00613A  0E98               	movlw	152
  5023  00613C  6E08               	movwf	wr16@value,c
  5024  00613E  EC48  F035         	call	_wr16	;wreg free
  5025  006142  0E02               	movlw	2
  5026  006144  EC89  F035         	call	_cmd_incrementn
  5027  006148  504F               	movf	_cmd_offset,w,c
  5028  00614A  6E1B               	movwf	??_display_speed& (0+255),c
  5029  00614C  5050               	movf	_cmd_offset+1,w,c
  5030  00614E  6E1C               	movwf	(??_display_speed+1)& (0+255),c
  5031  006150  6A1D               	clrf	(??_display_speed+2)& (0+255),c
  5032  006152  6A1E               	clrf	(??_display_speed+3)& (0+255),c
  5033  006154  0E00               	movlw	0
  5034  006156  241B               	addwf	??_display_speed,w,c
  5035  006158  6E04               	movwf	wr16@addr,c
  5036  00615A  0E80               	movlw	128
  5037  00615C  201C               	addwfc	??_display_speed+1,w,c
  5038  00615E  6E05               	movwf	wr16@addr+1,c
  5039  006160  0E10               	movlw	16
  5040  006162  201D               	addwfc	??_display_speed+2,w,c
  5041  006164  6E06               	movwf	wr16@addr+2,c
  5042  006166  0E00               	movlw	0
  5043  006168  201E               	addwfc	??_display_speed+3,w,c
  5044  00616A  6E07               	movwf	wr16@addr+3,c
  5045  00616C  0E00               	movlw	0
  5046  00616E  6E09               	movwf	wr16@value+1,c
  5047  006170  0E82               	movlw	130
  5048  006172  6E08               	movwf	wr16@value,c
  5049  006174  EC48  F035         	call	_wr16	;wreg free
  5050  006178  0E02               	movlw	2
  5051  00617A  EC89  F035         	call	_cmd_incrementn
  5052  00617E  504F               	movf	_cmd_offset,w,c
  5053  006180  6E1B               	movwf	??_display_speed& (0+255),c
  5054  006182  5050               	movf	_cmd_offset+1,w,c
  5055  006184  6E1C               	movwf	(??_display_speed+1)& (0+255),c
  5056  006186  6A1D               	clrf	(??_display_speed+2)& (0+255),c
  5057  006188  6A1E               	clrf	(??_display_speed+3)& (0+255),c
  5058  00618A  0E00               	movlw	0
  5059  00618C  241B               	addwf	??_display_speed,w,c
  5060  00618E  6E04               	movwf	wr16@addr,c
  5061  006190  0E80               	movlw	128
  5062  006192  201C               	addwfc	??_display_speed+1,w,c
  5063  006194  6E05               	movwf	wr16@addr+1,c
  5064  006196  0E10               	movlw	16
  5065  006198  201D               	addwfc	??_display_speed+2,w,c
  5066  00619A  6E06               	movwf	wr16@addr+2,c
  5067  00619C  0E00               	movlw	0
  5068  00619E  201E               	addwfc	??_display_speed+3,w,c
  5069  0061A0  6E07               	movwf	wr16@addr+3,c
  5070  0061A2  0E00               	movlw	0
  5071  0061A4  6E09               	movwf	wr16@value+1,c
  5072  0061A6  0E1F               	movlw	31
  5073  0061A8  6E08               	movwf	wr16@value,c
  5074  0061AA  EC48  F035         	call	_wr16	;wreg free
  5075  0061AE  0E02               	movlw	2
  5076  0061B0  EC89  F035         	call	_cmd_incrementn
  5077  0061B4  504F               	movf	_cmd_offset,w,c
  5078  0061B6  6E1B               	movwf	??_display_speed& (0+255),c
  5079  0061B8  5050               	movf	_cmd_offset+1,w,c
  5080  0061BA  6E1C               	movwf	(??_display_speed+1)& (0+255),c
  5081  0061BC  6A1D               	clrf	(??_display_speed+2)& (0+255),c
  5082  0061BE  6A1E               	clrf	(??_display_speed+3)& (0+255),c
  5083  0061C0  0E00               	movlw	0
  5084  0061C2  241B               	addwf	??_display_speed,w,c
  5085  0061C4  6E04               	movwf	wr16@addr,c
  5086  0061C6  0E80               	movlw	128
  5087  0061C8  201C               	addwfc	??_display_speed+1,w,c
  5088  0061CA  6E05               	movwf	wr16@addr+1,c
  5089  0061CC  0E10               	movlw	16
  5090  0061CE  201D               	addwfc	??_display_speed+2,w,c
  5091  0061D0  6E06               	movwf	wr16@addr+2,c
  5092  0061D2  0E00               	movlw	0
  5093  0061D4  201E               	addwfc	??_display_speed+3,w,c
  5094  0061D6  6E07               	movwf	wr16@addr+3,c
  5095  0061D8  0E08               	movlw	8
  5096  0061DA  6E09               	movwf	wr16@value+1,c
  5097  0061DC  0E00               	movlw	0
  5098  0061DE  6E08               	movwf	wr16@value,c
  5099  0061E0  EC48  F035         	call	_wr16	;wreg free
  5100  0061E4  0E02               	movlw	2
  5101  0061E6  EC89  F035         	call	_cmd_incrementn
  5102  0061EA  C019  F011         	movff	display_speed@speed,cmd@command
  5103  0061EE  C01A  F012         	movff	display_speed@speed+1,cmd@command+1
  5104  0061F2  0E00               	movlw	0
  5105  0061F4  BE12               	btfsc	cmd@command+1,7,c
  5106  0061F6  0EFF               	movlw	-1
  5107  0061F8  6E13               	movwf	cmd@command+2,c
  5108  0061FA  6E14               	movwf	cmd@command+3,c
  5109  0061FC  EC70  F034         	call	_cmd	;wreg free
  5110  006200  0012               	return		;funcret
  5111  006202                     __end_of_display_speed:
  5112                           	opt stack 0
  5113                           tblptru	equ	0xFF8
  5114                           tblptrh	equ	0xFF7
  5115                           tblptrl	equ	0xFF6
  5116                           tablat	equ	0xFF5
  5117                           intcon	equ	0xFF2
  5118                           postinc0	equ	0xFEE
  5119                           wreg	equ	0xFE8
  5120                           postdec1	equ	0xFE5
  5121                           plusw1	equ	0xFE3
  5122                           fsr1l	equ	0xFE1
  5123                           plusw2	equ	0xFDB
  5124                           status	equ	0xFD8
  5125                           
  5126 ;; *************** function _display_rpm *****************
  5127 ;; Defined at:
  5128 ;;		line 371 in file "display.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  rpm             2   24[COMRAM] int 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;  i               2   42[COMRAM] int 
  5133 ;;  n               2   40[COMRAM] int 
  5134 ;;  diff            2   38[COMRAM] int 
  5135 ;;  second_digit    2   36[COMRAM] int 
  5136 ;;  first_digit     2   34[COMRAM] int 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5147 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5148 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5149 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5150 ;;Total ram usage:       20 bytes
  5151 ;; Hardware stack levels used:    1
  5152 ;; Hardware stack levels required when called:    7
  5153 ;; This function calls:
  5154 ;;		___awdiv
  5155 ;;		___awmod
  5156 ;;		___wmul
  5157 ;;		_cmd
  5158 ;;		_cmd_incrementn
  5159 ;;		_wr16
  5160 ;;		_wr8s
  5161 ;; This function is called by:
  5162 ;;		_display
  5163 ;;		_main
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text10
  5168  003302                     __ptext10:
  5169                           	opt stack 0
  5170  003302                     _display_rpm:
  5171                           	opt stack 23
  5172                           
  5173                           ;display.c: 372:     int first_digit = rpm/1000;
  5174                           
  5175                           ;incstack = 0
  5176  003302  C019  F003         	movff	display_rpm@rpm,___awdiv@dividend
  5177  003306  C01A  F004         	movff	display_rpm@rpm+1,___awdiv@dividend+1
  5178  00330A  0E03               	movlw	3
  5179  00330C  6E06               	movwf	___awdiv@divisor+1,c
  5180  00330E  0EE8               	movlw	232
  5181  003310  6E05               	movwf	___awdiv@divisor,c
  5182  003312  EC25  F033         	call	___awdiv	;wreg free
  5183  003316  C003  F023         	movff	?___awdiv,display_rpm@first_digit
  5184  00331A  C004  F024         	movff	?___awdiv+1,display_rpm@first_digit+1
  5185                           
  5186                           ;display.c: 373:     int second_digit = (rpm/100)%10;
  5187  00331E  0E00               	movlw	0
  5188  003320  6E06               	movwf	___awdiv@divisor+1,c
  5189  003322  0E64               	movlw	100
  5190  003324  6E05               	movwf	___awdiv@divisor,c
  5191  003326  C019  F003         	movff	display_rpm@rpm,___awdiv@dividend
  5192  00332A  C01A  F004         	movff	display_rpm@rpm+1,___awdiv@dividend+1
  5193  00332E  EC25  F033         	call	___awdiv	;wreg free
  5194  003332  C003  F00B         	movff	?___awdiv,___awmod@dividend
  5195  003336  C004  F00C         	movff	?___awdiv+1,___awmod@dividend+1
  5196  00333A  0E00               	movlw	0
  5197  00333C  6E0E               	movwf	___awmod@divisor+1,c
  5198  00333E  0E0A               	movlw	10
  5199  003340  6E0D               	movwf	___awmod@divisor,c
  5200  003342  ECA3  F033         	call	___awmod	;wreg free
  5201  003346  C00B  F025         	movff	?___awmod,display_rpm@second_digit
  5202  00334A  C00C  F026         	movff	?___awmod+1,display_rpm@second_digit+1
  5203                           
  5204                           ;display.c: 374:     int diff = 12500/19;
  5205  00334E  0E02               	movlw	2
  5206  003350  6E28               	movwf	display_rpm@diff+1,c
  5207  003352  0E91               	movlw	145
  5208  003354  6E27               	movwf	display_rpm@diff,c
  5209                           
  5210                           ;display.c: 376:     int n = rpm/diff;
  5211  003356  C019  F003         	movff	display_rpm@rpm,___awdiv@dividend
  5212  00335A  C01A  F004         	movff	display_rpm@rpm+1,___awdiv@dividend+1
  5213  00335E  C027  F005         	movff	display_rpm@diff,___awdiv@divisor
  5214  003362  C028  F006         	movff	display_rpm@diff+1,___awdiv@divisor+1
  5215  003366  EC25  F033         	call	___awdiv	;wreg free
  5216  00336A  C003  F029         	movff	?___awdiv,display_rpm@n
  5217  00336E  C004  F02A         	movff	?___awdiv+1,display_rpm@n+1
  5218                           
  5219                           ;display.c: 378:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 380);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 55);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 31);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 2048UL);cmd_incrementn(2);cmd(first_digit);
  5220  003372  0E2E               	movlw	46
  5221  003374  6E11               	movwf	cmd@command,c
  5222  003376  0EFF               	movlw	255
  5223  003378  6E12               	movwf	cmd@command+1,c
  5224  00337A  0EFF               	movlw	255
  5225  00337C  6E13               	movwf	cmd@command+2,c
  5226  00337E  0EFF               	movlw	255
  5227  003380  6E14               	movwf	cmd@command+3,c
  5228  003382  EC70  F034         	call	_cmd	;wreg free
  5229  003386  504F               	movf	_cmd_offset,w,c
  5230  003388  6E1B               	movwf	??_display_rpm& (0+255),c
  5231  00338A  5050               	movf	_cmd_offset+1,w,c
  5232  00338C  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5233  00338E  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5234  003390  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5235  003392  0E00               	movlw	0
  5236  003394  241B               	addwf	??_display_rpm,w,c
  5237  003396  6E04               	movwf	wr16@addr,c
  5238  003398  0E80               	movlw	128
  5239  00339A  201C               	addwfc	??_display_rpm+1,w,c
  5240  00339C  6E05               	movwf	wr16@addr+1,c
  5241  00339E  0E10               	movlw	16
  5242  0033A0  201D               	addwfc	??_display_rpm+2,w,c
  5243  0033A2  6E06               	movwf	wr16@addr+2,c
  5244  0033A4  0E00               	movlw	0
  5245  0033A6  201E               	addwfc	??_display_rpm+3,w,c
  5246  0033A8  6E07               	movwf	wr16@addr+3,c
  5247  0033AA  0E01               	movlw	1
  5248  0033AC  6E09               	movwf	wr16@value+1,c
  5249  0033AE  0E7C               	movlw	124
  5250  0033B0  6E08               	movwf	wr16@value,c
  5251  0033B2  EC48  F035         	call	_wr16	;wreg free
  5252  0033B6  0E02               	movlw	2
  5253  0033B8  EC89  F035         	call	_cmd_incrementn
  5254  0033BC  504F               	movf	_cmd_offset,w,c
  5255  0033BE  6E1B               	movwf	??_display_rpm& (0+255),c
  5256  0033C0  5050               	movf	_cmd_offset+1,w,c
  5257  0033C2  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5258  0033C4  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5259  0033C6  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5260  0033C8  0E00               	movlw	0
  5261  0033CA  241B               	addwf	??_display_rpm,w,c
  5262  0033CC  6E04               	movwf	wr16@addr,c
  5263  0033CE  0E80               	movlw	128
  5264  0033D0  201C               	addwfc	??_display_rpm+1,w,c
  5265  0033D2  6E05               	movwf	wr16@addr+1,c
  5266  0033D4  0E10               	movlw	16
  5267  0033D6  201D               	addwfc	??_display_rpm+2,w,c
  5268  0033D8  6E06               	movwf	wr16@addr+2,c
  5269  0033DA  0E00               	movlw	0
  5270  0033DC  201E               	addwfc	??_display_rpm+3,w,c
  5271  0033DE  6E07               	movwf	wr16@addr+3,c
  5272  0033E0  0E00               	movlw	0
  5273  0033E2  6E09               	movwf	wr16@value+1,c
  5274  0033E4  0E37               	movlw	55
  5275  0033E6  6E08               	movwf	wr16@value,c
  5276  0033E8  EC48  F035         	call	_wr16	;wreg free
  5277  0033EC  0E02               	movlw	2
  5278  0033EE  EC89  F035         	call	_cmd_incrementn
  5279  0033F2  504F               	movf	_cmd_offset,w,c
  5280  0033F4  6E1B               	movwf	??_display_rpm& (0+255),c
  5281  0033F6  5050               	movf	_cmd_offset+1,w,c
  5282  0033F8  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5283  0033FA  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5284  0033FC  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5285  0033FE  0E00               	movlw	0
  5286  003400  241B               	addwf	??_display_rpm,w,c
  5287  003402  6E04               	movwf	wr16@addr,c
  5288  003404  0E80               	movlw	128
  5289  003406  201C               	addwfc	??_display_rpm+1,w,c
  5290  003408  6E05               	movwf	wr16@addr+1,c
  5291  00340A  0E10               	movlw	16
  5292  00340C  201D               	addwfc	??_display_rpm+2,w,c
  5293  00340E  6E06               	movwf	wr16@addr+2,c
  5294  003410  0E00               	movlw	0
  5295  003412  201E               	addwfc	??_display_rpm+3,w,c
  5296  003414  6E07               	movwf	wr16@addr+3,c
  5297  003416  0E00               	movlw	0
  5298  003418  6E09               	movwf	wr16@value+1,c
  5299  00341A  0E1F               	movlw	31
  5300  00341C  6E08               	movwf	wr16@value,c
  5301  00341E  EC48  F035         	call	_wr16	;wreg free
  5302  003422  0E02               	movlw	2
  5303  003424  EC89  F035         	call	_cmd_incrementn
  5304  003428  504F               	movf	_cmd_offset,w,c
  5305  00342A  6E1B               	movwf	??_display_rpm& (0+255),c
  5306  00342C  5050               	movf	_cmd_offset+1,w,c
  5307  00342E  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5308  003430  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5309  003432  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5310  003434  0E00               	movlw	0
  5311  003436  241B               	addwf	??_display_rpm,w,c
  5312  003438  6E04               	movwf	wr16@addr,c
  5313  00343A  0E80               	movlw	128
  5314  00343C  201C               	addwfc	??_display_rpm+1,w,c
  5315  00343E  6E05               	movwf	wr16@addr+1,c
  5316  003440  0E10               	movlw	16
  5317  003442  201D               	addwfc	??_display_rpm+2,w,c
  5318  003444  6E06               	movwf	wr16@addr+2,c
  5319  003446  0E00               	movlw	0
  5320  003448  201E               	addwfc	??_display_rpm+3,w,c
  5321  00344A  6E07               	movwf	wr16@addr+3,c
  5322  00344C  0E08               	movlw	8
  5323  00344E  6E09               	movwf	wr16@value+1,c
  5324  003450  0E00               	movlw	0
  5325  003452  6E08               	movwf	wr16@value,c
  5326  003454  EC48  F035         	call	_wr16	;wreg free
  5327  003458  0E02               	movlw	2
  5328  00345A  EC89  F035         	call	_cmd_incrementn
  5329  00345E  C023  F011         	movff	display_rpm@first_digit,cmd@command
  5330  003462  C024  F012         	movff	display_rpm@first_digit+1,cmd@command+1
  5331  003466  0E00               	movlw	0
  5332  003468  BE12               	btfsc	cmd@command+1,7,c
  5333  00346A  0EFF               	movlw	-1
  5334  00346C  6E13               	movwf	cmd@command+2,c
  5335  00346E  6E14               	movwf	cmd@command+3,c
  5336  003470  EC70  F034         	call	_cmd	;wreg free
  5337                           
  5338                           ;display.c: 379:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 397);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 55);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 31);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd(second_digit);
  5339  003474  0E2E               	movlw	46
  5340  003476  6E11               	movwf	cmd@command,c
  5341  003478  0EFF               	movlw	255
  5342  00347A  6E12               	movwf	cmd@command+1,c
  5343  00347C  0EFF               	movlw	255
  5344  00347E  6E13               	movwf	cmd@command+2,c
  5345  003480  0EFF               	movlw	255
  5346  003482  6E14               	movwf	cmd@command+3,c
  5347  003484  EC70  F034         	call	_cmd	;wreg free
  5348  003488  504F               	movf	_cmd_offset,w,c
  5349  00348A  6E1B               	movwf	??_display_rpm& (0+255),c
  5350  00348C  5050               	movf	_cmd_offset+1,w,c
  5351  00348E  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5352  003490  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5353  003492  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5354  003494  0E00               	movlw	0
  5355  003496  241B               	addwf	??_display_rpm,w,c
  5356  003498  6E04               	movwf	wr16@addr,c
  5357  00349A  0E80               	movlw	128
  5358  00349C  201C               	addwfc	??_display_rpm+1,w,c
  5359  00349E  6E05               	movwf	wr16@addr+1,c
  5360  0034A0  0E10               	movlw	16
  5361  0034A2  201D               	addwfc	??_display_rpm+2,w,c
  5362  0034A4  6E06               	movwf	wr16@addr+2,c
  5363  0034A6  0E00               	movlw	0
  5364  0034A8  201E               	addwfc	??_display_rpm+3,w,c
  5365  0034AA  6E07               	movwf	wr16@addr+3,c
  5366  0034AC  0E01               	movlw	1
  5367  0034AE  6E09               	movwf	wr16@value+1,c
  5368  0034B0  0E8D               	movlw	141
  5369  0034B2  6E08               	movwf	wr16@value,c
  5370  0034B4  EC48  F035         	call	_wr16	;wreg free
  5371  0034B8  0E02               	movlw	2
  5372  0034BA  EC89  F035         	call	_cmd_incrementn
  5373  0034BE  504F               	movf	_cmd_offset,w,c
  5374  0034C0  6E1B               	movwf	??_display_rpm& (0+255),c
  5375  0034C2  5050               	movf	_cmd_offset+1,w,c
  5376  0034C4  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5377  0034C6  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5378  0034C8  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5379  0034CA  0E00               	movlw	0
  5380  0034CC  241B               	addwf	??_display_rpm,w,c
  5381  0034CE  6E04               	movwf	wr16@addr,c
  5382  0034D0  0E80               	movlw	128
  5383  0034D2  201C               	addwfc	??_display_rpm+1,w,c
  5384  0034D4  6E05               	movwf	wr16@addr+1,c
  5385  0034D6  0E10               	movlw	16
  5386  0034D8  201D               	addwfc	??_display_rpm+2,w,c
  5387  0034DA  6E06               	movwf	wr16@addr+2,c
  5388  0034DC  0E00               	movlw	0
  5389  0034DE  201E               	addwfc	??_display_rpm+3,w,c
  5390  0034E0  6E07               	movwf	wr16@addr+3,c
  5391  0034E2  0E00               	movlw	0
  5392  0034E4  6E09               	movwf	wr16@value+1,c
  5393  0034E6  0E37               	movlw	55
  5394  0034E8  6E08               	movwf	wr16@value,c
  5395  0034EA  EC48  F035         	call	_wr16	;wreg free
  5396  0034EE  0E02               	movlw	2
  5397  0034F0  EC89  F035         	call	_cmd_incrementn
  5398  0034F4  504F               	movf	_cmd_offset,w,c
  5399  0034F6  6E1B               	movwf	??_display_rpm& (0+255),c
  5400  0034F8  5050               	movf	_cmd_offset+1,w,c
  5401  0034FA  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5402  0034FC  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5403  0034FE  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5404  003500  0E00               	movlw	0
  5405  003502  241B               	addwf	??_display_rpm,w,c
  5406  003504  6E04               	movwf	wr16@addr,c
  5407  003506  0E80               	movlw	128
  5408  003508  201C               	addwfc	??_display_rpm+1,w,c
  5409  00350A  6E05               	movwf	wr16@addr+1,c
  5410  00350C  0E10               	movlw	16
  5411  00350E  201D               	addwfc	??_display_rpm+2,w,c
  5412  003510  6E06               	movwf	wr16@addr+2,c
  5413  003512  0E00               	movlw	0
  5414  003514  201E               	addwfc	??_display_rpm+3,w,c
  5415  003516  6E07               	movwf	wr16@addr+3,c
  5416  003518  0E00               	movlw	0
  5417  00351A  6E09               	movwf	wr16@value+1,c
  5418  00351C  0E1F               	movlw	31
  5419  00351E  6E08               	movwf	wr16@value,c
  5420  003520  EC48  F035         	call	_wr16	;wreg free
  5421  003524  0E02               	movlw	2
  5422  003526  EC89  F035         	call	_cmd_incrementn
  5423  00352A  504F               	movf	_cmd_offset,w,c
  5424  00352C  6E1B               	movwf	??_display_rpm& (0+255),c
  5425  00352E  5050               	movf	_cmd_offset+1,w,c
  5426  003530  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5427  003532  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5428  003534  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5429  003536  0E00               	movlw	0
  5430  003538  241B               	addwf	??_display_rpm,w,c
  5431  00353A  6E04               	movwf	wr16@addr,c
  5432  00353C  0E80               	movlw	128
  5433  00353E  201C               	addwfc	??_display_rpm+1,w,c
  5434  003540  6E05               	movwf	wr16@addr+1,c
  5435  003542  0E10               	movlw	16
  5436  003544  201D               	addwfc	??_display_rpm+2,w,c
  5437  003546  6E06               	movwf	wr16@addr+2,c
  5438  003548  0E00               	movlw	0
  5439  00354A  201E               	addwfc	??_display_rpm+3,w,c
  5440  00354C  6E07               	movwf	wr16@addr+3,c
  5441  00354E  0E00               	movlw	0
  5442  003550  6E09               	movwf	wr16@value+1,c
  5443  003552  0E00               	movlw	0
  5444  003554  6E08               	movwf	wr16@value,c
  5445  003556  EC48  F035         	call	_wr16	;wreg free
  5446  00355A  0E02               	movlw	2
  5447  00355C  EC89  F035         	call	_cmd_incrementn
  5448  003560  C025  F011         	movff	display_rpm@second_digit,cmd@command
  5449  003564  C026  F012         	movff	display_rpm@second_digit+1,cmd@command+1
  5450  003568  0E00               	movlw	0
  5451  00356A  BE12               	btfsc	cmd@command+1,7,c
  5452  00356C  0EFF               	movlw	-1
  5453  00356E  6E13               	movwf	cmd@command+2,c
  5454  003570  6E14               	movwf	cmd@command+3,c
  5455  003572  EC70  F034         	call	_cmd	;wreg free
  5456                           
  5457                           ;display.c: 380:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 380);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 55);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 31);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44UL +cmd_offset, "."));
  5458  003576  0E0C               	movlw	12
  5459  003578  6E11               	movwf	cmd@command,c
  5460  00357A  0EFF               	movlw	255
  5461  00357C  6E12               	movwf	cmd@command+1,c
  5462  00357E  0EFF               	movlw	255
  5463  003580  6E13               	movwf	cmd@command+2,c
  5464  003582  0EFF               	movlw	255
  5465  003584  6E14               	movwf	cmd@command+3,c
  5466  003586  EC70  F034         	call	_cmd	;wreg free
  5467  00358A  504F               	movf	_cmd_offset,w,c
  5468  00358C  6E1B               	movwf	??_display_rpm& (0+255),c
  5469  00358E  5050               	movf	_cmd_offset+1,w,c
  5470  003590  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5471  003592  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5472  003594  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5473  003596  0E00               	movlw	0
  5474  003598  241B               	addwf	??_display_rpm,w,c
  5475  00359A  6E04               	movwf	wr16@addr,c
  5476  00359C  0E80               	movlw	128
  5477  00359E  201C               	addwfc	??_display_rpm+1,w,c
  5478  0035A0  6E05               	movwf	wr16@addr+1,c
  5479  0035A2  0E10               	movlw	16
  5480  0035A4  201D               	addwfc	??_display_rpm+2,w,c
  5481  0035A6  6E06               	movwf	wr16@addr+2,c
  5482  0035A8  0E00               	movlw	0
  5483  0035AA  201E               	addwfc	??_display_rpm+3,w,c
  5484  0035AC  6E07               	movwf	wr16@addr+3,c
  5485  0035AE  0E01               	movlw	1
  5486  0035B0  6E09               	movwf	wr16@value+1,c
  5487  0035B2  0E7C               	movlw	124
  5488  0035B4  6E08               	movwf	wr16@value,c
  5489  0035B6  EC48  F035         	call	_wr16	;wreg free
  5490  0035BA  0E02               	movlw	2
  5491  0035BC  EC89  F035         	call	_cmd_incrementn
  5492  0035C0  504F               	movf	_cmd_offset,w,c
  5493  0035C2  6E1B               	movwf	??_display_rpm& (0+255),c
  5494  0035C4  5050               	movf	_cmd_offset+1,w,c
  5495  0035C6  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5496  0035C8  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5497  0035CA  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5498  0035CC  0E00               	movlw	0
  5499  0035CE  241B               	addwf	??_display_rpm,w,c
  5500  0035D0  6E04               	movwf	wr16@addr,c
  5501  0035D2  0E80               	movlw	128
  5502  0035D4  201C               	addwfc	??_display_rpm+1,w,c
  5503  0035D6  6E05               	movwf	wr16@addr+1,c
  5504  0035D8  0E10               	movlw	16
  5505  0035DA  201D               	addwfc	??_display_rpm+2,w,c
  5506  0035DC  6E06               	movwf	wr16@addr+2,c
  5507  0035DE  0E00               	movlw	0
  5508  0035E0  201E               	addwfc	??_display_rpm+3,w,c
  5509  0035E2  6E07               	movwf	wr16@addr+3,c
  5510  0035E4  0E00               	movlw	0
  5511  0035E6  6E09               	movwf	wr16@value+1,c
  5512  0035E8  0E37               	movlw	55
  5513  0035EA  6E08               	movwf	wr16@value,c
  5514  0035EC  EC48  F035         	call	_wr16	;wreg free
  5515  0035F0  0E02               	movlw	2
  5516  0035F2  EC89  F035         	call	_cmd_incrementn
  5517  0035F6  504F               	movf	_cmd_offset,w,c
  5518  0035F8  6E1B               	movwf	??_display_rpm& (0+255),c
  5519  0035FA  5050               	movf	_cmd_offset+1,w,c
  5520  0035FC  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5521  0035FE  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5522  003600  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5523  003602  0E00               	movlw	0
  5524  003604  241B               	addwf	??_display_rpm,w,c
  5525  003606  6E04               	movwf	wr16@addr,c
  5526  003608  0E80               	movlw	128
  5527  00360A  201C               	addwfc	??_display_rpm+1,w,c
  5528  00360C  6E05               	movwf	wr16@addr+1,c
  5529  00360E  0E10               	movlw	16
  5530  003610  201D               	addwfc	??_display_rpm+2,w,c
  5531  003612  6E06               	movwf	wr16@addr+2,c
  5532  003614  0E00               	movlw	0
  5533  003616  201E               	addwfc	??_display_rpm+3,w,c
  5534  003618  6E07               	movwf	wr16@addr+3,c
  5535  00361A  0E00               	movlw	0
  5536  00361C  6E09               	movwf	wr16@value+1,c
  5537  00361E  0E1F               	movlw	31
  5538  003620  6E08               	movwf	wr16@value,c
  5539  003622  EC48  F035         	call	_wr16	;wreg free
  5540  003626  0E02               	movlw	2
  5541  003628  EC89  F035         	call	_cmd_incrementn
  5542  00362C  504F               	movf	_cmd_offset,w,c
  5543  00362E  6E1B               	movwf	??_display_rpm& (0+255),c
  5544  003630  5050               	movf	_cmd_offset+1,w,c
  5545  003632  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5546  003634  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5547  003636  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5548  003638  0E00               	movlw	0
  5549  00363A  241B               	addwf	??_display_rpm,w,c
  5550  00363C  6E04               	movwf	wr16@addr,c
  5551  00363E  0E80               	movlw	128
  5552  003640  201C               	addwfc	??_display_rpm+1,w,c
  5553  003642  6E05               	movwf	wr16@addr+1,c
  5554  003644  0E10               	movlw	16
  5555  003646  201D               	addwfc	??_display_rpm+2,w,c
  5556  003648  6E06               	movwf	wr16@addr+2,c
  5557  00364A  0E00               	movlw	0
  5558  00364C  201E               	addwfc	??_display_rpm+3,w,c
  5559  00364E  6E07               	movwf	wr16@addr+3,c
  5560  003650  0E00               	movlw	0
  5561  003652  6E09               	movwf	wr16@value+1,c
  5562  003654  0E00               	movlw	0
  5563  003656  6E08               	movwf	wr16@value,c
  5564  003658  EC48  F035         	call	_wr16	;wreg free
  5565  00365C  0E02               	movlw	2
  5566  00365E  EC89  F035         	call	_cmd_incrementn
  5567  003662  504F               	movf	_cmd_offset,w,c
  5568  003664  6E1B               	movwf	??_display_rpm& (0+255),c
  5569  003666  5050               	movf	_cmd_offset+1,w,c
  5570  003668  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5571  00366A  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5572  00366C  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5573  00366E  0E00               	movlw	0
  5574  003670  241B               	addwf	??_display_rpm,w,c
  5575  003672  6E09               	movwf	wr8s@addr,c
  5576  003674  0E80               	movlw	128
  5577  003676  201C               	addwfc	??_display_rpm+1,w,c
  5578  003678  6E0A               	movwf	wr8s@addr+1,c
  5579  00367A  0E10               	movlw	16
  5580  00367C  201D               	addwfc	??_display_rpm+2,w,c
  5581  00367E  6E0B               	movwf	wr8s@addr+2,c
  5582  003680  0E00               	movlw	0
  5583  003682  201E               	addwfc	??_display_rpm+3,w,c
  5584  003684  6E0C               	movwf	wr8s@addr+3,c
  5585  003686  0E97               	movlw	low STR_21
  5586  003688  6E0D               	movwf	wr8s@s,c
  5587  00368A  0E0F               	movlw	high STR_21
  5588  00368C  6E0E               	movwf	wr8s@s+1,c
  5589  00368E  EC67  F033         	call	_wr8s	;wreg free
  5590  003692  EC89  F035         	call	_cmd_incrementn
  5591                           
  5592                           ;display.c: 381:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 425);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 74);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44UL +cmd_offset, "k"));
  5593  003696  0E0C               	movlw	12
  5594  003698  6E11               	movwf	cmd@command,c
  5595  00369A  0EFF               	movlw	255
  5596  00369C  6E12               	movwf	cmd@command+1,c
  5597  00369E  0EFF               	movlw	255
  5598  0036A0  6E13               	movwf	cmd@command+2,c
  5599  0036A2  0EFF               	movlw	255
  5600  0036A4  6E14               	movwf	cmd@command+3,c
  5601  0036A6  EC70  F034         	call	_cmd	;wreg free
  5602  0036AA  504F               	movf	_cmd_offset,w,c
  5603  0036AC  6E1B               	movwf	??_display_rpm& (0+255),c
  5604  0036AE  5050               	movf	_cmd_offset+1,w,c
  5605  0036B0  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5606  0036B2  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5607  0036B4  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5608  0036B6  0E00               	movlw	0
  5609  0036B8  241B               	addwf	??_display_rpm,w,c
  5610  0036BA  6E04               	movwf	wr16@addr,c
  5611  0036BC  0E80               	movlw	128
  5612  0036BE  201C               	addwfc	??_display_rpm+1,w,c
  5613  0036C0  6E05               	movwf	wr16@addr+1,c
  5614  0036C2  0E10               	movlw	16
  5615  0036C4  201D               	addwfc	??_display_rpm+2,w,c
  5616  0036C6  6E06               	movwf	wr16@addr+2,c
  5617  0036C8  0E00               	movlw	0
  5618  0036CA  201E               	addwfc	??_display_rpm+3,w,c
  5619  0036CC  6E07               	movwf	wr16@addr+3,c
  5620  0036CE  0E01               	movlw	1
  5621  0036D0  6E09               	movwf	wr16@value+1,c
  5622  0036D2  0EA9               	movlw	169
  5623  0036D4  6E08               	movwf	wr16@value,c
  5624  0036D6  EC48  F035         	call	_wr16	;wreg free
  5625  0036DA  0E02               	movlw	2
  5626  0036DC  EC89  F035         	call	_cmd_incrementn
  5627  0036E0  504F               	movf	_cmd_offset,w,c
  5628  0036E2  6E1B               	movwf	??_display_rpm& (0+255),c
  5629  0036E4  5050               	movf	_cmd_offset+1,w,c
  5630  0036E6  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5631  0036E8  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5632  0036EA  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5633  0036EC  0E00               	movlw	0
  5634  0036EE  241B               	addwf	??_display_rpm,w,c
  5635  0036F0  6E04               	movwf	wr16@addr,c
  5636  0036F2  0E80               	movlw	128
  5637  0036F4  201C               	addwfc	??_display_rpm+1,w,c
  5638  0036F6  6E05               	movwf	wr16@addr+1,c
  5639  0036F8  0E10               	movlw	16
  5640  0036FA  201D               	addwfc	??_display_rpm+2,w,c
  5641  0036FC  6E06               	movwf	wr16@addr+2,c
  5642  0036FE  0E00               	movlw	0
  5643  003700  201E               	addwfc	??_display_rpm+3,w,c
  5644  003702  6E07               	movwf	wr16@addr+3,c
  5645  003704  0E00               	movlw	0
  5646  003706  6E09               	movwf	wr16@value+1,c
  5647  003708  0E4A               	movlw	74
  5648  00370A  6E08               	movwf	wr16@value,c
  5649  00370C  EC48  F035         	call	_wr16	;wreg free
  5650  003710  0E02               	movlw	2
  5651  003712  EC89  F035         	call	_cmd_incrementn
  5652  003716  504F               	movf	_cmd_offset,w,c
  5653  003718  6E1B               	movwf	??_display_rpm& (0+255),c
  5654  00371A  5050               	movf	_cmd_offset+1,w,c
  5655  00371C  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5656  00371E  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5657  003720  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5658  003722  0E00               	movlw	0
  5659  003724  241B               	addwf	??_display_rpm,w,c
  5660  003726  6E04               	movwf	wr16@addr,c
  5661  003728  0E80               	movlw	128
  5662  00372A  201C               	addwfc	??_display_rpm+1,w,c
  5663  00372C  6E05               	movwf	wr16@addr+1,c
  5664  00372E  0E10               	movlw	16
  5665  003730  201D               	addwfc	??_display_rpm+2,w,c
  5666  003732  6E06               	movwf	wr16@addr+2,c
  5667  003734  0E00               	movlw	0
  5668  003736  201E               	addwfc	??_display_rpm+3,w,c
  5669  003738  6E07               	movwf	wr16@addr+3,c
  5670  00373A  0E00               	movlw	0
  5671  00373C  6E09               	movwf	wr16@value+1,c
  5672  00373E  0E1C               	movlw	28
  5673  003740  6E08               	movwf	wr16@value,c
  5674  003742  EC48  F035         	call	_wr16	;wreg free
  5675  003746  0E02               	movlw	2
  5676  003748  EC89  F035         	call	_cmd_incrementn
  5677  00374C  504F               	movf	_cmd_offset,w,c
  5678  00374E  6E1B               	movwf	??_display_rpm& (0+255),c
  5679  003750  5050               	movf	_cmd_offset+1,w,c
  5680  003752  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5681  003754  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5682  003756  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5683  003758  0E00               	movlw	0
  5684  00375A  241B               	addwf	??_display_rpm,w,c
  5685  00375C  6E04               	movwf	wr16@addr,c
  5686  00375E  0E80               	movlw	128
  5687  003760  201C               	addwfc	??_display_rpm+1,w,c
  5688  003762  6E05               	movwf	wr16@addr+1,c
  5689  003764  0E10               	movlw	16
  5690  003766  201D               	addwfc	??_display_rpm+2,w,c
  5691  003768  6E06               	movwf	wr16@addr+2,c
  5692  00376A  0E00               	movlw	0
  5693  00376C  201E               	addwfc	??_display_rpm+3,w,c
  5694  00376E  6E07               	movwf	wr16@addr+3,c
  5695  003770  0E00               	movlw	0
  5696  003772  6E09               	movwf	wr16@value+1,c
  5697  003774  0E00               	movlw	0
  5698  003776  6E08               	movwf	wr16@value,c
  5699  003778  EC48  F035         	call	_wr16	;wreg free
  5700  00377C  0E02               	movlw	2
  5701  00377E  EC89  F035         	call	_cmd_incrementn
  5702  003782  504F               	movf	_cmd_offset,w,c
  5703  003784  6E1B               	movwf	??_display_rpm& (0+255),c
  5704  003786  5050               	movf	_cmd_offset+1,w,c
  5705  003788  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5706  00378A  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5707  00378C  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5708  00378E  0E00               	movlw	0
  5709  003790  241B               	addwf	??_display_rpm,w,c
  5710  003792  6E09               	movwf	wr8s@addr,c
  5711  003794  0E80               	movlw	128
  5712  003796  201C               	addwfc	??_display_rpm+1,w,c
  5713  003798  6E0A               	movwf	wr8s@addr+1,c
  5714  00379A  0E10               	movlw	16
  5715  00379C  201D               	addwfc	??_display_rpm+2,w,c
  5716  00379E  6E0B               	movwf	wr8s@addr+2,c
  5717  0037A0  0E00               	movlw	0
  5718  0037A2  201E               	addwfc	??_display_rpm+3,w,c
  5719  0037A4  6E0C               	movwf	wr8s@addr+3,c
  5720  0037A6  0E9B               	movlw	low STR_36
  5721  0037A8  6E0D               	movwf	wr8s@s,c
  5722  0037AA  0E0F               	movlw	high STR_36
  5723  0037AC  6E0E               	movwf	wr8s@s+1,c
  5724  0037AE  EC67  F033         	call	_wr8s	;wreg free
  5725  0037B2  EC89  F035         	call	_cmd_incrementn
  5726                           
  5727                           ;display.c: 383:     cmd(((31UL<<24)|(((2UL)&15UL)<<0)));
  5728  0037B6  0E02               	movlw	2
  5729  0037B8  6E11               	movwf	cmd@command,c
  5730  0037BA  0E00               	movlw	0
  5731  0037BC  6E12               	movwf	cmd@command+1,c
  5732  0037BE  0E00               	movlw	0
  5733  0037C0  6E13               	movwf	cmd@command+2,c
  5734  0037C2  0E1F               	movlw	31
  5735  0037C4  6E14               	movwf	cmd@command+3,c
  5736  0037C6  EC70  F034         	call	_cmd	;wreg free
  5737                           
  5738                           ;display.c: 384:     cmd(((13UL<<24)|(((150)&8191UL)<<0)));
  5739  0037CA  0E96               	movlw	150
  5740  0037CC  6E11               	movwf	cmd@command,c
  5741  0037CE  0E00               	movlw	0
  5742  0037D0  6E12               	movwf	cmd@command+1,c
  5743  0037D2  0E00               	movlw	0
  5744  0037D4  6E13               	movwf	cmd@command+2,c
  5745  0037D6  0E0D               	movlw	13
  5746  0037D8  6E14               	movwf	cmd@command+3,c
  5747  0037DA  EC70  F034         	call	_cmd	;wreg free
  5748                           
  5749                           ;display.c: 385:     cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL)<<0
      +                          )));
  5750  0037DE  0E00               	movlw	0
  5751  0037E0  6E11               	movwf	cmd@command,c
  5752  0037E2  0EFF               	movlw	255
  5753  0037E4  6E12               	movwf	cmd@command+1,c
  5754  0037E6  0E00               	movlw	0
  5755  0037E8  6E13               	movwf	cmd@command+2,c
  5756  0037EA  0E04               	movlw	4
  5757  0037EC  6E14               	movwf	cmd@command+3,c
  5758  0037EE  EC70  F034         	call	_cmd	;wreg free
  5759                           
  5760                           ;display.c: 386:     for(int i = 0; i<n; i++) {
  5761  0037F2  0E00               	movlw	0
  5762  0037F4  6E2C               	movwf	display_rpm@i+1,c
  5763  0037F6  0E00               	movlw	0
  5764  0037F8  6E2B               	movwf	display_rpm@i,c
  5765  0037FA  D05D               	goto	l730
  5766  0037FC                     
  5767                           ;display.c: 387:         if(i >= 10) cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<
      +                          8)|(((0)&255UL)<<0)));
  5768  0037FC  BE2C               	btfsc	display_rpm@i+1,7,c
  5769  0037FE  D010               	goto	l732
  5770  003800  502C               	movf	display_rpm@i+1,w,c
  5771  003802  E104               	bnz	u1380
  5772  003804  0E0A               	movlw	10
  5773  003806  5C2B               	subwf	display_rpm@i,w,c
  5774  003808  A0D8               	btfss	status,0,c
  5775  00380A  D00A               	goto	l732
  5776  00380C                     u1380:
  5777  00380C  0E00               	movlw	0
  5778  00380E  6E11               	movwf	cmd@command,c
  5779  003810  0EFF               	movlw	255
  5780  003812  6E12               	movwf	cmd@command+1,c
  5781  003814  0EFF               	movlw	255
  5782  003816  6E13               	movwf	cmd@command+2,c
  5783  003818  0E04               	movlw	4
  5784  00381A  6E14               	movwf	cmd@command+3,c
  5785  00381C  EC70  F034         	call	_cmd	;wreg free
  5786  003820                     l732:
  5787                           
  5788                           ;display.c: 388:         if(i >= 15) cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)
      +                          |(((0)&255UL)<<0)));
  5789  003820  BE2C               	btfsc	display_rpm@i+1,7,c
  5790  003822  D010               	goto	l733
  5791  003824  502C               	movf	display_rpm@i+1,w,c
  5792  003826  E104               	bnz	u1390
  5793  003828  0E0F               	movlw	15
  5794  00382A  5C2B               	subwf	display_rpm@i,w,c
  5795  00382C  A0D8               	btfss	status,0,c
  5796  00382E  D00A               	goto	l733
  5797  003830                     u1390:
  5798  003830  0E00               	movlw	0
  5799  003832  6E11               	movwf	cmd@command,c
  5800  003834  0E00               	movlw	0
  5801  003836  6E12               	movwf	cmd@command+1,c
  5802  003838  0EFF               	movlw	255
  5803  00383A  6E13               	movwf	cmd@command+2,c
  5804  00383C  0E04               	movlw	4
  5805  00383E  6E14               	movwf	cmd@command+3,c
  5806  003840  EC70  F034         	call	_cmd	;wreg free
  5807  003844                     l733:
  5808                           
  5809                           ;display.c: 389:         cmd(((2UL<<30)|(((15 + (i * 25))&511UL)<<21)|(((20)&511UL)<<12)
      +                          |(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  5810  003844  C02B  F003         	movff	display_rpm@i,___wmul@multiplier
  5811  003848  C02C  F004         	movff	display_rpm@i+1,___wmul@multiplier+1
  5812  00384C  0E00               	movlw	0
  5813  00384E  6E06               	movwf	___wmul@multiplicand+1,c
  5814  003850  0E19               	movlw	25
  5815  003852  6E05               	movwf	___wmul@multiplicand,c
  5816  003854  EC35  F035         	call	___wmul	;wreg free
  5817  003858  0E0F               	movlw	15
  5818  00385A  2403               	addwf	?___wmul,w,c
  5819  00385C  6E1B               	movwf	??_display_rpm& (0+255),c
  5820  00385E  0E00               	movlw	0
  5821  003860  2004               	addwfc	?___wmul+1,w,c
  5822  003862  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5823  003864  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5824  003866  BE1C               	btfsc	(??_display_rpm+1)& (0+255),7,c
  5825  003868  061D               	decf	(??_display_rpm+2)& (0+255),f,c
  5826  00386A  501D               	movf	(??_display_rpm+2)& (0+255),w,c
  5827  00386C  6E1E               	movwf	(??_display_rpm+3)& (0+255),c
  5828  00386E  0EFF               	movlw	255
  5829  003870  141B               	andwf	??_display_rpm,w,c
  5830  003872  6E1F               	movwf	(??_display_rpm+4)& (0+255),c
  5831  003874  0E01               	movlw	1
  5832  003876  141C               	andwf	??_display_rpm+1,w,c
  5833  003878  6E20               	movwf	(??_display_rpm+5)& (0+255),c
  5834  00387A  0E00               	movlw	0
  5835  00387C  141D               	andwf	??_display_rpm+2,w,c
  5836  00387E  6E21               	movwf	(??_display_rpm+6)& (0+255),c
  5837  003880  0E00               	movlw	0
  5838  003882  141E               	andwf	??_display_rpm+3,w,c
  5839  003884  6E22               	movwf	(??_display_rpm+7)& (0+255),c
  5840  003886  0E15               	movlw	21
  5841  003888                     u1405:
  5842  003888  90D8               	bcf	status,0,c
  5843  00388A  361F               	rlcf	??_display_rpm+4,f,c
  5844  00388C  3620               	rlcf	??_display_rpm+5,f,c
  5845  00388E  3621               	rlcf	??_display_rpm+6,f,c
  5846  003890  3622               	rlcf	??_display_rpm+7,f,c
  5847  003892  2EE8               	decfsz	wreg,f,c
  5848  003894  D7F9               	goto	u1405
  5849  003896  0E00               	movlw	0
  5850  003898  101F               	iorwf	??_display_rpm+4,w,c
  5851  00389A  6E11               	movwf	cmd@command,c
  5852  00389C  0E40               	movlw	64
  5853  00389E  1020               	iorwf	??_display_rpm+5,w,c
  5854  0038A0  6E12               	movwf	cmd@command+1,c
  5855  0038A2  0E01               	movlw	1
  5856  0038A4  1021               	iorwf	??_display_rpm+6,w,c
  5857  0038A6  6E13               	movwf	cmd@command+2,c
  5858  0038A8  0E80               	movlw	128
  5859  0038AA  1022               	iorwf	??_display_rpm+7,w,c
  5860  0038AC  6E14               	movwf	cmd@command+3,c
  5861  0038AE  EC70  F034         	call	_cmd	;wreg free
  5862                           
  5863                           ;display.c: 390:     }
  5864  0038B2  4A2B               	infsnz	display_rpm@i,f,c
  5865  0038B4  2A2C               	incf	display_rpm@i+1,f,c
  5866  0038B6                     l730:
  5867  0038B6  5029               	movf	display_rpm@n,w,c
  5868  0038B8  5C2B               	subwf	display_rpm@i,w,c
  5869  0038BA  502C               	movf	display_rpm@i+1,w,c
  5870  0038BC  0A80               	xorlw	128
  5871  0038BE  6E1B               	movwf	??_display_rpm& (0+255),c
  5872  0038C0  502A               	movf	display_rpm@n+1,w,c
  5873  0038C2  0A80               	xorlw	128
  5874  0038C4  581B               	subwfb	??_display_rpm& (0+255),w,c
  5875  0038C6  B0D8               	btfsc	status,0,c
  5876  0038C8  0012               	return	
  5877  0038CA  D798               	goto	l731
  5878  0038CC                     __end_of_display_rpm:
  5879                           	opt stack 0
  5880                           tblptru	equ	0xFF8
  5881                           tblptrh	equ	0xFF7
  5882                           tblptrl	equ	0xFF6
  5883                           tablat	equ	0xFF5
  5884                           intcon	equ	0xFF2
  5885                           postinc0	equ	0xFEE
  5886                           wreg	equ	0xFE8
  5887                           postdec1	equ	0xFE5
  5888                           plusw1	equ	0xFE3
  5889                           fsr1l	equ	0xFE1
  5890                           plusw2	equ	0xFDB
  5891                           status	equ	0xFD8
  5892                           
  5893 ;; *************** function ___wmul *****************
  5894 ;; Defined at:
  5895 ;;		line 15 in file "F:\Microchip\XC8\pic\sources\c99\common\Umul16.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  multiplier      2    2[COMRAM] unsigned int 
  5898 ;;  multiplicand    2    4[COMRAM] unsigned int 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;  product         2    6[COMRAM] unsigned int 
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  2    2[COMRAM] unsigned int 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0, prodl, prodh
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5913 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5914 ;;Total ram usage:        6 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:    4
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_display_rpm
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text11
  5925  006A6A                     __ptext11:
  5926                           	opt stack 0
  5927  006A6A                     ___wmul:
  5928                           	opt stack 25
  5929                           
  5930                           ;incstack = 0
  5931  006A6A  5003               	movf	___wmul@multiplier,w,c
  5932  006A6C  0205               	mulwf	___wmul@multiplicand,c
  5933  006A6E  CFF3 F007          	movff	prodl,___wmul@product
  5934  006A72  CFF4 F008          	movff	prodh,___wmul@product+1
  5935  006A76  5003               	movf	___wmul@multiplier,w,c
  5936  006A78  0206               	mulwf	___wmul@multiplicand+1,c
  5937  006A7A  50F3               	movf	prodl,w,c
  5938  006A7C  2608               	addwf	___wmul@product+1,f,c
  5939  006A7E  5004               	movf	___wmul@multiplier+1,w,c
  5940  006A80  0205               	mulwf	___wmul@multiplicand,c
  5941  006A82  50F3               	movf	prodl,w,c
  5942  006A84  2608               	addwf	___wmul@product+1,f,c
  5943  006A86  C007  F003         	movff	___wmul@product,?___wmul
  5944  006A8A  C008  F004         	movff	___wmul@product+1,?___wmul+1
  5945  006A8E  0012               	return	
  5946  006A90                     __end_of___wmul:
  5947                           	opt stack 0
  5948                           tblptru	equ	0xFF8
  5949                           tblptrh	equ	0xFF7
  5950                           tblptrl	equ	0xFF6
  5951                           tablat	equ	0xFF5
  5952                           prodh	equ	0xFF4
  5953                           prodl	equ	0xFF3
  5954                           intcon	equ	0xFF2
  5955                           postinc0	equ	0xFEE
  5956                           wreg	equ	0xFE8
  5957                           postdec1	equ	0xFE5
  5958                           plusw1	equ	0xFE3
  5959                           fsr1l	equ	0xFE1
  5960                           plusw2	equ	0xFDB
  5961                           status	equ	0xFD8
  5962                           
  5963 ;; *************** function _display_oilTemp *****************
  5964 ;; Defined at:
  5965 ;;		line 277 in file "display.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  temp            2   24[COMRAM] int 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;		None
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      void 
  5972 ;; Registers used:
  5973 ;;		wreg, status,2, status,0, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5982 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5983 ;;Total ram usage:        6 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; Hardware stack levels required when called:    7
  5986 ;; This function calls:
  5987 ;;		_cmd
  5988 ;;		_cmd_incrementn
  5989 ;;		_wr16
  5990 ;; This function is called by:
  5991 ;;		_display
  5992 ;;		_main
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text12
  5997  006202                     __ptext12:
  5998                           	opt stack 0
  5999  006202                     _display_oilTemp:
  6000                           	opt stack 23
  6001                           
  6002                           ;display.c: 279:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 139);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 58);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 31);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd(temp);
  6003                           
  6004                           ;incstack = 0
  6005  006202  0E2E               	movlw	46
  6006  006204  6E11               	movwf	cmd@command,c
  6007  006206  0EFF               	movlw	255
  6008  006208  6E12               	movwf	cmd@command+1,c
  6009  00620A  0EFF               	movlw	255
  6010  00620C  6E13               	movwf	cmd@command+2,c
  6011  00620E  0EFF               	movlw	255
  6012  006210  6E14               	movwf	cmd@command+3,c
  6013  006212  EC70  F034         	call	_cmd	;wreg free
  6014  006216  504F               	movf	_cmd_offset,w,c
  6015  006218  6E1B               	movwf	??_display_oilTemp& (0+255),c
  6016  00621A  5050               	movf	_cmd_offset+1,w,c
  6017  00621C  6E1C               	movwf	(??_display_oilTemp+1)& (0+255),c
  6018  00621E  6A1D               	clrf	(??_display_oilTemp+2)& (0+255),c
  6019  006220  6A1E               	clrf	(??_display_oilTemp+3)& (0+255),c
  6020  006222  0E00               	movlw	0
  6021  006224  241B               	addwf	??_display_oilTemp,w,c
  6022  006226  6E04               	movwf	wr16@addr,c
  6023  006228  0E80               	movlw	128
  6024  00622A  201C               	addwfc	??_display_oilTemp+1,w,c
  6025  00622C  6E05               	movwf	wr16@addr+1,c
  6026  00622E  0E10               	movlw	16
  6027  006230  201D               	addwfc	??_display_oilTemp+2,w,c
  6028  006232  6E06               	movwf	wr16@addr+2,c
  6029  006234  0E00               	movlw	0
  6030  006236  201E               	addwfc	??_display_oilTemp+3,w,c
  6031  006238  6E07               	movwf	wr16@addr+3,c
  6032  00623A  0E00               	movlw	0
  6033  00623C  6E09               	movwf	wr16@value+1,c
  6034  00623E  0E8B               	movlw	139
  6035  006240  6E08               	movwf	wr16@value,c
  6036  006242  EC48  F035         	call	_wr16	;wreg free
  6037  006246  0E02               	movlw	2
  6038  006248  EC89  F035         	call	_cmd_incrementn
  6039  00624C  504F               	movf	_cmd_offset,w,c
  6040  00624E  6E1B               	movwf	??_display_oilTemp& (0+255),c
  6041  006250  5050               	movf	_cmd_offset+1,w,c
  6042  006252  6E1C               	movwf	(??_display_oilTemp+1)& (0+255),c
  6043  006254  6A1D               	clrf	(??_display_oilTemp+2)& (0+255),c
  6044  006256  6A1E               	clrf	(??_display_oilTemp+3)& (0+255),c
  6045  006258  0E00               	movlw	0
  6046  00625A  241B               	addwf	??_display_oilTemp,w,c
  6047  00625C  6E04               	movwf	wr16@addr,c
  6048  00625E  0E80               	movlw	128
  6049  006260  201C               	addwfc	??_display_oilTemp+1,w,c
  6050  006262  6E05               	movwf	wr16@addr+1,c
  6051  006264  0E10               	movlw	16
  6052  006266  201D               	addwfc	??_display_oilTemp+2,w,c
  6053  006268  6E06               	movwf	wr16@addr+2,c
  6054  00626A  0E00               	movlw	0
  6055  00626C  201E               	addwfc	??_display_oilTemp+3,w,c
  6056  00626E  6E07               	movwf	wr16@addr+3,c
  6057  006270  0E00               	movlw	0
  6058  006272  6E09               	movwf	wr16@value+1,c
  6059  006274  0E3A               	movlw	58
  6060  006276  6E08               	movwf	wr16@value,c
  6061  006278  EC48  F035         	call	_wr16	;wreg free
  6062  00627C  0E02               	movlw	2
  6063  00627E  EC89  F035         	call	_cmd_incrementn
  6064  006282  504F               	movf	_cmd_offset,w,c
  6065  006284  6E1B               	movwf	??_display_oilTemp& (0+255),c
  6066  006286  5050               	movf	_cmd_offset+1,w,c
  6067  006288  6E1C               	movwf	(??_display_oilTemp+1)& (0+255),c
  6068  00628A  6A1D               	clrf	(??_display_oilTemp+2)& (0+255),c
  6069  00628C  6A1E               	clrf	(??_display_oilTemp+3)& (0+255),c
  6070  00628E  0E00               	movlw	0
  6071  006290  241B               	addwf	??_display_oilTemp,w,c
  6072  006292  6E04               	movwf	wr16@addr,c
  6073  006294  0E80               	movlw	128
  6074  006296  201C               	addwfc	??_display_oilTemp+1,w,c
  6075  006298  6E05               	movwf	wr16@addr+1,c
  6076  00629A  0E10               	movlw	16
  6077  00629C  201D               	addwfc	??_display_oilTemp+2,w,c
  6078  00629E  6E06               	movwf	wr16@addr+2,c
  6079  0062A0  0E00               	movlw	0
  6080  0062A2  201E               	addwfc	??_display_oilTemp+3,w,c
  6081  0062A4  6E07               	movwf	wr16@addr+3,c
  6082  0062A6  0E00               	movlw	0
  6083  0062A8  6E09               	movwf	wr16@value+1,c
  6084  0062AA  0E1F               	movlw	31
  6085  0062AC  6E08               	movwf	wr16@value,c
  6086  0062AE  EC48  F035         	call	_wr16	;wreg free
  6087  0062B2  0E02               	movlw	2
  6088  0062B4  EC89  F035         	call	_cmd_incrementn
  6089  0062B8  504F               	movf	_cmd_offset,w,c
  6090  0062BA  6E1B               	movwf	??_display_oilTemp& (0+255),c
  6091  0062BC  5050               	movf	_cmd_offset+1,w,c
  6092  0062BE  6E1C               	movwf	(??_display_oilTemp+1)& (0+255),c
  6093  0062C0  6A1D               	clrf	(??_display_oilTemp+2)& (0+255),c
  6094  0062C2  6A1E               	clrf	(??_display_oilTemp+3)& (0+255),c
  6095  0062C4  0E00               	movlw	0
  6096  0062C6  241B               	addwf	??_display_oilTemp,w,c
  6097  0062C8  6E04               	movwf	wr16@addr,c
  6098  0062CA  0E80               	movlw	128
  6099  0062CC  201C               	addwfc	??_display_oilTemp+1,w,c
  6100  0062CE  6E05               	movwf	wr16@addr+1,c
  6101  0062D0  0E10               	movlw	16
  6102  0062D2  201D               	addwfc	??_display_oilTemp+2,w,c
  6103  0062D4  6E06               	movwf	wr16@addr+2,c
  6104  0062D6  0E00               	movlw	0
  6105  0062D8  201E               	addwfc	??_display_oilTemp+3,w,c
  6106  0062DA  6E07               	movwf	wr16@addr+3,c
  6107  0062DC  0E02               	movlw	2
  6108  0062DE  6E09               	movwf	wr16@value+1,c
  6109  0062E0  0E00               	movlw	0
  6110  0062E2  6E08               	movwf	wr16@value,c
  6111  0062E4  EC48  F035         	call	_wr16	;wreg free
  6112  0062E8  0E02               	movlw	2
  6113  0062EA  EC89  F035         	call	_cmd_incrementn
  6114  0062EE  C019  F011         	movff	display_oilTemp@temp,cmd@command
  6115  0062F2  C01A  F012         	movff	display_oilTemp@temp+1,cmd@command+1
  6116  0062F6  0E00               	movlw	0
  6117  0062F8  BE12               	btfsc	cmd@command+1,7,c
  6118  0062FA  0EFF               	movlw	-1
  6119  0062FC  6E13               	movwf	cmd@command+2,c
  6120  0062FE  6E14               	movwf	cmd@command+3,c
  6121  006300  EC70  F034         	call	_cmd	;wreg free
  6122  006304  0012               	return		;funcret
  6123  006306                     __end_of_display_oilTemp:
  6124                           	opt stack 0
  6125                           tblptru	equ	0xFF8
  6126                           tblptrh	equ	0xFF7
  6127                           tblptrl	equ	0xFF6
  6128                           tablat	equ	0xFF5
  6129                           prodh	equ	0xFF4
  6130                           prodl	equ	0xFF3
  6131                           intcon	equ	0xFF2
  6132                           postinc0	equ	0xFEE
  6133                           wreg	equ	0xFE8
  6134                           postdec1	equ	0xFE5
  6135                           plusw1	equ	0xFE3
  6136                           fsr1l	equ	0xFE1
  6137                           plusw2	equ	0xFDB
  6138                           status	equ	0xFD8
  6139                           
  6140 ;; *************** function _display_labels *****************
  6141 ;; Defined at:
  6142 ;;		line 45 in file "display.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;		None
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;		None
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1    wreg      void 
  6149 ;; Registers used:
  6150 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6158 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6159 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6160 ;;Total ram usage:        4 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:    7
  6163 ;; This function calls:
  6164 ;;		_cmd
  6165 ;;		_cmd_incrementn
  6166 ;;		_wr16
  6167 ;;		_wr8s
  6168 ;; This function is called by:
  6169 ;;		_display
  6170 ;;		_main
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text13
  6175  000F9E                     __ptext13:
  6176                           	opt stack 0
  6177  000F9E                     _display_labels:
  6178                           	opt stack 23
  6179                           
  6180                           ;display.c: 46:     cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)
      +                          <<0)));
  6181                           
  6182                           ;incstack = 0
  6183  000F9E  0EFF               	movlw	255
  6184  000FA0  6E11               	movwf	cmd@command,c
  6185  000FA2  0EFF               	movlw	255
  6186  000FA4  6E12               	movwf	cmd@command+1,c
  6187  000FA6  0EFF               	movlw	255
  6188  000FA8  6E13               	movwf	cmd@command+2,c
  6189  000FAA  0E04               	movlw	4
  6190  000FAC  6E14               	movwf	cmd@command+3,c
  6191  000FAE  EC70  F034         	call	_cmd	;wreg free
  6192                           
  6193                           ;display.c: 47:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 418);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 149);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44UL +cmd_offset, "KPH"));
  6194  000FB2  0E0C               	movlw	12
  6195  000FB4  6E11               	movwf	cmd@command,c
  6196  000FB6  0EFF               	movlw	255
  6197  000FB8  6E12               	movwf	cmd@command+1,c
  6198  000FBA  0EFF               	movlw	255
  6199  000FBC  6E13               	movwf	cmd@command+2,c
  6200  000FBE  0EFF               	movlw	255
  6201  000FC0  6E14               	movwf	cmd@command+3,c
  6202  000FC2  EC70  F034         	call	_cmd	;wreg free
  6203  000FC6  504F               	movf	_cmd_offset,w,c
  6204  000FC8  6E19               	movwf	??_display_labels& (0+255),c
  6205  000FCA  5050               	movf	_cmd_offset+1,w,c
  6206  000FCC  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6207  000FCE  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6208  000FD0  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6209  000FD2  0E00               	movlw	0
  6210  000FD4  2419               	addwf	??_display_labels,w,c
  6211  000FD6  6E04               	movwf	wr16@addr,c
  6212  000FD8  0E80               	movlw	128
  6213  000FDA  201A               	addwfc	??_display_labels+1,w,c
  6214  000FDC  6E05               	movwf	wr16@addr+1,c
  6215  000FDE  0E10               	movlw	16
  6216  000FE0  201B               	addwfc	??_display_labels+2,w,c
  6217  000FE2  6E06               	movwf	wr16@addr+2,c
  6218  000FE4  0E00               	movlw	0
  6219  000FE6  201C               	addwfc	??_display_labels+3,w,c
  6220  000FE8  6E07               	movwf	wr16@addr+3,c
  6221  000FEA  0E01               	movlw	1
  6222  000FEC  6E09               	movwf	wr16@value+1,c
  6223  000FEE  0EA2               	movlw	162
  6224  000FF0  6E08               	movwf	wr16@value,c
  6225  000FF2  EC48  F035         	call	_wr16	;wreg free
  6226  000FF6  0E02               	movlw	2
  6227  000FF8  EC89  F035         	call	_cmd_incrementn
  6228  000FFC  504F               	movf	_cmd_offset,w,c
  6229  000FFE  6E19               	movwf	??_display_labels& (0+255),c
  6230  001000  5050               	movf	_cmd_offset+1,w,c
  6231  001002  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6232  001004  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6233  001006  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6234  001008  0E00               	movlw	0
  6235  00100A  2419               	addwf	??_display_labels,w,c
  6236  00100C  6E04               	movwf	wr16@addr,c
  6237  00100E  0E80               	movlw	128
  6238  001010  201A               	addwfc	??_display_labels+1,w,c
  6239  001012  6E05               	movwf	wr16@addr+1,c
  6240  001014  0E10               	movlw	16
  6241  001016  201B               	addwfc	??_display_labels+2,w,c
  6242  001018  6E06               	movwf	wr16@addr+2,c
  6243  00101A  0E00               	movlw	0
  6244  00101C  201C               	addwfc	??_display_labels+3,w,c
  6245  00101E  6E07               	movwf	wr16@addr+3,c
  6246  001020  0E00               	movlw	0
  6247  001022  6E09               	movwf	wr16@value+1,c
  6248  001024  0E95               	movlw	149
  6249  001026  6E08               	movwf	wr16@value,c
  6250  001028  EC48  F035         	call	_wr16	;wreg free
  6251  00102C  0E02               	movlw	2
  6252  00102E  EC89  F035         	call	_cmd_incrementn
  6253  001032  504F               	movf	_cmd_offset,w,c
  6254  001034  6E19               	movwf	??_display_labels& (0+255),c
  6255  001036  5050               	movf	_cmd_offset+1,w,c
  6256  001038  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6257  00103A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6258  00103C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6259  00103E  0E00               	movlw	0
  6260  001040  2419               	addwf	??_display_labels,w,c
  6261  001042  6E04               	movwf	wr16@addr,c
  6262  001044  0E80               	movlw	128
  6263  001046  201A               	addwfc	??_display_labels+1,w,c
  6264  001048  6E05               	movwf	wr16@addr+1,c
  6265  00104A  0E10               	movlw	16
  6266  00104C  201B               	addwfc	??_display_labels+2,w,c
  6267  00104E  6E06               	movwf	wr16@addr+2,c
  6268  001050  0E00               	movlw	0
  6269  001052  201C               	addwfc	??_display_labels+3,w,c
  6270  001054  6E07               	movwf	wr16@addr+3,c
  6271  001056  0E00               	movlw	0
  6272  001058  6E09               	movwf	wr16@value+1,c
  6273  00105A  0E1C               	movlw	28
  6274  00105C  6E08               	movwf	wr16@value,c
  6275  00105E  EC48  F035         	call	_wr16	;wreg free
  6276  001062  0E02               	movlw	2
  6277  001064  EC89  F035         	call	_cmd_incrementn
  6278  001068  504F               	movf	_cmd_offset,w,c
  6279  00106A  6E19               	movwf	??_display_labels& (0+255),c
  6280  00106C  5050               	movf	_cmd_offset+1,w,c
  6281  00106E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6282  001070  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6283  001072  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6284  001074  0E00               	movlw	0
  6285  001076  2419               	addwf	??_display_labels,w,c
  6286  001078  6E04               	movwf	wr16@addr,c
  6287  00107A  0E80               	movlw	128
  6288  00107C  201A               	addwfc	??_display_labels+1,w,c
  6289  00107E  6E05               	movwf	wr16@addr+1,c
  6290  001080  0E10               	movlw	16
  6291  001082  201B               	addwfc	??_display_labels+2,w,c
  6292  001084  6E06               	movwf	wr16@addr+2,c
  6293  001086  0E00               	movlw	0
  6294  001088  201C               	addwfc	??_display_labels+3,w,c
  6295  00108A  6E07               	movwf	wr16@addr+3,c
  6296  00108C  0E00               	movlw	0
  6297  00108E  6E09               	movwf	wr16@value+1,c
  6298  001090  0E00               	movlw	0
  6299  001092  6E08               	movwf	wr16@value,c
  6300  001094  EC48  F035         	call	_wr16	;wreg free
  6301  001098  0E02               	movlw	2
  6302  00109A  EC89  F035         	call	_cmd_incrementn
  6303  00109E  504F               	movf	_cmd_offset,w,c
  6304  0010A0  6E19               	movwf	??_display_labels& (0+255),c
  6305  0010A2  5050               	movf	_cmd_offset+1,w,c
  6306  0010A4  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6307  0010A6  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6308  0010A8  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6309  0010AA  0E00               	movlw	0
  6310  0010AC  2419               	addwf	??_display_labels,w,c
  6311  0010AE  6E09               	movwf	wr8s@addr,c
  6312  0010B0  0E80               	movlw	128
  6313  0010B2  201A               	addwfc	??_display_labels+1,w,c
  6314  0010B4  6E0A               	movwf	wr8s@addr+1,c
  6315  0010B6  0E10               	movlw	16
  6316  0010B8  201B               	addwfc	??_display_labels+2,w,c
  6317  0010BA  6E0B               	movwf	wr8s@addr+2,c
  6318  0010BC  0E00               	movlw	0
  6319  0010BE  201C               	addwfc	??_display_labels+3,w,c
  6320  0010C0  6E0C               	movwf	wr8s@addr+3,c
  6321  0010C2  0E82               	movlw	low STR_1
  6322  0010C4  6E0D               	movwf	wr8s@s,c
  6323  0010C6  0E0F               	movlw	high STR_1
  6324  0010C8  6E0E               	movwf	wr8s@s+1,c
  6325  0010CA  EC67  F033         	call	_wr8s	;wreg free
  6326  0010CE  EC89  F035         	call	_cmd_incrementn
  6327                           
  6328                           ;display.c: 48:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 410);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 190);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "Gain/Loss"));
  6329  0010D2  0E0C               	movlw	12
  6330  0010D4  6E11               	movwf	cmd@command,c
  6331  0010D6  0EFF               	movlw	255
  6332  0010D8  6E12               	movwf	cmd@command+1,c
  6333  0010DA  0EFF               	movlw	255
  6334  0010DC  6E13               	movwf	cmd@command+2,c
  6335  0010DE  0EFF               	movlw	255
  6336  0010E0  6E14               	movwf	cmd@command+3,c
  6337  0010E2  EC70  F034         	call	_cmd	;wreg free
  6338  0010E6  504F               	movf	_cmd_offset,w,c
  6339  0010E8  6E19               	movwf	??_display_labels& (0+255),c
  6340  0010EA  5050               	movf	_cmd_offset+1,w,c
  6341  0010EC  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6342  0010EE  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6343  0010F0  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6344  0010F2  0E00               	movlw	0
  6345  0010F4  2419               	addwf	??_display_labels,w,c
  6346  0010F6  6E04               	movwf	wr16@addr,c
  6347  0010F8  0E80               	movlw	128
  6348  0010FA  201A               	addwfc	??_display_labels+1,w,c
  6349  0010FC  6E05               	movwf	wr16@addr+1,c
  6350  0010FE  0E10               	movlw	16
  6351  001100  201B               	addwfc	??_display_labels+2,w,c
  6352  001102  6E06               	movwf	wr16@addr+2,c
  6353  001104  0E00               	movlw	0
  6354  001106  201C               	addwfc	??_display_labels+3,w,c
  6355  001108  6E07               	movwf	wr16@addr+3,c
  6356  00110A  0E01               	movlw	1
  6357  00110C  6E09               	movwf	wr16@value+1,c
  6358  00110E  0E9A               	movlw	154
  6359  001110  6E08               	movwf	wr16@value,c
  6360  001112  EC48  F035         	call	_wr16	;wreg free
  6361  001116  0E02               	movlw	2
  6362  001118  EC89  F035         	call	_cmd_incrementn
  6363  00111C  504F               	movf	_cmd_offset,w,c
  6364  00111E  6E19               	movwf	??_display_labels& (0+255),c
  6365  001120  5050               	movf	_cmd_offset+1,w,c
  6366  001122  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6367  001124  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6368  001126  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6369  001128  0E00               	movlw	0
  6370  00112A  2419               	addwf	??_display_labels,w,c
  6371  00112C  6E04               	movwf	wr16@addr,c
  6372  00112E  0E80               	movlw	128
  6373  001130  201A               	addwfc	??_display_labels+1,w,c
  6374  001132  6E05               	movwf	wr16@addr+1,c
  6375  001134  0E10               	movlw	16
  6376  001136  201B               	addwfc	??_display_labels+2,w,c
  6377  001138  6E06               	movwf	wr16@addr+2,c
  6378  00113A  0E00               	movlw	0
  6379  00113C  201C               	addwfc	??_display_labels+3,w,c
  6380  00113E  6E07               	movwf	wr16@addr+3,c
  6381  001140  0E00               	movlw	0
  6382  001142  6E09               	movwf	wr16@value+1,c
  6383  001144  0EBE               	movlw	190
  6384  001146  6E08               	movwf	wr16@value,c
  6385  001148  EC48  F035         	call	_wr16	;wreg free
  6386  00114C  0E02               	movlw	2
  6387  00114E  EC89  F035         	call	_cmd_incrementn
  6388  001152  504F               	movf	_cmd_offset,w,c
  6389  001154  6E19               	movwf	??_display_labels& (0+255),c
  6390  001156  5050               	movf	_cmd_offset+1,w,c
  6391  001158  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6392  00115A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6393  00115C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6394  00115E  0E00               	movlw	0
  6395  001160  2419               	addwf	??_display_labels,w,c
  6396  001162  6E04               	movwf	wr16@addr,c
  6397  001164  0E80               	movlw	128
  6398  001166  201A               	addwfc	??_display_labels+1,w,c
  6399  001168  6E05               	movwf	wr16@addr+1,c
  6400  00116A  0E10               	movlw	16
  6401  00116C  201B               	addwfc	??_display_labels+2,w,c
  6402  00116E  6E06               	movwf	wr16@addr+2,c
  6403  001170  0E00               	movlw	0
  6404  001172  201C               	addwfc	??_display_labels+3,w,c
  6405  001174  6E07               	movwf	wr16@addr+3,c
  6406  001176  0E00               	movlw	0
  6407  001178  6E09               	movwf	wr16@value+1,c
  6408  00117A  0E1B               	movlw	27
  6409  00117C  6E08               	movwf	wr16@value,c
  6410  00117E  EC48  F035         	call	_wr16	;wreg free
  6411  001182  0E02               	movlw	2
  6412  001184  EC89  F035         	call	_cmd_incrementn
  6413  001188  504F               	movf	_cmd_offset,w,c
  6414  00118A  6E19               	movwf	??_display_labels& (0+255),c
  6415  00118C  5050               	movf	_cmd_offset+1,w,c
  6416  00118E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6417  001190  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6418  001192  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6419  001194  0E00               	movlw	0
  6420  001196  2419               	addwf	??_display_labels,w,c
  6421  001198  6E04               	movwf	wr16@addr,c
  6422  00119A  0E80               	movlw	128
  6423  00119C  201A               	addwfc	??_display_labels+1,w,c
  6424  00119E  6E05               	movwf	wr16@addr+1,c
  6425  0011A0  0E10               	movlw	16
  6426  0011A2  201B               	addwfc	??_display_labels+2,w,c
  6427  0011A4  6E06               	movwf	wr16@addr+2,c
  6428  0011A6  0E00               	movlw	0
  6429  0011A8  201C               	addwfc	??_display_labels+3,w,c
  6430  0011AA  6E07               	movwf	wr16@addr+3,c
  6431  0011AC  0E06               	movlw	6
  6432  0011AE  6E09               	movwf	wr16@value+1,c
  6433  0011B0  0E00               	movlw	0
  6434  0011B2  6E08               	movwf	wr16@value,c
  6435  0011B4  EC48  F035         	call	_wr16	;wreg free
  6436  0011B8  0E02               	movlw	2
  6437  0011BA  EC89  F035         	call	_cmd_incrementn
  6438  0011BE  504F               	movf	_cmd_offset,w,c
  6439  0011C0  6E19               	movwf	??_display_labels& (0+255),c
  6440  0011C2  5050               	movf	_cmd_offset+1,w,c
  6441  0011C4  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6442  0011C6  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6443  0011C8  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6444  0011CA  0E00               	movlw	0
  6445  0011CC  2419               	addwf	??_display_labels,w,c
  6446  0011CE  6E09               	movwf	wr8s@addr,c
  6447  0011D0  0E80               	movlw	128
  6448  0011D2  201A               	addwfc	??_display_labels+1,w,c
  6449  0011D4  6E0A               	movwf	wr8s@addr+1,c
  6450  0011D6  0E10               	movlw	16
  6451  0011D8  201B               	addwfc	??_display_labels+2,w,c
  6452  0011DA  6E0B               	movwf	wr8s@addr+2,c
  6453  0011DC  0E00               	movlw	0
  6454  0011DE  201C               	addwfc	??_display_labels+3,w,c
  6455  0011E0  6E0C               	movwf	wr8s@addr+3,c
  6456  0011E2  0E17               	movlw	low STR_2
  6457  0011E4  6E0D               	movwf	wr8s@s,c
  6458  0011E6  0E0F               	movlw	high STR_2
  6459  0011E8  6E0E               	movwf	wr8s@s+1,c
  6460  0011EA  EC67  F033         	call	_wr8s	;wreg free
  6461  0011EE  EC89  F035         	call	_cmd_incrementn
  6462                           
  6463                           ;display.c: 49:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 47);cmd_incrementn(2);
      +                          wr16(1081344UL +cmd_offset, 45);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_in
      +                          crementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(10
      +                          81344UL +cmd_offset, "Water"));
  6464  0011F2  0E0C               	movlw	12
  6465  0011F4  6E11               	movwf	cmd@command,c
  6466  0011F6  0EFF               	movlw	255
  6467  0011F8  6E12               	movwf	cmd@command+1,c
  6468  0011FA  0EFF               	movlw	255
  6469  0011FC  6E13               	movwf	cmd@command+2,c
  6470  0011FE  0EFF               	movlw	255
  6471  001200  6E14               	movwf	cmd@command+3,c
  6472  001202  EC70  F034         	call	_cmd	;wreg free
  6473  001206  504F               	movf	_cmd_offset,w,c
  6474  001208  6E19               	movwf	??_display_labels& (0+255),c
  6475  00120A  5050               	movf	_cmd_offset+1,w,c
  6476  00120C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6477  00120E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6478  001210  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6479  001212  0E00               	movlw	0
  6480  001214  2419               	addwf	??_display_labels,w,c
  6481  001216  6E04               	movwf	wr16@addr,c
  6482  001218  0E80               	movlw	128
  6483  00121A  201A               	addwfc	??_display_labels+1,w,c
  6484  00121C  6E05               	movwf	wr16@addr+1,c
  6485  00121E  0E10               	movlw	16
  6486  001220  201B               	addwfc	??_display_labels+2,w,c
  6487  001222  6E06               	movwf	wr16@addr+2,c
  6488  001224  0E00               	movlw	0
  6489  001226  201C               	addwfc	??_display_labels+3,w,c
  6490  001228  6E07               	movwf	wr16@addr+3,c
  6491  00122A  0E00               	movlw	0
  6492  00122C  6E09               	movwf	wr16@value+1,c
  6493  00122E  0E2F               	movlw	47
  6494  001230  6E08               	movwf	wr16@value,c
  6495  001232  EC48  F035         	call	_wr16	;wreg free
  6496  001236  0E02               	movlw	2
  6497  001238  EC89  F035         	call	_cmd_incrementn
  6498  00123C  504F               	movf	_cmd_offset,w,c
  6499  00123E  6E19               	movwf	??_display_labels& (0+255),c
  6500  001240  5050               	movf	_cmd_offset+1,w,c
  6501  001242  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6502  001244  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6503  001246  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6504  001248  0E00               	movlw	0
  6505  00124A  2419               	addwf	??_display_labels,w,c
  6506  00124C  6E04               	movwf	wr16@addr,c
  6507  00124E  0E80               	movlw	128
  6508  001250  201A               	addwfc	??_display_labels+1,w,c
  6509  001252  6E05               	movwf	wr16@addr+1,c
  6510  001254  0E10               	movlw	16
  6511  001256  201B               	addwfc	??_display_labels+2,w,c
  6512  001258  6E06               	movwf	wr16@addr+2,c
  6513  00125A  0E00               	movlw	0
  6514  00125C  201C               	addwfc	??_display_labels+3,w,c
  6515  00125E  6E07               	movwf	wr16@addr+3,c
  6516  001260  0E00               	movlw	0
  6517  001262  6E09               	movwf	wr16@value+1,c
  6518  001264  0E2D               	movlw	45
  6519  001266  6E08               	movwf	wr16@value,c
  6520  001268  EC48  F035         	call	_wr16	;wreg free
  6521  00126C  0E02               	movlw	2
  6522  00126E  EC89  F035         	call	_cmd_incrementn
  6523  001272  504F               	movf	_cmd_offset,w,c
  6524  001274  6E19               	movwf	??_display_labels& (0+255),c
  6525  001276  5050               	movf	_cmd_offset+1,w,c
  6526  001278  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6527  00127A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6528  00127C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6529  00127E  0E00               	movlw	0
  6530  001280  2419               	addwf	??_display_labels,w,c
  6531  001282  6E04               	movwf	wr16@addr,c
  6532  001284  0E80               	movlw	128
  6533  001286  201A               	addwfc	??_display_labels+1,w,c
  6534  001288  6E05               	movwf	wr16@addr+1,c
  6535  00128A  0E10               	movlw	16
  6536  00128C  201B               	addwfc	??_display_labels+2,w,c
  6537  00128E  6E06               	movwf	wr16@addr+2,c
  6538  001290  0E00               	movlw	0
  6539  001292  201C               	addwfc	??_display_labels+3,w,c
  6540  001294  6E07               	movwf	wr16@addr+3,c
  6541  001296  0E00               	movlw	0
  6542  001298  6E09               	movwf	wr16@value+1,c
  6543  00129A  0E1C               	movlw	28
  6544  00129C  6E08               	movwf	wr16@value,c
  6545  00129E  EC48  F035         	call	_wr16	;wreg free
  6546  0012A2  0E02               	movlw	2
  6547  0012A4  EC89  F035         	call	_cmd_incrementn
  6548  0012A8  504F               	movf	_cmd_offset,w,c
  6549  0012AA  6E19               	movwf	??_display_labels& (0+255),c
  6550  0012AC  5050               	movf	_cmd_offset+1,w,c
  6551  0012AE  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6552  0012B0  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6553  0012B2  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6554  0012B4  0E00               	movlw	0
  6555  0012B6  2419               	addwf	??_display_labels,w,c
  6556  0012B8  6E04               	movwf	wr16@addr,c
  6557  0012BA  0E80               	movlw	128
  6558  0012BC  201A               	addwfc	??_display_labels+1,w,c
  6559  0012BE  6E05               	movwf	wr16@addr+1,c
  6560  0012C0  0E10               	movlw	16
  6561  0012C2  201B               	addwfc	??_display_labels+2,w,c
  6562  0012C4  6E06               	movwf	wr16@addr+2,c
  6563  0012C6  0E00               	movlw	0
  6564  0012C8  201C               	addwfc	??_display_labels+3,w,c
  6565  0012CA  6E07               	movwf	wr16@addr+3,c
  6566  0012CC  0E06               	movlw	6
  6567  0012CE  6E09               	movwf	wr16@value+1,c
  6568  0012D0  0E00               	movlw	0
  6569  0012D2  6E08               	movwf	wr16@value,c
  6570  0012D4  EC48  F035         	call	_wr16	;wreg free
  6571  0012D8  0E02               	movlw	2
  6572  0012DA  EC89  F035         	call	_cmd_incrementn
  6573  0012DE  504F               	movf	_cmd_offset,w,c
  6574  0012E0  6E19               	movwf	??_display_labels& (0+255),c
  6575  0012E2  5050               	movf	_cmd_offset+1,w,c
  6576  0012E4  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6577  0012E6  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6578  0012E8  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6579  0012EA  0E00               	movlw	0
  6580  0012EC  2419               	addwf	??_display_labels,w,c
  6581  0012EE  6E09               	movwf	wr8s@addr,c
  6582  0012F0  0E80               	movlw	128
  6583  0012F2  201A               	addwfc	??_display_labels+1,w,c
  6584  0012F4  6E0A               	movwf	wr8s@addr+1,c
  6585  0012F6  0E10               	movlw	16
  6586  0012F8  201B               	addwfc	??_display_labels+2,w,c
  6587  0012FA  6E0B               	movwf	wr8s@addr+2,c
  6588  0012FC  0E00               	movlw	0
  6589  0012FE  201C               	addwfc	??_display_labels+3,w,c
  6590  001300  6E0C               	movwf	wr8s@addr+3,c
  6591  001302  0E53               	movlw	low STR_3
  6592  001304  6E0D               	movwf	wr8s@s,c
  6593  001306  0E0F               	movlw	high STR_3
  6594  001308  6E0E               	movwf	wr8s@s+1,c
  6595  00130A  EC67  F033         	call	_wr8s	;wreg free
  6596  00130E  EC89  F035         	call	_cmd_incrementn
  6597                           
  6598                           ;display.c: 50:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 45);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_i
      +                          ncrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1
      +                          081344UL +cmd_offset, "Oil"));
  6599  001312  0E0C               	movlw	12
  6600  001314  6E11               	movwf	cmd@command,c
  6601  001316  0EFF               	movlw	255
  6602  001318  6E12               	movwf	cmd@command+1,c
  6603  00131A  0EFF               	movlw	255
  6604  00131C  6E13               	movwf	cmd@command+2,c
  6605  00131E  0EFF               	movlw	255
  6606  001320  6E14               	movwf	cmd@command+3,c
  6607  001322  EC70  F034         	call	_cmd	;wreg free
  6608  001326  504F               	movf	_cmd_offset,w,c
  6609  001328  6E19               	movwf	??_display_labels& (0+255),c
  6610  00132A  5050               	movf	_cmd_offset+1,w,c
  6611  00132C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6612  00132E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6613  001330  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6614  001332  0E00               	movlw	0
  6615  001334  2419               	addwf	??_display_labels,w,c
  6616  001336  6E04               	movwf	wr16@addr,c
  6617  001338  0E80               	movlw	128
  6618  00133A  201A               	addwfc	??_display_labels+1,w,c
  6619  00133C  6E05               	movwf	wr16@addr+1,c
  6620  00133E  0E10               	movlw	16
  6621  001340  201B               	addwfc	??_display_labels+2,w,c
  6622  001342  6E06               	movwf	wr16@addr+2,c
  6623  001344  0E00               	movlw	0
  6624  001346  201C               	addwfc	??_display_labels+3,w,c
  6625  001348  6E07               	movwf	wr16@addr+3,c
  6626  00134A  0E00               	movlw	0
  6627  00134C  6E09               	movwf	wr16@value+1,c
  6628  00134E  0E8B               	movlw	139
  6629  001350  6E08               	movwf	wr16@value,c
  6630  001352  EC48  F035         	call	_wr16	;wreg free
  6631  001356  0E02               	movlw	2
  6632  001358  EC89  F035         	call	_cmd_incrementn
  6633  00135C  504F               	movf	_cmd_offset,w,c
  6634  00135E  6E19               	movwf	??_display_labels& (0+255),c
  6635  001360  5050               	movf	_cmd_offset+1,w,c
  6636  001362  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6637  001364  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6638  001366  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6639  001368  0E00               	movlw	0
  6640  00136A  2419               	addwf	??_display_labels,w,c
  6641  00136C  6E04               	movwf	wr16@addr,c
  6642  00136E  0E80               	movlw	128
  6643  001370  201A               	addwfc	??_display_labels+1,w,c
  6644  001372  6E05               	movwf	wr16@addr+1,c
  6645  001374  0E10               	movlw	16
  6646  001376  201B               	addwfc	??_display_labels+2,w,c
  6647  001378  6E06               	movwf	wr16@addr+2,c
  6648  00137A  0E00               	movlw	0
  6649  00137C  201C               	addwfc	??_display_labels+3,w,c
  6650  00137E  6E07               	movwf	wr16@addr+3,c
  6651  001380  0E00               	movlw	0
  6652  001382  6E09               	movwf	wr16@value+1,c
  6653  001384  0E2D               	movlw	45
  6654  001386  6E08               	movwf	wr16@value,c
  6655  001388  EC48  F035         	call	_wr16	;wreg free
  6656  00138C  0E02               	movlw	2
  6657  00138E  EC89  F035         	call	_cmd_incrementn
  6658  001392  504F               	movf	_cmd_offset,w,c
  6659  001394  6E19               	movwf	??_display_labels& (0+255),c
  6660  001396  5050               	movf	_cmd_offset+1,w,c
  6661  001398  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6662  00139A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6663  00139C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6664  00139E  0E00               	movlw	0
  6665  0013A0  2419               	addwf	??_display_labels,w,c
  6666  0013A2  6E04               	movwf	wr16@addr,c
  6667  0013A4  0E80               	movlw	128
  6668  0013A6  201A               	addwfc	??_display_labels+1,w,c
  6669  0013A8  6E05               	movwf	wr16@addr+1,c
  6670  0013AA  0E10               	movlw	16
  6671  0013AC  201B               	addwfc	??_display_labels+2,w,c
  6672  0013AE  6E06               	movwf	wr16@addr+2,c
  6673  0013B0  0E00               	movlw	0
  6674  0013B2  201C               	addwfc	??_display_labels+3,w,c
  6675  0013B4  6E07               	movwf	wr16@addr+3,c
  6676  0013B6  0E00               	movlw	0
  6677  0013B8  6E09               	movwf	wr16@value+1,c
  6678  0013BA  0E1C               	movlw	28
  6679  0013BC  6E08               	movwf	wr16@value,c
  6680  0013BE  EC48  F035         	call	_wr16	;wreg free
  6681  0013C2  0E02               	movlw	2
  6682  0013C4  EC89  F035         	call	_cmd_incrementn
  6683  0013C8  504F               	movf	_cmd_offset,w,c
  6684  0013CA  6E19               	movwf	??_display_labels& (0+255),c
  6685  0013CC  5050               	movf	_cmd_offset+1,w,c
  6686  0013CE  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6687  0013D0  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6688  0013D2  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6689  0013D4  0E00               	movlw	0
  6690  0013D6  2419               	addwf	??_display_labels,w,c
  6691  0013D8  6E04               	movwf	wr16@addr,c
  6692  0013DA  0E80               	movlw	128
  6693  0013DC  201A               	addwfc	??_display_labels+1,w,c
  6694  0013DE  6E05               	movwf	wr16@addr+1,c
  6695  0013E0  0E10               	movlw	16
  6696  0013E2  201B               	addwfc	??_display_labels+2,w,c
  6697  0013E4  6E06               	movwf	wr16@addr+2,c
  6698  0013E6  0E00               	movlw	0
  6699  0013E8  201C               	addwfc	??_display_labels+3,w,c
  6700  0013EA  6E07               	movwf	wr16@addr+3,c
  6701  0013EC  0E06               	movlw	6
  6702  0013EE  6E09               	movwf	wr16@value+1,c
  6703  0013F0  0E00               	movlw	0
  6704  0013F2  6E08               	movwf	wr16@value,c
  6705  0013F4  EC48  F035         	call	_wr16	;wreg free
  6706  0013F8  0E02               	movlw	2
  6707  0013FA  EC89  F035         	call	_cmd_incrementn
  6708  0013FE  504F               	movf	_cmd_offset,w,c
  6709  001400  6E19               	movwf	??_display_labels& (0+255),c
  6710  001402  5050               	movf	_cmd_offset+1,w,c
  6711  001404  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6712  001406  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6713  001408  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6714  00140A  0E00               	movlw	0
  6715  00140C  2419               	addwf	??_display_labels,w,c
  6716  00140E  6E09               	movwf	wr8s@addr,c
  6717  001410  0E80               	movlw	128
  6718  001412  201A               	addwfc	??_display_labels+1,w,c
  6719  001414  6E0A               	movwf	wr8s@addr+1,c
  6720  001416  0E10               	movlw	16
  6721  001418  201B               	addwfc	??_display_labels+2,w,c
  6722  00141A  6E0B               	movwf	wr8s@addr+2,c
  6723  00141C  0E00               	movlw	0
  6724  00141E  201C               	addwfc	??_display_labels+3,w,c
  6725  001420  6E0C               	movwf	wr8s@addr+3,c
  6726  001422  0E8A               	movlw	low STR_4
  6727  001424  6E0D               	movwf	wr8s@s,c
  6728  001426  0E0F               	movlw	high STR_4
  6729  001428  6E0E               	movwf	wr8s@s+1,c
  6730  00142A  EC67  F033         	call	_wr8s	;wreg free
  6731  00142E  EC89  F035         	call	_cmd_incrementn
  6732                           
  6733                           ;display.c: 51:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 385);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 45);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_i
      +                          ncrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1
      +                          081344UL +cmd_offset, "RPM"));
  6734  001432  0E0C               	movlw	12
  6735  001434  6E11               	movwf	cmd@command,c
  6736  001436  0EFF               	movlw	255
  6737  001438  6E12               	movwf	cmd@command+1,c
  6738  00143A  0EFF               	movlw	255
  6739  00143C  6E13               	movwf	cmd@command+2,c
  6740  00143E  0EFF               	movlw	255
  6741  001440  6E14               	movwf	cmd@command+3,c
  6742  001442  EC70  F034         	call	_cmd	;wreg free
  6743  001446  504F               	movf	_cmd_offset,w,c
  6744  001448  6E19               	movwf	??_display_labels& (0+255),c
  6745  00144A  5050               	movf	_cmd_offset+1,w,c
  6746  00144C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6747  00144E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6748  001450  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6749  001452  0E00               	movlw	0
  6750  001454  2419               	addwf	??_display_labels,w,c
  6751  001456  6E04               	movwf	wr16@addr,c
  6752  001458  0E80               	movlw	128
  6753  00145A  201A               	addwfc	??_display_labels+1,w,c
  6754  00145C  6E05               	movwf	wr16@addr+1,c
  6755  00145E  0E10               	movlw	16
  6756  001460  201B               	addwfc	??_display_labels+2,w,c
  6757  001462  6E06               	movwf	wr16@addr+2,c
  6758  001464  0E00               	movlw	0
  6759  001466  201C               	addwfc	??_display_labels+3,w,c
  6760  001468  6E07               	movwf	wr16@addr+3,c
  6761  00146A  0E01               	movlw	1
  6762  00146C  6E09               	movwf	wr16@value+1,c
  6763  00146E  0E81               	movlw	129
  6764  001470  6E08               	movwf	wr16@value,c
  6765  001472  EC48  F035         	call	_wr16	;wreg free
  6766  001476  0E02               	movlw	2
  6767  001478  EC89  F035         	call	_cmd_incrementn
  6768  00147C  504F               	movf	_cmd_offset,w,c
  6769  00147E  6E19               	movwf	??_display_labels& (0+255),c
  6770  001480  5050               	movf	_cmd_offset+1,w,c
  6771  001482  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6772  001484  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6773  001486  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6774  001488  0E00               	movlw	0
  6775  00148A  2419               	addwf	??_display_labels,w,c
  6776  00148C  6E04               	movwf	wr16@addr,c
  6777  00148E  0E80               	movlw	128
  6778  001490  201A               	addwfc	??_display_labels+1,w,c
  6779  001492  6E05               	movwf	wr16@addr+1,c
  6780  001494  0E10               	movlw	16
  6781  001496  201B               	addwfc	??_display_labels+2,w,c
  6782  001498  6E06               	movwf	wr16@addr+2,c
  6783  00149A  0E00               	movlw	0
  6784  00149C  201C               	addwfc	??_display_labels+3,w,c
  6785  00149E  6E07               	movwf	wr16@addr+3,c
  6786  0014A0  0E00               	movlw	0
  6787  0014A2  6E09               	movwf	wr16@value+1,c
  6788  0014A4  0E2D               	movlw	45
  6789  0014A6  6E08               	movwf	wr16@value,c
  6790  0014A8  EC48  F035         	call	_wr16	;wreg free
  6791  0014AC  0E02               	movlw	2
  6792  0014AE  EC89  F035         	call	_cmd_incrementn
  6793  0014B2  504F               	movf	_cmd_offset,w,c
  6794  0014B4  6E19               	movwf	??_display_labels& (0+255),c
  6795  0014B6  5050               	movf	_cmd_offset+1,w,c
  6796  0014B8  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6797  0014BA  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6798  0014BC  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6799  0014BE  0E00               	movlw	0
  6800  0014C0  2419               	addwf	??_display_labels,w,c
  6801  0014C2  6E04               	movwf	wr16@addr,c
  6802  0014C4  0E80               	movlw	128
  6803  0014C6  201A               	addwfc	??_display_labels+1,w,c
  6804  0014C8  6E05               	movwf	wr16@addr+1,c
  6805  0014CA  0E10               	movlw	16
  6806  0014CC  201B               	addwfc	??_display_labels+2,w,c
  6807  0014CE  6E06               	movwf	wr16@addr+2,c
  6808  0014D0  0E00               	movlw	0
  6809  0014D2  201C               	addwfc	??_display_labels+3,w,c
  6810  0014D4  6E07               	movwf	wr16@addr+3,c
  6811  0014D6  0E00               	movlw	0
  6812  0014D8  6E09               	movwf	wr16@value+1,c
  6813  0014DA  0E1C               	movlw	28
  6814  0014DC  6E08               	movwf	wr16@value,c
  6815  0014DE  EC48  F035         	call	_wr16	;wreg free
  6816  0014E2  0E02               	movlw	2
  6817  0014E4  EC89  F035         	call	_cmd_incrementn
  6818  0014E8  504F               	movf	_cmd_offset,w,c
  6819  0014EA  6E19               	movwf	??_display_labels& (0+255),c
  6820  0014EC  5050               	movf	_cmd_offset+1,w,c
  6821  0014EE  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6822  0014F0  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6823  0014F2  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6824  0014F4  0E00               	movlw	0
  6825  0014F6  2419               	addwf	??_display_labels,w,c
  6826  0014F8  6E04               	movwf	wr16@addr,c
  6827  0014FA  0E80               	movlw	128
  6828  0014FC  201A               	addwfc	??_display_labels+1,w,c
  6829  0014FE  6E05               	movwf	wr16@addr+1,c
  6830  001500  0E10               	movlw	16
  6831  001502  201B               	addwfc	??_display_labels+2,w,c
  6832  001504  6E06               	movwf	wr16@addr+2,c
  6833  001506  0E00               	movlw	0
  6834  001508  201C               	addwfc	??_display_labels+3,w,c
  6835  00150A  6E07               	movwf	wr16@addr+3,c
  6836  00150C  0E06               	movlw	6
  6837  00150E  6E09               	movwf	wr16@value+1,c
  6838  001510  0E00               	movlw	0
  6839  001512  6E08               	movwf	wr16@value,c
  6840  001514  EC48  F035         	call	_wr16	;wreg free
  6841  001518  0E02               	movlw	2
  6842  00151A  EC89  F035         	call	_cmd_incrementn
  6843  00151E  504F               	movf	_cmd_offset,w,c
  6844  001520  6E19               	movwf	??_display_labels& (0+255),c
  6845  001522  5050               	movf	_cmd_offset+1,w,c
  6846  001524  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6847  001526  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6848  001528  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6849  00152A  0E00               	movlw	0
  6850  00152C  2419               	addwf	??_display_labels,w,c
  6851  00152E  6E09               	movwf	wr8s@addr,c
  6852  001530  0E80               	movlw	128
  6853  001532  201A               	addwfc	??_display_labels+1,w,c
  6854  001534  6E0A               	movwf	wr8s@addr+1,c
  6855  001536  0E10               	movlw	16
  6856  001538  201B               	addwfc	??_display_labels+2,w,c
  6857  00153A  6E0B               	movwf	wr8s@addr+2,c
  6858  00153C  0E00               	movlw	0
  6859  00153E  201C               	addwfc	??_display_labels+3,w,c
  6860  001540  6E0C               	movwf	wr8s@addr+3,c
  6861  001542  0E86               	movlw	low STR_5
  6862  001544  6E0D               	movwf	wr8s@s,c
  6863  001546  0E0F               	movlw	high STR_5
  6864  001548  6E0E               	movwf	wr8s@s+1,c
  6865  00154A  EC67  F033         	call	_wr8s	;wreg free
  6866  00154E  EC89  F035         	call	_cmd_incrementn
  6867                           
  6868                           ;display.c: 52:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 385);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 120);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "Speed"));
  6869  001552  0E0C               	movlw	12
  6870  001554  6E11               	movwf	cmd@command,c
  6871  001556  0EFF               	movlw	255
  6872  001558  6E12               	movwf	cmd@command+1,c
  6873  00155A  0EFF               	movlw	255
  6874  00155C  6E13               	movwf	cmd@command+2,c
  6875  00155E  0EFF               	movlw	255
  6876  001560  6E14               	movwf	cmd@command+3,c
  6877  001562  EC70  F034         	call	_cmd	;wreg free
  6878  001566  504F               	movf	_cmd_offset,w,c
  6879  001568  6E19               	movwf	??_display_labels& (0+255),c
  6880  00156A  5050               	movf	_cmd_offset+1,w,c
  6881  00156C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6882  00156E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6883  001570  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6884  001572  0E00               	movlw	0
  6885  001574  2419               	addwf	??_display_labels,w,c
  6886  001576  6E04               	movwf	wr16@addr,c
  6887  001578  0E80               	movlw	128
  6888  00157A  201A               	addwfc	??_display_labels+1,w,c
  6889  00157C  6E05               	movwf	wr16@addr+1,c
  6890  00157E  0E10               	movlw	16
  6891  001580  201B               	addwfc	??_display_labels+2,w,c
  6892  001582  6E06               	movwf	wr16@addr+2,c
  6893  001584  0E00               	movlw	0
  6894  001586  201C               	addwfc	??_display_labels+3,w,c
  6895  001588  6E07               	movwf	wr16@addr+3,c
  6896  00158A  0E01               	movlw	1
  6897  00158C  6E09               	movwf	wr16@value+1,c
  6898  00158E  0E81               	movlw	129
  6899  001590  6E08               	movwf	wr16@value,c
  6900  001592  EC48  F035         	call	_wr16	;wreg free
  6901  001596  0E02               	movlw	2
  6902  001598  EC89  F035         	call	_cmd_incrementn
  6903  00159C  504F               	movf	_cmd_offset,w,c
  6904  00159E  6E19               	movwf	??_display_labels& (0+255),c
  6905  0015A0  5050               	movf	_cmd_offset+1,w,c
  6906  0015A2  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6907  0015A4  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6908  0015A6  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6909  0015A8  0E00               	movlw	0
  6910  0015AA  2419               	addwf	??_display_labels,w,c
  6911  0015AC  6E04               	movwf	wr16@addr,c
  6912  0015AE  0E80               	movlw	128
  6913  0015B0  201A               	addwfc	??_display_labels+1,w,c
  6914  0015B2  6E05               	movwf	wr16@addr+1,c
  6915  0015B4  0E10               	movlw	16
  6916  0015B6  201B               	addwfc	??_display_labels+2,w,c
  6917  0015B8  6E06               	movwf	wr16@addr+2,c
  6918  0015BA  0E00               	movlw	0
  6919  0015BC  201C               	addwfc	??_display_labels+3,w,c
  6920  0015BE  6E07               	movwf	wr16@addr+3,c
  6921  0015C0  0E00               	movlw	0
  6922  0015C2  6E09               	movwf	wr16@value+1,c
  6923  0015C4  0E78               	movlw	120
  6924  0015C6  6E08               	movwf	wr16@value,c
  6925  0015C8  EC48  F035         	call	_wr16	;wreg free
  6926  0015CC  0E02               	movlw	2
  6927  0015CE  EC89  F035         	call	_cmd_incrementn
  6928  0015D2  504F               	movf	_cmd_offset,w,c
  6929  0015D4  6E19               	movwf	??_display_labels& (0+255),c
  6930  0015D6  5050               	movf	_cmd_offset+1,w,c
  6931  0015D8  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6932  0015DA  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6933  0015DC  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6934  0015DE  0E00               	movlw	0
  6935  0015E0  2419               	addwf	??_display_labels,w,c
  6936  0015E2  6E04               	movwf	wr16@addr,c
  6937  0015E4  0E80               	movlw	128
  6938  0015E6  201A               	addwfc	??_display_labels+1,w,c
  6939  0015E8  6E05               	movwf	wr16@addr+1,c
  6940  0015EA  0E10               	movlw	16
  6941  0015EC  201B               	addwfc	??_display_labels+2,w,c
  6942  0015EE  6E06               	movwf	wr16@addr+2,c
  6943  0015F0  0E00               	movlw	0
  6944  0015F2  201C               	addwfc	??_display_labels+3,w,c
  6945  0015F4  6E07               	movwf	wr16@addr+3,c
  6946  0015F6  0E00               	movlw	0
  6947  0015F8  6E09               	movwf	wr16@value+1,c
  6948  0015FA  0E1C               	movlw	28
  6949  0015FC  6E08               	movwf	wr16@value,c
  6950  0015FE  EC48  F035         	call	_wr16	;wreg free
  6951  001602  0E02               	movlw	2
  6952  001604  EC89  F035         	call	_cmd_incrementn
  6953  001608  504F               	movf	_cmd_offset,w,c
  6954  00160A  6E19               	movwf	??_display_labels& (0+255),c
  6955  00160C  5050               	movf	_cmd_offset+1,w,c
  6956  00160E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6957  001610  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6958  001612  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6959  001614  0E00               	movlw	0
  6960  001616  2419               	addwf	??_display_labels,w,c
  6961  001618  6E04               	movwf	wr16@addr,c
  6962  00161A  0E80               	movlw	128
  6963  00161C  201A               	addwfc	??_display_labels+1,w,c
  6964  00161E  6E05               	movwf	wr16@addr+1,c
  6965  001620  0E10               	movlw	16
  6966  001622  201B               	addwfc	??_display_labels+2,w,c
  6967  001624  6E06               	movwf	wr16@addr+2,c
  6968  001626  0E00               	movlw	0
  6969  001628  201C               	addwfc	??_display_labels+3,w,c
  6970  00162A  6E07               	movwf	wr16@addr+3,c
  6971  00162C  0E06               	movlw	6
  6972  00162E  6E09               	movwf	wr16@value+1,c
  6973  001630  0E00               	movlw	0
  6974  001632  6E08               	movwf	wr16@value,c
  6975  001634  EC48  F035         	call	_wr16	;wreg free
  6976  001638  0E02               	movlw	2
  6977  00163A  EC89  F035         	call	_cmd_incrementn
  6978  00163E  504F               	movf	_cmd_offset,w,c
  6979  001640  6E19               	movwf	??_display_labels& (0+255),c
  6980  001642  5050               	movf	_cmd_offset+1,w,c
  6981  001644  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6982  001646  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6983  001648  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6984  00164A  0E00               	movlw	0
  6985  00164C  2419               	addwf	??_display_labels,w,c
  6986  00164E  6E09               	movwf	wr8s@addr,c
  6987  001650  0E80               	movlw	128
  6988  001652  201A               	addwfc	??_display_labels+1,w,c
  6989  001654  6E0A               	movwf	wr8s@addr+1,c
  6990  001656  0E10               	movlw	16
  6991  001658  201B               	addwfc	??_display_labels+2,w,c
  6992  00165A  6E0B               	movwf	wr8s@addr+2,c
  6993  00165C  0E00               	movlw	0
  6994  00165E  201C               	addwfc	??_display_labels+3,w,c
  6995  001660  6E0C               	movwf	wr8s@addr+3,c
  6996  001662  0E47               	movlw	low STR_6
  6997  001664  6E0D               	movwf	wr8s@s,c
  6998  001666  0E0F               	movlw	high STR_6
  6999  001668  6E0E               	movwf	wr8s@s+1,c
  7000  00166A  EC67  F033         	call	_wr8s	;wreg free
  7001  00166E  EC89  F035         	call	_cmd_incrementn
  7002                           
  7003                           ;display.c: 53:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 65);cmd_incrementn(2);
      +                          wr16(1081344UL +cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_i
      +                          ncrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(108134
      +                          4UL +cmd_offset, "Bias"));
  7004  001672  0E0C               	movlw	12
  7005  001674  6E11               	movwf	cmd@command,c
  7006  001676  0EFF               	movlw	255
  7007  001678  6E12               	movwf	cmd@command+1,c
  7008  00167A  0EFF               	movlw	255
  7009  00167C  6E13               	movwf	cmd@command+2,c
  7010  00167E  0EFF               	movlw	255
  7011  001680  6E14               	movwf	cmd@command+3,c
  7012  001682  EC70  F034         	call	_cmd	;wreg free
  7013  001686  504F               	movf	_cmd_offset,w,c
  7014  001688  6E19               	movwf	??_display_labels& (0+255),c
  7015  00168A  5050               	movf	_cmd_offset+1,w,c
  7016  00168C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7017  00168E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7018  001690  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7019  001692  0E00               	movlw	0
  7020  001694  2419               	addwf	??_display_labels,w,c
  7021  001696  6E04               	movwf	wr16@addr,c
  7022  001698  0E80               	movlw	128
  7023  00169A  201A               	addwfc	??_display_labels+1,w,c
  7024  00169C  6E05               	movwf	wr16@addr+1,c
  7025  00169E  0E10               	movlw	16
  7026  0016A0  201B               	addwfc	??_display_labels+2,w,c
  7027  0016A2  6E06               	movwf	wr16@addr+2,c
  7028  0016A4  0E00               	movlw	0
  7029  0016A6  201C               	addwfc	??_display_labels+3,w,c
  7030  0016A8  6E07               	movwf	wr16@addr+3,c
  7031  0016AA  0E00               	movlw	0
  7032  0016AC  6E09               	movwf	wr16@value+1,c
  7033  0016AE  0E41               	movlw	65
  7034  0016B0  6E08               	movwf	wr16@value,c
  7035  0016B2  EC48  F035         	call	_wr16	;wreg free
  7036  0016B6  0E02               	movlw	2
  7037  0016B8  EC89  F035         	call	_cmd_incrementn
  7038  0016BC  504F               	movf	_cmd_offset,w,c
  7039  0016BE  6E19               	movwf	??_display_labels& (0+255),c
  7040  0016C0  5050               	movf	_cmd_offset+1,w,c
  7041  0016C2  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7042  0016C4  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7043  0016C6  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7044  0016C8  0E00               	movlw	0
  7045  0016CA  2419               	addwf	??_display_labels,w,c
  7046  0016CC  6E04               	movwf	wr16@addr,c
  7047  0016CE  0E80               	movlw	128
  7048  0016D0  201A               	addwfc	??_display_labels+1,w,c
  7049  0016D2  6E05               	movwf	wr16@addr+1,c
  7050  0016D4  0E10               	movlw	16
  7051  0016D6  201B               	addwfc	??_display_labels+2,w,c
  7052  0016D8  6E06               	movwf	wr16@addr+2,c
  7053  0016DA  0E00               	movlw	0
  7054  0016DC  201C               	addwfc	??_display_labels+3,w,c
  7055  0016DE  6E07               	movwf	wr16@addr+3,c
  7056  0016E0  0E00               	movlw	0
  7057  0016E2  6E09               	movwf	wr16@value+1,c
  7058  0016E4  0EF5               	movlw	245
  7059  0016E6  6E08               	movwf	wr16@value,c
  7060  0016E8  EC48  F035         	call	_wr16	;wreg free
  7061  0016EC  0E02               	movlw	2
  7062  0016EE  EC89  F035         	call	_cmd_incrementn
  7063  0016F2  504F               	movf	_cmd_offset,w,c
  7064  0016F4  6E19               	movwf	??_display_labels& (0+255),c
  7065  0016F6  5050               	movf	_cmd_offset+1,w,c
  7066  0016F8  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7067  0016FA  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7068  0016FC  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7069  0016FE  0E00               	movlw	0
  7070  001700  2419               	addwf	??_display_labels,w,c
  7071  001702  6E04               	movwf	wr16@addr,c
  7072  001704  0E80               	movlw	128
  7073  001706  201A               	addwfc	??_display_labels+1,w,c
  7074  001708  6E05               	movwf	wr16@addr+1,c
  7075  00170A  0E10               	movlw	16
  7076  00170C  201B               	addwfc	??_display_labels+2,w,c
  7077  00170E  6E06               	movwf	wr16@addr+2,c
  7078  001710  0E00               	movlw	0
  7079  001712  201C               	addwfc	??_display_labels+3,w,c
  7080  001714  6E07               	movwf	wr16@addr+3,c
  7081  001716  0E00               	movlw	0
  7082  001718  6E09               	movwf	wr16@value+1,c
  7083  00171A  0E1C               	movlw	28
  7084  00171C  6E08               	movwf	wr16@value,c
  7085  00171E  EC48  F035         	call	_wr16	;wreg free
  7086  001722  0E02               	movlw	2
  7087  001724  EC89  F035         	call	_cmd_incrementn
  7088  001728  504F               	movf	_cmd_offset,w,c
  7089  00172A  6E19               	movwf	??_display_labels& (0+255),c
  7090  00172C  5050               	movf	_cmd_offset+1,w,c
  7091  00172E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7092  001730  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7093  001732  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7094  001734  0E00               	movlw	0
  7095  001736  2419               	addwf	??_display_labels,w,c
  7096  001738  6E04               	movwf	wr16@addr,c
  7097  00173A  0E80               	movlw	128
  7098  00173C  201A               	addwfc	??_display_labels+1,w,c
  7099  00173E  6E05               	movwf	wr16@addr+1,c
  7100  001740  0E10               	movlw	16
  7101  001742  201B               	addwfc	??_display_labels+2,w,c
  7102  001744  6E06               	movwf	wr16@addr+2,c
  7103  001746  0E00               	movlw	0
  7104  001748  201C               	addwfc	??_display_labels+3,w,c
  7105  00174A  6E07               	movwf	wr16@addr+3,c
  7106  00174C  0E00               	movlw	0
  7107  00174E  6E09               	movwf	wr16@value+1,c
  7108  001750  0E00               	movlw	0
  7109  001752  6E08               	movwf	wr16@value,c
  7110  001754  EC48  F035         	call	_wr16	;wreg free
  7111  001758  0E02               	movlw	2
  7112  00175A  EC89  F035         	call	_cmd_incrementn
  7113  00175E  504F               	movf	_cmd_offset,w,c
  7114  001760  6E19               	movwf	??_display_labels& (0+255),c
  7115  001762  5050               	movf	_cmd_offset+1,w,c
  7116  001764  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7117  001766  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7118  001768  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7119  00176A  0E00               	movlw	0
  7120  00176C  2419               	addwf	??_display_labels,w,c
  7121  00176E  6E09               	movwf	wr8s@addr,c
  7122  001770  0E80               	movlw	128
  7123  001772  201A               	addwfc	??_display_labels+1,w,c
  7124  001774  6E0A               	movwf	wr8s@addr+1,c
  7125  001776  0E10               	movlw	16
  7126  001778  201B               	addwfc	??_display_labels+2,w,c
  7127  00177A  6E0B               	movwf	wr8s@addr+2,c
  7128  00177C  0E00               	movlw	0
  7129  00177E  201C               	addwfc	??_display_labels+3,w,c
  7130  001780  6E0C               	movwf	wr8s@addr+3,c
  7131  001782  0E74               	movlw	low STR_7
  7132  001784  6E0D               	movwf	wr8s@s,c
  7133  001786  0E0F               	movlw	high STR_7
  7134  001788  6E0E               	movwf	wr8s@s+1,c
  7135  00178A  EC67  F033         	call	_wr8s	;wreg free
  7136  00178E  EC89  F035         	call	_cmd_incrementn
  7137                           
  7138                           ;display.c: 54:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 45);cmd_incrementn(2);
      +                          wr16(1081344UL +cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_i
      +                          ncrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(108134
      +                          4UL +cmd_offset, "%"));
  7139  001792  0E0C               	movlw	12
  7140  001794  6E11               	movwf	cmd@command,c
  7141  001796  0EFF               	movlw	255
  7142  001798  6E12               	movwf	cmd@command+1,c
  7143  00179A  0EFF               	movlw	255
  7144  00179C  6E13               	movwf	cmd@command+2,c
  7145  00179E  0EFF               	movlw	255
  7146  0017A0  6E14               	movwf	cmd@command+3,c
  7147  0017A2  EC70  F034         	call	_cmd	;wreg free
  7148  0017A6  504F               	movf	_cmd_offset,w,c
  7149  0017A8  6E19               	movwf	??_display_labels& (0+255),c
  7150  0017AA  5050               	movf	_cmd_offset+1,w,c
  7151  0017AC  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7152  0017AE  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7153  0017B0  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7154  0017B2  0E00               	movlw	0
  7155  0017B4  2419               	addwf	??_display_labels,w,c
  7156  0017B6  6E04               	movwf	wr16@addr,c
  7157  0017B8  0E80               	movlw	128
  7158  0017BA  201A               	addwfc	??_display_labels+1,w,c
  7159  0017BC  6E05               	movwf	wr16@addr+1,c
  7160  0017BE  0E10               	movlw	16
  7161  0017C0  201B               	addwfc	??_display_labels+2,w,c
  7162  0017C2  6E06               	movwf	wr16@addr+2,c
  7163  0017C4  0E00               	movlw	0
  7164  0017C6  201C               	addwfc	??_display_labels+3,w,c
  7165  0017C8  6E07               	movwf	wr16@addr+3,c
  7166  0017CA  0E00               	movlw	0
  7167  0017CC  6E09               	movwf	wr16@value+1,c
  7168  0017CE  0E2D               	movlw	45
  7169  0017D0  6E08               	movwf	wr16@value,c
  7170  0017D2  EC48  F035         	call	_wr16	;wreg free
  7171  0017D6  0E02               	movlw	2
  7172  0017D8  EC89  F035         	call	_cmd_incrementn
  7173  0017DC  504F               	movf	_cmd_offset,w,c
  7174  0017DE  6E19               	movwf	??_display_labels& (0+255),c
  7175  0017E0  5050               	movf	_cmd_offset+1,w,c
  7176  0017E2  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7177  0017E4  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7178  0017E6  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7179  0017E8  0E00               	movlw	0
  7180  0017EA  2419               	addwf	??_display_labels,w,c
  7181  0017EC  6E04               	movwf	wr16@addr,c
  7182  0017EE  0E80               	movlw	128
  7183  0017F0  201A               	addwfc	??_display_labels+1,w,c
  7184  0017F2  6E05               	movwf	wr16@addr+1,c
  7185  0017F4  0E10               	movlw	16
  7186  0017F6  201B               	addwfc	??_display_labels+2,w,c
  7187  0017F8  6E06               	movwf	wr16@addr+2,c
  7188  0017FA  0E00               	movlw	0
  7189  0017FC  201C               	addwfc	??_display_labels+3,w,c
  7190  0017FE  6E07               	movwf	wr16@addr+3,c
  7191  001800  0E00               	movlw	0
  7192  001802  6E09               	movwf	wr16@value+1,c
  7193  001804  0EF5               	movlw	245
  7194  001806  6E08               	movwf	wr16@value,c
  7195  001808  EC48  F035         	call	_wr16	;wreg free
  7196  00180C  0E02               	movlw	2
  7197  00180E  EC89  F035         	call	_cmd_incrementn
  7198  001812  504F               	movf	_cmd_offset,w,c
  7199  001814  6E19               	movwf	??_display_labels& (0+255),c
  7200  001816  5050               	movf	_cmd_offset+1,w,c
  7201  001818  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7202  00181A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7203  00181C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7204  00181E  0E00               	movlw	0
  7205  001820  2419               	addwf	??_display_labels,w,c
  7206  001822  6E04               	movwf	wr16@addr,c
  7207  001824  0E80               	movlw	128
  7208  001826  201A               	addwfc	??_display_labels+1,w,c
  7209  001828  6E05               	movwf	wr16@addr+1,c
  7210  00182A  0E10               	movlw	16
  7211  00182C  201B               	addwfc	??_display_labels+2,w,c
  7212  00182E  6E06               	movwf	wr16@addr+2,c
  7213  001830  0E00               	movlw	0
  7214  001832  201C               	addwfc	??_display_labels+3,w,c
  7215  001834  6E07               	movwf	wr16@addr+3,c
  7216  001836  0E00               	movlw	0
  7217  001838  6E09               	movwf	wr16@value+1,c
  7218  00183A  0E1C               	movlw	28
  7219  00183C  6E08               	movwf	wr16@value,c
  7220  00183E  EC48  F035         	call	_wr16	;wreg free
  7221  001842  0E02               	movlw	2
  7222  001844  EC89  F035         	call	_cmd_incrementn
  7223  001848  504F               	movf	_cmd_offset,w,c
  7224  00184A  6E19               	movwf	??_display_labels& (0+255),c
  7225  00184C  5050               	movf	_cmd_offset+1,w,c
  7226  00184E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7227  001850  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7228  001852  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7229  001854  0E00               	movlw	0
  7230  001856  2419               	addwf	??_display_labels,w,c
  7231  001858  6E04               	movwf	wr16@addr,c
  7232  00185A  0E80               	movlw	128
  7233  00185C  201A               	addwfc	??_display_labels+1,w,c
  7234  00185E  6E05               	movwf	wr16@addr+1,c
  7235  001860  0E10               	movlw	16
  7236  001862  201B               	addwfc	??_display_labels+2,w,c
  7237  001864  6E06               	movwf	wr16@addr+2,c
  7238  001866  0E00               	movlw	0
  7239  001868  201C               	addwfc	??_display_labels+3,w,c
  7240  00186A  6E07               	movwf	wr16@addr+3,c
  7241  00186C  0E00               	movlw	0
  7242  00186E  6E09               	movwf	wr16@value+1,c
  7243  001870  0E00               	movlw	0
  7244  001872  6E08               	movwf	wr16@value,c
  7245  001874  EC48  F035         	call	_wr16	;wreg free
  7246  001878  0E02               	movlw	2
  7247  00187A  EC89  F035         	call	_cmd_incrementn
  7248  00187E  504F               	movf	_cmd_offset,w,c
  7249  001880  6E19               	movwf	??_display_labels& (0+255),c
  7250  001882  5050               	movf	_cmd_offset+1,w,c
  7251  001884  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7252  001886  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7253  001888  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7254  00188A  0E00               	movlw	0
  7255  00188C  2419               	addwf	??_display_labels,w,c
  7256  00188E  6E09               	movwf	wr8s@addr,c
  7257  001890  0E80               	movlw	128
  7258  001892  201A               	addwfc	??_display_labels+1,w,c
  7259  001894  6E0A               	movwf	wr8s@addr+1,c
  7260  001896  0E10               	movlw	16
  7261  001898  201B               	addwfc	??_display_labels+2,w,c
  7262  00189A  6E0B               	movwf	wr8s@addr+2,c
  7263  00189C  0E00               	movlw	0
  7264  00189E  201C               	addwfc	??_display_labels+3,w,c
  7265  0018A0  6E0C               	movwf	wr8s@addr+3,c
  7266  0018A2  0E91               	movlw	low STR_8
  7267  0018A4  6E0D               	movwf	wr8s@s,c
  7268  0018A6  0E0F               	movlw	high STR_8
  7269  0018A8  6E0E               	movwf	wr8s@s+1,c
  7270  0018AA  EC67  F033         	call	_wr8s	;wreg free
  7271  0018AE  EC89  F035         	call	_cmd_incrementn
  7272                           
  7273                           ;display.c: 55:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 370);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44UL +cmd_offset, "TP"));
  7274  0018B2  0E0C               	movlw	12
  7275  0018B4  6E11               	movwf	cmd@command,c
  7276  0018B6  0EFF               	movlw	255
  7277  0018B8  6E12               	movwf	cmd@command+1,c
  7278  0018BA  0EFF               	movlw	255
  7279  0018BC  6E13               	movwf	cmd@command+2,c
  7280  0018BE  0EFF               	movlw	255
  7281  0018C0  6E14               	movwf	cmd@command+3,c
  7282  0018C2  EC70  F034         	call	_cmd	;wreg free
  7283  0018C6  504F               	movf	_cmd_offset,w,c
  7284  0018C8  6E19               	movwf	??_display_labels& (0+255),c
  7285  0018CA  5050               	movf	_cmd_offset+1,w,c
  7286  0018CC  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7287  0018CE  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7288  0018D0  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7289  0018D2  0E00               	movlw	0
  7290  0018D4  2419               	addwf	??_display_labels,w,c
  7291  0018D6  6E04               	movwf	wr16@addr,c
  7292  0018D8  0E80               	movlw	128
  7293  0018DA  201A               	addwfc	??_display_labels+1,w,c
  7294  0018DC  6E05               	movwf	wr16@addr+1,c
  7295  0018DE  0E10               	movlw	16
  7296  0018E0  201B               	addwfc	??_display_labels+2,w,c
  7297  0018E2  6E06               	movwf	wr16@addr+2,c
  7298  0018E4  0E00               	movlw	0
  7299  0018E6  201C               	addwfc	??_display_labels+3,w,c
  7300  0018E8  6E07               	movwf	wr16@addr+3,c
  7301  0018EA  0E01               	movlw	1
  7302  0018EC  6E09               	movwf	wr16@value+1,c
  7303  0018EE  0E72               	movlw	114
  7304  0018F0  6E08               	movwf	wr16@value,c
  7305  0018F2  EC48  F035         	call	_wr16	;wreg free
  7306  0018F6  0E02               	movlw	2
  7307  0018F8  EC89  F035         	call	_cmd_incrementn
  7308  0018FC  504F               	movf	_cmd_offset,w,c
  7309  0018FE  6E19               	movwf	??_display_labels& (0+255),c
  7310  001900  5050               	movf	_cmd_offset+1,w,c
  7311  001902  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7312  001904  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7313  001906  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7314  001908  0E00               	movlw	0
  7315  00190A  2419               	addwf	??_display_labels,w,c
  7316  00190C  6E04               	movwf	wr16@addr,c
  7317  00190E  0E80               	movlw	128
  7318  001910  201A               	addwfc	??_display_labels+1,w,c
  7319  001912  6E05               	movwf	wr16@addr+1,c
  7320  001914  0E10               	movlw	16
  7321  001916  201B               	addwfc	??_display_labels+2,w,c
  7322  001918  6E06               	movwf	wr16@addr+2,c
  7323  00191A  0E00               	movlw	0
  7324  00191C  201C               	addwfc	??_display_labels+3,w,c
  7325  00191E  6E07               	movwf	wr16@addr+3,c
  7326  001920  0E00               	movlw	0
  7327  001922  6E09               	movwf	wr16@value+1,c
  7328  001924  0EF5               	movlw	245
  7329  001926  6E08               	movwf	wr16@value,c
  7330  001928  EC48  F035         	call	_wr16	;wreg free
  7331  00192C  0E02               	movlw	2
  7332  00192E  EC89  F035         	call	_cmd_incrementn
  7333  001932  504F               	movf	_cmd_offset,w,c
  7334  001934  6E19               	movwf	??_display_labels& (0+255),c
  7335  001936  5050               	movf	_cmd_offset+1,w,c
  7336  001938  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7337  00193A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7338  00193C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7339  00193E  0E00               	movlw	0
  7340  001940  2419               	addwf	??_display_labels,w,c
  7341  001942  6E04               	movwf	wr16@addr,c
  7342  001944  0E80               	movlw	128
  7343  001946  201A               	addwfc	??_display_labels+1,w,c
  7344  001948  6E05               	movwf	wr16@addr+1,c
  7345  00194A  0E10               	movlw	16
  7346  00194C  201B               	addwfc	??_display_labels+2,w,c
  7347  00194E  6E06               	movwf	wr16@addr+2,c
  7348  001950  0E00               	movlw	0
  7349  001952  201C               	addwfc	??_display_labels+3,w,c
  7350  001954  6E07               	movwf	wr16@addr+3,c
  7351  001956  0E00               	movlw	0
  7352  001958  6E09               	movwf	wr16@value+1,c
  7353  00195A  0E1C               	movlw	28
  7354  00195C  6E08               	movwf	wr16@value,c
  7355  00195E  EC48  F035         	call	_wr16	;wreg free
  7356  001962  0E02               	movlw	2
  7357  001964  EC89  F035         	call	_cmd_incrementn
  7358  001968  504F               	movf	_cmd_offset,w,c
  7359  00196A  6E19               	movwf	??_display_labels& (0+255),c
  7360  00196C  5050               	movf	_cmd_offset+1,w,c
  7361  00196E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7362  001970  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7363  001972  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7364  001974  0E00               	movlw	0
  7365  001976  2419               	addwf	??_display_labels,w,c
  7366  001978  6E04               	movwf	wr16@addr,c
  7367  00197A  0E80               	movlw	128
  7368  00197C  201A               	addwfc	??_display_labels+1,w,c
  7369  00197E  6E05               	movwf	wr16@addr+1,c
  7370  001980  0E10               	movlw	16
  7371  001982  201B               	addwfc	??_display_labels+2,w,c
  7372  001984  6E06               	movwf	wr16@addr+2,c
  7373  001986  0E00               	movlw	0
  7374  001988  201C               	addwfc	??_display_labels+3,w,c
  7375  00198A  6E07               	movwf	wr16@addr+3,c
  7376  00198C  0E00               	movlw	0
  7377  00198E  6E09               	movwf	wr16@value+1,c
  7378  001990  0E00               	movlw	0
  7379  001992  6E08               	movwf	wr16@value,c
  7380  001994  EC48  F035         	call	_wr16	;wreg free
  7381  001998  0E02               	movlw	2
  7382  00199A  EC89  F035         	call	_cmd_incrementn
  7383  00199E  504F               	movf	_cmd_offset,w,c
  7384  0019A0  6E19               	movwf	??_display_labels& (0+255),c
  7385  0019A2  5050               	movf	_cmd_offset+1,w,c
  7386  0019A4  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7387  0019A6  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7388  0019A8  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7389  0019AA  0E00               	movlw	0
  7390  0019AC  2419               	addwf	??_display_labels,w,c
  7391  0019AE  6E09               	movwf	wr8s@addr,c
  7392  0019B0  0E80               	movlw	128
  7393  0019B2  201A               	addwfc	??_display_labels+1,w,c
  7394  0019B4  6E0A               	movwf	wr8s@addr+1,c
  7395  0019B6  0E10               	movlw	16
  7396  0019B8  201B               	addwfc	??_display_labels+2,w,c
  7397  0019BA  6E0B               	movwf	wr8s@addr+2,c
  7398  0019BC  0E00               	movlw	0
  7399  0019BE  201C               	addwfc	??_display_labels+3,w,c
  7400  0019C0  6E0C               	movwf	wr8s@addr+3,c
  7401  0019C2  0E8E               	movlw	low STR_9
  7402  0019C4  6E0D               	movwf	wr8s@s,c
  7403  0019C6  0E0F               	movlw	high STR_9
  7404  0019C8  6E0E               	movwf	wr8s@s+1,c
  7405  0019CA  EC67  F033         	call	_wr8s	;wreg free
  7406  0019CE  EC89  F035         	call	_cmd_incrementn
  7407                           
  7408                           ;display.c: 56:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 459);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44UL +cmd_offset, "%"));
  7409  0019D2  0E0C               	movlw	12
  7410  0019D4  6E11               	movwf	cmd@command,c
  7411  0019D6  0EFF               	movlw	255
  7412  0019D8  6E12               	movwf	cmd@command+1,c
  7413  0019DA  0EFF               	movlw	255
  7414  0019DC  6E13               	movwf	cmd@command+2,c
  7415  0019DE  0EFF               	movlw	255
  7416  0019E0  6E14               	movwf	cmd@command+3,c
  7417  0019E2  EC70  F034         	call	_cmd	;wreg free
  7418  0019E6  504F               	movf	_cmd_offset,w,c
  7419  0019E8  6E19               	movwf	??_display_labels& (0+255),c
  7420  0019EA  5050               	movf	_cmd_offset+1,w,c
  7421  0019EC  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7422  0019EE  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7423  0019F0  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7424  0019F2  0E00               	movlw	0
  7425  0019F4  2419               	addwf	??_display_labels,w,c
  7426  0019F6  6E04               	movwf	wr16@addr,c
  7427  0019F8  0E80               	movlw	128
  7428  0019FA  201A               	addwfc	??_display_labels+1,w,c
  7429  0019FC  6E05               	movwf	wr16@addr+1,c
  7430  0019FE  0E10               	movlw	16
  7431  001A00  201B               	addwfc	??_display_labels+2,w,c
  7432  001A02  6E06               	movwf	wr16@addr+2,c
  7433  001A04  0E00               	movlw	0
  7434  001A06  201C               	addwfc	??_display_labels+3,w,c
  7435  001A08  6E07               	movwf	wr16@addr+3,c
  7436  001A0A  0E01               	movlw	1
  7437  001A0C  6E09               	movwf	wr16@value+1,c
  7438  001A0E  0ECB               	movlw	203
  7439  001A10  6E08               	movwf	wr16@value,c
  7440  001A12  EC48  F035         	call	_wr16	;wreg free
  7441  001A16  0E02               	movlw	2
  7442  001A18  EC89  F035         	call	_cmd_incrementn
  7443  001A1C  504F               	movf	_cmd_offset,w,c
  7444  001A1E  6E19               	movwf	??_display_labels& (0+255),c
  7445  001A20  5050               	movf	_cmd_offset+1,w,c
  7446  001A22  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7447  001A24  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7448  001A26  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7449  001A28  0E00               	movlw	0
  7450  001A2A  2419               	addwf	??_display_labels,w,c
  7451  001A2C  6E04               	movwf	wr16@addr,c
  7452  001A2E  0E80               	movlw	128
  7453  001A30  201A               	addwfc	??_display_labels+1,w,c
  7454  001A32  6E05               	movwf	wr16@addr+1,c
  7455  001A34  0E10               	movlw	16
  7456  001A36  201B               	addwfc	??_display_labels+2,w,c
  7457  001A38  6E06               	movwf	wr16@addr+2,c
  7458  001A3A  0E00               	movlw	0
  7459  001A3C  201C               	addwfc	??_display_labels+3,w,c
  7460  001A3E  6E07               	movwf	wr16@addr+3,c
  7461  001A40  0E00               	movlw	0
  7462  001A42  6E09               	movwf	wr16@value+1,c
  7463  001A44  0EF5               	movlw	245
  7464  001A46  6E08               	movwf	wr16@value,c
  7465  001A48  EC48  F035         	call	_wr16	;wreg free
  7466  001A4C  0E02               	movlw	2
  7467  001A4E  EC89  F035         	call	_cmd_incrementn
  7468  001A52  504F               	movf	_cmd_offset,w,c
  7469  001A54  6E19               	movwf	??_display_labels& (0+255),c
  7470  001A56  5050               	movf	_cmd_offset+1,w,c
  7471  001A58  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7472  001A5A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7473  001A5C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7474  001A5E  0E00               	movlw	0
  7475  001A60  2419               	addwf	??_display_labels,w,c
  7476  001A62  6E04               	movwf	wr16@addr,c
  7477  001A64  0E80               	movlw	128
  7478  001A66  201A               	addwfc	??_display_labels+1,w,c
  7479  001A68  6E05               	movwf	wr16@addr+1,c
  7480  001A6A  0E10               	movlw	16
  7481  001A6C  201B               	addwfc	??_display_labels+2,w,c
  7482  001A6E  6E06               	movwf	wr16@addr+2,c
  7483  001A70  0E00               	movlw	0
  7484  001A72  201C               	addwfc	??_display_labels+3,w,c
  7485  001A74  6E07               	movwf	wr16@addr+3,c
  7486  001A76  0E00               	movlw	0
  7487  001A78  6E09               	movwf	wr16@value+1,c
  7488  001A7A  0E1C               	movlw	28
  7489  001A7C  6E08               	movwf	wr16@value,c
  7490  001A7E  EC48  F035         	call	_wr16	;wreg free
  7491  001A82  0E02               	movlw	2
  7492  001A84  EC89  F035         	call	_cmd_incrementn
  7493  001A88  504F               	movf	_cmd_offset,w,c
  7494  001A8A  6E19               	movwf	??_display_labels& (0+255),c
  7495  001A8C  5050               	movf	_cmd_offset+1,w,c
  7496  001A8E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7497  001A90  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7498  001A92  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7499  001A94  0E00               	movlw	0
  7500  001A96  2419               	addwf	??_display_labels,w,c
  7501  001A98  6E04               	movwf	wr16@addr,c
  7502  001A9A  0E80               	movlw	128
  7503  001A9C  201A               	addwfc	??_display_labels+1,w,c
  7504  001A9E  6E05               	movwf	wr16@addr+1,c
  7505  001AA0  0E10               	movlw	16
  7506  001AA2  201B               	addwfc	??_display_labels+2,w,c
  7507  001AA4  6E06               	movwf	wr16@addr+2,c
  7508  001AA6  0E00               	movlw	0
  7509  001AA8  201C               	addwfc	??_display_labels+3,w,c
  7510  001AAA  6E07               	movwf	wr16@addr+3,c
  7511  001AAC  0E00               	movlw	0
  7512  001AAE  6E09               	movwf	wr16@value+1,c
  7513  001AB0  0E00               	movlw	0
  7514  001AB2  6E08               	movwf	wr16@value,c
  7515  001AB4  EC48  F035         	call	_wr16	;wreg free
  7516  001AB8  0E02               	movlw	2
  7517  001ABA  EC89  F035         	call	_cmd_incrementn
  7518  001ABE  504F               	movf	_cmd_offset,w,c
  7519  001AC0  6E19               	movwf	??_display_labels& (0+255),c
  7520  001AC2  5050               	movf	_cmd_offset+1,w,c
  7521  001AC4  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7522  001AC6  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7523  001AC8  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7524  001ACA  0E00               	movlw	0
  7525  001ACC  2419               	addwf	??_display_labels,w,c
  7526  001ACE  6E09               	movwf	wr8s@addr,c
  7527  001AD0  0E80               	movlw	128
  7528  001AD2  201A               	addwfc	??_display_labels+1,w,c
  7529  001AD4  6E0A               	movwf	wr8s@addr+1,c
  7530  001AD6  0E10               	movlw	16
  7531  001AD8  201B               	addwfc	??_display_labels+2,w,c
  7532  001ADA  6E0B               	movwf	wr8s@addr+2,c
  7533  001ADC  0E00               	movlw	0
  7534  001ADE  201C               	addwfc	??_display_labels+3,w,c
  7535  001AE0  6E0C               	movwf	wr8s@addr+3,c
  7536  001AE2  0E91               	movlw	low STR_8
  7537  001AE4  6E0D               	movwf	wr8s@s,c
  7538  001AE6  0E0F               	movlw	high STR_8
  7539  001AE8  6E0E               	movwf	wr8s@s+1,c
  7540  001AEA  EC67  F033         	call	_wr8s	;wreg free
  7541  001AEE  EC89  F035         	call	_cmd_incrementn
  7542                           
  7543                           ;display.c: 57:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 125);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "ETC"));
  7544  001AF2  0E0C               	movlw	12
  7545  001AF4  6E11               	movwf	cmd@command,c
  7546  001AF6  0EFF               	movlw	255
  7547  001AF8  6E12               	movwf	cmd@command+1,c
  7548  001AFA  0EFF               	movlw	255
  7549  001AFC  6E13               	movwf	cmd@command+2,c
  7550  001AFE  0EFF               	movlw	255
  7551  001B00  6E14               	movwf	cmd@command+3,c
  7552  001B02  EC70  F034         	call	_cmd	;wreg free
  7553  001B06  504F               	movf	_cmd_offset,w,c
  7554  001B08  6E19               	movwf	??_display_labels& (0+255),c
  7555  001B0A  5050               	movf	_cmd_offset+1,w,c
  7556  001B0C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7557  001B0E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7558  001B10  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7559  001B12  0E00               	movlw	0
  7560  001B14  2419               	addwf	??_display_labels,w,c
  7561  001B16  6E04               	movwf	wr16@addr,c
  7562  001B18  0E80               	movlw	128
  7563  001B1A  201A               	addwfc	??_display_labels+1,w,c
  7564  001B1C  6E05               	movwf	wr16@addr+1,c
  7565  001B1E  0E10               	movlw	16
  7566  001B20  201B               	addwfc	??_display_labels+2,w,c
  7567  001B22  6E06               	movwf	wr16@addr+2,c
  7568  001B24  0E00               	movlw	0
  7569  001B26  201C               	addwfc	??_display_labels+3,w,c
  7570  001B28  6E07               	movwf	wr16@addr+3,c
  7571  001B2A  0E00               	movlw	0
  7572  001B2C  6E09               	movwf	wr16@value+1,c
  7573  001B2E  0E8B               	movlw	139
  7574  001B30  6E08               	movwf	wr16@value,c
  7575  001B32  EC48  F035         	call	_wr16	;wreg free
  7576  001B36  0E02               	movlw	2
  7577  001B38  EC89  F035         	call	_cmd_incrementn
  7578  001B3C  504F               	movf	_cmd_offset,w,c
  7579  001B3E  6E19               	movwf	??_display_labels& (0+255),c
  7580  001B40  5050               	movf	_cmd_offset+1,w,c
  7581  001B42  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7582  001B44  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7583  001B46  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7584  001B48  0E00               	movlw	0
  7585  001B4A  2419               	addwf	??_display_labels,w,c
  7586  001B4C  6E04               	movwf	wr16@addr,c
  7587  001B4E  0E80               	movlw	128
  7588  001B50  201A               	addwfc	??_display_labels+1,w,c
  7589  001B52  6E05               	movwf	wr16@addr+1,c
  7590  001B54  0E10               	movlw	16
  7591  001B56  201B               	addwfc	??_display_labels+2,w,c
  7592  001B58  6E06               	movwf	wr16@addr+2,c
  7593  001B5A  0E00               	movlw	0
  7594  001B5C  201C               	addwfc	??_display_labels+3,w,c
  7595  001B5E  6E07               	movwf	wr16@addr+3,c
  7596  001B60  0E00               	movlw	0
  7597  001B62  6E09               	movwf	wr16@value+1,c
  7598  001B64  0E7D               	movlw	125
  7599  001B66  6E08               	movwf	wr16@value,c
  7600  001B68  EC48  F035         	call	_wr16	;wreg free
  7601  001B6C  0E02               	movlw	2
  7602  001B6E  EC89  F035         	call	_cmd_incrementn
  7603  001B72  504F               	movf	_cmd_offset,w,c
  7604  001B74  6E19               	movwf	??_display_labels& (0+255),c
  7605  001B76  5050               	movf	_cmd_offset+1,w,c
  7606  001B78  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7607  001B7A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7608  001B7C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7609  001B7E  0E00               	movlw	0
  7610  001B80  2419               	addwf	??_display_labels,w,c
  7611  001B82  6E04               	movwf	wr16@addr,c
  7612  001B84  0E80               	movlw	128
  7613  001B86  201A               	addwfc	??_display_labels+1,w,c
  7614  001B88  6E05               	movwf	wr16@addr+1,c
  7615  001B8A  0E10               	movlw	16
  7616  001B8C  201B               	addwfc	??_display_labels+2,w,c
  7617  001B8E  6E06               	movwf	wr16@addr+2,c
  7618  001B90  0E00               	movlw	0
  7619  001B92  201C               	addwfc	??_display_labels+3,w,c
  7620  001B94  6E07               	movwf	wr16@addr+3,c
  7621  001B96  0E00               	movlw	0
  7622  001B98  6E09               	movwf	wr16@value+1,c
  7623  001B9A  0E1B               	movlw	27
  7624  001B9C  6E08               	movwf	wr16@value,c
  7625  001B9E  EC48  F035         	call	_wr16	;wreg free
  7626  001BA2  0E02               	movlw	2
  7627  001BA4  EC89  F035         	call	_cmd_incrementn
  7628  001BA8  504F               	movf	_cmd_offset,w,c
  7629  001BAA  6E19               	movwf	??_display_labels& (0+255),c
  7630  001BAC  5050               	movf	_cmd_offset+1,w,c
  7631  001BAE  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7632  001BB0  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7633  001BB2  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7634  001BB4  0E00               	movlw	0
  7635  001BB6  2419               	addwf	??_display_labels,w,c
  7636  001BB8  6E04               	movwf	wr16@addr,c
  7637  001BBA  0E80               	movlw	128
  7638  001BBC  201A               	addwfc	??_display_labels+1,w,c
  7639  001BBE  6E05               	movwf	wr16@addr+1,c
  7640  001BC0  0E10               	movlw	16
  7641  001BC2  201B               	addwfc	??_display_labels+2,w,c
  7642  001BC4  6E06               	movwf	wr16@addr+2,c
  7643  001BC6  0E00               	movlw	0
  7644  001BC8  201C               	addwfc	??_display_labels+3,w,c
  7645  001BCA  6E07               	movwf	wr16@addr+3,c
  7646  001BCC  0E06               	movlw	6
  7647  001BCE  6E09               	movwf	wr16@value+1,c
  7648  001BD0  0E00               	movlw	0
  7649  001BD2  6E08               	movwf	wr16@value,c
  7650  001BD4  EC48  F035         	call	_wr16	;wreg free
  7651  001BD8  0E02               	movlw	2
  7652  001BDA  EC89  F035         	call	_cmd_incrementn
  7653  001BDE  504F               	movf	_cmd_offset,w,c
  7654  001BE0  6E19               	movwf	??_display_labels& (0+255),c
  7655  001BE2  5050               	movf	_cmd_offset+1,w,c
  7656  001BE4  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7657  001BE6  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7658  001BE8  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7659  001BEA  0E00               	movlw	0
  7660  001BEC  2419               	addwf	??_display_labels,w,c
  7661  001BEE  6E09               	movwf	wr8s@addr,c
  7662  001BF0  0E80               	movlw	128
  7663  001BF2  201A               	addwfc	??_display_labels+1,w,c
  7664  001BF4  6E0A               	movwf	wr8s@addr+1,c
  7665  001BF6  0E10               	movlw	16
  7666  001BF8  201B               	addwfc	??_display_labels+2,w,c
  7667  001BFA  6E0B               	movwf	wr8s@addr+2,c
  7668  001BFC  0E00               	movlw	0
  7669  001BFE  201C               	addwfc	??_display_labels+3,w,c
  7670  001C00  6E0C               	movwf	wr8s@addr+3,c
  7671  001C02  0E7E               	movlw	low STR_11
  7672  001C04  6E0D               	movwf	wr8s@s,c
  7673  001C06  0E0F               	movlw	high STR_11
  7674  001C08  6E0E               	movwf	wr8s@s+1,c
  7675  001C0A  EC67  F033         	call	_wr8s	;wreg free
  7676  001C0E  EC89  F035         	call	_cmd_incrementn
  7677                           
  7678                           ;display.c: 58:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 270);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44UL +cmd_offset, "V"));
  7679  001C12  0E0C               	movlw	12
  7680  001C14  6E11               	movwf	cmd@command,c
  7681  001C16  0EFF               	movlw	255
  7682  001C18  6E12               	movwf	cmd@command+1,c
  7683  001C1A  0EFF               	movlw	255
  7684  001C1C  6E13               	movwf	cmd@command+2,c
  7685  001C1E  0EFF               	movlw	255
  7686  001C20  6E14               	movwf	cmd@command+3,c
  7687  001C22  EC70  F034         	call	_cmd	;wreg free
  7688  001C26  504F               	movf	_cmd_offset,w,c
  7689  001C28  6E19               	movwf	??_display_labels& (0+255),c
  7690  001C2A  5050               	movf	_cmd_offset+1,w,c
  7691  001C2C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7692  001C2E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7693  001C30  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7694  001C32  0E00               	movlw	0
  7695  001C34  2419               	addwf	??_display_labels,w,c
  7696  001C36  6E04               	movwf	wr16@addr,c
  7697  001C38  0E80               	movlw	128
  7698  001C3A  201A               	addwfc	??_display_labels+1,w,c
  7699  001C3C  6E05               	movwf	wr16@addr+1,c
  7700  001C3E  0E10               	movlw	16
  7701  001C40  201B               	addwfc	??_display_labels+2,w,c
  7702  001C42  6E06               	movwf	wr16@addr+2,c
  7703  001C44  0E00               	movlw	0
  7704  001C46  201C               	addwfc	??_display_labels+3,w,c
  7705  001C48  6E07               	movwf	wr16@addr+3,c
  7706  001C4A  0E01               	movlw	1
  7707  001C4C  6E09               	movwf	wr16@value+1,c
  7708  001C4E  0E0E               	movlw	14
  7709  001C50  6E08               	movwf	wr16@value,c
  7710  001C52  EC48  F035         	call	_wr16	;wreg free
  7711  001C56  0E02               	movlw	2
  7712  001C58  EC89  F035         	call	_cmd_incrementn
  7713  001C5C  504F               	movf	_cmd_offset,w,c
  7714  001C5E  6E19               	movwf	??_display_labels& (0+255),c
  7715  001C60  5050               	movf	_cmd_offset+1,w,c
  7716  001C62  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7717  001C64  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7718  001C66  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7719  001C68  0E00               	movlw	0
  7720  001C6A  2419               	addwf	??_display_labels,w,c
  7721  001C6C  6E04               	movwf	wr16@addr,c
  7722  001C6E  0E80               	movlw	128
  7723  001C70  201A               	addwfc	??_display_labels+1,w,c
  7724  001C72  6E05               	movwf	wr16@addr+1,c
  7725  001C74  0E10               	movlw	16
  7726  001C76  201B               	addwfc	??_display_labels+2,w,c
  7727  001C78  6E06               	movwf	wr16@addr+2,c
  7728  001C7A  0E00               	movlw	0
  7729  001C7C  201C               	addwfc	??_display_labels+3,w,c
  7730  001C7E  6E07               	movwf	wr16@addr+3,c
  7731  001C80  0E00               	movlw	0
  7732  001C82  6E09               	movwf	wr16@value+1,c
  7733  001C84  0EF5               	movlw	245
  7734  001C86  6E08               	movwf	wr16@value,c
  7735  001C88  EC48  F035         	call	_wr16	;wreg free
  7736  001C8C  0E02               	movlw	2
  7737  001C8E  EC89  F035         	call	_cmd_incrementn
  7738  001C92  504F               	movf	_cmd_offset,w,c
  7739  001C94  6E19               	movwf	??_display_labels& (0+255),c
  7740  001C96  5050               	movf	_cmd_offset+1,w,c
  7741  001C98  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7742  001C9A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7743  001C9C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7744  001C9E  0E00               	movlw	0
  7745  001CA0  2419               	addwf	??_display_labels,w,c
  7746  001CA2  6E04               	movwf	wr16@addr,c
  7747  001CA4  0E80               	movlw	128
  7748  001CA6  201A               	addwfc	??_display_labels+1,w,c
  7749  001CA8  6E05               	movwf	wr16@addr+1,c
  7750  001CAA  0E10               	movlw	16
  7751  001CAC  201B               	addwfc	??_display_labels+2,w,c
  7752  001CAE  6E06               	movwf	wr16@addr+2,c
  7753  001CB0  0E00               	movlw	0
  7754  001CB2  201C               	addwfc	??_display_labels+3,w,c
  7755  001CB4  6E07               	movwf	wr16@addr+3,c
  7756  001CB6  0E00               	movlw	0
  7757  001CB8  6E09               	movwf	wr16@value+1,c
  7758  001CBA  0E1C               	movlw	28
  7759  001CBC  6E08               	movwf	wr16@value,c
  7760  001CBE  EC48  F035         	call	_wr16	;wreg free
  7761  001CC2  0E02               	movlw	2
  7762  001CC4  EC89  F035         	call	_cmd_incrementn
  7763  001CC8  504F               	movf	_cmd_offset,w,c
  7764  001CCA  6E19               	movwf	??_display_labels& (0+255),c
  7765  001CCC  5050               	movf	_cmd_offset+1,w,c
  7766  001CCE  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7767  001CD0  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7768  001CD2  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7769  001CD4  0E00               	movlw	0
  7770  001CD6  2419               	addwf	??_display_labels,w,c
  7771  001CD8  6E04               	movwf	wr16@addr,c
  7772  001CDA  0E80               	movlw	128
  7773  001CDC  201A               	addwfc	??_display_labels+1,w,c
  7774  001CDE  6E05               	movwf	wr16@addr+1,c
  7775  001CE0  0E10               	movlw	16
  7776  001CE2  201B               	addwfc	??_display_labels+2,w,c
  7777  001CE4  6E06               	movwf	wr16@addr+2,c
  7778  001CE6  0E00               	movlw	0
  7779  001CE8  201C               	addwfc	??_display_labels+3,w,c
  7780  001CEA  6E07               	movwf	wr16@addr+3,c
  7781  001CEC  0E00               	movlw	0
  7782  001CEE  6E09               	movwf	wr16@value+1,c
  7783  001CF0  0E00               	movlw	0
  7784  001CF2  6E08               	movwf	wr16@value,c
  7785  001CF4  EC48  F035         	call	_wr16	;wreg free
  7786  001CF8  0E02               	movlw	2
  7787  001CFA  EC89  F035         	call	_cmd_incrementn
  7788  001CFE  504F               	movf	_cmd_offset,w,c
  7789  001D00  6E19               	movwf	??_display_labels& (0+255),c
  7790  001D02  5050               	movf	_cmd_offset+1,w,c
  7791  001D04  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7792  001D06  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7793  001D08  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7794  001D0A  0E00               	movlw	0
  7795  001D0C  2419               	addwf	??_display_labels,w,c
  7796  001D0E  6E09               	movwf	wr8s@addr,c
  7797  001D10  0E80               	movlw	128
  7798  001D12  201A               	addwfc	??_display_labels+1,w,c
  7799  001D14  6E0A               	movwf	wr8s@addr+1,c
  7800  001D16  0E10               	movlw	16
  7801  001D18  201B               	addwfc	??_display_labels+2,w,c
  7802  001D1A  6E0B               	movwf	wr8s@addr+2,c
  7803  001D1C  0E00               	movlw	0
  7804  001D1E  201C               	addwfc	??_display_labels+3,w,c
  7805  001D20  6E0C               	movwf	wr8s@addr+3,c
  7806  001D22  0E99               	movlw	low STR_12
  7807  001D24  6E0D               	movwf	wr8s@s,c
  7808  001D26  0E0F               	movlw	high STR_12
  7809  001D28  6E0E               	movwf	wr8s@s+1,c
  7810  001D2A  EC67  F033         	call	_wr8s	;wreg free
  7811  001D2E  EC89  F035         	call	_cmd_incrementn
  7812                           
  7813                           ;display.c: 59:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 47);cmd_incrementn(2);
      +                          wr16(1081344UL +cmd_offset, 125);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_i
      +                          ncrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1
      +                          081344UL +cmd_offset, "Fuel"));
  7814  001D32  0E0C               	movlw	12
  7815  001D34  6E11               	movwf	cmd@command,c
  7816  001D36  0EFF               	movlw	255
  7817  001D38  6E12               	movwf	cmd@command+1,c
  7818  001D3A  0EFF               	movlw	255
  7819  001D3C  6E13               	movwf	cmd@command+2,c
  7820  001D3E  0EFF               	movlw	255
  7821  001D40  6E14               	movwf	cmd@command+3,c
  7822  001D42  EC70  F034         	call	_cmd	;wreg free
  7823  001D46  504F               	movf	_cmd_offset,w,c
  7824  001D48  6E19               	movwf	??_display_labels& (0+255),c
  7825  001D4A  5050               	movf	_cmd_offset+1,w,c
  7826  001D4C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7827  001D4E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7828  001D50  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7829  001D52  0E00               	movlw	0
  7830  001D54  2419               	addwf	??_display_labels,w,c
  7831  001D56  6E04               	movwf	wr16@addr,c
  7832  001D58  0E80               	movlw	128
  7833  001D5A  201A               	addwfc	??_display_labels+1,w,c
  7834  001D5C  6E05               	movwf	wr16@addr+1,c
  7835  001D5E  0E10               	movlw	16
  7836  001D60  201B               	addwfc	??_display_labels+2,w,c
  7837  001D62  6E06               	movwf	wr16@addr+2,c
  7838  001D64  0E00               	movlw	0
  7839  001D66  201C               	addwfc	??_display_labels+3,w,c
  7840  001D68  6E07               	movwf	wr16@addr+3,c
  7841  001D6A  0E00               	movlw	0
  7842  001D6C  6E09               	movwf	wr16@value+1,c
  7843  001D6E  0E2F               	movlw	47
  7844  001D70  6E08               	movwf	wr16@value,c
  7845  001D72  EC48  F035         	call	_wr16	;wreg free
  7846  001D76  0E02               	movlw	2
  7847  001D78  EC89  F035         	call	_cmd_incrementn
  7848  001D7C  504F               	movf	_cmd_offset,w,c
  7849  001D7E  6E19               	movwf	??_display_labels& (0+255),c
  7850  001D80  5050               	movf	_cmd_offset+1,w,c
  7851  001D82  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7852  001D84  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7853  001D86  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7854  001D88  0E00               	movlw	0
  7855  001D8A  2419               	addwf	??_display_labels,w,c
  7856  001D8C  6E04               	movwf	wr16@addr,c
  7857  001D8E  0E80               	movlw	128
  7858  001D90  201A               	addwfc	??_display_labels+1,w,c
  7859  001D92  6E05               	movwf	wr16@addr+1,c
  7860  001D94  0E10               	movlw	16
  7861  001D96  201B               	addwfc	??_display_labels+2,w,c
  7862  001D98  6E06               	movwf	wr16@addr+2,c
  7863  001D9A  0E00               	movlw	0
  7864  001D9C  201C               	addwfc	??_display_labels+3,w,c
  7865  001D9E  6E07               	movwf	wr16@addr+3,c
  7866  001DA0  0E00               	movlw	0
  7867  001DA2  6E09               	movwf	wr16@value+1,c
  7868  001DA4  0E7D               	movlw	125
  7869  001DA6  6E08               	movwf	wr16@value,c
  7870  001DA8  EC48  F035         	call	_wr16	;wreg free
  7871  001DAC  0E02               	movlw	2
  7872  001DAE  EC89  F035         	call	_cmd_incrementn
  7873  001DB2  504F               	movf	_cmd_offset,w,c
  7874  001DB4  6E19               	movwf	??_display_labels& (0+255),c
  7875  001DB6  5050               	movf	_cmd_offset+1,w,c
  7876  001DB8  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7877  001DBA  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7878  001DBC  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7879  001DBE  0E00               	movlw	0
  7880  001DC0  2419               	addwf	??_display_labels,w,c
  7881  001DC2  6E04               	movwf	wr16@addr,c
  7882  001DC4  0E80               	movlw	128
  7883  001DC6  201A               	addwfc	??_display_labels+1,w,c
  7884  001DC8  6E05               	movwf	wr16@addr+1,c
  7885  001DCA  0E10               	movlw	16
  7886  001DCC  201B               	addwfc	??_display_labels+2,w,c
  7887  001DCE  6E06               	movwf	wr16@addr+2,c
  7888  001DD0  0E00               	movlw	0
  7889  001DD2  201C               	addwfc	??_display_labels+3,w,c
  7890  001DD4  6E07               	movwf	wr16@addr+3,c
  7891  001DD6  0E00               	movlw	0
  7892  001DD8  6E09               	movwf	wr16@value+1,c
  7893  001DDA  0E1C               	movlw	28
  7894  001DDC  6E08               	movwf	wr16@value,c
  7895  001DDE  EC48  F035         	call	_wr16	;wreg free
  7896  001DE2  0E02               	movlw	2
  7897  001DE4  EC89  F035         	call	_cmd_incrementn
  7898  001DE8  504F               	movf	_cmd_offset,w,c
  7899  001DEA  6E19               	movwf	??_display_labels& (0+255),c
  7900  001DEC  5050               	movf	_cmd_offset+1,w,c
  7901  001DEE  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7902  001DF0  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7903  001DF2  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7904  001DF4  0E00               	movlw	0
  7905  001DF6  2419               	addwf	??_display_labels,w,c
  7906  001DF8  6E04               	movwf	wr16@addr,c
  7907  001DFA  0E80               	movlw	128
  7908  001DFC  201A               	addwfc	??_display_labels+1,w,c
  7909  001DFE  6E05               	movwf	wr16@addr+1,c
  7910  001E00  0E10               	movlw	16
  7911  001E02  201B               	addwfc	??_display_labels+2,w,c
  7912  001E04  6E06               	movwf	wr16@addr+2,c
  7913  001E06  0E00               	movlw	0
  7914  001E08  201C               	addwfc	??_display_labels+3,w,c
  7915  001E0A  6E07               	movwf	wr16@addr+3,c
  7916  001E0C  0E06               	movlw	6
  7917  001E0E  6E09               	movwf	wr16@value+1,c
  7918  001E10  0E00               	movlw	0
  7919  001E12  6E08               	movwf	wr16@value,c
  7920  001E14  EC48  F035         	call	_wr16	;wreg free
  7921  001E18  0E02               	movlw	2
  7922  001E1A  EC89  F035         	call	_cmd_incrementn
  7923  001E1E  504F               	movf	_cmd_offset,w,c
  7924  001E20  6E19               	movwf	??_display_labels& (0+255),c
  7925  001E22  5050               	movf	_cmd_offset+1,w,c
  7926  001E24  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7927  001E26  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7928  001E28  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7929  001E2A  0E00               	movlw	0
  7930  001E2C  2419               	addwf	??_display_labels,w,c
  7931  001E2E  6E09               	movwf	wr8s@addr,c
  7932  001E30  0E80               	movlw	128
  7933  001E32  201A               	addwfc	??_display_labels+1,w,c
  7934  001E34  6E0A               	movwf	wr8s@addr+1,c
  7935  001E36  0E10               	movlw	16
  7936  001E38  201B               	addwfc	??_display_labels+2,w,c
  7937  001E3A  6E0B               	movwf	wr8s@addr+2,c
  7938  001E3C  0E00               	movlw	0
  7939  001E3E  201C               	addwfc	??_display_labels+3,w,c
  7940  001E40  6E0C               	movwf	wr8s@addr+3,c
  7941  001E42  0E6A               	movlw	low STR_13
  7942  001E44  6E0D               	movwf	wr8s@s,c
  7943  001E46  0E0F               	movlw	high STR_13
  7944  001E48  6E0E               	movwf	wr8s@s+1,c
  7945  001E4A  EC67  F033         	call	_wr8s	;wreg free
  7946  001E4E  EC89  F035         	call	_cmd_incrementn
  7947                           
  7948                           ;display.c: 61:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 268);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 190);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "BSPD State"));
  7949  001E52  0E0C               	movlw	12
  7950  001E54  6E11               	movwf	cmd@command,c
  7951  001E56  0EFF               	movlw	255
  7952  001E58  6E12               	movwf	cmd@command+1,c
  7953  001E5A  0EFF               	movlw	255
  7954  001E5C  6E13               	movwf	cmd@command+2,c
  7955  001E5E  0EFF               	movlw	255
  7956  001E60  6E14               	movwf	cmd@command+3,c
  7957  001E62  EC70  F034         	call	_cmd	;wreg free
  7958  001E66  504F               	movf	_cmd_offset,w,c
  7959  001E68  6E19               	movwf	??_display_labels& (0+255),c
  7960  001E6A  5050               	movf	_cmd_offset+1,w,c
  7961  001E6C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7962  001E6E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7963  001E70  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7964  001E72  0E00               	movlw	0
  7965  001E74  2419               	addwf	??_display_labels,w,c
  7966  001E76  6E04               	movwf	wr16@addr,c
  7967  001E78  0E80               	movlw	128
  7968  001E7A  201A               	addwfc	??_display_labels+1,w,c
  7969  001E7C  6E05               	movwf	wr16@addr+1,c
  7970  001E7E  0E10               	movlw	16
  7971  001E80  201B               	addwfc	??_display_labels+2,w,c
  7972  001E82  6E06               	movwf	wr16@addr+2,c
  7973  001E84  0E00               	movlw	0
  7974  001E86  201C               	addwfc	??_display_labels+3,w,c
  7975  001E88  6E07               	movwf	wr16@addr+3,c
  7976  001E8A  0E01               	movlw	1
  7977  001E8C  6E09               	movwf	wr16@value+1,c
  7978  001E8E  0E0C               	movlw	12
  7979  001E90  6E08               	movwf	wr16@value,c
  7980  001E92  EC48  F035         	call	_wr16	;wreg free
  7981  001E96  0E02               	movlw	2
  7982  001E98  EC89  F035         	call	_cmd_incrementn
  7983  001E9C  504F               	movf	_cmd_offset,w,c
  7984  001E9E  6E19               	movwf	??_display_labels& (0+255),c
  7985  001EA0  5050               	movf	_cmd_offset+1,w,c
  7986  001EA2  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7987  001EA4  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7988  001EA6  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7989  001EA8  0E00               	movlw	0
  7990  001EAA  2419               	addwf	??_display_labels,w,c
  7991  001EAC  6E04               	movwf	wr16@addr,c
  7992  001EAE  0E80               	movlw	128
  7993  001EB0  201A               	addwfc	??_display_labels+1,w,c
  7994  001EB2  6E05               	movwf	wr16@addr+1,c
  7995  001EB4  0E10               	movlw	16
  7996  001EB6  201B               	addwfc	??_display_labels+2,w,c
  7997  001EB8  6E06               	movwf	wr16@addr+2,c
  7998  001EBA  0E00               	movlw	0
  7999  001EBC  201C               	addwfc	??_display_labels+3,w,c
  8000  001EBE  6E07               	movwf	wr16@addr+3,c
  8001  001EC0  0E00               	movlw	0
  8002  001EC2  6E09               	movwf	wr16@value+1,c
  8003  001EC4  0EBE               	movlw	190
  8004  001EC6  6E08               	movwf	wr16@value,c
  8005  001EC8  EC48  F035         	call	_wr16	;wreg free
  8006  001ECC  0E02               	movlw	2
  8007  001ECE  EC89  F035         	call	_cmd_incrementn
  8008  001ED2  504F               	movf	_cmd_offset,w,c
  8009  001ED4  6E19               	movwf	??_display_labels& (0+255),c
  8010  001ED6  5050               	movf	_cmd_offset+1,w,c
  8011  001ED8  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  8012  001EDA  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  8013  001EDC  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  8014  001EDE  0E00               	movlw	0
  8015  001EE0  2419               	addwf	??_display_labels,w,c
  8016  001EE2  6E04               	movwf	wr16@addr,c
  8017  001EE4  0E80               	movlw	128
  8018  001EE6  201A               	addwfc	??_display_labels+1,w,c
  8019  001EE8  6E05               	movwf	wr16@addr+1,c
  8020  001EEA  0E10               	movlw	16
  8021  001EEC  201B               	addwfc	??_display_labels+2,w,c
  8022  001EEE  6E06               	movwf	wr16@addr+2,c
  8023  001EF0  0E00               	movlw	0
  8024  001EF2  201C               	addwfc	??_display_labels+3,w,c
  8025  001EF4  6E07               	movwf	wr16@addr+3,c
  8026  001EF6  0E00               	movlw	0
  8027  001EF8  6E09               	movwf	wr16@value+1,c
  8028  001EFA  0E1B               	movlw	27
  8029  001EFC  6E08               	movwf	wr16@value,c
  8030  001EFE  EC48  F035         	call	_wr16	;wreg free
  8031  001F02  0E02               	movlw	2
  8032  001F04  EC89  F035         	call	_cmd_incrementn
  8033  001F08  504F               	movf	_cmd_offset,w,c
  8034  001F0A  6E19               	movwf	??_display_labels& (0+255),c
  8035  001F0C  5050               	movf	_cmd_offset+1,w,c
  8036  001F0E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  8037  001F10  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  8038  001F12  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  8039  001F14  0E00               	movlw	0
  8040  001F16  2419               	addwf	??_display_labels,w,c
  8041  001F18  6E04               	movwf	wr16@addr,c
  8042  001F1A  0E80               	movlw	128
  8043  001F1C  201A               	addwfc	??_display_labels+1,w,c
  8044  001F1E  6E05               	movwf	wr16@addr+1,c
  8045  001F20  0E10               	movlw	16
  8046  001F22  201B               	addwfc	??_display_labels+2,w,c
  8047  001F24  6E06               	movwf	wr16@addr+2,c
  8048  001F26  0E00               	movlw	0
  8049  001F28  201C               	addwfc	??_display_labels+3,w,c
  8050  001F2A  6E07               	movwf	wr16@addr+3,c
  8051  001F2C  0E06               	movlw	6
  8052  001F2E  6E09               	movwf	wr16@value+1,c
  8053  001F30  0E00               	movlw	0
  8054  001F32  6E08               	movwf	wr16@value,c
  8055  001F34  EC48  F035         	call	_wr16	;wreg free
  8056  001F38  0E02               	movlw	2
  8057  001F3A  EC89  F035         	call	_cmd_incrementn
  8058  001F3E  504F               	movf	_cmd_offset,w,c
  8059  001F40  6E19               	movwf	??_display_labels& (0+255),c
  8060  001F42  5050               	movf	_cmd_offset+1,w,c
  8061  001F44  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  8062  001F46  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  8063  001F48  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  8064  001F4A  0E00               	movlw	0
  8065  001F4C  2419               	addwf	??_display_labels,w,c
  8066  001F4E  6E09               	movwf	wr8s@addr,c
  8067  001F50  0E80               	movlw	128
  8068  001F52  201A               	addwfc	??_display_labels+1,w,c
  8069  001F54  6E0A               	movwf	wr8s@addr+1,c
  8070  001F56  0E10               	movlw	16
  8071  001F58  201B               	addwfc	??_display_labels+2,w,c
  8072  001F5A  6E0B               	movwf	wr8s@addr+2,c
  8073  001F5C  0E00               	movlw	0
  8074  001F5E  201C               	addwfc	??_display_labels+3,w,c
  8075  001F60  6E0C               	movwf	wr8s@addr+3,c
  8076  001F62  0E01               	movlw	low STR_14
  8077  001F64  6E0D               	movwf	wr8s@s,c
  8078  001F66  0E0F               	movlw	high STR_14
  8079  001F68  6E0E               	movwf	wr8s@s+1,c
  8080  001F6A  EC67  F033         	call	_wr8s	;wreg free
  8081  001F6E  EC89  F035         	call	_cmd_incrementn
  8082  001F72  0012               	return		;funcret
  8083  001F74                     __end_of_display_labels:
  8084                           	opt stack 0
  8085                           tblptru	equ	0xFF8
  8086                           tblptrh	equ	0xFF7
  8087                           tblptrl	equ	0xFF6
  8088                           tablat	equ	0xFF5
  8089                           prodh	equ	0xFF4
  8090                           prodl	equ	0xFF3
  8091                           intcon	equ	0xFF2
  8092                           postinc0	equ	0xFEE
  8093                           wreg	equ	0xFE8
  8094                           postdec1	equ	0xFE5
  8095                           plusw1	equ	0xFE3
  8096                           fsr1l	equ	0xFE1
  8097                           plusw2	equ	0xFDB
  8098                           status	equ	0xFD8
  8099                           
  8100 ;; *************** function _display_grids *****************
  8101 ;; Defined at:
  8102 ;;		line 64 in file "display.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;		None
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      void 
  8109 ;; Registers used:
  8110 ;;		wreg, status,2, status,0, cstack
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8120 ;;Total ram usage:        0 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:    7
  8123 ;; This function calls:
  8124 ;;		_cmd
  8125 ;; This function is called by:
  8126 ;;		_display
  8127 ;;		_main
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text14
  8132  003E88                     __ptext14:
  8133                           	opt stack 0
  8134  003E88                     _display_grids:
  8135                           	opt stack 23
  8136                           
  8137                           ;display.c: 67:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  8138                           
  8139                           ;incstack = 0
  8140  003E88  0E04               	movlw	4
  8141  003E8A  6E11               	movwf	cmd@command,c
  8142  003E8C  0E00               	movlw	0
  8143  003E8E  6E12               	movwf	cmd@command+1,c
  8144  003E90  0E00               	movlw	0
  8145  003E92  6E13               	movwf	cmd@command+2,c
  8146  003E94  0E1F               	movlw	31
  8147  003E96  6E14               	movwf	cmd@command+3,c
  8148  003E98  EC70  F034         	call	_cmd	;wreg free
  8149                           
  8150                           ;display.c: 68:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  8151  003E9C  0E0A               	movlw	10
  8152  003E9E  6E11               	movwf	cmd@command,c
  8153  003EA0  0E00               	movlw	0
  8154  003EA2  6E12               	movwf	cmd@command+1,c
  8155  003EA4  0E00               	movlw	0
  8156  003EA6  6E13               	movwf	cmd@command+2,c
  8157  003EA8  0E0E               	movlw	14
  8158  003EAA  6E14               	movwf	cmd@command+3,c
  8159  003EAC  EC70  F034         	call	_cmd	;wreg free
  8160                           
  8161                           ;display.c: 69:     cmd(((2UL<<30)|(((15)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  8162  003EB0  0E00               	movlw	0
  8163  003EB2  6E11               	movwf	cmd@command,c
  8164  003EB4  0ED0               	movlw	208
  8165  003EB6  6E12               	movwf	cmd@command+1,c
  8166  003EB8  0EE2               	movlw	226
  8167  003EBA  6E13               	movwf	cmd@command+2,c
  8168  003EBC  0E81               	movlw	129
  8169  003EBE  6E14               	movwf	cmd@command+3,c
  8170  003EC0  EC70  F034         	call	_cmd	;wreg free
  8171                           
  8172                           ;display.c: 70:     cmd(((2UL<<30)|(((5)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  8173  003EC4  0E00               	movlw	0
  8174  003EC6  6E11               	movwf	cmd@command,c
  8175  003EC8  0ED0               	movlw	208
  8176  003ECA  6E12               	movwf	cmd@command+1,c
  8177  003ECC  0EA2               	movlw	162
  8178  003ECE  6E13               	movwf	cmd@command+2,c
  8179  003ED0  0E80               	movlw	128
  8180  003ED2  6E14               	movwf	cmd@command+3,c
  8181  003ED4  EC70  F034         	call	_cmd	;wreg free
  8182                           
  8183                           ;display.c: 71:     cmd(((2UL<<30)|(((5)&511UL)<<21)|(((110)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  8184  003ED8  0E00               	movlw	0
  8185  003EDA  6E11               	movwf	cmd@command,c
  8186  003EDC  0EE0               	movlw	224
  8187  003EDE  6E12               	movwf	cmd@command+1,c
  8188  003EE0  0EA6               	movlw	166
  8189  003EE2  6E13               	movwf	cmd@command+2,c
  8190  003EE4  0E80               	movlw	128
  8191  003EE6  6E14               	movwf	cmd@command+3,c
  8192  003EE8  EC70  F034         	call	_cmd	;wreg free
  8193                           
  8194                           ;display.c: 72:     cmd(((2UL<<30)|(((90)&511UL)<<21)|(((110)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  8195  003EEC  0E00               	movlw	0
  8196  003EEE  6E11               	movwf	cmd@command,c
  8197  003EF0  0EE0               	movlw	224
  8198  003EF2  6E12               	movwf	cmd@command+1,c
  8199  003EF4  0E46               	movlw	70
  8200  003EF6  6E13               	movwf	cmd@command+2,c
  8201  003EF8  0E8B               	movlw	139
  8202  003EFA  6E14               	movwf	cmd@command+3,c
  8203  003EFC  EC70  F034         	call	_cmd	;wreg free
  8204                           
  8205                           ;display.c: 73:     cmd(((2UL<<30)|(((90)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  8206  003F00  0E00               	movlw	0
  8207  003F02  6E11               	movwf	cmd@command,c
  8208  003F04  0ED0               	movlw	208
  8209  003F06  6E12               	movwf	cmd@command+1,c
  8210  003F08  0E42               	movlw	66
  8211  003F0A  6E13               	movwf	cmd@command+2,c
  8212  003F0C  0E8B               	movlw	139
  8213  003F0E  6E14               	movwf	cmd@command+3,c
  8214  003F10  EC70  F034         	call	_cmd	;wreg free
  8215                           
  8216                           ;display.c: 74:     cmd(((2UL<<30)|(((80)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  8217  003F14  0E00               	movlw	0
  8218  003F16  6E11               	movwf	cmd@command,c
  8219  003F18  0ED0               	movlw	208
  8220  003F1A  6E12               	movwf	cmd@command+1,c
  8221  003F1C  0E02               	movlw	2
  8222  003F1E  6E13               	movwf	cmd@command+2,c
  8223  003F20  0E8A               	movlw	138
  8224  003F22  6E14               	movwf	cmd@command+3,c
  8225  003F24  EC70  F034         	call	_cmd	;wreg free
  8226                           
  8227                           ;display.c: 75:     cmd(((33UL<<24)));
  8228  003F28  0E00               	movlw	0
  8229  003F2A  6E11               	movwf	cmd@command,c
  8230  003F2C  0E00               	movlw	0
  8231  003F2E  6E12               	movwf	cmd@command+1,c
  8232  003F30  0E00               	movlw	0
  8233  003F32  6E13               	movwf	cmd@command+2,c
  8234  003F34  0E21               	movlw	33
  8235  003F36  6E14               	movwf	cmd@command+3,c
  8236  003F38  EC70  F034         	call	_cmd	;wreg free
  8237                           
  8238                           ;display.c: 78:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  8239  003F3C  0E04               	movlw	4
  8240  003F3E  6E11               	movwf	cmd@command,c
  8241  003F40  0E00               	movlw	0
  8242  003F42  6E12               	movwf	cmd@command+1,c
  8243  003F44  0E00               	movlw	0
  8244  003F46  6E13               	movwf	cmd@command+2,c
  8245  003F48  0E1F               	movlw	31
  8246  003F4A  6E14               	movwf	cmd@command+3,c
  8247  003F4C  EC70  F034         	call	_cmd	;wreg free
  8248                           
  8249                           ;display.c: 79:     cmd(((2UL<<30)|(((123)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  8250  003F50  0E00               	movlw	0
  8251  003F52  6E11               	movwf	cmd@command,c
  8252  003F54  0ED0               	movlw	208
  8253  003F56  6E12               	movwf	cmd@command+1,c
  8254  003F58  0E62               	movlw	98
  8255  003F5A  6E13               	movwf	cmd@command+2,c
  8256  003F5C  0E8F               	movlw	143
  8257  003F5E  6E14               	movwf	cmd@command+3,c
  8258  003F60  EC70  F034         	call	_cmd	;wreg free
  8259                           
  8260                           ;display.c: 80:     cmd(((2UL<<30)|(((98)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  8261  003F64  0E00               	movlw	0
  8262  003F66  6E11               	movwf	cmd@command,c
  8263  003F68  0ED0               	movlw	208
  8264  003F6A  6E12               	movwf	cmd@command+1,c
  8265  003F6C  0E42               	movlw	66
  8266  003F6E  6E13               	movwf	cmd@command+2,c
  8267  003F70  0E8C               	movlw	140
  8268  003F72  6E14               	movwf	cmd@command+3,c
  8269  003F74  EC70  F034         	call	_cmd	;wreg free
  8270                           
  8271                           ;display.c: 81:     cmd(((2UL<<30)|(((98)&511UL)<<21)|(((110)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  8272  003F78  0E00               	movlw	0
  8273  003F7A  6E11               	movwf	cmd@command,c
  8274  003F7C  0EE0               	movlw	224
  8275  003F7E  6E12               	movwf	cmd@command+1,c
  8276  003F80  0E46               	movlw	70
  8277  003F82  6E13               	movwf	cmd@command+2,c
  8278  003F84  0E8C               	movlw	140
  8279  003F86  6E14               	movwf	cmd@command+3,c
  8280  003F88  EC70  F034         	call	_cmd	;wreg free
  8281                           
  8282                           ;display.c: 82:     cmd(((2UL<<30)|(((180)&511UL)<<21)|(((110)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  8283  003F8C  0E00               	movlw	0
  8284  003F8E  6E11               	movwf	cmd@command,c
  8285  003F90  0EE0               	movlw	224
  8286  003F92  6E12               	movwf	cmd@command+1,c
  8287  003F94  0E86               	movlw	134
  8288  003F96  6E13               	movwf	cmd@command+2,c
  8289  003F98  0E96               	movlw	150
  8290  003F9A  6E14               	movwf	cmd@command+3,c
  8291  003F9C  EC70  F034         	call	_cmd	;wreg free
  8292                           
  8293                           ;display.c: 83:     cmd(((2UL<<30)|(((180)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  8294  003FA0  0E00               	movlw	0
  8295  003FA2  6E11               	movwf	cmd@command,c
  8296  003FA4  0ED0               	movlw	208
  8297  003FA6  6E12               	movwf	cmd@command+1,c
  8298  003FA8  0E82               	movlw	130
  8299  003FAA  6E13               	movwf	cmd@command+2,c
  8300  003FAC  0E96               	movlw	150
  8301  003FAE  6E14               	movwf	cmd@command+3,c
  8302  003FB0  EC70  F034         	call	_cmd	;wreg free
  8303                           
  8304                           ;display.c: 84:     cmd(((2UL<<30)|(((155)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  8305  003FB4  0E00               	movlw	0
  8306  003FB6  6E11               	movwf	cmd@command,c
  8307  003FB8  0ED0               	movlw	208
  8308  003FBA  6E12               	movwf	cmd@command+1,c
  8309  003FBC  0E62               	movlw	98
  8310  003FBE  6E13               	movwf	cmd@command+2,c
  8311  003FC0  0E93               	movlw	147
  8312  003FC2  6E14               	movwf	cmd@command+3,c
  8313  003FC4  EC70  F034         	call	_cmd	;wreg free
  8314                           
  8315                           ;display.c: 85:     cmd(((33UL<<24)));
  8316  003FC8  0E00               	movlw	0
  8317  003FCA  6E11               	movwf	cmd@command,c
  8318  003FCC  0E00               	movlw	0
  8319  003FCE  6E12               	movwf	cmd@command+1,c
  8320  003FD0  0E00               	movlw	0
  8321  003FD2  6E13               	movwf	cmd@command+2,c
  8322  003FD4  0E21               	movlw	33
  8323  003FD6  6E14               	movwf	cmd@command+3,c
  8324  003FD8  EC70  F034         	call	_cmd	;wreg free
  8325                           
  8326                           ;display.c: 88:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  8327  003FDC  0E04               	movlw	4
  8328  003FDE  6E11               	movwf	cmd@command,c
  8329  003FE0  0E00               	movlw	0
  8330  003FE2  6E12               	movwf	cmd@command+1,c
  8331  003FE4  0E00               	movlw	0
  8332  003FE6  6E13               	movwf	cmd@command+2,c
  8333  003FE8  0E1F               	movlw	31
  8334  003FEA  6E14               	movwf	cmd@command+3,c
  8335  003FEC  EC70  F034         	call	_cmd	;wreg free
  8336                           
  8337                           ;display.c: 89:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  8338  003FF0  0E0A               	movlw	10
  8339  003FF2  6E11               	movwf	cmd@command,c
  8340  003FF4  0E00               	movlw	0
  8341  003FF6  6E12               	movwf	cmd@command+1,c
  8342  003FF8  0E00               	movlw	0
  8343  003FFA  6E13               	movwf	cmd@command+2,c
  8344  003FFC  0E0E               	movlw	14
  8345  003FFE  6E14               	movwf	cmd@command+3,c
  8346  004000  EC70  F034         	call	_cmd	;wreg free
  8347                           
  8348                           ;display.c: 90:     cmd(((2UL<<30)|(((20)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  8349  004004  0E00               	movlw	0
  8350  004006  6E11               	movwf	cmd@command,c
  8351  004008  0ED0               	movlw	208
  8352  00400A  6E12               	movwf	cmd@command+1,c
  8353  00400C  0E87               	movlw	135
  8354  00400E  6E13               	movwf	cmd@command+2,c
  8355  004010  0E82               	movlw	130
  8356  004012  6E14               	movwf	cmd@command+3,c
  8357  004014  EC70  F034         	call	_cmd	;wreg free
  8358                           
  8359                           ;display.c: 91:     cmd(((2UL<<30)|(((5)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  8360  004018  0E00               	movlw	0
  8361  00401A  6E11               	movwf	cmd@command,c
  8362  00401C  0ED0               	movlw	208
  8363  00401E  6E12               	movwf	cmd@command+1,c
  8364  004020  0EA7               	movlw	167
  8365  004022  6E13               	movwf	cmd@command+2,c
  8366  004024  0E80               	movlw	128
  8367  004026  6E14               	movwf	cmd@command+3,c
  8368  004028  EC70  F034         	call	_cmd	;wreg free
  8369                           
  8370                           ;display.c: 92:     cmd(((2UL<<30)|(((5)&511UL)<<21)|(((180)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  8371  00402C  0E00               	movlw	0
  8372  00402E  6E11               	movwf	cmd@command,c
  8373  004030  0E40               	movlw	64
  8374  004032  6E12               	movwf	cmd@command+1,c
  8375  004034  0EAB               	movlw	171
  8376  004036  6E13               	movwf	cmd@command+2,c
  8377  004038  0E80               	movlw	128
  8378  00403A  6E14               	movwf	cmd@command+3,c
  8379  00403C  EC70  F034         	call	_cmd	;wreg free
  8380                           
  8381                           ;display.c: 93:     cmd(((2UL<<30)|(((90)&511UL)<<21)|(((180)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  8382  004040  0E00               	movlw	0
  8383  004042  6E11               	movwf	cmd@command,c
  8384  004044  0E40               	movlw	64
  8385  004046  6E12               	movwf	cmd@command+1,c
  8386  004048  0E4B               	movlw	75
  8387  00404A  6E13               	movwf	cmd@command+2,c
  8388  00404C  0E8B               	movlw	139
  8389  00404E  6E14               	movwf	cmd@command+3,c
  8390  004050  EC70  F034         	call	_cmd	;wreg free
  8391                           
  8392                           ;display.c: 94:     cmd(((2UL<<30)|(((90)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  8393  004054  0E00               	movlw	0
  8394  004056  6E11               	movwf	cmd@command,c
  8395  004058  0ED0               	movlw	208
  8396  00405A  6E12               	movwf	cmd@command+1,c
  8397  00405C  0E47               	movlw	71
  8398  00405E  6E13               	movwf	cmd@command+2,c
  8399  004060  0E8B               	movlw	139
  8400  004062  6E14               	movwf	cmd@command+3,c
  8401  004064  EC70  F034         	call	_cmd	;wreg free
  8402                           
  8403                           ;display.c: 95:     cmd(((2UL<<30)|(((80)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  8404  004068  0E00               	movlw	0
  8405  00406A  6E11               	movwf	cmd@command,c
  8406  00406C  0ED0               	movlw	208
  8407  00406E  6E12               	movwf	cmd@command+1,c
  8408  004070  0E07               	movlw	7
  8409  004072  6E13               	movwf	cmd@command+2,c
  8410  004074  0E8A               	movlw	138
  8411  004076  6E14               	movwf	cmd@command+3,c
  8412  004078  EC70  F034         	call	_cmd	;wreg free
  8413                           
  8414                           ;display.c: 96:     cmd(((33UL<<24)));
  8415  00407C  0E00               	movlw	0
  8416  00407E  6E11               	movwf	cmd@command,c
  8417  004080  0E00               	movlw	0
  8418  004082  6E12               	movwf	cmd@command+1,c
  8419  004084  0E00               	movlw	0
  8420  004086  6E13               	movwf	cmd@command+2,c
  8421  004088  0E21               	movlw	33
  8422  00408A  6E14               	movwf	cmd@command+3,c
  8423  00408C  EC70  F034         	call	_cmd	;wreg free
  8424                           
  8425                           ;display.c: 99:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  8426  004090  0E04               	movlw	4
  8427  004092  6E11               	movwf	cmd@command,c
  8428  004094  0E00               	movlw	0
  8429  004096  6E12               	movwf	cmd@command+1,c
  8430  004098  0E00               	movlw	0
  8431  00409A  6E13               	movwf	cmd@command+2,c
  8432  00409C  0E1F               	movlw	31
  8433  00409E  6E14               	movwf	cmd@command+3,c
  8434  0040A0  EC70  F034         	call	_cmd	;wreg free
  8435                           
  8436                           ;display.c: 100:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  8437  0040A4  0E0A               	movlw	10
  8438  0040A6  6E11               	movwf	cmd@command,c
  8439  0040A8  0E00               	movlw	0
  8440  0040AA  6E12               	movwf	cmd@command+1,c
  8441  0040AC  0E00               	movlw	0
  8442  0040AE  6E13               	movwf	cmd@command+2,c
  8443  0040B0  0E0E               	movlw	14
  8444  0040B2  6E14               	movwf	cmd@command+3,c
  8445  0040B4  EC70  F034         	call	_cmd	;wreg free
  8446                           
  8447                           ;display.c: 101:     cmd(((2UL<<30)|(((120)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8448  0040B8  0E00               	movlw	0
  8449  0040BA  6E11               	movwf	cmd@command,c
  8450  0040BC  0ED0               	movlw	208
  8451  0040BE  6E12               	movwf	cmd@command+1,c
  8452  0040C0  0E07               	movlw	7
  8453  0040C2  6E13               	movwf	cmd@command+2,c
  8454  0040C4  0E8F               	movlw	143
  8455  0040C6  6E14               	movwf	cmd@command+3,c
  8456  0040C8  EC70  F034         	call	_cmd	;wreg free
  8457                           
  8458                           ;display.c: 102:     cmd(((2UL<<30)|(((98)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  8459  0040CC  0E00               	movlw	0
  8460  0040CE  6E11               	movwf	cmd@command,c
  8461  0040D0  0ED0               	movlw	208
  8462  0040D2  6E12               	movwf	cmd@command+1,c
  8463  0040D4  0E47               	movlw	71
  8464  0040D6  6E13               	movwf	cmd@command+2,c
  8465  0040D8  0E8C               	movlw	140
  8466  0040DA  6E14               	movwf	cmd@command+3,c
  8467  0040DC  EC70  F034         	call	_cmd	;wreg free
  8468                           
  8469                           ;display.c: 103:     cmd(((2UL<<30)|(((98)&511UL)<<21)|(((180)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  8470  0040E0  0E00               	movlw	0
  8471  0040E2  6E11               	movwf	cmd@command,c
  8472  0040E4  0E40               	movlw	64
  8473  0040E6  6E12               	movwf	cmd@command+1,c
  8474  0040E8  0E4B               	movlw	75
  8475  0040EA  6E13               	movwf	cmd@command+2,c
  8476  0040EC  0E8C               	movlw	140
  8477  0040EE  6E14               	movwf	cmd@command+3,c
  8478  0040F0  EC70  F034         	call	_cmd	;wreg free
  8479                           
  8480                           ;display.c: 104:     cmd(((2UL<<30)|(((180)&511UL)<<21)|(((180)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8481  0040F4  0E00               	movlw	0
  8482  0040F6  6E11               	movwf	cmd@command,c
  8483  0040F8  0E40               	movlw	64
  8484  0040FA  6E12               	movwf	cmd@command+1,c
  8485  0040FC  0E8B               	movlw	139
  8486  0040FE  6E13               	movwf	cmd@command+2,c
  8487  004100  0E96               	movlw	150
  8488  004102  6E14               	movwf	cmd@command+3,c
  8489  004104  EC70  F034         	call	_cmd	;wreg free
  8490                           
  8491                           ;display.c: 105:     cmd(((2UL<<30)|(((180)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8492  004108  0E00               	movlw	0
  8493  00410A  6E11               	movwf	cmd@command,c
  8494  00410C  0ED0               	movlw	208
  8495  00410E  6E12               	movwf	cmd@command+1,c
  8496  004110  0E87               	movlw	135
  8497  004112  6E13               	movwf	cmd@command+2,c
  8498  004114  0E96               	movlw	150
  8499  004116  6E14               	movwf	cmd@command+3,c
  8500  004118  EC70  F034         	call	_cmd	;wreg free
  8501                           
  8502                           ;display.c: 106:     cmd(((2UL<<30)|(((158)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8503  00411C  0E00               	movlw	0
  8504  00411E  6E11               	movwf	cmd@command,c
  8505  004120  0ED0               	movlw	208
  8506  004122  6E12               	movwf	cmd@command+1,c
  8507  004124  0EC7               	movlw	199
  8508  004126  6E13               	movwf	cmd@command+2,c
  8509  004128  0E93               	movlw	147
  8510  00412A  6E14               	movwf	cmd@command+3,c
  8511  00412C  EC70  F034         	call	_cmd	;wreg free
  8512                           
  8513                           ;display.c: 107:     cmd(((33UL<<24)));
  8514  004130  0E00               	movlw	0
  8515  004132  6E11               	movwf	cmd@command,c
  8516  004134  0E00               	movlw	0
  8517  004136  6E12               	movwf	cmd@command+1,c
  8518  004138  0E00               	movlw	0
  8519  00413A  6E13               	movwf	cmd@command+2,c
  8520  00413C  0E21               	movlw	33
  8521  00413E  6E14               	movwf	cmd@command+3,c
  8522  004140  EC70  F034         	call	_cmd	;wreg free
  8523                           
  8524                           ;display.c: 110:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  8525  004144  0E04               	movlw	4
  8526  004146  6E11               	movwf	cmd@command,c
  8527  004148  0E00               	movlw	0
  8528  00414A  6E12               	movwf	cmd@command+1,c
  8529  00414C  0E00               	movlw	0
  8530  00414E  6E13               	movwf	cmd@command+2,c
  8531  004150  0E1F               	movlw	31
  8532  004152  6E14               	movwf	cmd@command+3,c
  8533  004154  EC70  F034         	call	_cmd	;wreg free
  8534                           
  8535                           ;display.c: 111:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  8536  004158  0E0A               	movlw	10
  8537  00415A  6E11               	movwf	cmd@command,c
  8538  00415C  0E00               	movlw	0
  8539  00415E  6E12               	movwf	cmd@command+1,c
  8540  004160  0E00               	movlw	0
  8541  004162  6E13               	movwf	cmd@command+2,c
  8542  004164  0E0E               	movlw	14
  8543  004166  6E14               	movwf	cmd@command+3,c
  8544  004168  EC70  F034         	call	_cmd	;wreg free
  8545                           
  8546                           ;display.c: 112:     cmd(((2UL<<30)|(((360)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  8547  00416C  0E00               	movlw	0
  8548  00416E  6E11               	movwf	cmd@command,c
  8549  004170  0ED0               	movlw	208
  8550  004172  6E12               	movwf	cmd@command+1,c
  8551  004174  0E02               	movlw	2
  8552  004176  6E13               	movwf	cmd@command+2,c
  8553  004178  0EAD               	movlw	173
  8554  00417A  6E14               	movwf	cmd@command+3,c
  8555  00417C  EC70  F034         	call	_cmd	;wreg free
  8556                           
  8557                           ;display.c: 113:     cmd(((2UL<<30)|(((300)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  8558  004180  0E00               	movlw	0
  8559  004182  6E11               	movwf	cmd@command,c
  8560  004184  0ED0               	movlw	208
  8561  004186  6E12               	movwf	cmd@command+1,c
  8562  004188  0E82               	movlw	130
  8563  00418A  6E13               	movwf	cmd@command+2,c
  8564  00418C  0EA5               	movlw	165
  8565  00418E  6E14               	movwf	cmd@command+3,c
  8566  004190  EC70  F034         	call	_cmd	;wreg free
  8567                           
  8568                           ;display.c: 114:     cmd(((2UL<<30)|(((300)&511UL)<<21)|(((105)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8569  004194  0E00               	movlw	0
  8570  004196  6E11               	movwf	cmd@command,c
  8571  004198  0E90               	movlw	144
  8572  00419A  6E12               	movwf	cmd@command+1,c
  8573  00419C  0E86               	movlw	134
  8574  00419E  6E13               	movwf	cmd@command+2,c
  8575  0041A0  0EA5               	movlw	165
  8576  0041A2  6E14               	movwf	cmd@command+3,c
  8577  0041A4  EC70  F034         	call	_cmd	;wreg free
  8578                           
  8579                           ;display.c: 115:     cmd(((2UL<<30)|(((470)&511UL)<<21)|(((105)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8580  0041A8  0E00               	movlw	0
  8581  0041AA  6E11               	movwf	cmd@command,c
  8582  0041AC  0E90               	movlw	144
  8583  0041AE  6E12               	movwf	cmd@command+1,c
  8584  0041B0  0EC6               	movlw	198
  8585  0041B2  6E13               	movwf	cmd@command+2,c
  8586  0041B4  0EBA               	movlw	186
  8587  0041B6  6E14               	movwf	cmd@command+3,c
  8588  0041B8  EC70  F034         	call	_cmd	;wreg free
  8589                           
  8590                           ;display.c: 116:     cmd(((2UL<<30)|(((470)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  8591  0041BC  0E00               	movlw	0
  8592  0041BE  6E11               	movwf	cmd@command,c
  8593  0041C0  0ED0               	movlw	208
  8594  0041C2  6E12               	movwf	cmd@command+1,c
  8595  0041C4  0EC2               	movlw	194
  8596  0041C6  6E13               	movwf	cmd@command+2,c
  8597  0041C8  0EBA               	movlw	186
  8598  0041CA  6E14               	movwf	cmd@command+3,c
  8599  0041CC  EC70  F034         	call	_cmd	;wreg free
  8600                           
  8601                           ;display.c: 117:     cmd(((2UL<<30)|(((410)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  8602  0041D0  0E00               	movlw	0
  8603  0041D2  6E11               	movwf	cmd@command,c
  8604  0041D4  0ED0               	movlw	208
  8605  0041D6  6E12               	movwf	cmd@command+1,c
  8606  0041D8  0E42               	movlw	66
  8607  0041DA  6E13               	movwf	cmd@command+2,c
  8608  0041DC  0EB3               	movlw	179
  8609  0041DE  6E14               	movwf	cmd@command+3,c
  8610  0041E0  EC70  F034         	call	_cmd	;wreg free
  8611                           
  8612                           ;display.c: 118:     cmd(((33UL<<24)));
  8613  0041E4  0E00               	movlw	0
  8614  0041E6  6E11               	movwf	cmd@command,c
  8615  0041E8  0E00               	movlw	0
  8616  0041EA  6E12               	movwf	cmd@command+1,c
  8617  0041EC  0E00               	movlw	0
  8618  0041EE  6E13               	movwf	cmd@command+2,c
  8619  0041F0  0E21               	movlw	33
  8620  0041F2  6E14               	movwf	cmd@command+3,c
  8621  0041F4  EC70  F034         	call	_cmd	;wreg free
  8622                           
  8623                           ;display.c: 121:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  8624  0041F8  0E04               	movlw	4
  8625  0041FA  6E11               	movwf	cmd@command,c
  8626  0041FC  0E00               	movlw	0
  8627  0041FE  6E12               	movwf	cmd@command+1,c
  8628  004200  0E00               	movlw	0
  8629  004202  6E13               	movwf	cmd@command+2,c
  8630  004204  0E1F               	movlw	31
  8631  004206  6E14               	movwf	cmd@command+3,c
  8632  004208  EC70  F034         	call	_cmd	;wreg free
  8633                           
  8634                           ;display.c: 122:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  8635  00420C  0E0A               	movlw	10
  8636  00420E  6E11               	movwf	cmd@command,c
  8637  004210  0E00               	movlw	0
  8638  004212  6E12               	movwf	cmd@command+1,c
  8639  004214  0E00               	movlw	0
  8640  004216  6E13               	movwf	cmd@command+2,c
  8641  004218  0E0E               	movlw	14
  8642  00421A  6E14               	movwf	cmd@command+3,c
  8643  00421C  EC70  F034         	call	_cmd	;wreg free
  8644                           
  8645                           ;display.c: 123:     cmd(((2UL<<30)|(((350)&511UL)<<21)|(((120)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8646  004220  0E00               	movlw	0
  8647  004222  6E11               	movwf	cmd@command,c
  8648  004224  0E80               	movlw	128
  8649  004226  6E12               	movwf	cmd@command+1,c
  8650  004228  0EC7               	movlw	199
  8651  00422A  6E13               	movwf	cmd@command+2,c
  8652  00422C  0EAB               	movlw	171
  8653  00422E  6E14               	movwf	cmd@command+3,c
  8654  004230  EC70  F034         	call	_cmd	;wreg free
  8655                           
  8656                           ;display.c: 124:     cmd(((2UL<<30)|(((300)&511UL)<<21)|(((120)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8657  004234  0E00               	movlw	0
  8658  004236  6E11               	movwf	cmd@command,c
  8659  004238  0E80               	movlw	128
  8660  00423A  6E12               	movwf	cmd@command+1,c
  8661  00423C  0E87               	movlw	135
  8662  00423E  6E13               	movwf	cmd@command+2,c
  8663  004240  0EA5               	movlw	165
  8664  004242  6E14               	movwf	cmd@command+3,c
  8665  004244  EC70  F034         	call	_cmd	;wreg free
  8666                           
  8667                           ;display.c: 125:     cmd(((2UL<<30)|(((300)&511UL)<<21)|(((180)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8668  004248  0E00               	movlw	0
  8669  00424A  6E11               	movwf	cmd@command,c
  8670  00424C  0E40               	movlw	64
  8671  00424E  6E12               	movwf	cmd@command+1,c
  8672  004250  0E8B               	movlw	139
  8673  004252  6E13               	movwf	cmd@command+2,c
  8674  004254  0EA5               	movlw	165
  8675  004256  6E14               	movwf	cmd@command+3,c
  8676  004258  EC70  F034         	call	_cmd	;wreg free
  8677                           
  8678                           ;display.c: 126:     cmd(((2UL<<30)|(((470)&511UL)<<21)|(((180)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8679  00425C  0E00               	movlw	0
  8680  00425E  6E11               	movwf	cmd@command,c
  8681  004260  0E40               	movlw	64
  8682  004262  6E12               	movwf	cmd@command+1,c
  8683  004264  0ECB               	movlw	203
  8684  004266  6E13               	movwf	cmd@command+2,c
  8685  004268  0EBA               	movlw	186
  8686  00426A  6E14               	movwf	cmd@command+3,c
  8687  00426C  EC70  F034         	call	_cmd	;wreg free
  8688                           
  8689                           ;display.c: 127:     cmd(((2UL<<30)|(((470)&511UL)<<21)|(((120)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8690  004270  0E00               	movlw	0
  8691  004272  6E11               	movwf	cmd@command,c
  8692  004274  0E80               	movlw	128
  8693  004276  6E12               	movwf	cmd@command+1,c
  8694  004278  0EC7               	movlw	199
  8695  00427A  6E13               	movwf	cmd@command+2,c
  8696  00427C  0EBA               	movlw	186
  8697  00427E  6E14               	movwf	cmd@command+3,c
  8698  004280  EC70  F034         	call	_cmd	;wreg free
  8699                           
  8700                           ;display.c: 128:     cmd(((2UL<<30)|(((420)&511UL)<<21)|(((120)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8701  004284  0E00               	movlw	0
  8702  004286  6E11               	movwf	cmd@command,c
  8703  004288  0E80               	movlw	128
  8704  00428A  6E12               	movwf	cmd@command+1,c
  8705  00428C  0E87               	movlw	135
  8706  00428E  6E13               	movwf	cmd@command+2,c
  8707  004290  0EB4               	movlw	180
  8708  004292  6E14               	movwf	cmd@command+3,c
  8709  004294  EC70  F034         	call	_cmd	;wreg free
  8710                           
  8711                           ;display.c: 129:     cmd(((33UL<<24)));
  8712  004298  0E00               	movlw	0
  8713  00429A  6E11               	movwf	cmd@command,c
  8714  00429C  0E00               	movlw	0
  8715  00429E  6E12               	movwf	cmd@command+1,c
  8716  0042A0  0E00               	movlw	0
  8717  0042A2  6E13               	movwf	cmd@command+2,c
  8718  0042A4  0E21               	movlw	33
  8719  0042A6  6E14               	movwf	cmd@command+3,c
  8720  0042A8  EC70  F034         	call	_cmd	;wreg free
  8721                           
  8722                           ;display.c: 143:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  8723  0042AC  0E04               	movlw	4
  8724  0042AE  6E11               	movwf	cmd@command,c
  8725  0042B0  0E00               	movlw	0
  8726  0042B2  6E12               	movwf	cmd@command+1,c
  8727  0042B4  0E00               	movlw	0
  8728  0042B6  6E13               	movwf	cmd@command+2,c
  8729  0042B8  0E1F               	movlw	31
  8730  0042BA  6E14               	movwf	cmd@command+3,c
  8731  0042BC  EC70  F034         	call	_cmd	;wreg free
  8732                           
  8733                           ;display.c: 144:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  8734  0042C0  0E0A               	movlw	10
  8735  0042C2  6E11               	movwf	cmd@command,c
  8736  0042C4  0E00               	movlw	0
  8737  0042C6  6E12               	movwf	cmd@command+1,c
  8738  0042C8  0E00               	movlw	0
  8739  0042CA  6E13               	movwf	cmd@command+2,c
  8740  0042CC  0E0E               	movlw	14
  8741  0042CE  6E14               	movwf	cmd@command+3,c
  8742  0042D0  EC70  F034         	call	_cmd	;wreg free
  8743                           
  8744                           ;display.c: 145:     cmd(((2UL<<30)|(((220)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8745  0042D4  0E00               	movlw	0
  8746  0042D6  6E11               	movwf	cmd@command,c
  8747  0042D8  0EE0               	movlw	224
  8748  0042DA  6E12               	movwf	cmd@command+1,c
  8749  0042DC  0E8B               	movlw	139
  8750  0042DE  6E13               	movwf	cmd@command+2,c
  8751  0042E0  0E9B               	movlw	155
  8752  0042E2  6E14               	movwf	cmd@command+3,c
  8753  0042E4  EC70  F034         	call	_cmd	;wreg free
  8754                           
  8755                           ;display.c: 146:     cmd(((2UL<<30)|(((190)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8756  0042E8  0E00               	movlw	0
  8757  0042EA  6E11               	movwf	cmd@command,c
  8758  0042EC  0EE0               	movlw	224
  8759  0042EE  6E12               	movwf	cmd@command+1,c
  8760  0042F0  0ECB               	movlw	203
  8761  0042F2  6E13               	movwf	cmd@command+2,c
  8762  0042F4  0E97               	movlw	151
  8763  0042F6  6E14               	movwf	cmd@command+3,c
  8764  0042F8  EC70  F034         	call	_cmd	;wreg free
  8765                           
  8766                           ;display.c: 147:     cmd(((2UL<<30)|(((190)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8767  0042FC  0E00               	movlw	0
  8768  0042FE  6E11               	movwf	cmd@command,c
  8769  004300  0E60               	movlw	96
  8770  004302  6E12               	movwf	cmd@command+1,c
  8771  004304  0ECE               	movlw	206
  8772  004306  6E13               	movwf	cmd@command+2,c
  8773  004308  0E97               	movlw	151
  8774  00430A  6E14               	movwf	cmd@command+3,c
  8775  00430C  EC70  F034         	call	_cmd	;wreg free
  8776                           
  8777                           ;display.c: 148:     cmd(((2UL<<30)|(((345)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8778  004310  0E00               	movlw	0
  8779  004312  6E11               	movwf	cmd@command,c
  8780  004314  0E60               	movlw	96
  8781  004316  6E12               	movwf	cmd@command+1,c
  8782  004318  0E2E               	movlw	46
  8783  00431A  6E13               	movwf	cmd@command+2,c
  8784  00431C  0EAB               	movlw	171
  8785  00431E  6E14               	movwf	cmd@command+3,c
  8786  004320  EC70  F034         	call	_cmd	;wreg free
  8787                           
  8788                           ;display.c: 149:     cmd(((2UL<<30)|(((345)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8789  004324  0E00               	movlw	0
  8790  004326  6E11               	movwf	cmd@command,c
  8791  004328  0EE0               	movlw	224
  8792  00432A  6E12               	movwf	cmd@command+1,c
  8793  00432C  0E2B               	movlw	43
  8794  00432E  6E13               	movwf	cmd@command+2,c
  8795  004330  0EAB               	movlw	171
  8796  004332  6E14               	movwf	cmd@command+3,c
  8797  004334  EC70  F034         	call	_cmd	;wreg free
  8798                           
  8799                           ;display.c: 150:     cmd(((2UL<<30)|(((315)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8800  004338  0E00               	movlw	0
  8801  00433A  6E11               	movwf	cmd@command,c
  8802  00433C  0EE0               	movlw	224
  8803  00433E  6E12               	movwf	cmd@command+1,c
  8804  004340  0E6B               	movlw	107
  8805  004342  6E13               	movwf	cmd@command+2,c
  8806  004344  0EA7               	movlw	167
  8807  004346  6E14               	movwf	cmd@command+3,c
  8808  004348  EC70  F034         	call	_cmd	;wreg free
  8809                           
  8810                           ;display.c: 151:     cmd(((33UL<<24)));
  8811  00434C  0E00               	movlw	0
  8812  00434E  6E11               	movwf	cmd@command,c
  8813  004350  0E00               	movlw	0
  8814  004352  6E12               	movwf	cmd@command+1,c
  8815  004354  0E00               	movlw	0
  8816  004356  6E13               	movwf	cmd@command+2,c
  8817  004358  0E21               	movlw	33
  8818  00435A  6E14               	movwf	cmd@command+3,c
  8819  00435C  EC70  F034         	call	_cmd	;wreg free
  8820                           
  8821                           ;display.c: 154:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  8822  004360  0E04               	movlw	4
  8823  004362  6E11               	movwf	cmd@command,c
  8824  004364  0E00               	movlw	0
  8825  004366  6E12               	movwf	cmd@command+1,c
  8826  004368  0E00               	movlw	0
  8827  00436A  6E13               	movwf	cmd@command+2,c
  8828  00436C  0E1F               	movlw	31
  8829  00436E  6E14               	movwf	cmd@command+3,c
  8830  004370  EC70  F034         	call	_cmd	;wreg free
  8831                           
  8832                           ;display.c: 155:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  8833  004374  0E0A               	movlw	10
  8834  004376  6E11               	movwf	cmd@command,c
  8835  004378  0E00               	movlw	0
  8836  00437A  6E12               	movwf	cmd@command+1,c
  8837  00437C  0E00               	movlw	0
  8838  00437E  6E13               	movwf	cmd@command+2,c
  8839  004380  0E0E               	movlw	14
  8840  004382  6E14               	movwf	cmd@command+3,c
  8841  004384  EC70  F034         	call	_cmd	;wreg free
  8842                           
  8843                           ;display.c: 156:     cmd(((2UL<<30)|(((365)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8844  004388  0E00               	movlw	0
  8845  00438A  6E11               	movwf	cmd@command,c
  8846  00438C  0EE0               	movlw	224
  8847  00438E  6E12               	movwf	cmd@command+1,c
  8848  004390  0EAB               	movlw	171
  8849  004392  6E13               	movwf	cmd@command+2,c
  8850  004394  0EAD               	movlw	173
  8851  004396  6E14               	movwf	cmd@command+3,c
  8852  004398  EC70  F034         	call	_cmd	;wreg free
  8853                           
  8854                           ;display.c: 157:     cmd(((2UL<<30)|(((355)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8855  00439C  0E00               	movlw	0
  8856  00439E  6E11               	movwf	cmd@command,c
  8857  0043A0  0EE0               	movlw	224
  8858  0043A2  6E12               	movwf	cmd@command+1,c
  8859  0043A4  0E6B               	movlw	107
  8860  0043A6  6E13               	movwf	cmd@command+2,c
  8861  0043A8  0EAC               	movlw	172
  8862  0043AA  6E14               	movwf	cmd@command+3,c
  8863  0043AC  EC70  F034         	call	_cmd	;wreg free
  8864                           
  8865                           ;display.c: 158:     cmd(((2UL<<30)|(((355)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8866  0043B0  0E00               	movlw	0
  8867  0043B2  6E11               	movwf	cmd@command,c
  8868  0043B4  0E60               	movlw	96
  8869  0043B6  6E12               	movwf	cmd@command+1,c
  8870  0043B8  0E6E               	movlw	110
  8871  0043BA  6E13               	movwf	cmd@command+2,c
  8872  0043BC  0EAC               	movlw	172
  8873  0043BE  6E14               	movwf	cmd@command+3,c
  8874  0043C0  EC70  F034         	call	_cmd	;wreg free
  8875                           
  8876                           ;display.c: 159:     cmd(((2UL<<30)|(((465)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8877  0043C4  0E00               	movlw	0
  8878  0043C6  6E11               	movwf	cmd@command,c
  8879  0043C8  0E60               	movlw	96
  8880  0043CA  6E12               	movwf	cmd@command+1,c
  8881  0043CC  0E2E               	movlw	46
  8882  0043CE  6E13               	movwf	cmd@command+2,c
  8883  0043D0  0EBA               	movlw	186
  8884  0043D2  6E14               	movwf	cmd@command+3,c
  8885  0043D4  EC70  F034         	call	_cmd	;wreg free
  8886                           
  8887                           ;display.c: 160:     cmd(((2UL<<30)|(((465)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8888  0043D8  0E00               	movlw	0
  8889  0043DA  6E11               	movwf	cmd@command,c
  8890  0043DC  0EE0               	movlw	224
  8891  0043DE  6E12               	movwf	cmd@command+1,c
  8892  0043E0  0E2B               	movlw	43
  8893  0043E2  6E13               	movwf	cmd@command+2,c
  8894  0043E4  0EBA               	movlw	186
  8895  0043E6  6E14               	movwf	cmd@command+3,c
  8896  0043E8  EC70  F034         	call	_cmd	;wreg free
  8897                           
  8898                           ;display.c: 161:     cmd(((2UL<<30)|(((455)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8899  0043EC  0E00               	movlw	0
  8900  0043EE  6E11               	movwf	cmd@command,c
  8901  0043F0  0EE0               	movlw	224
  8902  0043F2  6E12               	movwf	cmd@command+1,c
  8903  0043F4  0EEB               	movlw	235
  8904  0043F6  6E13               	movwf	cmd@command+2,c
  8905  0043F8  0EB8               	movlw	184
  8906  0043FA  6E14               	movwf	cmd@command+3,c
  8907  0043FC  EC70  F034         	call	_cmd	;wreg free
  8908                           
  8909                           ;display.c: 162:     cmd(((33UL<<24)));
  8910  004400  0E00               	movlw	0
  8911  004402  6E11               	movwf	cmd@command,c
  8912  004404  0E00               	movlw	0
  8913  004406  6E12               	movwf	cmd@command+1,c
  8914  004408  0E00               	movlw	0
  8915  00440A  6E13               	movwf	cmd@command+2,c
  8916  00440C  0E21               	movlw	33
  8917  00440E  6E14               	movwf	cmd@command+3,c
  8918  004410  EC70  F034         	call	_cmd	;wreg free
  8919  004414  0012               	return		;funcret
  8920  004416                     __end_of_display_grids:
  8921                           	opt stack 0
  8922                           tblptru	equ	0xFF8
  8923                           tblptrh	equ	0xFF7
  8924                           tblptrl	equ	0xFF6
  8925                           tablat	equ	0xFF5
  8926                           prodh	equ	0xFF4
  8927                           prodl	equ	0xFF3
  8928                           intcon	equ	0xFF2
  8929                           postinc0	equ	0xFEE
  8930                           wreg	equ	0xFE8
  8931                           postdec1	equ	0xFE5
  8932                           plusw1	equ	0xFE3
  8933                           fsr1l	equ	0xFE1
  8934                           plusw2	equ	0xFDB
  8935                           status	equ	0xFD8
  8936                           
  8937 ;; *************** function _display_gear *****************
  8938 ;; Defined at:
  8939 ;;		line 393 in file "display.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;  gear            2   24[COMRAM] int 
  8942 ;; Auto vars:     Size  Location     Type
  8943 ;;		None
  8944 ;; Return value:  Size  Location     Type
  8945 ;;                  1    wreg      void 
  8946 ;; Registers used:
  8947 ;;		wreg, status,2, status,0, cstack
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8956 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8957 ;;Total ram usage:        4 bytes
  8958 ;; Hardware stack levels used:    1
  8959 ;; Hardware stack levels required when called:    7
  8960 ;; This function calls:
  8961 ;;		_cmd
  8962 ;; This function is called by:
  8963 ;;		_display
  8964 ;;		_main
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           	psect	text15
  8969  004416                     __ptext15:
  8970                           	opt stack 0
  8971  004416                     _display_gear:
  8972                           	opt stack 23
  8973                           
  8974                           ;display.c: 394:     cmd(((14UL<<24)|(((96)&4095UL)<<0)));
  8975                           
  8976                           ;incstack = 0
  8977  004416  0E60               	movlw	96
  8978  004418  6E11               	movwf	cmd@command,c
  8979  00441A  0E00               	movlw	0
  8980  00441C  6E12               	movwf	cmd@command+1,c
  8981  00441E  0E00               	movlw	0
  8982  004420  6E13               	movwf	cmd@command+2,c
  8983  004422  0E0E               	movlw	14
  8984  004424  6E14               	movwf	cmd@command+3,c
  8985  004426  EC70  F034         	call	_cmd	;wreg free
  8986                           
  8987                           ;display.c: 395:     cmd(((4UL<<24)|(((202)&255UL)<<16)|(((125)&255UL)<<8)|(((0)&255UL)<
      +                          <0)));
  8988  00442A  0E00               	movlw	0
  8989  00442C  6E11               	movwf	cmd@command,c
  8990  00442E  0E7D               	movlw	125
  8991  004430  6E12               	movwf	cmd@command+1,c
  8992  004432  0ECA               	movlw	202
  8993  004434  6E13               	movwf	cmd@command+2,c
  8994  004436  0E04               	movlw	4
  8995  004438  6E14               	movwf	cmd@command+3,c
  8996  00443A  EC70  F034         	call	_cmd	;wreg free
  8997                           
  8998                           ;display.c: 396:     cmd(((31UL<<24)|(((3UL)&15UL)<<0)));
  8999  00443E  0E03               	movlw	3
  9000  004440  6E11               	movwf	cmd@command,c
  9001  004442  0E00               	movlw	0
  9002  004444  6E12               	movwf	cmd@command+1,c
  9003  004446  0E00               	movlw	0
  9004  004448  6E13               	movwf	cmd@command+2,c
  9005  00444A  0E1F               	movlw	31
  9006  00444C  6E14               	movwf	cmd@command+3,c
  9007  00444E  EC70  F034         	call	_cmd	;wreg free
  9008                           
  9009                           ;display.c: 397:     switch (gear) {
  9010  004452  D237               	goto	l738
  9011  004454                     
  9012                           ;display.c: 399:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45)&511UL)<<12)|(((0)
      +                          &31UL)<<7)|(((0)&127UL)<<0)));
  9013  004454  0E00               	movlw	0
  9014  004456  6E11               	movwf	cmd@command,c
  9015  004458  0ED0               	movlw	208
  9016  00445A  6E12               	movwf	cmd@command+1,c
  9017  00445C  0E02               	movlw	2
  9018  00445E  6E13               	movwf	cmd@command+2,c
  9019  004460  0E99               	movlw	153
  9020  004462  6E14               	movwf	cmd@command+3,c
  9021  004464  EC70  F034         	call	_cmd	;wreg free
  9022                           
  9023                           ;display.c: 400:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +120)&511UL)<<12)|
      +                          (((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9024  004468  0E00               	movlw	0
  9025  00446A  6E11               	movwf	cmd@command,c
  9026  00446C  0E50               	movlw	80
  9027  00446E  6E12               	movwf	cmd@command+1,c
  9028  004470  0E0A               	movlw	10
  9029  004472  6E13               	movwf	cmd@command+2,c
  9030  004474  0E99               	movlw	153
  9031  004476  6E14               	movwf	cmd@command+3,c
  9032  004478  EC70  F034         	call	_cmd	;wreg free
  9033                           
  9034                           ;display.c: 401:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45)&511UL)<<12)|(((0)
      +                          &31UL)<<7)|(((0)&127UL)<<0)));
  9035  00447C  0E00               	movlw	0
  9036  00447E  6E11               	movwf	cmd@command,c
  9037  004480  0ED0               	movlw	208
  9038  004482  6E12               	movwf	cmd@command+1,c
  9039  004484  0E02               	movlw	2
  9040  004486  6E13               	movwf	cmd@command+2,c
  9041  004488  0E99               	movlw	153
  9042  00448A  6E14               	movwf	cmd@command+3,c
  9043  00448C  EC70  F034         	call	_cmd	;wreg free
  9044                           
  9045                           ;display.c: 402:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9046  004490  0E00               	movlw	0
  9047  004492  6E11               	movwf	cmd@command,c
  9048  004494  0E50               	movlw	80
  9049  004496  6E12               	movwf	cmd@command+1,c
  9050  004498  0E0A               	movlw	10
  9051  00449A  6E13               	movwf	cmd@command+2,c
  9052  00449C  0EA3               	movlw	163
  9053  00449E  6E14               	movwf	cmd@command+3,c
  9054  0044A0  EC70  F034         	call	_cmd	;wreg free
  9055                           
  9056                           ;display.c: 403:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9057  0044A4  0E00               	movlw	0
  9058  0044A6  6E11               	movwf	cmd@command,c
  9059  0044A8  0E50               	movlw	80
  9060  0044AA  6E12               	movwf	cmd@command+1,c
  9061  0044AC  0E0A               	movlw	10
  9062  0044AE  6E13               	movwf	cmd@command+2,c
  9063  0044B0  0EA3               	movlw	163
  9064  0044B2  6E14               	movwf	cmd@command+3,c
  9065  0044B4  EC70  F034         	call	_cmd	;wreg free
  9066                           
  9067                           ;display.c: 404:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9068  0044B8  0E00               	movlw	0
  9069  0044BA  6E11               	movwf	cmd@command,c
  9070  0044BC  0ED0               	movlw	208
  9071  0044BE  6E12               	movwf	cmd@command+1,c
  9072  0044C0  0E02               	movlw	2
  9073  0044C2  6E13               	movwf	cmd@command+2,c
  9074  0044C4  0EA3               	movlw	163
  9075  0044C6  6E14               	movwf	cmd@command+3,c
  9076  0044C8  EC70  F034         	call	_cmd	;wreg free
  9077                           
  9078                           ;display.c: 405:             break;
  9079  0044CC  0012               	return	
  9080  0044CE                     
  9081                           ;display.c: 407:             cmd(((2UL<<30)|(((200 +40)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9082  0044CE  0E00               	movlw	0
  9083  0044D0  6E11               	movwf	cmd@command,c
  9084  0044D2  0ED0               	movlw	208
  9085  0044D4  6E12               	movwf	cmd@command+1,c
  9086  0044D6  0E02               	movlw	2
  9087  0044D8  6E13               	movwf	cmd@command+2,c
  9088  0044DA  0E9E               	movlw	158
  9089  0044DC  6E14               	movwf	cmd@command+3,c
  9090  0044DE  EC70  F034         	call	_cmd	;wreg free
  9091                           
  9092                           ;display.c: 408:             cmd(((2UL<<30)|(((200 +40)&511UL)<<21)|(((45 +119)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9093  0044E2  0E00               	movlw	0
  9094  0044E4  6E11               	movwf	cmd@command,c
  9095  0044E6  0E40               	movlw	64
  9096  0044E8  6E12               	movwf	cmd@command+1,c
  9097  0044EA  0E0A               	movlw	10
  9098  0044EC  6E13               	movwf	cmd@command+2,c
  9099  0044EE  0E9E               	movlw	158
  9100  0044F0  6E14               	movwf	cmd@command+3,c
  9101  0044F2  EC70  F034         	call	_cmd	;wreg free
  9102                           
  9103                           ;display.c: 409:             cmd(((2UL<<30)|(((200 +39)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9104  0044F6  0E00               	movlw	0
  9105  0044F8  6E11               	movwf	cmd@command,c
  9106  0044FA  0ED0               	movlw	208
  9107  0044FC  6E12               	movwf	cmd@command+1,c
  9108  0044FE  0EE2               	movlw	226
  9109  004500  6E13               	movwf	cmd@command+2,c
  9110  004502  0E9D               	movlw	157
  9111  004504  6E14               	movwf	cmd@command+3,c
  9112  004506  EC70  F034         	call	_cmd	;wreg free
  9113                           
  9114                           ;display.c: 410:             cmd(((2UL<<30)|(((200 +20)&511UL)<<21)|(((45 +10)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9115  00450A  0E00               	movlw	0
  9116  00450C  6E11               	movwf	cmd@command,c
  9117  00450E  0E70               	movlw	112
  9118  004510  6E12               	movwf	cmd@command+1,c
  9119  004512  0E83               	movlw	131
  9120  004514  6E13               	movwf	cmd@command+2,c
  9121  004516  0E9B               	movlw	155
  9122  004518  6E14               	movwf	cmd@command+3,c
  9123  00451A  EC70  F034         	call	_cmd	;wreg free
  9124                           
  9125                           ;display.c: 411:             cmd(((2UL<<30)|(((200 +20)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9126  00451E  0E00               	movlw	0
  9127  004520  6E11               	movwf	cmd@command,c
  9128  004522  0E50               	movlw	80
  9129  004524  6E12               	movwf	cmd@command+1,c
  9130  004526  0E8A               	movlw	138
  9131  004528  6E13               	movwf	cmd@command+2,c
  9132  00452A  0E9B               	movlw	155
  9133  00452C  6E14               	movwf	cmd@command+3,c
  9134  00452E  EC70  F034         	call	_cmd	;wreg free
  9135                           
  9136                           ;display.c: 412:             cmd(((2UL<<30)|(((200 +40)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9137  004532  0E00               	movlw	0
  9138  004534  6E11               	movwf	cmd@command,c
  9139  004536  0E50               	movlw	80
  9140  004538  6E12               	movwf	cmd@command+1,c
  9141  00453A  0E0A               	movlw	10
  9142  00453C  6E13               	movwf	cmd@command+2,c
  9143  00453E  0E9E               	movlw	158
  9144  004540  6E14               	movwf	cmd@command+3,c
  9145  004542  EC70  F034         	call	_cmd	;wreg free
  9146                           
  9147                           ;display.c: 413:             break;
  9148  004546  0012               	return	
  9149  004548                     
  9150                           ;display.c: 415:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45)&511UL)<<12)|(((0)
      +                          &31UL)<<7)|(((0)&127UL)<<0)));
  9151  004548  0E00               	movlw	0
  9152  00454A  6E11               	movwf	cmd@command,c
  9153  00454C  0ED0               	movlw	208
  9154  00454E  6E12               	movwf	cmd@command+1,c
  9155  004550  0E02               	movlw	2
  9156  004552  6E13               	movwf	cmd@command+2,c
  9157  004554  0E99               	movlw	153
  9158  004556  6E14               	movwf	cmd@command+3,c
  9159  004558  EC70  F034         	call	_cmd	;wreg free
  9160                           
  9161                           ;display.c: 416:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9162  00455C  0E00               	movlw	0
  9163  00455E  6E11               	movwf	cmd@command,c
  9164  004560  0ED0               	movlw	208
  9165  004562  6E12               	movwf	cmd@command+1,c
  9166  004564  0E02               	movlw	2
  9167  004566  6E13               	movwf	cmd@command+2,c
  9168  004568  0EA3               	movlw	163
  9169  00456A  6E14               	movwf	cmd@command+3,c
  9170  00456C  EC70  F034         	call	_cmd	;wreg free
  9171                           
  9172                           ;display.c: 417:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +1)&511UL)<<12
      +                          )|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9173  004570  0E00               	movlw	0
  9174  004572  6E11               	movwf	cmd@command,c
  9175  004574  0EE0               	movlw	224
  9176  004576  6E12               	movwf	cmd@command+1,c
  9177  004578  0E02               	movlw	2
  9178  00457A  6E13               	movwf	cmd@command+2,c
  9179  00457C  0EA3               	movlw	163
  9180  00457E  6E14               	movwf	cmd@command+3,c
  9181  004580  EC70  F034         	call	_cmd	;wreg free
  9182                           
  9183                           ;display.c: 418:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +59)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9184  004584  0E00               	movlw	0
  9185  004586  6E11               	movwf	cmd@command,c
  9186  004588  0E80               	movlw	128
  9187  00458A  6E12               	movwf	cmd@command+1,c
  9188  00458C  0E06               	movlw	6
  9189  00458E  6E13               	movwf	cmd@command+2,c
  9190  004590  0EA3               	movlw	163
  9191  004592  6E14               	movwf	cmd@command+3,c
  9192  004594  EC70  F034         	call	_cmd	;wreg free
  9193                           
  9194                           ;display.c: 419:             cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45 +60)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9195  004598  0E00               	movlw	0
  9196  00459A  6E11               	movwf	cmd@command,c
  9197  00459C  0E90               	movlw	144
  9198  00459E  6E12               	movwf	cmd@command+1,c
  9199  0045A0  0EE6               	movlw	230
  9200  0045A2  6E13               	movwf	cmd@command+2,c
  9201  0045A4  0EA2               	movlw	162
  9202  0045A6  6E14               	movwf	cmd@command+3,c
  9203  0045A8  EC70  F034         	call	_cmd	;wreg free
  9204                           
  9205                           ;display.c: 420:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +60)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9206  0045AC  0E00               	movlw	0
  9207  0045AE  6E11               	movwf	cmd@command,c
  9208  0045B0  0E90               	movlw	144
  9209  0045B2  6E12               	movwf	cmd@command+1,c
  9210  0045B4  0E06               	movlw	6
  9211  0045B6  6E13               	movwf	cmd@command+2,c
  9212  0045B8  0E99               	movlw	153
  9213  0045BA  6E14               	movwf	cmd@command+3,c
  9214  0045BC  EC70  F034         	call	_cmd	;wreg free
  9215                           
  9216                           ;display.c: 421:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +61)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9217  0045C0  0E00               	movlw	0
  9218  0045C2  6E11               	movwf	cmd@command,c
  9219  0045C4  0EA0               	movlw	160
  9220  0045C6  6E12               	movwf	cmd@command+1,c
  9221  0045C8  0E06               	movlw	6
  9222  0045CA  6E13               	movwf	cmd@command+2,c
  9223  0045CC  0E99               	movlw	153
  9224  0045CE  6E14               	movwf	cmd@command+3,c
  9225  0045D0  EC70  F034         	call	_cmd	;wreg free
  9226                           
  9227                           ;display.c: 422:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +120)&511UL)<<12)|
      +                          (((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9228  0045D4  0E00               	movlw	0
  9229  0045D6  6E11               	movwf	cmd@command,c
  9230  0045D8  0E50               	movlw	80
  9231  0045DA  6E12               	movwf	cmd@command+1,c
  9232  0045DC  0E0A               	movlw	10
  9233  0045DE  6E13               	movwf	cmd@command+2,c
  9234  0045E0  0E99               	movlw	153
  9235  0045E2  6E14               	movwf	cmd@command+3,c
  9236  0045E4  EC70  F034         	call	_cmd	;wreg free
  9237                           
  9238                           ;display.c: 423:             cmd(((2UL<<30)|(((200 +1)&511UL)<<21)|(((45 +120)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9239  0045E8  0E00               	movlw	0
  9240  0045EA  6E11               	movwf	cmd@command,c
  9241  0045EC  0E50               	movlw	80
  9242  0045EE  6E12               	movwf	cmd@command+1,c
  9243  0045F0  0E2A               	movlw	42
  9244  0045F2  6E13               	movwf	cmd@command+2,c
  9245  0045F4  0E99               	movlw	153
  9246  0045F6  6E14               	movwf	cmd@command+3,c
  9247  0045F8  EC70  F034         	call	_cmd	;wreg free
  9248                           
  9249                           ;display.c: 424:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9250  0045FC  0E00               	movlw	0
  9251  0045FE  6E11               	movwf	cmd@command,c
  9252  004600  0E50               	movlw	80
  9253  004602  6E12               	movwf	cmd@command+1,c
  9254  004604  0E0A               	movlw	10
  9255  004606  6E13               	movwf	cmd@command+2,c
  9256  004608  0EA3               	movlw	163
  9257  00460A  6E14               	movwf	cmd@command+3,c
  9258  00460C  EC70  F034         	call	_cmd	;wreg free
  9259                           
  9260                           ;display.c: 425:             break;
  9261  004610  0012               	return	
  9262  004612                     
  9263                           ;display.c: 427:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45)&511UL)<<12)|(((0)
      +                          &31UL)<<7)|(((0)&127UL)<<0)));
  9264  004612  0E00               	movlw	0
  9265  004614  6E11               	movwf	cmd@command,c
  9266  004616  0ED0               	movlw	208
  9267  004618  6E12               	movwf	cmd@command+1,c
  9268  00461A  0E02               	movlw	2
  9269  00461C  6E13               	movwf	cmd@command+2,c
  9270  00461E  0E99               	movlw	153
  9271  004620  6E14               	movwf	cmd@command+3,c
  9272  004622  EC70  F034         	call	_cmd	;wreg free
  9273                           
  9274                           ;display.c: 428:             cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9275  004626  0E00               	movlw	0
  9276  004628  6E11               	movwf	cmd@command,c
  9277  00462A  0ED0               	movlw	208
  9278  00462C  6E12               	movwf	cmd@command+1,c
  9279  00462E  0EE2               	movlw	226
  9280  004630  6E13               	movwf	cmd@command+2,c
  9281  004632  0EA2               	movlw	162
  9282  004634  6E14               	movwf	cmd@command+3,c
  9283  004636  EC70  F034         	call	_cmd	;wreg free
  9284                           
  9285                           ;display.c: 429:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9286  00463A  0E00               	movlw	0
  9287  00463C  6E11               	movwf	cmd@command,c
  9288  00463E  0ED0               	movlw	208
  9289  004640  6E12               	movwf	cmd@command+1,c
  9290  004642  0E02               	movlw	2
  9291  004644  6E13               	movwf	cmd@command+2,c
  9292  004646  0EA3               	movlw	163
  9293  004648  6E14               	movwf	cmd@command+3,c
  9294  00464A  EC70  F034         	call	_cmd	;wreg free
  9295                           
  9296                           ;display.c: 430:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9297  00464E  0E00               	movlw	0
  9298  004650  6E11               	movwf	cmd@command,c
  9299  004652  0E50               	movlw	80
  9300  004654  6E12               	movwf	cmd@command+1,c
  9301  004656  0E0A               	movlw	10
  9302  004658  6E13               	movwf	cmd@command+2,c
  9303  00465A  0EA3               	movlw	163
  9304  00465C  6E14               	movwf	cmd@command+3,c
  9305  00465E  EC70  F034         	call	_cmd	;wreg free
  9306                           
  9307                           ;display.c: 431:             cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45 +60)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9308  004662  0E00               	movlw	0
  9309  004664  6E11               	movwf	cmd@command,c
  9310  004666  0E90               	movlw	144
  9311  004668  6E12               	movwf	cmd@command+1,c
  9312  00466A  0EE6               	movlw	230
  9313  00466C  6E13               	movwf	cmd@command+2,c
  9314  00466E  0EA2               	movlw	162
  9315  004670  6E14               	movwf	cmd@command+3,c
  9316  004672  EC70  F034         	call	_cmd	;wreg free
  9317                           
  9318                           ;display.c: 432:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +60)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9319  004676  0E00               	movlw	0
  9320  004678  6E11               	movwf	cmd@command,c
  9321  00467A  0E90               	movlw	144
  9322  00467C  6E12               	movwf	cmd@command+1,c
  9323  00467E  0E06               	movlw	6
  9324  004680  6E13               	movwf	cmd@command+2,c
  9325  004682  0E99               	movlw	153
  9326  004684  6E14               	movwf	cmd@command+3,c
  9327  004686  EC70  F034         	call	_cmd	;wreg free
  9328                           
  9329                           ;display.c: 433:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +120)&511UL)<<12)|
      +                          (((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9330  00468A  0E00               	movlw	0
  9331  00468C  6E11               	movwf	cmd@command,c
  9332  00468E  0E50               	movlw	80
  9333  004690  6E12               	movwf	cmd@command+1,c
  9334  004692  0E0A               	movlw	10
  9335  004694  6E13               	movwf	cmd@command+2,c
  9336  004696  0E99               	movlw	153
  9337  004698  6E14               	movwf	cmd@command+3,c
  9338  00469A  EC70  F034         	call	_cmd	;wreg free
  9339                           
  9340                           ;display.c: 434:             cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9341  00469E  0E00               	movlw	0
  9342  0046A0  6E11               	movwf	cmd@command,c
  9343  0046A2  0E50               	movlw	80
  9344  0046A4  6E12               	movwf	cmd@command+1,c
  9345  0046A6  0EEA               	movlw	234
  9346  0046A8  6E13               	movwf	cmd@command+2,c
  9347  0046AA  0EA2               	movlw	162
  9348  0046AC  6E14               	movwf	cmd@command+3,c
  9349  0046AE  EC70  F034         	call	_cmd	;wreg free
  9350                           
  9351                           ;display.c: 435:             break;
  9352  0046B2  0012               	return	
  9353  0046B4                     
  9354                           ;display.c: 437:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45)&511UL)<<12)|(((0)
      +                          &31UL)<<7)|(((0)&127UL)<<0)));
  9355  0046B4  0E00               	movlw	0
  9356  0046B6  6E11               	movwf	cmd@command,c
  9357  0046B8  0ED0               	movlw	208
  9358  0046BA  6E12               	movwf	cmd@command+1,c
  9359  0046BC  0E02               	movlw	2
  9360  0046BE  6E13               	movwf	cmd@command+2,c
  9361  0046C0  0E99               	movlw	153
  9362  0046C2  6E14               	movwf	cmd@command+3,c
  9363  0046C4  EC70  F034         	call	_cmd	;wreg free
  9364                           
  9365                           ;display.c: 438:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +59)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9366  0046C8  0E00               	movlw	0
  9367  0046CA  6E11               	movwf	cmd@command,c
  9368  0046CC  0E80               	movlw	128
  9369  0046CE  6E12               	movwf	cmd@command+1,c
  9370  0046D0  0E06               	movlw	6
  9371  0046D2  6E13               	movwf	cmd@command+2,c
  9372  0046D4  0E99               	movlw	153
  9373  0046D6  6E14               	movwf	cmd@command+3,c
  9374  0046D8  EC70  F034         	call	_cmd	;wreg free
  9375                           
  9376                           ;display.c: 439:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9377  0046DC  0E00               	movlw	0
  9378  0046DE  6E11               	movwf	cmd@command,c
  9379  0046E0  0ED0               	movlw	208
  9380  0046E2  6E12               	movwf	cmd@command+1,c
  9381  0046E4  0E02               	movlw	2
  9382  0046E6  6E13               	movwf	cmd@command+2,c
  9383  0046E8  0EA3               	movlw	163
  9384  0046EA  6E14               	movwf	cmd@command+3,c
  9385  0046EC  EC70  F034         	call	_cmd	;wreg free
  9386                           
  9387                           ;display.c: 440:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9388  0046F0  0E00               	movlw	0
  9389  0046F2  6E11               	movwf	cmd@command,c
  9390  0046F4  0E50               	movlw	80
  9391  0046F6  6E12               	movwf	cmd@command+1,c
  9392  0046F8  0E0A               	movlw	10
  9393  0046FA  6E13               	movwf	cmd@command+2,c
  9394  0046FC  0EA3               	movlw	163
  9395  0046FE  6E14               	movwf	cmd@command+3,c
  9396  004700  EC70  F034         	call	_cmd	;wreg free
  9397                           
  9398                           ;display.c: 441:             cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45 +60)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9399  004704  0E00               	movlw	0
  9400  004706  6E11               	movwf	cmd@command,c
  9401  004708  0E90               	movlw	144
  9402  00470A  6E12               	movwf	cmd@command+1,c
  9403  00470C  0EE6               	movlw	230
  9404  00470E  6E13               	movwf	cmd@command+2,c
  9405  004710  0EA2               	movlw	162
  9406  004712  6E14               	movwf	cmd@command+3,c
  9407  004714  EC70  F034         	call	_cmd	;wreg free
  9408                           
  9409                           ;display.c: 442:             cmd(((2UL<<30)|(((200 +1)&511UL)<<21)|(((45 +60)&511UL)<<12
      +                          )|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9410  004718  0E00               	movlw	0
  9411  00471A  6E11               	movwf	cmd@command,c
  9412  00471C  0E90               	movlw	144
  9413  00471E  6E12               	movwf	cmd@command+1,c
  9414  004720  0E26               	movlw	38
  9415  004722  6E13               	movwf	cmd@command+2,c
  9416  004724  0E99               	movlw	153
  9417  004726  6E14               	movwf	cmd@command+3,c
  9418  004728  EC70  F034         	call	_cmd	;wreg free
  9419                           
  9420                           ;display.c: 443:             break;
  9421  00472C  0012               	return	
  9422  00472E                     
  9423                           ;display.c: 445:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45)&511UL)<<12)|(((0)
      +                          &31UL)<<7)|(((0)&127UL)<<0)));
  9424  00472E  0E00               	movlw	0
  9425  004730  6E11               	movwf	cmd@command,c
  9426  004732  0ED0               	movlw	208
  9427  004734  6E12               	movwf	cmd@command+1,c
  9428  004736  0E02               	movlw	2
  9429  004738  6E13               	movwf	cmd@command+2,c
  9430  00473A  0E99               	movlw	153
  9431  00473C  6E14               	movwf	cmd@command+3,c
  9432  00473E  EC70  F034         	call	_cmd	;wreg free
  9433                           
  9434                           ;display.c: 446:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9435  004742  0E00               	movlw	0
  9436  004744  6E11               	movwf	cmd@command,c
  9437  004746  0ED0               	movlw	208
  9438  004748  6E12               	movwf	cmd@command+1,c
  9439  00474A  0E02               	movlw	2
  9440  00474C  6E13               	movwf	cmd@command+2,c
  9441  00474E  0EA3               	movlw	163
  9442  004750  6E14               	movwf	cmd@command+3,c
  9443  004752  EC70  F034         	call	_cmd	;wreg free
  9444                           
  9445                           ;display.c: 447:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +1)&511UL)<<12)|((
      +                          (0)&31UL)<<7)|(((0)&127UL)<<0)));
  9446  004756  0E00               	movlw	0
  9447  004758  6E11               	movwf	cmd@command,c
  9448  00475A  0EE0               	movlw	224
  9449  00475C  6E12               	movwf	cmd@command+1,c
  9450  00475E  0E02               	movlw	2
  9451  004760  6E13               	movwf	cmd@command+2,c
  9452  004762  0E99               	movlw	153
  9453  004764  6E14               	movwf	cmd@command+3,c
  9454  004766  EC70  F034         	call	_cmd	;wreg free
  9455                           
  9456                           ;display.c: 448:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +59)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9457  00476A  0E00               	movlw	0
  9458  00476C  6E11               	movwf	cmd@command,c
  9459  00476E  0E80               	movlw	128
  9460  004770  6E12               	movwf	cmd@command+1,c
  9461  004772  0E06               	movlw	6
  9462  004774  6E13               	movwf	cmd@command+2,c
  9463  004776  0E99               	movlw	153
  9464  004778  6E14               	movwf	cmd@command+3,c
  9465  00477A  EC70  F034         	call	_cmd	;wreg free
  9466                           
  9467                           ;display.c: 449:             cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45 +60)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9468  00477E  0E00               	movlw	0
  9469  004780  6E11               	movwf	cmd@command,c
  9470  004782  0E90               	movlw	144
  9471  004784  6E12               	movwf	cmd@command+1,c
  9472  004786  0EE6               	movlw	230
  9473  004788  6E13               	movwf	cmd@command+2,c
  9474  00478A  0EA2               	movlw	162
  9475  00478C  6E14               	movwf	cmd@command+3,c
  9476  00478E  EC70  F034         	call	_cmd	;wreg free
  9477                           
  9478                           ;display.c: 450:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +60)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9479  004792  0E00               	movlw	0
  9480  004794  6E11               	movwf	cmd@command,c
  9481  004796  0E90               	movlw	144
  9482  004798  6E12               	movwf	cmd@command+1,c
  9483  00479A  0E06               	movlw	6
  9484  00479C  6E13               	movwf	cmd@command+2,c
  9485  00479E  0E99               	movlw	153
  9486  0047A0  6E14               	movwf	cmd@command+3,c
  9487  0047A2  EC70  F034         	call	_cmd	;wreg free
  9488                           
  9489                           ;display.c: 451:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +61)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9490  0047A6  0E00               	movlw	0
  9491  0047A8  6E11               	movwf	cmd@command,c
  9492  0047AA  0EA0               	movlw	160
  9493  0047AC  6E12               	movwf	cmd@command+1,c
  9494  0047AE  0E06               	movlw	6
  9495  0047B0  6E13               	movwf	cmd@command+2,c
  9496  0047B2  0EA3               	movlw	163
  9497  0047B4  6E14               	movwf	cmd@command+3,c
  9498  0047B6  EC70  F034         	call	_cmd	;wreg free
  9499                           
  9500                           ;display.c: 452:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +119)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9501  0047BA  0E00               	movlw	0
  9502  0047BC  6E11               	movwf	cmd@command,c
  9503  0047BE  0E40               	movlw	64
  9504  0047C0  6E12               	movwf	cmd@command+1,c
  9505  0047C2  0E0A               	movlw	10
  9506  0047C4  6E13               	movwf	cmd@command+2,c
  9507  0047C6  0EA3               	movlw	163
  9508  0047C8  6E14               	movwf	cmd@command+3,c
  9509  0047CA  EC70  F034         	call	_cmd	;wreg free
  9510                           
  9511                           ;display.c: 453:             cmd(((2UL<<30)|(((200 +1)&511UL)<<21)|(((45 +120)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9512  0047CE  0E00               	movlw	0
  9513  0047D0  6E11               	movwf	cmd@command,c
  9514  0047D2  0E50               	movlw	80
  9515  0047D4  6E12               	movwf	cmd@command+1,c
  9516  0047D6  0E2A               	movlw	42
  9517  0047D8  6E13               	movwf	cmd@command+2,c
  9518  0047DA  0E99               	movlw	153
  9519  0047DC  6E14               	movwf	cmd@command+3,c
  9520  0047DE  EC70  F034         	call	_cmd	;wreg free
  9521                           
  9522                           ;display.c: 454:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9523  0047E2  0E00               	movlw	0
  9524  0047E4  6E11               	movwf	cmd@command,c
  9525  0047E6  0E50               	movlw	80
  9526  0047E8  6E12               	movwf	cmd@command+1,c
  9527  0047EA  0E0A               	movlw	10
  9528  0047EC  6E13               	movwf	cmd@command+2,c
  9529  0047EE  0EA3               	movlw	163
  9530  0047F0  6E14               	movwf	cmd@command+3,c
  9531  0047F2  EC70  F034         	call	_cmd	;wreg free
  9532                           
  9533                           ;display.c: 455:             break;
  9534  0047F6  0012               	return	
  9535  0047F8                     
  9536                           ;display.c: 457:              cmd(((2UL<<30)|(((200 +1)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9537  0047F8  0E00               	movlw	0
  9538  0047FA  6E11               	movwf	cmd@command,c
  9539  0047FC  0ED0               	movlw	208
  9540  0047FE  6E12               	movwf	cmd@command+1,c
  9541  004800  0E22               	movlw	34
  9542  004802  6E13               	movwf	cmd@command+2,c
  9543  004804  0E99               	movlw	153
  9544  004806  6E14               	movwf	cmd@command+3,c
  9545  004808  EC70  F034         	call	_cmd	;wreg free
  9546                           
  9547                           ;display.c: 458:              cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45)&511UL)<<12)|
      +                          (((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9548  00480C  0E00               	movlw	0
  9549  00480E  6E11               	movwf	cmd@command,c
  9550  004810  0ED0               	movlw	208
  9551  004812  6E12               	movwf	cmd@command+1,c
  9552  004814  0E02               	movlw	2
  9553  004816  6E13               	movwf	cmd@command+2,c
  9554  004818  0EA3               	movlw	163
  9555  00481A  6E14               	movwf	cmd@command+3,c
  9556  00481C  EC70  F034         	call	_cmd	;wreg free
  9557                           
  9558                           ;display.c: 459:              cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +1)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9559  004820  0E00               	movlw	0
  9560  004822  6E11               	movwf	cmd@command,c
  9561  004824  0EE0               	movlw	224
  9562  004826  6E12               	movwf	cmd@command+1,c
  9563  004828  0E02               	movlw	2
  9564  00482A  6E13               	movwf	cmd@command+2,c
  9565  00482C  0E99               	movlw	153
  9566  00482E  6E14               	movwf	cmd@command+3,c
  9567  004830  EC70  F034         	call	_cmd	;wreg free
  9568                           
  9569                           ;display.c: 460:              cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +119)&511UL)<<12)
      +                          |(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9570  004834  0E00               	movlw	0
  9571  004836  6E11               	movwf	cmd@command,c
  9572  004838  0E40               	movlw	64
  9573  00483A  6E12               	movwf	cmd@command+1,c
  9574  00483C  0E0A               	movlw	10
  9575  00483E  6E13               	movwf	cmd@command+2,c
  9576  004840  0E99               	movlw	153
  9577  004842  6E14               	movwf	cmd@command+3,c
  9578  004844  EC70  F034         	call	_cmd	;wreg free
  9579                           
  9580                           ;display.c: 461:              cmd(((2UL<<30)|(((200 +1)&511UL)<<21)|(((45 +60)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9581  004848  0E00               	movlw	0
  9582  00484A  6E11               	movwf	cmd@command,c
  9583  00484C  0E90               	movlw	144
  9584  00484E  6E12               	movwf	cmd@command+1,c
  9585  004850  0E26               	movlw	38
  9586  004852  6E13               	movwf	cmd@command+2,c
  9587  004854  0E99               	movlw	153
  9588  004856  6E14               	movwf	cmd@command+3,c
  9589  004858  EC70  F034         	call	_cmd	;wreg free
  9590                           
  9591                           ;display.c: 462:              cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +60)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9592  00485C  0E00               	movlw	0
  9593  00485E  6E11               	movwf	cmd@command,c
  9594  004860  0E90               	movlw	144
  9595  004862  6E12               	movwf	cmd@command+1,c
  9596  004864  0E06               	movlw	6
  9597  004866  6E13               	movwf	cmd@command+2,c
  9598  004868  0EA3               	movlw	163
  9599  00486A  6E14               	movwf	cmd@command+3,c
  9600  00486C  EC70  F034         	call	_cmd	;wreg free
  9601                           
  9602                           ;display.c: 463:              cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +61)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9603  004870  0E00               	movlw	0
  9604  004872  6E11               	movwf	cmd@command,c
  9605  004874  0EA0               	movlw	160
  9606  004876  6E12               	movwf	cmd@command+1,c
  9607  004878  0E06               	movlw	6
  9608  00487A  6E13               	movwf	cmd@command+2,c
  9609  00487C  0EA3               	movlw	163
  9610  00487E  6E14               	movwf	cmd@command+3,c
  9611  004880  EC70  F034         	call	_cmd	;wreg free
  9612                           
  9613                           ;display.c: 464:              cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +119)&511UL)<
      +                          <12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9614  004884  0E00               	movlw	0
  9615  004886  6E11               	movwf	cmd@command,c
  9616  004888  0E40               	movlw	64
  9617  00488A  6E12               	movwf	cmd@command+1,c
  9618  00488C  0E0A               	movlw	10
  9619  00488E  6E13               	movwf	cmd@command+2,c
  9620  004890  0EA3               	movlw	163
  9621  004892  6E14               	movwf	cmd@command+3,c
  9622  004894  EC70  F034         	call	_cmd	;wreg free
  9623                           
  9624                           ;display.c: 465:              cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +120)&511UL)<<12)
      +                          |(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9625  004898  0E00               	movlw	0
  9626  00489A  6E11               	movwf	cmd@command,c
  9627  00489C  0E50               	movlw	80
  9628  00489E  6E12               	movwf	cmd@command+1,c
  9629  0048A0  0E0A               	movlw	10
  9630  0048A2  6E13               	movwf	cmd@command+2,c
  9631  0048A4  0E99               	movlw	153
  9632  0048A6  6E14               	movwf	cmd@command+3,c
  9633  0048A8  EC70  F034         	call	_cmd	;wreg free
  9634                           
  9635                           ;display.c: 466:              cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45 +120)&511UL)<
      +                          <12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9636  0048AC  0E00               	movlw	0
  9637  0048AE  6E11               	movwf	cmd@command,c
  9638  0048B0  0E50               	movlw	80
  9639  0048B2  6E12               	movwf	cmd@command+1,c
  9640  0048B4  0EEA               	movlw	234
  9641  0048B6  6E13               	movwf	cmd@command+2,c
  9642  0048B8  0EA2               	movlw	162
  9643  0048BA  6E14               	movwf	cmd@command+3,c
  9644  0048BC  EC70  F034         	call	_cmd	;wreg free
  9645                           
  9646                           ;display.c: 471:     }
  9647                           
  9648                           ;display.c: 470:             break;
  9649                           
  9650                           ;display.c: 468:         default:
  9651                           
  9652                           ;display.c: 467:             break;
  9653  0048C0  0012               	return	
  9654  0048C2                     l738:
  9655  0048C2  C019  F01B         	movff	display_gear@gear,??_display_gear
  9656  0048C6  C01A  F01C         	movff	display_gear@gear+1,??_display_gear+1
  9657                           
  9658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9659                           ; Switch size 1, requested type "space"
  9660                           ; Number of cases is 1, Range of values is 0 to 0
  9661                           ; switch strategies available:
  9662                           ; Name         Instructions Cycles
  9663                           ; simple_byte            4     3 (average)
  9664                           ;	Chosen strategy is simple_byte
  9665  0048CA  501C               	movf	??_display_gear+1,w,c
  9666  0048CC  0A00               	xorlw	0	; case 0
  9667  0048CE  A4D8               	btfss	status,2,c
  9668  0048D0  0012               	return	
  9669                           
  9670                           ; Switch size 1, requested type "space"
  9671                           ; Number of cases is 7, Range of values is 0 to 6
  9672                           ; switch strategies available:
  9673                           ; Name         Instructions Cycles
  9674                           ; simple_byte           22    12 (average)
  9675                           ;	Chosen strategy is simple_byte
  9676  0048D2  501B               	movf	??_display_gear,w,c
  9677  0048D4  0A00               	xorlw	0	; case 0
  9678  0048D6  B4D8               	btfsc	status,2,c
  9679  0048D8  D5BD               	goto	l739
  9680  0048DA  0A01               	xorlw	1	; case 1
  9681  0048DC  B4D8               	btfsc	status,2,c
  9682  0048DE  D5F7               	goto	l741
  9683  0048E0  0A03               	xorlw	3	; case 2
  9684  0048E2  B4D8               	btfsc	status,2,c
  9685  0048E4  D631               	goto	l742
  9686  0048E6  0A01               	xorlw	1	; case 3
  9687  0048E8  B4D8               	btfsc	status,2,c
  9688  0048EA  D693               	goto	l743
  9689  0048EC  0A07               	xorlw	7	; case 4
  9690  0048EE  B4D8               	btfsc	status,2,c
  9691  0048F0  D6E1               	goto	l744
  9692  0048F2  0A01               	xorlw	1	; case 5
  9693  0048F4  B4D8               	btfsc	status,2,c
  9694  0048F6  D71B               	goto	l745
  9695  0048F8  0A03               	xorlw	3	; case 6
  9696  0048FA  A4D8               	btfss	status,2,c
  9697  0048FC  0012               	return	
  9698  0048FE  D77C               	goto	l746
  9699  004900                     __end_of_display_gear:
  9700                           	opt stack 0
  9701                           tblptru	equ	0xFF8
  9702                           tblptrh	equ	0xFF7
  9703                           tblptrl	equ	0xFF6
  9704                           tablat	equ	0xFF5
  9705                           prodh	equ	0xFF4
  9706                           prodl	equ	0xFF3
  9707                           intcon	equ	0xFF2
  9708                           postinc0	equ	0xFEE
  9709                           wreg	equ	0xFE8
  9710                           postdec1	equ	0xFE5
  9711                           plusw1	equ	0xFE3
  9712                           fsr1l	equ	0xFE1
  9713                           plusw2	equ	0xFDB
  9714                           status	equ	0xFD8
  9715                           
  9716 ;; *************** function _display_fuel_level *****************
  9717 ;; Defined at:
  9718 ;;		line 316 in file "display.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;  fuel            2   24[COMRAM] int 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;		None
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  1    wreg      void 
  9725 ;; Registers used:
  9726 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9734 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9735 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9736 ;;Total ram usage:        6 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:    7
  9739 ;; This function calls:
  9740 ;;		_cmd
  9741 ;;		_cmd_incrementn
  9742 ;;		_wr16
  9743 ;;		_wr8s
  9744 ;; This function is called by:
  9745 ;;		_display
  9746 ;;		_main
  9747 ;; This function uses a non-reentrant model
  9748 ;;
  9749                           
  9750                           	psect	text16
  9751  005678                     __ptext16:
  9752                           	opt stack 0
  9753  005678                     _display_fuel_level:
  9754                           	opt stack 23
  9755                           
  9756                           ;display.c: 317:     if(fuel == 1) {
  9757                           
  9758                           ;incstack = 0
  9759  005678  0419               	decf	display_fuel_level@fuel,w,c
  9760  00567A  101A               	iorwf	display_fuel_level@fuel+1,w,c
  9761  00567C  A4D8               	btfss	status,2,c
  9762  00567E  D09B               	goto	l702
  9763                           
  9764                           ;display.c: 318:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&2
      +                          55UL)<<0)));
  9765  005680  0EFF               	movlw	255
  9766  005682  6E11               	movwf	cmd@command,c
  9767  005684  0EFF               	movlw	255
  9768  005686  6E12               	movwf	cmd@command+1,c
  9769  005688  0EFF               	movlw	255
  9770  00568A  6E13               	movwf	cmd@command+2,c
  9771  00568C  0E04               	movlw	4
  9772  00568E  6E14               	movwf	cmd@command+3,c
  9773  005690  EC70  F034         	call	_cmd	;wreg free
  9774                           
  9775                           ;display.c: 319:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 47);cmd_increment
      +                          n(2);wr16(1081344UL +cmd_offset, 142);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);
      +                          cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(wr
      +                          8s(1081344UL +cmd_offset, "Normal"));
  9776  005694  0E0C               	movlw	12
  9777  005696  6E11               	movwf	cmd@command,c
  9778  005698  0EFF               	movlw	255
  9779  00569A  6E12               	movwf	cmd@command+1,c
  9780  00569C  0EFF               	movlw	255
  9781  00569E  6E13               	movwf	cmd@command+2,c
  9782  0056A0  0EFF               	movlw	255
  9783  0056A2  6E14               	movwf	cmd@command+3,c
  9784  0056A4  EC70  F034         	call	_cmd	;wreg free
  9785  0056A8  504F               	movf	_cmd_offset,w,c
  9786  0056AA  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9787  0056AC  5050               	movf	_cmd_offset+1,w,c
  9788  0056AE  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9789  0056B0  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9790  0056B2  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9791  0056B4  0E00               	movlw	0
  9792  0056B6  241B               	addwf	??_display_fuel_level,w,c
  9793  0056B8  6E04               	movwf	wr16@addr,c
  9794  0056BA  0E80               	movlw	128
  9795  0056BC  201C               	addwfc	??_display_fuel_level+1,w,c
  9796  0056BE  6E05               	movwf	wr16@addr+1,c
  9797  0056C0  0E10               	movlw	16
  9798  0056C2  201D               	addwfc	??_display_fuel_level+2,w,c
  9799  0056C4  6E06               	movwf	wr16@addr+2,c
  9800  0056C6  0E00               	movlw	0
  9801  0056C8  201E               	addwfc	??_display_fuel_level+3,w,c
  9802  0056CA  6E07               	movwf	wr16@addr+3,c
  9803  0056CC  0E00               	movlw	0
  9804  0056CE  6E09               	movwf	wr16@value+1,c
  9805  0056D0  0E2F               	movlw	47
  9806  0056D2  6E08               	movwf	wr16@value,c
  9807  0056D4  EC48  F035         	call	_wr16	;wreg free
  9808  0056D8  0E02               	movlw	2
  9809  0056DA  EC89  F035         	call	_cmd_incrementn
  9810  0056DE  504F               	movf	_cmd_offset,w,c
  9811  0056E0  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9812  0056E2  5050               	movf	_cmd_offset+1,w,c
  9813  0056E4  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9814  0056E6  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9815  0056E8  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9816  0056EA  0E00               	movlw	0
  9817  0056EC  241B               	addwf	??_display_fuel_level,w,c
  9818  0056EE  6E04               	movwf	wr16@addr,c
  9819  0056F0  0E80               	movlw	128
  9820  0056F2  201C               	addwfc	??_display_fuel_level+1,w,c
  9821  0056F4  6E05               	movwf	wr16@addr+1,c
  9822  0056F6  0E10               	movlw	16
  9823  0056F8  201D               	addwfc	??_display_fuel_level+2,w,c
  9824  0056FA  6E06               	movwf	wr16@addr+2,c
  9825  0056FC  0E00               	movlw	0
  9826  0056FE  201E               	addwfc	??_display_fuel_level+3,w,c
  9827  005700  6E07               	movwf	wr16@addr+3,c
  9828  005702  0E00               	movlw	0
  9829  005704  6E09               	movwf	wr16@value+1,c
  9830  005706  0E8E               	movlw	142
  9831  005708  6E08               	movwf	wr16@value,c
  9832  00570A  EC48  F035         	call	_wr16	;wreg free
  9833  00570E  0E02               	movlw	2
  9834  005710  EC89  F035         	call	_cmd_incrementn
  9835  005714  504F               	movf	_cmd_offset,w,c
  9836  005716  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9837  005718  5050               	movf	_cmd_offset+1,w,c
  9838  00571A  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9839  00571C  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9840  00571E  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9841  005720  0E00               	movlw	0
  9842  005722  241B               	addwf	??_display_fuel_level,w,c
  9843  005724  6E04               	movwf	wr16@addr,c
  9844  005726  0E80               	movlw	128
  9845  005728  201C               	addwfc	??_display_fuel_level+1,w,c
  9846  00572A  6E05               	movwf	wr16@addr+1,c
  9847  00572C  0E10               	movlw	16
  9848  00572E  201D               	addwfc	??_display_fuel_level+2,w,c
  9849  005730  6E06               	movwf	wr16@addr+2,c
  9850  005732  0E00               	movlw	0
  9851  005734  201E               	addwfc	??_display_fuel_level+3,w,c
  9852  005736  6E07               	movwf	wr16@addr+3,c
  9853  005738  0E00               	movlw	0
  9854  00573A  6E09               	movwf	wr16@value+1,c
  9855  00573C  0E1C               	movlw	28
  9856  00573E  6E08               	movwf	wr16@value,c
  9857  005740  EC48  F035         	call	_wr16	;wreg free
  9858  005744  0E02               	movlw	2
  9859  005746  EC89  F035         	call	_cmd_incrementn
  9860  00574A  504F               	movf	_cmd_offset,w,c
  9861  00574C  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9862  00574E  5050               	movf	_cmd_offset+1,w,c
  9863  005750  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9864  005752  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9865  005754  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9866  005756  0E00               	movlw	0
  9867  005758  241B               	addwf	??_display_fuel_level,w,c
  9868  00575A  6E04               	movwf	wr16@addr,c
  9869  00575C  0E80               	movlw	128
  9870  00575E  201C               	addwfc	??_display_fuel_level+1,w,c
  9871  005760  6E05               	movwf	wr16@addr+1,c
  9872  005762  0E10               	movlw	16
  9873  005764  201D               	addwfc	??_display_fuel_level+2,w,c
  9874  005766  6E06               	movwf	wr16@addr+2,c
  9875  005768  0E00               	movlw	0
  9876  00576A  201E               	addwfc	??_display_fuel_level+3,w,c
  9877  00576C  6E07               	movwf	wr16@addr+3,c
  9878  00576E  0E02               	movlw	2
  9879  005770  6E09               	movwf	wr16@value+1,c
  9880  005772  0E00               	movlw	0
  9881  005774  6E08               	movwf	wr16@value,c
  9882  005776  EC48  F035         	call	_wr16	;wreg free
  9883  00577A  0E02               	movlw	2
  9884  00577C  EC89  F035         	call	_cmd_incrementn
  9885  005780  504F               	movf	_cmd_offset,w,c
  9886  005782  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9887  005784  5050               	movf	_cmd_offset+1,w,c
  9888  005786  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9889  005788  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9890  00578A  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9891  00578C  0E00               	movlw	0
  9892  00578E  241B               	addwf	??_display_fuel_level,w,c
  9893  005790  6E09               	movwf	wr8s@addr,c
  9894  005792  0E80               	movlw	128
  9895  005794  201C               	addwfc	??_display_fuel_level+1,w,c
  9896  005796  6E0A               	movwf	wr8s@addr+1,c
  9897  005798  0E10               	movlw	16
  9898  00579A  201D               	addwfc	??_display_fuel_level+2,w,c
  9899  00579C  6E0B               	movwf	wr8s@addr+2,c
  9900  00579E  0E00               	movlw	0
  9901  0057A0  201E               	addwfc	??_display_fuel_level+3,w,c
  9902  0057A2  6E0C               	movwf	wr8s@addr+3,c
  9903  0057A4  0E40               	movlw	low STR_22
  9904  0057A6  6E0D               	movwf	wr8s@s,c
  9905  0057A8  0E0F               	movlw	high STR_22
  9906  0057AA  6E0E               	movwf	wr8s@s+1,c
  9907  0057AC  EC67  F033         	call	_wr8s	;wreg free
  9908  0057B0  EC89  F035         	call	_cmd_incrementn
  9909                           
  9910                           ;display.c: 320:     }
  9911  0057B4  0012               	return	
  9912  0057B6                     l702:
  9913                           
  9914                           ;display.c: 322:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  9915  0057B6  0E00               	movlw	0
  9916  0057B8  6E11               	movwf	cmd@command,c
  9917  0057BA  0E00               	movlw	0
  9918  0057BC  6E12               	movwf	cmd@command+1,c
  9919  0057BE  0EFF               	movlw	255
  9920  0057C0  6E13               	movwf	cmd@command+2,c
  9921  0057C2  0E04               	movlw	4
  9922  0057C4  6E14               	movwf	cmd@command+3,c
  9923  0057C6  EC70  F034         	call	_cmd	;wreg free
  9924                           
  9925                           ;display.c: 323:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 47);cmd_increment
      +                          n(2);wr16(1081344UL +cmd_offset, 142);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);
      +                          cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(wr
      +                          8s(1081344UL +cmd_offset, "Warning"));
  9926  0057CA  0E0C               	movlw	12
  9927  0057CC  6E11               	movwf	cmd@command,c
  9928  0057CE  0EFF               	movlw	255
  9929  0057D0  6E12               	movwf	cmd@command+1,c
  9930  0057D2  0EFF               	movlw	255
  9931  0057D4  6E13               	movwf	cmd@command+2,c
  9932  0057D6  0EFF               	movlw	255
  9933  0057D8  6E14               	movwf	cmd@command+3,c
  9934  0057DA  EC70  F034         	call	_cmd	;wreg free
  9935  0057DE  504F               	movf	_cmd_offset,w,c
  9936  0057E0  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9937  0057E2  5050               	movf	_cmd_offset+1,w,c
  9938  0057E4  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9939  0057E6  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9940  0057E8  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9941  0057EA  0E00               	movlw	0
  9942  0057EC  241B               	addwf	??_display_fuel_level,w,c
  9943  0057EE  6E04               	movwf	wr16@addr,c
  9944  0057F0  0E80               	movlw	128
  9945  0057F2  201C               	addwfc	??_display_fuel_level+1,w,c
  9946  0057F4  6E05               	movwf	wr16@addr+1,c
  9947  0057F6  0E10               	movlw	16
  9948  0057F8  201D               	addwfc	??_display_fuel_level+2,w,c
  9949  0057FA  6E06               	movwf	wr16@addr+2,c
  9950  0057FC  0E00               	movlw	0
  9951  0057FE  201E               	addwfc	??_display_fuel_level+3,w,c
  9952  005800  6E07               	movwf	wr16@addr+3,c
  9953  005802  0E00               	movlw	0
  9954  005804  6E09               	movwf	wr16@value+1,c
  9955  005806  0E2F               	movlw	47
  9956  005808  6E08               	movwf	wr16@value,c
  9957  00580A  EC48  F035         	call	_wr16	;wreg free
  9958  00580E  0E02               	movlw	2
  9959  005810  EC89  F035         	call	_cmd_incrementn
  9960  005814  504F               	movf	_cmd_offset,w,c
  9961  005816  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9962  005818  5050               	movf	_cmd_offset+1,w,c
  9963  00581A  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9964  00581C  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9965  00581E  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9966  005820  0E00               	movlw	0
  9967  005822  241B               	addwf	??_display_fuel_level,w,c
  9968  005824  6E04               	movwf	wr16@addr,c
  9969  005826  0E80               	movlw	128
  9970  005828  201C               	addwfc	??_display_fuel_level+1,w,c
  9971  00582A  6E05               	movwf	wr16@addr+1,c
  9972  00582C  0E10               	movlw	16
  9973  00582E  201D               	addwfc	??_display_fuel_level+2,w,c
  9974  005830  6E06               	movwf	wr16@addr+2,c
  9975  005832  0E00               	movlw	0
  9976  005834  201E               	addwfc	??_display_fuel_level+3,w,c
  9977  005836  6E07               	movwf	wr16@addr+3,c
  9978  005838  0E00               	movlw	0
  9979  00583A  6E09               	movwf	wr16@value+1,c
  9980  00583C  0E8E               	movlw	142
  9981  00583E  6E08               	movwf	wr16@value,c
  9982  005840  EC48  F035         	call	_wr16	;wreg free
  9983  005844  0E02               	movlw	2
  9984  005846  EC89  F035         	call	_cmd_incrementn
  9985  00584A  504F               	movf	_cmd_offset,w,c
  9986  00584C  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9987  00584E  5050               	movf	_cmd_offset+1,w,c
  9988  005850  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9989  005852  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9990  005854  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9991  005856  0E00               	movlw	0
  9992  005858  241B               	addwf	??_display_fuel_level,w,c
  9993  00585A  6E04               	movwf	wr16@addr,c
  9994  00585C  0E80               	movlw	128
  9995  00585E  201C               	addwfc	??_display_fuel_level+1,w,c
  9996  005860  6E05               	movwf	wr16@addr+1,c
  9997  005862  0E10               	movlw	16
  9998  005864  201D               	addwfc	??_display_fuel_level+2,w,c
  9999  005866  6E06               	movwf	wr16@addr+2,c
 10000  005868  0E00               	movlw	0
 10001  00586A  201E               	addwfc	??_display_fuel_level+3,w,c
 10002  00586C  6E07               	movwf	wr16@addr+3,c
 10003  00586E  0E00               	movlw	0
 10004  005870  6E09               	movwf	wr16@value+1,c
 10005  005872  0E1C               	movlw	28
 10006  005874  6E08               	movwf	wr16@value,c
 10007  005876  EC48  F035         	call	_wr16	;wreg free
 10008  00587A  0E02               	movlw	2
 10009  00587C  EC89  F035         	call	_cmd_incrementn
 10010  005880  504F               	movf	_cmd_offset,w,c
 10011  005882  6E1B               	movwf	??_display_fuel_level& (0+255),c
 10012  005884  5050               	movf	_cmd_offset+1,w,c
 10013  005886  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
 10014  005888  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
 10015  00588A  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
 10016  00588C  0E00               	movlw	0
 10017  00588E  241B               	addwf	??_display_fuel_level,w,c
 10018  005890  6E04               	movwf	wr16@addr,c
 10019  005892  0E80               	movlw	128
 10020  005894  201C               	addwfc	??_display_fuel_level+1,w,c
 10021  005896  6E05               	movwf	wr16@addr+1,c
 10022  005898  0E10               	movlw	16
 10023  00589A  201D               	addwfc	??_display_fuel_level+2,w,c
 10024  00589C  6E06               	movwf	wr16@addr+2,c
 10025  00589E  0E00               	movlw	0
 10026  0058A0  201E               	addwfc	??_display_fuel_level+3,w,c
 10027  0058A2  6E07               	movwf	wr16@addr+3,c
 10028  0058A4  0E02               	movlw	2
 10029  0058A6  6E09               	movwf	wr16@value+1,c
 10030  0058A8  0E00               	movlw	0
 10031  0058AA  6E08               	movwf	wr16@value,c
 10032  0058AC  EC48  F035         	call	_wr16	;wreg free
 10033  0058B0  0E02               	movlw	2
 10034  0058B2  EC89  F035         	call	_cmd_incrementn
 10035  0058B6  504F               	movf	_cmd_offset,w,c
 10036  0058B8  6E1B               	movwf	??_display_fuel_level& (0+255),c
 10037  0058BA  5050               	movf	_cmd_offset+1,w,c
 10038  0058BC  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
 10039  0058BE  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
 10040  0058C0  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
 10041  0058C2  0E00               	movlw	0
 10042  0058C4  241B               	addwf	??_display_fuel_level,w,c
 10043  0058C6  6E09               	movwf	wr8s@addr,c
 10044  0058C8  0E80               	movlw	128
 10045  0058CA  201C               	addwfc	??_display_fuel_level+1,w,c
 10046  0058CC  6E0A               	movwf	wr8s@addr+1,c
 10047  0058CE  0E10               	movlw	16
 10048  0058D0  201D               	addwfc	??_display_fuel_level+2,w,c
 10049  0058D2  6E0B               	movwf	wr8s@addr+2,c
 10050  0058D4  0E00               	movlw	0
 10051  0058D6  201E               	addwfc	??_display_fuel_level+3,w,c
 10052  0058D8  6E0C               	movwf	wr8s@addr+3,c
 10053  0058DA  0E2A               	movlw	low STR_23
 10054  0058DC  6E0D               	movwf	wr8s@s,c
 10055  0058DE  0E0F               	movlw	high STR_23
 10056  0058E0  6E0E               	movwf	wr8s@s+1,c
 10057  0058E2  EC67  F033         	call	_wr8s	;wreg free
 10058  0058E6  EC89  F035         	call	_cmd_incrementn
 10059  0058EA  0012               	return	
 10060  0058EC                     __end_of_display_fuel_level:
 10061                           	opt stack 0
 10062                           tblptru	equ	0xFF8
 10063                           tblptrh	equ	0xFF7
 10064                           tblptrl	equ	0xFF6
 10065                           tablat	equ	0xFF5
 10066                           prodh	equ	0xFF4
 10067                           prodl	equ	0xFF3
 10068                           intcon	equ	0xFF2
 10069                           postinc0	equ	0xFEE
 10070                           wreg	equ	0xFE8
 10071                           postdec1	equ	0xFE5
 10072                           plusw1	equ	0xFE3
 10073                           fsr1l	equ	0xFE1
 10074                           plusw2	equ	0xFDB
 10075                           status	equ	0xFD8
 10076                           
 10077 ;; *************** function _display_etc *****************
 10078 ;; Defined at:
 10079 ;;		line 338 in file "display.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;  etc             2   24[COMRAM] int 
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;		None
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  1    wreg      void 
 10086 ;; Registers used:
 10087 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10095 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10096 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10097 ;;Total ram usage:        6 bytes
 10098 ;; Hardware stack levels used:    1
 10099 ;; Hardware stack levels required when called:    7
 10100 ;; This function calls:
 10101 ;;		_cmd
 10102 ;;		_cmd_incrementn
 10103 ;;		_wr16
 10104 ;;		_wr8s
 10105 ;; This function is called by:
 10106 ;;		_display
 10107 ;;		_main
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           	psect	text17
 10112  001F74                     __ptext17:
 10113                           	opt stack 0
 10114  001F74                     _display_etc:
 10115                           	opt stack 23
 10116                           
 10117                           ;display.c: 339:     switch(etc) {
 10118                           
 10119                           ;incstack = 0
 10120  001F74  D366               	goto	l713
 10121  001F76                     
 10122                           ;display.c: 341:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 146);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(w
      +                          r8s(1081344UL +cmd_offset, "Idle"));
 10123  001F76  0E0C               	movlw	12
 10124  001F78  6E11               	movwf	cmd@command,c
 10125  001F7A  0EFF               	movlw	255
 10126  001F7C  6E12               	movwf	cmd@command+1,c
 10127  001F7E  0EFF               	movlw	255
 10128  001F80  6E13               	movwf	cmd@command+2,c
 10129  001F82  0EFF               	movlw	255
 10130  001F84  6E14               	movwf	cmd@command+3,c
 10131  001F86  EC70  F034         	call	_cmd	;wreg free
 10132  001F8A  504F               	movf	_cmd_offset,w,c
 10133  001F8C  6E1B               	movwf	??_display_etc& (0+255),c
 10134  001F8E  5050               	movf	_cmd_offset+1,w,c
 10135  001F90  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10136  001F92  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10137  001F94  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10138  001F96  0E00               	movlw	0
 10139  001F98  241B               	addwf	??_display_etc,w,c
 10140  001F9A  6E04               	movwf	wr16@addr,c
 10141  001F9C  0E80               	movlw	128
 10142  001F9E  201C               	addwfc	??_display_etc+1,w,c
 10143  001FA0  6E05               	movwf	wr16@addr+1,c
 10144  001FA2  0E10               	movlw	16
 10145  001FA4  201D               	addwfc	??_display_etc+2,w,c
 10146  001FA6  6E06               	movwf	wr16@addr+2,c
 10147  001FA8  0E00               	movlw	0
 10148  001FAA  201E               	addwfc	??_display_etc+3,w,c
 10149  001FAC  6E07               	movwf	wr16@addr+3,c
 10150  001FAE  0E00               	movlw	0
 10151  001FB0  6E09               	movwf	wr16@value+1,c
 10152  001FB2  0E8B               	movlw	139
 10153  001FB4  6E08               	movwf	wr16@value,c
 10154  001FB6  EC48  F035         	call	_wr16	;wreg free
 10155  001FBA  0E02               	movlw	2
 10156  001FBC  EC89  F035         	call	_cmd_incrementn
 10157  001FC0  504F               	movf	_cmd_offset,w,c
 10158  001FC2  6E1B               	movwf	??_display_etc& (0+255),c
 10159  001FC4  5050               	movf	_cmd_offset+1,w,c
 10160  001FC6  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10161  001FC8  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10162  001FCA  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10163  001FCC  0E00               	movlw	0
 10164  001FCE  241B               	addwf	??_display_etc,w,c
 10165  001FD0  6E04               	movwf	wr16@addr,c
 10166  001FD2  0E80               	movlw	128
 10167  001FD4  201C               	addwfc	??_display_etc+1,w,c
 10168  001FD6  6E05               	movwf	wr16@addr+1,c
 10169  001FD8  0E10               	movlw	16
 10170  001FDA  201D               	addwfc	??_display_etc+2,w,c
 10171  001FDC  6E06               	movwf	wr16@addr+2,c
 10172  001FDE  0E00               	movlw	0
 10173  001FE0  201E               	addwfc	??_display_etc+3,w,c
 10174  001FE2  6E07               	movwf	wr16@addr+3,c
 10175  001FE4  0E00               	movlw	0
 10176  001FE6  6E09               	movwf	wr16@value+1,c
 10177  001FE8  0E92               	movlw	146
 10178  001FEA  6E08               	movwf	wr16@value,c
 10179  001FEC  EC48  F035         	call	_wr16	;wreg free
 10180  001FF0  0E02               	movlw	2
 10181  001FF2  EC89  F035         	call	_cmd_incrementn
 10182  001FF6  504F               	movf	_cmd_offset,w,c
 10183  001FF8  6E1B               	movwf	??_display_etc& (0+255),c
 10184  001FFA  5050               	movf	_cmd_offset+1,w,c
 10185  001FFC  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10186  001FFE  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10187  002000  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10188  002002  0E00               	movlw	0
 10189  002004  241B               	addwf	??_display_etc,w,c
 10190  002006  6E04               	movwf	wr16@addr,c
 10191  002008  0E80               	movlw	128
 10192  00200A  201C               	addwfc	??_display_etc+1,w,c
 10193  00200C  6E05               	movwf	wr16@addr+1,c
 10194  00200E  0E10               	movlw	16
 10195  002010  201D               	addwfc	??_display_etc+2,w,c
 10196  002012  6E06               	movwf	wr16@addr+2,c
 10197  002014  0E00               	movlw	0
 10198  002016  201E               	addwfc	??_display_etc+3,w,c
 10199  002018  6E07               	movwf	wr16@addr+3,c
 10200  00201A  0E00               	movlw	0
 10201  00201C  6E09               	movwf	wr16@value+1,c
 10202  00201E  0E1B               	movlw	27
 10203  002020  6E08               	movwf	wr16@value,c
 10204  002022  EC48  F035         	call	_wr16	;wreg free
 10205  002026  0E02               	movlw	2
 10206  002028  EC89  F035         	call	_cmd_incrementn
 10207  00202C  504F               	movf	_cmd_offset,w,c
 10208  00202E  6E1B               	movwf	??_display_etc& (0+255),c
 10209  002030  5050               	movf	_cmd_offset+1,w,c
 10210  002032  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10211  002034  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10212  002036  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10213  002038  0E00               	movlw	0
 10214  00203A  241B               	addwf	??_display_etc,w,c
 10215  00203C  6E04               	movwf	wr16@addr,c
 10216  00203E  0E80               	movlw	128
 10217  002040  201C               	addwfc	??_display_etc+1,w,c
 10218  002042  6E05               	movwf	wr16@addr+1,c
 10219  002044  0E10               	movlw	16
 10220  002046  201D               	addwfc	??_display_etc+2,w,c
 10221  002048  6E06               	movwf	wr16@addr+2,c
 10222  00204A  0E00               	movlw	0
 10223  00204C  201E               	addwfc	??_display_etc+3,w,c
 10224  00204E  6E07               	movwf	wr16@addr+3,c
 10225  002050  0E02               	movlw	2
 10226  002052  6E09               	movwf	wr16@value+1,c
 10227  002054  0E00               	movlw	0
 10228  002056  6E08               	movwf	wr16@value,c
 10229  002058  EC48  F035         	call	_wr16	;wreg free
 10230  00205C  0E02               	movlw	2
 10231  00205E  EC89  F035         	call	_cmd_incrementn
 10232  002062  504F               	movf	_cmd_offset,w,c
 10233  002064  6E1B               	movwf	??_display_etc& (0+255),c
 10234  002066  5050               	movf	_cmd_offset+1,w,c
 10235  002068  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10236  00206A  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10237  00206C  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10238  00206E  0E00               	movlw	0
 10239  002070  241B               	addwf	??_display_etc,w,c
 10240  002072  6E09               	movwf	wr8s@addr,c
 10241  002074  0E80               	movlw	128
 10242  002076  201C               	addwfc	??_display_etc+1,w,c
 10243  002078  6E0A               	movwf	wr8s@addr+1,c
 10244  00207A  0E10               	movlw	16
 10245  00207C  201D               	addwfc	??_display_etc+2,w,c
 10246  00207E  6E0B               	movwf	wr8s@addr+2,c
 10247  002080  0E00               	movlw	0
 10248  002082  201E               	addwfc	??_display_etc+3,w,c
 10249  002084  6E0C               	movwf	wr8s@addr+3,c
 10250  002086  0E65               	movlw	low STR_29
 10251  002088  6E0D               	movwf	wr8s@s,c
 10252  00208A  0E0F               	movlw	high STR_29
 10253  00208C  6E0E               	movwf	wr8s@s+1,c
 10254  00208E  EC67  F033         	call	_wr8s	;wreg free
 10255  002092  EC89  F035         	call	_cmd_incrementn
 10256                           
 10257                           ;display.c: 342:         break;
 10258  002096  0012               	return	
 10259  002098                     
 10260                           ;display.c: 344:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 146);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(w
      +                          r8s(1081344UL +cmd_offset, "Anti Lag"));
 10261  002098  0E0C               	movlw	12
 10262  00209A  6E11               	movwf	cmd@command,c
 10263  00209C  0EFF               	movlw	255
 10264  00209E  6E12               	movwf	cmd@command+1,c
 10265  0020A0  0EFF               	movlw	255
 10266  0020A2  6E13               	movwf	cmd@command+2,c
 10267  0020A4  0EFF               	movlw	255
 10268  0020A6  6E14               	movwf	cmd@command+3,c
 10269  0020A8  EC70  F034         	call	_cmd	;wreg free
 10270  0020AC  504F               	movf	_cmd_offset,w,c
 10271  0020AE  6E1B               	movwf	??_display_etc& (0+255),c
 10272  0020B0  5050               	movf	_cmd_offset+1,w,c
 10273  0020B2  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10274  0020B4  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10275  0020B6  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10276  0020B8  0E00               	movlw	0
 10277  0020BA  241B               	addwf	??_display_etc,w,c
 10278  0020BC  6E04               	movwf	wr16@addr,c
 10279  0020BE  0E80               	movlw	128
 10280  0020C0  201C               	addwfc	??_display_etc+1,w,c
 10281  0020C2  6E05               	movwf	wr16@addr+1,c
 10282  0020C4  0E10               	movlw	16
 10283  0020C6  201D               	addwfc	??_display_etc+2,w,c
 10284  0020C8  6E06               	movwf	wr16@addr+2,c
 10285  0020CA  0E00               	movlw	0
 10286  0020CC  201E               	addwfc	??_display_etc+3,w,c
 10287  0020CE  6E07               	movwf	wr16@addr+3,c
 10288  0020D0  0E00               	movlw	0
 10289  0020D2  6E09               	movwf	wr16@value+1,c
 10290  0020D4  0E8B               	movlw	139
 10291  0020D6  6E08               	movwf	wr16@value,c
 10292  0020D8  EC48  F035         	call	_wr16	;wreg free
 10293  0020DC  0E02               	movlw	2
 10294  0020DE  EC89  F035         	call	_cmd_incrementn
 10295  0020E2  504F               	movf	_cmd_offset,w,c
 10296  0020E4  6E1B               	movwf	??_display_etc& (0+255),c
 10297  0020E6  5050               	movf	_cmd_offset+1,w,c
 10298  0020E8  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10299  0020EA  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10300  0020EC  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10301  0020EE  0E00               	movlw	0
 10302  0020F0  241B               	addwf	??_display_etc,w,c
 10303  0020F2  6E04               	movwf	wr16@addr,c
 10304  0020F4  0E80               	movlw	128
 10305  0020F6  201C               	addwfc	??_display_etc+1,w,c
 10306  0020F8  6E05               	movwf	wr16@addr+1,c
 10307  0020FA  0E10               	movlw	16
 10308  0020FC  201D               	addwfc	??_display_etc+2,w,c
 10309  0020FE  6E06               	movwf	wr16@addr+2,c
 10310  002100  0E00               	movlw	0
 10311  002102  201E               	addwfc	??_display_etc+3,w,c
 10312  002104  6E07               	movwf	wr16@addr+3,c
 10313  002106  0E00               	movlw	0
 10314  002108  6E09               	movwf	wr16@value+1,c
 10315  00210A  0E92               	movlw	146
 10316  00210C  6E08               	movwf	wr16@value,c
 10317  00210E  EC48  F035         	call	_wr16	;wreg free
 10318  002112  0E02               	movlw	2
 10319  002114  EC89  F035         	call	_cmd_incrementn
 10320  002118  504F               	movf	_cmd_offset,w,c
 10321  00211A  6E1B               	movwf	??_display_etc& (0+255),c
 10322  00211C  5050               	movf	_cmd_offset+1,w,c
 10323  00211E  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10324  002120  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10325  002122  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10326  002124  0E00               	movlw	0
 10327  002126  241B               	addwf	??_display_etc,w,c
 10328  002128  6E04               	movwf	wr16@addr,c
 10329  00212A  0E80               	movlw	128
 10330  00212C  201C               	addwfc	??_display_etc+1,w,c
 10331  00212E  6E05               	movwf	wr16@addr+1,c
 10332  002130  0E10               	movlw	16
 10333  002132  201D               	addwfc	??_display_etc+2,w,c
 10334  002134  6E06               	movwf	wr16@addr+2,c
 10335  002136  0E00               	movlw	0
 10336  002138  201E               	addwfc	??_display_etc+3,w,c
 10337  00213A  6E07               	movwf	wr16@addr+3,c
 10338  00213C  0E00               	movlw	0
 10339  00213E  6E09               	movwf	wr16@value+1,c
 10340  002140  0E1B               	movlw	27
 10341  002142  6E08               	movwf	wr16@value,c
 10342  002144  EC48  F035         	call	_wr16	;wreg free
 10343  002148  0E02               	movlw	2
 10344  00214A  EC89  F035         	call	_cmd_incrementn
 10345  00214E  504F               	movf	_cmd_offset,w,c
 10346  002150  6E1B               	movwf	??_display_etc& (0+255),c
 10347  002152  5050               	movf	_cmd_offset+1,w,c
 10348  002154  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10349  002156  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10350  002158  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10351  00215A  0E00               	movlw	0
 10352  00215C  241B               	addwf	??_display_etc,w,c
 10353  00215E  6E04               	movwf	wr16@addr,c
 10354  002160  0E80               	movlw	128
 10355  002162  201C               	addwfc	??_display_etc+1,w,c
 10356  002164  6E05               	movwf	wr16@addr+1,c
 10357  002166  0E10               	movlw	16
 10358  002168  201D               	addwfc	??_display_etc+2,w,c
 10359  00216A  6E06               	movwf	wr16@addr+2,c
 10360  00216C  0E00               	movlw	0
 10361  00216E  201E               	addwfc	??_display_etc+3,w,c
 10362  002170  6E07               	movwf	wr16@addr+3,c
 10363  002172  0E02               	movlw	2
 10364  002174  6E09               	movwf	wr16@value+1,c
 10365  002176  0E00               	movlw	0
 10366  002178  6E08               	movwf	wr16@value,c
 10367  00217A  EC48  F035         	call	_wr16	;wreg free
 10368  00217E  0E02               	movlw	2
 10369  002180  EC89  F035         	call	_cmd_incrementn
 10370  002184  504F               	movf	_cmd_offset,w,c
 10371  002186  6E1B               	movwf	??_display_etc& (0+255),c
 10372  002188  5050               	movf	_cmd_offset+1,w,c
 10373  00218A  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10374  00218C  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10375  00218E  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10376  002190  0E00               	movlw	0
 10377  002192  241B               	addwf	??_display_etc,w,c
 10378  002194  6E09               	movwf	wr8s@addr,c
 10379  002196  0E80               	movlw	128
 10380  002198  201C               	addwfc	??_display_etc+1,w,c
 10381  00219A  6E0A               	movwf	wr8s@addr+1,c
 10382  00219C  0E10               	movlw	16
 10383  00219E  201D               	addwfc	??_display_etc+2,w,c
 10384  0021A0  6E0B               	movwf	wr8s@addr+2,c
 10385  0021A2  0E00               	movlw	0
 10386  0021A4  201E               	addwfc	??_display_etc+3,w,c
 10387  0021A6  6E0C               	movwf	wr8s@addr+3,c
 10388  0021A8  0E21               	movlw	low STR_30
 10389  0021AA  6E0D               	movwf	wr8s@s,c
 10390  0021AC  0E0F               	movlw	high STR_30
 10391  0021AE  6E0E               	movwf	wr8s@s+1,c
 10392  0021B0  EC67  F033         	call	_wr8s	;wreg free
 10393  0021B4  EC89  F035         	call	_cmd_incrementn
 10394                           
 10395                           ;display.c: 345:         break;
 10396  0021B8  0012               	return	
 10397  0021BA                     
 10398                           ;display.c: 347:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 146);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(w
      +                          r8s(1081344UL +cmd_offset, "Limit"));
 10399  0021BA  0E0C               	movlw	12
 10400  0021BC  6E11               	movwf	cmd@command,c
 10401  0021BE  0EFF               	movlw	255
 10402  0021C0  6E12               	movwf	cmd@command+1,c
 10403  0021C2  0EFF               	movlw	255
 10404  0021C4  6E13               	movwf	cmd@command+2,c
 10405  0021C6  0EFF               	movlw	255
 10406  0021C8  6E14               	movwf	cmd@command+3,c
 10407  0021CA  EC70  F034         	call	_cmd	;wreg free
 10408  0021CE  504F               	movf	_cmd_offset,w,c
 10409  0021D0  6E1B               	movwf	??_display_etc& (0+255),c
 10410  0021D2  5050               	movf	_cmd_offset+1,w,c
 10411  0021D4  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10412  0021D6  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10413  0021D8  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10414  0021DA  0E00               	movlw	0
 10415  0021DC  241B               	addwf	??_display_etc,w,c
 10416  0021DE  6E04               	movwf	wr16@addr,c
 10417  0021E0  0E80               	movlw	128
 10418  0021E2  201C               	addwfc	??_display_etc+1,w,c
 10419  0021E4  6E05               	movwf	wr16@addr+1,c
 10420  0021E6  0E10               	movlw	16
 10421  0021E8  201D               	addwfc	??_display_etc+2,w,c
 10422  0021EA  6E06               	movwf	wr16@addr+2,c
 10423  0021EC  0E00               	movlw	0
 10424  0021EE  201E               	addwfc	??_display_etc+3,w,c
 10425  0021F0  6E07               	movwf	wr16@addr+3,c
 10426  0021F2  0E00               	movlw	0
 10427  0021F4  6E09               	movwf	wr16@value+1,c
 10428  0021F6  0E8B               	movlw	139
 10429  0021F8  6E08               	movwf	wr16@value,c
 10430  0021FA  EC48  F035         	call	_wr16	;wreg free
 10431  0021FE  0E02               	movlw	2
 10432  002200  EC89  F035         	call	_cmd_incrementn
 10433  002204  504F               	movf	_cmd_offset,w,c
 10434  002206  6E1B               	movwf	??_display_etc& (0+255),c
 10435  002208  5050               	movf	_cmd_offset+1,w,c
 10436  00220A  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10437  00220C  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10438  00220E  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10439  002210  0E00               	movlw	0
 10440  002212  241B               	addwf	??_display_etc,w,c
 10441  002214  6E04               	movwf	wr16@addr,c
 10442  002216  0E80               	movlw	128
 10443  002218  201C               	addwfc	??_display_etc+1,w,c
 10444  00221A  6E05               	movwf	wr16@addr+1,c
 10445  00221C  0E10               	movlw	16
 10446  00221E  201D               	addwfc	??_display_etc+2,w,c
 10447  002220  6E06               	movwf	wr16@addr+2,c
 10448  002222  0E00               	movlw	0
 10449  002224  201E               	addwfc	??_display_etc+3,w,c
 10450  002226  6E07               	movwf	wr16@addr+3,c
 10451  002228  0E00               	movlw	0
 10452  00222A  6E09               	movwf	wr16@value+1,c
 10453  00222C  0E92               	movlw	146
 10454  00222E  6E08               	movwf	wr16@value,c
 10455  002230  EC48  F035         	call	_wr16	;wreg free
 10456  002234  0E02               	movlw	2
 10457  002236  EC89  F035         	call	_cmd_incrementn
 10458  00223A  504F               	movf	_cmd_offset,w,c
 10459  00223C  6E1B               	movwf	??_display_etc& (0+255),c
 10460  00223E  5050               	movf	_cmd_offset+1,w,c
 10461  002240  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10462  002242  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10463  002244  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10464  002246  0E00               	movlw	0
 10465  002248  241B               	addwf	??_display_etc,w,c
 10466  00224A  6E04               	movwf	wr16@addr,c
 10467  00224C  0E80               	movlw	128
 10468  00224E  201C               	addwfc	??_display_etc+1,w,c
 10469  002250  6E05               	movwf	wr16@addr+1,c
 10470  002252  0E10               	movlw	16
 10471  002254  201D               	addwfc	??_display_etc+2,w,c
 10472  002256  6E06               	movwf	wr16@addr+2,c
 10473  002258  0E00               	movlw	0
 10474  00225A  201E               	addwfc	??_display_etc+3,w,c
 10475  00225C  6E07               	movwf	wr16@addr+3,c
 10476  00225E  0E00               	movlw	0
 10477  002260  6E09               	movwf	wr16@value+1,c
 10478  002262  0E1B               	movlw	27
 10479  002264  6E08               	movwf	wr16@value,c
 10480  002266  EC48  F035         	call	_wr16	;wreg free
 10481  00226A  0E02               	movlw	2
 10482  00226C  EC89  F035         	call	_cmd_incrementn
 10483  002270  504F               	movf	_cmd_offset,w,c
 10484  002272  6E1B               	movwf	??_display_etc& (0+255),c
 10485  002274  5050               	movf	_cmd_offset+1,w,c
 10486  002276  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10487  002278  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10488  00227A  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10489  00227C  0E00               	movlw	0
 10490  00227E  241B               	addwf	??_display_etc,w,c
 10491  002280  6E04               	movwf	wr16@addr,c
 10492  002282  0E80               	movlw	128
 10493  002284  201C               	addwfc	??_display_etc+1,w,c
 10494  002286  6E05               	movwf	wr16@addr+1,c
 10495  002288  0E10               	movlw	16
 10496  00228A  201D               	addwfc	??_display_etc+2,w,c
 10497  00228C  6E06               	movwf	wr16@addr+2,c
 10498  00228E  0E00               	movlw	0
 10499  002290  201E               	addwfc	??_display_etc+3,w,c
 10500  002292  6E07               	movwf	wr16@addr+3,c
 10501  002294  0E02               	movlw	2
 10502  002296  6E09               	movwf	wr16@value+1,c
 10503  002298  0E00               	movlw	0
 10504  00229A  6E08               	movwf	wr16@value,c
 10505  00229C  EC48  F035         	call	_wr16	;wreg free
 10506  0022A0  0E02               	movlw	2
 10507  0022A2  EC89  F035         	call	_cmd_incrementn
 10508  0022A6  504F               	movf	_cmd_offset,w,c
 10509  0022A8  6E1B               	movwf	??_display_etc& (0+255),c
 10510  0022AA  5050               	movf	_cmd_offset+1,w,c
 10511  0022AC  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10512  0022AE  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10513  0022B0  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10514  0022B2  0E00               	movlw	0
 10515  0022B4  241B               	addwf	??_display_etc,w,c
 10516  0022B6  6E09               	movwf	wr8s@addr,c
 10517  0022B8  0E80               	movlw	128
 10518  0022BA  201C               	addwfc	??_display_etc+1,w,c
 10519  0022BC  6E0A               	movwf	wr8s@addr+1,c
 10520  0022BE  0E10               	movlw	16
 10521  0022C0  201D               	addwfc	??_display_etc+2,w,c
 10522  0022C2  6E0B               	movwf	wr8s@addr+2,c
 10523  0022C4  0E00               	movlw	0
 10524  0022C6  201E               	addwfc	??_display_etc+3,w,c
 10525  0022C8  6E0C               	movwf	wr8s@addr+3,c
 10526  0022CA  0E5F               	movlw	low STR_31
 10527  0022CC  6E0D               	movwf	wr8s@s,c
 10528  0022CE  0E0F               	movlw	high STR_31
 10529  0022D0  6E0E               	movwf	wr8s@s+1,c
 10530  0022D2  EC67  F033         	call	_wr8s	;wreg free
 10531  0022D6  EC89  F035         	call	_cmd_incrementn
 10532                           
 10533                           ;display.c: 348:         break;
 10534  0022DA  0012               	return	
 10535  0022DC                     
 10536                           ;display.c: 350:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 146);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(w
      +                          r8s(1081344UL +cmd_offset, "Gear Shift"));
 10537  0022DC  0E0C               	movlw	12
 10538  0022DE  6E11               	movwf	cmd@command,c
 10539  0022E0  0EFF               	movlw	255
 10540  0022E2  6E12               	movwf	cmd@command+1,c
 10541  0022E4  0EFF               	movlw	255
 10542  0022E6  6E13               	movwf	cmd@command+2,c
 10543  0022E8  0EFF               	movlw	255
 10544  0022EA  6E14               	movwf	cmd@command+3,c
 10545  0022EC  EC70  F034         	call	_cmd	;wreg free
 10546  0022F0  504F               	movf	_cmd_offset,w,c
 10547  0022F2  6E1B               	movwf	??_display_etc& (0+255),c
 10548  0022F4  5050               	movf	_cmd_offset+1,w,c
 10549  0022F6  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10550  0022F8  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10551  0022FA  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10552  0022FC  0E00               	movlw	0
 10553  0022FE  241B               	addwf	??_display_etc,w,c
 10554  002300  6E04               	movwf	wr16@addr,c
 10555  002302  0E80               	movlw	128
 10556  002304  201C               	addwfc	??_display_etc+1,w,c
 10557  002306  6E05               	movwf	wr16@addr+1,c
 10558  002308  0E10               	movlw	16
 10559  00230A  201D               	addwfc	??_display_etc+2,w,c
 10560  00230C  6E06               	movwf	wr16@addr+2,c
 10561  00230E  0E00               	movlw	0
 10562  002310  201E               	addwfc	??_display_etc+3,w,c
 10563  002312  6E07               	movwf	wr16@addr+3,c
 10564  002314  0E00               	movlw	0
 10565  002316  6E09               	movwf	wr16@value+1,c
 10566  002318  0E8B               	movlw	139
 10567  00231A  6E08               	movwf	wr16@value,c
 10568  00231C  EC48  F035         	call	_wr16	;wreg free
 10569  002320  0E02               	movlw	2
 10570  002322  EC89  F035         	call	_cmd_incrementn
 10571  002326  504F               	movf	_cmd_offset,w,c
 10572  002328  6E1B               	movwf	??_display_etc& (0+255),c
 10573  00232A  5050               	movf	_cmd_offset+1,w,c
 10574  00232C  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10575  00232E  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10576  002330  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10577  002332  0E00               	movlw	0
 10578  002334  241B               	addwf	??_display_etc,w,c
 10579  002336  6E04               	movwf	wr16@addr,c
 10580  002338  0E80               	movlw	128
 10581  00233A  201C               	addwfc	??_display_etc+1,w,c
 10582  00233C  6E05               	movwf	wr16@addr+1,c
 10583  00233E  0E10               	movlw	16
 10584  002340  201D               	addwfc	??_display_etc+2,w,c
 10585  002342  6E06               	movwf	wr16@addr+2,c
 10586  002344  0E00               	movlw	0
 10587  002346  201E               	addwfc	??_display_etc+3,w,c
 10588  002348  6E07               	movwf	wr16@addr+3,c
 10589  00234A  0E00               	movlw	0
 10590  00234C  6E09               	movwf	wr16@value+1,c
 10591  00234E  0E92               	movlw	146
 10592  002350  6E08               	movwf	wr16@value,c
 10593  002352  EC48  F035         	call	_wr16	;wreg free
 10594  002356  0E02               	movlw	2
 10595  002358  EC89  F035         	call	_cmd_incrementn
 10596  00235C  504F               	movf	_cmd_offset,w,c
 10597  00235E  6E1B               	movwf	??_display_etc& (0+255),c
 10598  002360  5050               	movf	_cmd_offset+1,w,c
 10599  002362  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10600  002364  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10601  002366  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10602  002368  0E00               	movlw	0
 10603  00236A  241B               	addwf	??_display_etc,w,c
 10604  00236C  6E04               	movwf	wr16@addr,c
 10605  00236E  0E80               	movlw	128
 10606  002370  201C               	addwfc	??_display_etc+1,w,c
 10607  002372  6E05               	movwf	wr16@addr+1,c
 10608  002374  0E10               	movlw	16
 10609  002376  201D               	addwfc	??_display_etc+2,w,c
 10610  002378  6E06               	movwf	wr16@addr+2,c
 10611  00237A  0E00               	movlw	0
 10612  00237C  201E               	addwfc	??_display_etc+3,w,c
 10613  00237E  6E07               	movwf	wr16@addr+3,c
 10614  002380  0E00               	movlw	0
 10615  002382  6E09               	movwf	wr16@value+1,c
 10616  002384  0E1B               	movlw	27
 10617  002386  6E08               	movwf	wr16@value,c
 10618  002388  EC48  F035         	call	_wr16	;wreg free
 10619  00238C  0E02               	movlw	2
 10620  00238E  EC89  F035         	call	_cmd_incrementn
 10621  002392  504F               	movf	_cmd_offset,w,c
 10622  002394  6E1B               	movwf	??_display_etc& (0+255),c
 10623  002396  5050               	movf	_cmd_offset+1,w,c
 10624  002398  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10625  00239A  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10626  00239C  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10627  00239E  0E00               	movlw	0
 10628  0023A0  241B               	addwf	??_display_etc,w,c
 10629  0023A2  6E04               	movwf	wr16@addr,c
 10630  0023A4  0E80               	movlw	128
 10631  0023A6  201C               	addwfc	??_display_etc+1,w,c
 10632  0023A8  6E05               	movwf	wr16@addr+1,c
 10633  0023AA  0E10               	movlw	16
 10634  0023AC  201D               	addwfc	??_display_etc+2,w,c
 10635  0023AE  6E06               	movwf	wr16@addr+2,c
 10636  0023B0  0E00               	movlw	0
 10637  0023B2  201E               	addwfc	??_display_etc+3,w,c
 10638  0023B4  6E07               	movwf	wr16@addr+3,c
 10639  0023B6  0E02               	movlw	2
 10640  0023B8  6E09               	movwf	wr16@value+1,c
 10641  0023BA  0E00               	movlw	0
 10642  0023BC  6E08               	movwf	wr16@value,c
 10643  0023BE  EC48  F035         	call	_wr16	;wreg free
 10644  0023C2  0E02               	movlw	2
 10645  0023C4  EC89  F035         	call	_cmd_incrementn
 10646  0023C8  504F               	movf	_cmd_offset,w,c
 10647  0023CA  6E1B               	movwf	??_display_etc& (0+255),c
 10648  0023CC  5050               	movf	_cmd_offset+1,w,c
 10649  0023CE  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10650  0023D0  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10651  0023D2  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10652  0023D4  0E00               	movlw	0
 10653  0023D6  241B               	addwf	??_display_etc,w,c
 10654  0023D8  6E09               	movwf	wr8s@addr,c
 10655  0023DA  0E80               	movlw	128
 10656  0023DC  201C               	addwfc	??_display_etc+1,w,c
 10657  0023DE  6E0A               	movwf	wr8s@addr+1,c
 10658  0023E0  0E10               	movlw	16
 10659  0023E2  201D               	addwfc	??_display_etc+2,w,c
 10660  0023E4  6E0B               	movwf	wr8s@addr+2,c
 10661  0023E6  0E00               	movlw	0
 10662  0023E8  201E               	addwfc	??_display_etc+3,w,c
 10663  0023EA  6E0C               	movwf	wr8s@addr+3,c
 10664  0023EC  0E0C               	movlw	low STR_32
 10665  0023EE  6E0D               	movwf	wr8s@s,c
 10666  0023F0  0E0F               	movlw	high STR_32
 10667  0023F2  6E0E               	movwf	wr8s@s+1,c
 10668  0023F4  EC67  F033         	call	_wr8s	;wreg free
 10669  0023F8  EC89  F035         	call	_cmd_incrementn
 10670                           
 10671                           ;display.c: 351:         break;
 10672  0023FC  0012               	return	
 10673  0023FE                     
 10674                           ;display.c: 353:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 146);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(w
      +                          r8s(1081344UL +cmd_offset, "Test"));
 10675  0023FE  0E0C               	movlw	12
 10676  002400  6E11               	movwf	cmd@command,c
 10677  002402  0EFF               	movlw	255
 10678  002404  6E12               	movwf	cmd@command+1,c
 10679  002406  0EFF               	movlw	255
 10680  002408  6E13               	movwf	cmd@command+2,c
 10681  00240A  0EFF               	movlw	255
 10682  00240C  6E14               	movwf	cmd@command+3,c
 10683  00240E  EC70  F034         	call	_cmd	;wreg free
 10684  002412  504F               	movf	_cmd_offset,w,c
 10685  002414  6E1B               	movwf	??_display_etc& (0+255),c
 10686  002416  5050               	movf	_cmd_offset+1,w,c
 10687  002418  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10688  00241A  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10689  00241C  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10690  00241E  0E00               	movlw	0
 10691  002420  241B               	addwf	??_display_etc,w,c
 10692  002422  6E04               	movwf	wr16@addr,c
 10693  002424  0E80               	movlw	128
 10694  002426  201C               	addwfc	??_display_etc+1,w,c
 10695  002428  6E05               	movwf	wr16@addr+1,c
 10696  00242A  0E10               	movlw	16
 10697  00242C  201D               	addwfc	??_display_etc+2,w,c
 10698  00242E  6E06               	movwf	wr16@addr+2,c
 10699  002430  0E00               	movlw	0
 10700  002432  201E               	addwfc	??_display_etc+3,w,c
 10701  002434  6E07               	movwf	wr16@addr+3,c
 10702  002436  0E00               	movlw	0
 10703  002438  6E09               	movwf	wr16@value+1,c
 10704  00243A  0E8B               	movlw	139
 10705  00243C  6E08               	movwf	wr16@value,c
 10706  00243E  EC48  F035         	call	_wr16	;wreg free
 10707  002442  0E02               	movlw	2
 10708  002444  EC89  F035         	call	_cmd_incrementn
 10709  002448  504F               	movf	_cmd_offset,w,c
 10710  00244A  6E1B               	movwf	??_display_etc& (0+255),c
 10711  00244C  5050               	movf	_cmd_offset+1,w,c
 10712  00244E  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10713  002450  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10714  002452  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10715  002454  0E00               	movlw	0
 10716  002456  241B               	addwf	??_display_etc,w,c
 10717  002458  6E04               	movwf	wr16@addr,c
 10718  00245A  0E80               	movlw	128
 10719  00245C  201C               	addwfc	??_display_etc+1,w,c
 10720  00245E  6E05               	movwf	wr16@addr+1,c
 10721  002460  0E10               	movlw	16
 10722  002462  201D               	addwfc	??_display_etc+2,w,c
 10723  002464  6E06               	movwf	wr16@addr+2,c
 10724  002466  0E00               	movlw	0
 10725  002468  201E               	addwfc	??_display_etc+3,w,c
 10726  00246A  6E07               	movwf	wr16@addr+3,c
 10727  00246C  0E00               	movlw	0
 10728  00246E  6E09               	movwf	wr16@value+1,c
 10729  002470  0E92               	movlw	146
 10730  002472  6E08               	movwf	wr16@value,c
 10731  002474  EC48  F035         	call	_wr16	;wreg free
 10732  002478  0E02               	movlw	2
 10733  00247A  EC89  F035         	call	_cmd_incrementn
 10734  00247E  504F               	movf	_cmd_offset,w,c
 10735  002480  6E1B               	movwf	??_display_etc& (0+255),c
 10736  002482  5050               	movf	_cmd_offset+1,w,c
 10737  002484  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10738  002486  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10739  002488  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10740  00248A  0E00               	movlw	0
 10741  00248C  241B               	addwf	??_display_etc,w,c
 10742  00248E  6E04               	movwf	wr16@addr,c
 10743  002490  0E80               	movlw	128
 10744  002492  201C               	addwfc	??_display_etc+1,w,c
 10745  002494  6E05               	movwf	wr16@addr+1,c
 10746  002496  0E10               	movlw	16
 10747  002498  201D               	addwfc	??_display_etc+2,w,c
 10748  00249A  6E06               	movwf	wr16@addr+2,c
 10749  00249C  0E00               	movlw	0
 10750  00249E  201E               	addwfc	??_display_etc+3,w,c
 10751  0024A0  6E07               	movwf	wr16@addr+3,c
 10752  0024A2  0E00               	movlw	0
 10753  0024A4  6E09               	movwf	wr16@value+1,c
 10754  0024A6  0E1B               	movlw	27
 10755  0024A8  6E08               	movwf	wr16@value,c
 10756  0024AA  EC48  F035         	call	_wr16	;wreg free
 10757  0024AE  0E02               	movlw	2
 10758  0024B0  EC89  F035         	call	_cmd_incrementn
 10759  0024B4  504F               	movf	_cmd_offset,w,c
 10760  0024B6  6E1B               	movwf	??_display_etc& (0+255),c
 10761  0024B8  5050               	movf	_cmd_offset+1,w,c
 10762  0024BA  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10763  0024BC  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10764  0024BE  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10765  0024C0  0E00               	movlw	0
 10766  0024C2  241B               	addwf	??_display_etc,w,c
 10767  0024C4  6E04               	movwf	wr16@addr,c
 10768  0024C6  0E80               	movlw	128
 10769  0024C8  201C               	addwfc	??_display_etc+1,w,c
 10770  0024CA  6E05               	movwf	wr16@addr+1,c
 10771  0024CC  0E10               	movlw	16
 10772  0024CE  201D               	addwfc	??_display_etc+2,w,c
 10773  0024D0  6E06               	movwf	wr16@addr+2,c
 10774  0024D2  0E00               	movlw	0
 10775  0024D4  201E               	addwfc	??_display_etc+3,w,c
 10776  0024D6  6E07               	movwf	wr16@addr+3,c
 10777  0024D8  0E02               	movlw	2
 10778  0024DA  6E09               	movwf	wr16@value+1,c
 10779  0024DC  0E00               	movlw	0
 10780  0024DE  6E08               	movwf	wr16@value,c
 10781  0024E0  EC48  F035         	call	_wr16	;wreg free
 10782  0024E4  0E02               	movlw	2
 10783  0024E6  EC89  F035         	call	_cmd_incrementn
 10784  0024EA  504F               	movf	_cmd_offset,w,c
 10785  0024EC  6E1B               	movwf	??_display_etc& (0+255),c
 10786  0024EE  5050               	movf	_cmd_offset+1,w,c
 10787  0024F0  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10788  0024F2  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10789  0024F4  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10790  0024F6  0E00               	movlw	0
 10791  0024F8  241B               	addwf	??_display_etc,w,c
 10792  0024FA  6E09               	movwf	wr8s@addr,c
 10793  0024FC  0E80               	movlw	128
 10794  0024FE  201C               	addwfc	??_display_etc+1,w,c
 10795  002500  6E0A               	movwf	wr8s@addr+1,c
 10796  002502  0E10               	movlw	16
 10797  002504  201D               	addwfc	??_display_etc+2,w,c
 10798  002506  6E0B               	movwf	wr8s@addr+2,c
 10799  002508  0E00               	movlw	0
 10800  00250A  201E               	addwfc	??_display_etc+3,w,c
 10801  00250C  6E0C               	movwf	wr8s@addr+3,c
 10802  00250E  0E79               	movlw	low STR_33
 10803  002510  6E0D               	movwf	wr8s@s,c
 10804  002512  0E0F               	movlw	high STR_33
 10805  002514  6E0E               	movwf	wr8s@s+1,c
 10806  002516  EC67  F033         	call	_wr8s	;wreg free
 10807  00251A  EC89  F035         	call	_cmd_incrementn
 10808                           
 10809                           ;display.c: 354:         break;
 10810  00251E  0012               	return	
 10811  002520                     
 10812                           ;display.c: 356:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 146);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(w
      +                          r8s(1081344UL +cmd_offset, "Normal"));
 10813  002520  0E0C               	movlw	12
 10814  002522  6E11               	movwf	cmd@command,c
 10815  002524  0EFF               	movlw	255
 10816  002526  6E12               	movwf	cmd@command+1,c
 10817  002528  0EFF               	movlw	255
 10818  00252A  6E13               	movwf	cmd@command+2,c
 10819  00252C  0EFF               	movlw	255
 10820  00252E  6E14               	movwf	cmd@command+3,c
 10821  002530  EC70  F034         	call	_cmd	;wreg free
 10822  002534  504F               	movf	_cmd_offset,w,c
 10823  002536  6E1B               	movwf	??_display_etc& (0+255),c
 10824  002538  5050               	movf	_cmd_offset+1,w,c
 10825  00253A  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10826  00253C  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10827  00253E  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10828  002540  0E00               	movlw	0
 10829  002542  241B               	addwf	??_display_etc,w,c
 10830  002544  6E04               	movwf	wr16@addr,c
 10831  002546  0E80               	movlw	128
 10832  002548  201C               	addwfc	??_display_etc+1,w,c
 10833  00254A  6E05               	movwf	wr16@addr+1,c
 10834  00254C  0E10               	movlw	16
 10835  00254E  201D               	addwfc	??_display_etc+2,w,c
 10836  002550  6E06               	movwf	wr16@addr+2,c
 10837  002552  0E00               	movlw	0
 10838  002554  201E               	addwfc	??_display_etc+3,w,c
 10839  002556  6E07               	movwf	wr16@addr+3,c
 10840  002558  0E00               	movlw	0
 10841  00255A  6E09               	movwf	wr16@value+1,c
 10842  00255C  0E8B               	movlw	139
 10843  00255E  6E08               	movwf	wr16@value,c
 10844  002560  EC48  F035         	call	_wr16	;wreg free
 10845  002564  0E02               	movlw	2
 10846  002566  EC89  F035         	call	_cmd_incrementn
 10847  00256A  504F               	movf	_cmd_offset,w,c
 10848  00256C  6E1B               	movwf	??_display_etc& (0+255),c
 10849  00256E  5050               	movf	_cmd_offset+1,w,c
 10850  002570  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10851  002572  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10852  002574  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10853  002576  0E00               	movlw	0
 10854  002578  241B               	addwf	??_display_etc,w,c
 10855  00257A  6E04               	movwf	wr16@addr,c
 10856  00257C  0E80               	movlw	128
 10857  00257E  201C               	addwfc	??_display_etc+1,w,c
 10858  002580  6E05               	movwf	wr16@addr+1,c
 10859  002582  0E10               	movlw	16
 10860  002584  201D               	addwfc	??_display_etc+2,w,c
 10861  002586  6E06               	movwf	wr16@addr+2,c
 10862  002588  0E00               	movlw	0
 10863  00258A  201E               	addwfc	??_display_etc+3,w,c
 10864  00258C  6E07               	movwf	wr16@addr+3,c
 10865  00258E  0E00               	movlw	0
 10866  002590  6E09               	movwf	wr16@value+1,c
 10867  002592  0E92               	movlw	146
 10868  002594  6E08               	movwf	wr16@value,c
 10869  002596  EC48  F035         	call	_wr16	;wreg free
 10870  00259A  0E02               	movlw	2
 10871  00259C  EC89  F035         	call	_cmd_incrementn
 10872  0025A0  504F               	movf	_cmd_offset,w,c
 10873  0025A2  6E1B               	movwf	??_display_etc& (0+255),c
 10874  0025A4  5050               	movf	_cmd_offset+1,w,c
 10875  0025A6  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10876  0025A8  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10877  0025AA  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10878  0025AC  0E00               	movlw	0
 10879  0025AE  241B               	addwf	??_display_etc,w,c
 10880  0025B0  6E04               	movwf	wr16@addr,c
 10881  0025B2  0E80               	movlw	128
 10882  0025B4  201C               	addwfc	??_display_etc+1,w,c
 10883  0025B6  6E05               	movwf	wr16@addr+1,c
 10884  0025B8  0E10               	movlw	16
 10885  0025BA  201D               	addwfc	??_display_etc+2,w,c
 10886  0025BC  6E06               	movwf	wr16@addr+2,c
 10887  0025BE  0E00               	movlw	0
 10888  0025C0  201E               	addwfc	??_display_etc+3,w,c
 10889  0025C2  6E07               	movwf	wr16@addr+3,c
 10890  0025C4  0E00               	movlw	0
 10891  0025C6  6E09               	movwf	wr16@value+1,c
 10892  0025C8  0E1B               	movlw	27
 10893  0025CA  6E08               	movwf	wr16@value,c
 10894  0025CC  EC48  F035         	call	_wr16	;wreg free
 10895  0025D0  0E02               	movlw	2
 10896  0025D2  EC89  F035         	call	_cmd_incrementn
 10897  0025D6  504F               	movf	_cmd_offset,w,c
 10898  0025D8  6E1B               	movwf	??_display_etc& (0+255),c
 10899  0025DA  5050               	movf	_cmd_offset+1,w,c
 10900  0025DC  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10901  0025DE  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10902  0025E0  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10903  0025E2  0E00               	movlw	0
 10904  0025E4  241B               	addwf	??_display_etc,w,c
 10905  0025E6  6E04               	movwf	wr16@addr,c
 10906  0025E8  0E80               	movlw	128
 10907  0025EA  201C               	addwfc	??_display_etc+1,w,c
 10908  0025EC  6E05               	movwf	wr16@addr+1,c
 10909  0025EE  0E10               	movlw	16
 10910  0025F0  201D               	addwfc	??_display_etc+2,w,c
 10911  0025F2  6E06               	movwf	wr16@addr+2,c
 10912  0025F4  0E00               	movlw	0
 10913  0025F6  201E               	addwfc	??_display_etc+3,w,c
 10914  0025F8  6E07               	movwf	wr16@addr+3,c
 10915  0025FA  0E02               	movlw	2
 10916  0025FC  6E09               	movwf	wr16@value+1,c
 10917  0025FE  0E00               	movlw	0
 10918  002600  6E08               	movwf	wr16@value,c
 10919  002602  EC48  F035         	call	_wr16	;wreg free
 10920  002606  0E02               	movlw	2
 10921  002608  EC89  F035         	call	_cmd_incrementn
 10922  00260C  504F               	movf	_cmd_offset,w,c
 10923  00260E  6E1B               	movwf	??_display_etc& (0+255),c
 10924  002610  5050               	movf	_cmd_offset+1,w,c
 10925  002612  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10926  002614  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10927  002616  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10928  002618  0E00               	movlw	0
 10929  00261A  241B               	addwf	??_display_etc,w,c
 10930  00261C  6E09               	movwf	wr8s@addr,c
 10931  00261E  0E80               	movlw	128
 10932  002620  201C               	addwfc	??_display_etc+1,w,c
 10933  002622  6E0A               	movwf	wr8s@addr+1,c
 10934  002624  0E10               	movlw	16
 10935  002626  201D               	addwfc	??_display_etc+2,w,c
 10936  002628  6E0B               	movwf	wr8s@addr+2,c
 10937  00262A  0E00               	movlw	0
 10938  00262C  201E               	addwfc	??_display_etc+3,w,c
 10939  00262E  6E0C               	movwf	wr8s@addr+3,c
 10940  002630  0E40               	movlw	low STR_22
 10941  002632  6E0D               	movwf	wr8s@s,c
 10942  002634  0E0F               	movlw	high STR_22
 10943  002636  6E0E               	movwf	wr8s@s+1,c
 10944  002638  EC67  F033         	call	_wr8s	;wreg free
 10945  00263C  EC89  F035         	call	_cmd_incrementn
 10946                           
 10947                           ;display.c: 358:     }
 10948                           
 10949                           ;display.c: 357:         break;
 10950  002640  0012               	return	
 10951  002642                     l713:
 10952  002642  C019  F01B         	movff	display_etc@etc,??_display_etc
 10953  002646  C01A  F01C         	movff	display_etc@etc+1,??_display_etc+1
 10954                           
 10955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10956                           ; Switch size 1, requested type "space"
 10957                           ; Number of cases is 1, Range of values is 0 to 0
 10958                           ; switch strategies available:
 10959                           ; Name         Instructions Cycles
 10960                           ; simple_byte            4     3 (average)
 10961                           ;	Chosen strategy is simple_byte
 10962  00264A  501C               	movf	??_display_etc+1,w,c
 10963  00264C  0A00               	xorlw	0	; case 0
 10964  00264E  A4D8               	btfss	status,2,c
 10965  002650  D767               	goto	l720
 10966                           
 10967                           ; Switch size 1, requested type "space"
 10968                           ; Number of cases is 5, Range of values is 1 to 5
 10969                           ; switch strategies available:
 10970                           ; Name         Instructions Cycles
 10971                           ; simple_byte           16     9 (average)
 10972                           ;	Chosen strategy is simple_byte
 10973  002652  501B               	movf	??_display_etc,w,c
 10974  002654  0A01               	xorlw	1	; case 1
 10975  002656  B4D8               	btfsc	status,2,c
 10976  002658  D48E               	goto	l714
 10977  00265A  0A03               	xorlw	3	; case 2
 10978  00265C  B4D8               	btfsc	status,2,c
 10979  00265E  D51C               	goto	l716
 10980  002660  0A01               	xorlw	1	; case 3
 10981  002662  B4D8               	btfsc	status,2,c
 10982  002664  D5AA               	goto	l717
 10983  002666  0A07               	xorlw	7	; case 4
 10984  002668  B4D8               	btfsc	status,2,c
 10985  00266A  D638               	goto	l718
 10986  00266C  0A01               	xorlw	1	; case 5
 10987  00266E  B4D8               	btfsc	status,2,c
 10988  002670  D6C6               	goto	l719
 10989  002672  D756               	goto	l720
 10990  002674                     __end_of_display_etc:
 10991                           	opt stack 0
 10992                           tblptru	equ	0xFF8
 10993                           tblptrh	equ	0xFF7
 10994                           tblptrl	equ	0xFF6
 10995                           tablat	equ	0xFF5
 10996                           prodh	equ	0xFF4
 10997                           prodl	equ	0xFF3
 10998                           intcon	equ	0xFF2
 10999                           postinc0	equ	0xFEE
 11000                           wreg	equ	0xFE8
 11001                           postdec1	equ	0xFE5
 11002                           plusw1	equ	0xFE3
 11003                           fsr1l	equ	0xFE1
 11004                           plusw2	equ	0xFDB
 11005                           status	equ	0xFD8
 11006                           
 11007 ;; *************** function _display_end *****************
 11008 ;; Defined at:
 11009 ;;		line 27 in file "display.c"
 11010 ;; Parameters:    Size  Location     Type
 11011 ;;		None
 11012 ;; Auto vars:     Size  Location     Type
 11013 ;;		None
 11014 ;; Return value:  Size  Location     Type
 11015 ;;                  1    wreg      void 
 11016 ;; Registers used:
 11017 ;;		wreg, status,2, status,0, cstack
 11018 ;; Tracked objects:
 11019 ;;		On entry : 0/0
 11020 ;;		On exit  : 0/0
 11021 ;;		Unchanged: 0/0
 11022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11027 ;;Total ram usage:        0 bytes
 11028 ;; Hardware stack levels used:    1
 11029 ;; Hardware stack levels required when called:    7
 11030 ;; This function calls:
 11031 ;;		_cmd
 11032 ;;		_wr16
 11033 ;; This function is called by:
 11034 ;;		_display
 11035 ;;		_main
 11036 ;; This function uses a non-reentrant model
 11037 ;;
 11038                           
 11039                           	psect	text18
 11040  006818                     __ptext18:
 11041                           	opt stack 0
 11042  006818                     _display_end:
 11043                           	opt stack 23
 11044                           
 11045                           ;display.c: 28:     cmd(((0UL<<24)));
 11046                           
 11047                           ;incstack = 0
 11048  006818  0E00               	movlw	0
 11049  00681A  6E11               	movwf	cmd@command,c
 11050  00681C  0E00               	movlw	0
 11051  00681E  6E12               	movwf	cmd@command+1,c
 11052  006820  0E00               	movlw	0
 11053  006822  6E13               	movwf	cmd@command+2,c
 11054  006824  0E00               	movlw	0
 11055  006826  6E14               	movwf	cmd@command+3,c
 11056  006828  EC70  F034         	call	_cmd	;wreg free
 11057                           
 11058                           ;display.c: 29:     cmd(4294967041UL);
 11059  00682C  0E01               	movlw	1
 11060  00682E  6E11               	movwf	cmd@command,c
 11061  006830  0EFF               	movlw	255
 11062  006832  6E12               	movwf	cmd@command+1,c
 11063  006834  0EFF               	movlw	255
 11064  006836  6E13               	movwf	cmd@command+2,c
 11065  006838  0EFF               	movlw	255
 11066  00683A  6E14               	movwf	cmd@command+3,c
 11067  00683C  EC70  F034         	call	_cmd	;wreg free
 11068                           
 11069                           ;display.c: 30:     wr16(1058024UL, cmd_offset);
 11070  006840  0EE8               	movlw	232
 11071  006842  6E04               	movwf	wr16@addr,c
 11072  006844  0E24               	movlw	36
 11073  006846  6E05               	movwf	wr16@addr+1,c
 11074  006848  0E10               	movlw	16
 11075  00684A  6E06               	movwf	wr16@addr+2,c
 11076  00684C  0E00               	movlw	0
 11077  00684E  6E07               	movwf	wr16@addr+3,c
 11078  006850  C04F  F008         	movff	_cmd_offset,wr16@value
 11079  006854  C050  F009         	movff	_cmd_offset+1,wr16@value+1
 11080  006858  EC48  F035         	call	_wr16	;wreg free
 11081  00685C  0012               	return		;funcret
 11082  00685E                     __end_of_display_end:
 11083                           	opt stack 0
 11084                           tblptru	equ	0xFF8
 11085                           tblptrh	equ	0xFF7
 11086                           tblptrl	equ	0xFF6
 11087                           tablat	equ	0xFF5
 11088                           prodh	equ	0xFF4
 11089                           prodl	equ	0xFF3
 11090                           intcon	equ	0xFF2
 11091                           postinc0	equ	0xFEE
 11092                           wreg	equ	0xFE8
 11093                           postdec1	equ	0xFE5
 11094                           plusw1	equ	0xFE3
 11095                           fsr1l	equ	0xFE1
 11096                           plusw2	equ	0xFDB
 11097                           status	equ	0xFD8
 11098                           
 11099 ;; *************** function _display_bspd *****************
 11100 ;; Defined at:
 11101 ;;		line 286 in file "display.c"
 11102 ;; Parameters:    Size  Location     Type
 11103 ;;  bspd            2   24[COMRAM] int 
 11104 ;; Auto vars:     Size  Location     Type
 11105 ;;		None
 11106 ;; Return value:  Size  Location     Type
 11107 ;;                  1    wreg      void 
 11108 ;; Registers used:
 11109 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11110 ;; Tracked objects:
 11111 ;;		On entry : 0/0
 11112 ;;		On exit  : 0/0
 11113 ;;		Unchanged: 0/0
 11114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11115 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11117 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11118 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11119 ;;Total ram usage:        6 bytes
 11120 ;; Hardware stack levels used:    1
 11121 ;; Hardware stack levels required when called:    7
 11122 ;; This function calls:
 11123 ;;		_cmd
 11124 ;;		_cmd_incrementn
 11125 ;;		_wr16
 11126 ;;		_wr8s
 11127 ;; This function is called by:
 11128 ;;		_display
 11129 ;; This function uses a non-reentrant model
 11130 ;;
 11131                           
 11132                           	psect	text19
 11133  004900                     __ptext19:
 11134                           	opt stack 0
 11135  004900                     _display_bspd:
 11136                           	opt stack 22
 11137                           
 11138                           ;display.c: 287:     switch (bspd) {
 11139                           
 11140                           ;incstack = 0
 11141  004900  D1D1               	goto	l690
 11142  004902                     
 11143                           ;display.c: 289:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
 11144  004902  0E00               	movlw	0
 11145  004904  6E11               	movwf	cmd@command,c
 11146  004906  0EFF               	movlw	255
 11147  004908  6E12               	movwf	cmd@command+1,c
 11148  00490A  0E00               	movlw	0
 11149  00490C  6E13               	movwf	cmd@command+2,c
 11150  00490E  0E04               	movlw	4
 11151  004910  6E14               	movwf	cmd@command+3,c
 11152  004912  EC70  F034         	call	_cmd	;wreg free
 11153                           
 11154                           ;display.c: 290:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 268);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 212);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(
      +                          wr8s(1081344UL +cmd_offset, "Normal"));
 11155  004916  0E0C               	movlw	12
 11156  004918  6E11               	movwf	cmd@command,c
 11157  00491A  0EFF               	movlw	255
 11158  00491C  6E12               	movwf	cmd@command+1,c
 11159  00491E  0EFF               	movlw	255
 11160  004920  6E13               	movwf	cmd@command+2,c
 11161  004922  0EFF               	movlw	255
 11162  004924  6E14               	movwf	cmd@command+3,c
 11163  004926  EC70  F034         	call	_cmd	;wreg free
 11164  00492A  504F               	movf	_cmd_offset,w,c
 11165  00492C  6E1B               	movwf	??_display_bspd& (0+255),c
 11166  00492E  5050               	movf	_cmd_offset+1,w,c
 11167  004930  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11168  004932  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11169  004934  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11170  004936  0E00               	movlw	0
 11171  004938  241B               	addwf	??_display_bspd,w,c
 11172  00493A  6E04               	movwf	wr16@addr,c
 11173  00493C  0E80               	movlw	128
 11174  00493E  201C               	addwfc	??_display_bspd+1,w,c
 11175  004940  6E05               	movwf	wr16@addr+1,c
 11176  004942  0E10               	movlw	16
 11177  004944  201D               	addwfc	??_display_bspd+2,w,c
 11178  004946  6E06               	movwf	wr16@addr+2,c
 11179  004948  0E00               	movlw	0
 11180  00494A  201E               	addwfc	??_display_bspd+3,w,c
 11181  00494C  6E07               	movwf	wr16@addr+3,c
 11182  00494E  0E01               	movlw	1
 11183  004950  6E09               	movwf	wr16@value+1,c
 11184  004952  0E0C               	movlw	12
 11185  004954  6E08               	movwf	wr16@value,c
 11186  004956  EC48  F035         	call	_wr16	;wreg free
 11187  00495A  0E02               	movlw	2
 11188  00495C  EC89  F035         	call	_cmd_incrementn
 11189  004960  504F               	movf	_cmd_offset,w,c
 11190  004962  6E1B               	movwf	??_display_bspd& (0+255),c
 11191  004964  5050               	movf	_cmd_offset+1,w,c
 11192  004966  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11193  004968  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11194  00496A  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11195  00496C  0E00               	movlw	0
 11196  00496E  241B               	addwf	??_display_bspd,w,c
 11197  004970  6E04               	movwf	wr16@addr,c
 11198  004972  0E80               	movlw	128
 11199  004974  201C               	addwfc	??_display_bspd+1,w,c
 11200  004976  6E05               	movwf	wr16@addr+1,c
 11201  004978  0E10               	movlw	16
 11202  00497A  201D               	addwfc	??_display_bspd+2,w,c
 11203  00497C  6E06               	movwf	wr16@addr+2,c
 11204  00497E  0E00               	movlw	0
 11205  004980  201E               	addwfc	??_display_bspd+3,w,c
 11206  004982  6E07               	movwf	wr16@addr+3,c
 11207  004984  0E00               	movlw	0
 11208  004986  6E09               	movwf	wr16@value+1,c
 11209  004988  0ED4               	movlw	212
 11210  00498A  6E08               	movwf	wr16@value,c
 11211  00498C  EC48  F035         	call	_wr16	;wreg free
 11212  004990  0E02               	movlw	2
 11213  004992  EC89  F035         	call	_cmd_incrementn
 11214  004996  504F               	movf	_cmd_offset,w,c
 11215  004998  6E1B               	movwf	??_display_bspd& (0+255),c
 11216  00499A  5050               	movf	_cmd_offset+1,w,c
 11217  00499C  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11218  00499E  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11219  0049A0  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11220  0049A2  0E00               	movlw	0
 11221  0049A4  241B               	addwf	??_display_bspd,w,c
 11222  0049A6  6E04               	movwf	wr16@addr,c
 11223  0049A8  0E80               	movlw	128
 11224  0049AA  201C               	addwfc	??_display_bspd+1,w,c
 11225  0049AC  6E05               	movwf	wr16@addr+1,c
 11226  0049AE  0E10               	movlw	16
 11227  0049B0  201D               	addwfc	??_display_bspd+2,w,c
 11228  0049B2  6E06               	movwf	wr16@addr+2,c
 11229  0049B4  0E00               	movlw	0
 11230  0049B6  201E               	addwfc	??_display_bspd+3,w,c
 11231  0049B8  6E07               	movwf	wr16@addr+3,c
 11232  0049BA  0E00               	movlw	0
 11233  0049BC  6E09               	movwf	wr16@value+1,c
 11234  0049BE  0E1C               	movlw	28
 11235  0049C0  6E08               	movwf	wr16@value,c
 11236  0049C2  EC48  F035         	call	_wr16	;wreg free
 11237  0049C6  0E02               	movlw	2
 11238  0049C8  EC89  F035         	call	_cmd_incrementn
 11239  0049CC  504F               	movf	_cmd_offset,w,c
 11240  0049CE  6E1B               	movwf	??_display_bspd& (0+255),c
 11241  0049D0  5050               	movf	_cmd_offset+1,w,c
 11242  0049D2  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11243  0049D4  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11244  0049D6  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11245  0049D8  0E00               	movlw	0
 11246  0049DA  241B               	addwf	??_display_bspd,w,c
 11247  0049DC  6E04               	movwf	wr16@addr,c
 11248  0049DE  0E80               	movlw	128
 11249  0049E0  201C               	addwfc	??_display_bspd+1,w,c
 11250  0049E2  6E05               	movwf	wr16@addr+1,c
 11251  0049E4  0E10               	movlw	16
 11252  0049E6  201D               	addwfc	??_display_bspd+2,w,c
 11253  0049E8  6E06               	movwf	wr16@addr+2,c
 11254  0049EA  0E00               	movlw	0
 11255  0049EC  201E               	addwfc	??_display_bspd+3,w,c
 11256  0049EE  6E07               	movwf	wr16@addr+3,c
 11257  0049F0  0E06               	movlw	6
 11258  0049F2  6E09               	movwf	wr16@value+1,c
 11259  0049F4  0E00               	movlw	0
 11260  0049F6  6E08               	movwf	wr16@value,c
 11261  0049F8  EC48  F035         	call	_wr16	;wreg free
 11262  0049FC  0E02               	movlw	2
 11263  0049FE  EC89  F035         	call	_cmd_incrementn
 11264  004A02  504F               	movf	_cmd_offset,w,c
 11265  004A04  6E1B               	movwf	??_display_bspd& (0+255),c
 11266  004A06  5050               	movf	_cmd_offset+1,w,c
 11267  004A08  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11268  004A0A  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11269  004A0C  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11270  004A0E  0E00               	movlw	0
 11271  004A10  241B               	addwf	??_display_bspd,w,c
 11272  004A12  6E09               	movwf	wr8s@addr,c
 11273  004A14  0E80               	movlw	128
 11274  004A16  201C               	addwfc	??_display_bspd+1,w,c
 11275  004A18  6E0A               	movwf	wr8s@addr+1,c
 11276  004A1A  0E10               	movlw	16
 11277  004A1C  201D               	addwfc	??_display_bspd+2,w,c
 11278  004A1E  6E0B               	movwf	wr8s@addr+2,c
 11279  004A20  0E00               	movlw	0
 11280  004A22  201E               	addwfc	??_display_bspd+3,w,c
 11281  004A24  6E0C               	movwf	wr8s@addr+3,c
 11282  004A26  0E40               	movlw	low STR_22
 11283  004A28  6E0D               	movwf	wr8s@s,c
 11284  004A2A  0E0F               	movlw	high STR_22
 11285  004A2C  6E0E               	movwf	wr8s@s+1,c
 11286  004A2E  EC67  F033         	call	_wr8s	;wreg free
 11287  004A32  EC89  F035         	call	_cmd_incrementn
 11288                           
 11289                           ;display.c: 291:         break;
 11290  004A36  0012               	return	
 11291  004A38                     
 11292                           ;display.c: 293:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255
      +                          UL)<<0)));
 11293  004A38  0E00               	movlw	0
 11294  004A3A  6E11               	movwf	cmd@command,c
 11295  004A3C  0EFF               	movlw	255
 11296  004A3E  6E12               	movwf	cmd@command+1,c
 11297  004A40  0EFF               	movlw	255
 11298  004A42  6E13               	movwf	cmd@command+2,c
 11299  004A44  0E04               	movlw	4
 11300  004A46  6E14               	movwf	cmd@command+3,c
 11301  004A48  EC70  F034         	call	_cmd	;wreg free
 11302                           
 11303                           ;display.c: 294:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 268);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 212);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(
      +                          wr8s(1081344UL +cmd_offset, "Warning"));
 11304  004A4C  0E0C               	movlw	12
 11305  004A4E  6E11               	movwf	cmd@command,c
 11306  004A50  0EFF               	movlw	255
 11307  004A52  6E12               	movwf	cmd@command+1,c
 11308  004A54  0EFF               	movlw	255
 11309  004A56  6E13               	movwf	cmd@command+2,c
 11310  004A58  0EFF               	movlw	255
 11311  004A5A  6E14               	movwf	cmd@command+3,c
 11312  004A5C  EC70  F034         	call	_cmd	;wreg free
 11313  004A60  504F               	movf	_cmd_offset,w,c
 11314  004A62  6E1B               	movwf	??_display_bspd& (0+255),c
 11315  004A64  5050               	movf	_cmd_offset+1,w,c
 11316  004A66  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11317  004A68  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11318  004A6A  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11319  004A6C  0E00               	movlw	0
 11320  004A6E  241B               	addwf	??_display_bspd,w,c
 11321  004A70  6E04               	movwf	wr16@addr,c
 11322  004A72  0E80               	movlw	128
 11323  004A74  201C               	addwfc	??_display_bspd+1,w,c
 11324  004A76  6E05               	movwf	wr16@addr+1,c
 11325  004A78  0E10               	movlw	16
 11326  004A7A  201D               	addwfc	??_display_bspd+2,w,c
 11327  004A7C  6E06               	movwf	wr16@addr+2,c
 11328  004A7E  0E00               	movlw	0
 11329  004A80  201E               	addwfc	??_display_bspd+3,w,c
 11330  004A82  6E07               	movwf	wr16@addr+3,c
 11331  004A84  0E01               	movlw	1
 11332  004A86  6E09               	movwf	wr16@value+1,c
 11333  004A88  0E0C               	movlw	12
 11334  004A8A  6E08               	movwf	wr16@value,c
 11335  004A8C  EC48  F035         	call	_wr16	;wreg free
 11336  004A90  0E02               	movlw	2
 11337  004A92  EC89  F035         	call	_cmd_incrementn
 11338  004A96  504F               	movf	_cmd_offset,w,c
 11339  004A98  6E1B               	movwf	??_display_bspd& (0+255),c
 11340  004A9A  5050               	movf	_cmd_offset+1,w,c
 11341  004A9C  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11342  004A9E  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11343  004AA0  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11344  004AA2  0E00               	movlw	0
 11345  004AA4  241B               	addwf	??_display_bspd,w,c
 11346  004AA6  6E04               	movwf	wr16@addr,c
 11347  004AA8  0E80               	movlw	128
 11348  004AAA  201C               	addwfc	??_display_bspd+1,w,c
 11349  004AAC  6E05               	movwf	wr16@addr+1,c
 11350  004AAE  0E10               	movlw	16
 11351  004AB0  201D               	addwfc	??_display_bspd+2,w,c
 11352  004AB2  6E06               	movwf	wr16@addr+2,c
 11353  004AB4  0E00               	movlw	0
 11354  004AB6  201E               	addwfc	??_display_bspd+3,w,c
 11355  004AB8  6E07               	movwf	wr16@addr+3,c
 11356  004ABA  0E00               	movlw	0
 11357  004ABC  6E09               	movwf	wr16@value+1,c
 11358  004ABE  0ED4               	movlw	212
 11359  004AC0  6E08               	movwf	wr16@value,c
 11360  004AC2  EC48  F035         	call	_wr16	;wreg free
 11361  004AC6  0E02               	movlw	2
 11362  004AC8  EC89  F035         	call	_cmd_incrementn
 11363  004ACC  504F               	movf	_cmd_offset,w,c
 11364  004ACE  6E1B               	movwf	??_display_bspd& (0+255),c
 11365  004AD0  5050               	movf	_cmd_offset+1,w,c
 11366  004AD2  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11367  004AD4  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11368  004AD6  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11369  004AD8  0E00               	movlw	0
 11370  004ADA  241B               	addwf	??_display_bspd,w,c
 11371  004ADC  6E04               	movwf	wr16@addr,c
 11372  004ADE  0E80               	movlw	128
 11373  004AE0  201C               	addwfc	??_display_bspd+1,w,c
 11374  004AE2  6E05               	movwf	wr16@addr+1,c
 11375  004AE4  0E10               	movlw	16
 11376  004AE6  201D               	addwfc	??_display_bspd+2,w,c
 11377  004AE8  6E06               	movwf	wr16@addr+2,c
 11378  004AEA  0E00               	movlw	0
 11379  004AEC  201E               	addwfc	??_display_bspd+3,w,c
 11380  004AEE  6E07               	movwf	wr16@addr+3,c
 11381  004AF0  0E00               	movlw	0
 11382  004AF2  6E09               	movwf	wr16@value+1,c
 11383  004AF4  0E1C               	movlw	28
 11384  004AF6  6E08               	movwf	wr16@value,c
 11385  004AF8  EC48  F035         	call	_wr16	;wreg free
 11386  004AFC  0E02               	movlw	2
 11387  004AFE  EC89  F035         	call	_cmd_incrementn
 11388  004B02  504F               	movf	_cmd_offset,w,c
 11389  004B04  6E1B               	movwf	??_display_bspd& (0+255),c
 11390  004B06  5050               	movf	_cmd_offset+1,w,c
 11391  004B08  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11392  004B0A  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11393  004B0C  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11394  004B0E  0E00               	movlw	0
 11395  004B10  241B               	addwf	??_display_bspd,w,c
 11396  004B12  6E04               	movwf	wr16@addr,c
 11397  004B14  0E80               	movlw	128
 11398  004B16  201C               	addwfc	??_display_bspd+1,w,c
 11399  004B18  6E05               	movwf	wr16@addr+1,c
 11400  004B1A  0E10               	movlw	16
 11401  004B1C  201D               	addwfc	??_display_bspd+2,w,c
 11402  004B1E  6E06               	movwf	wr16@addr+2,c
 11403  004B20  0E00               	movlw	0
 11404  004B22  201E               	addwfc	??_display_bspd+3,w,c
 11405  004B24  6E07               	movwf	wr16@addr+3,c
 11406  004B26  0E06               	movlw	6
 11407  004B28  6E09               	movwf	wr16@value+1,c
 11408  004B2A  0E00               	movlw	0
 11409  004B2C  6E08               	movwf	wr16@value,c
 11410  004B2E  EC48  F035         	call	_wr16	;wreg free
 11411  004B32  0E02               	movlw	2
 11412  004B34  EC89  F035         	call	_cmd_incrementn
 11413  004B38  504F               	movf	_cmd_offset,w,c
 11414  004B3A  6E1B               	movwf	??_display_bspd& (0+255),c
 11415  004B3C  5050               	movf	_cmd_offset+1,w,c
 11416  004B3E  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11417  004B40  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11418  004B42  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11419  004B44  0E00               	movlw	0
 11420  004B46  241B               	addwf	??_display_bspd,w,c
 11421  004B48  6E09               	movwf	wr8s@addr,c
 11422  004B4A  0E80               	movlw	128
 11423  004B4C  201C               	addwfc	??_display_bspd+1,w,c
 11424  004B4E  6E0A               	movwf	wr8s@addr+1,c
 11425  004B50  0E10               	movlw	16
 11426  004B52  201D               	addwfc	??_display_bspd+2,w,c
 11427  004B54  6E0B               	movwf	wr8s@addr+2,c
 11428  004B56  0E00               	movlw	0
 11429  004B58  201E               	addwfc	??_display_bspd+3,w,c
 11430  004B5A  6E0C               	movwf	wr8s@addr+3,c
 11431  004B5C  0E2A               	movlw	low STR_23
 11432  004B5E  6E0D               	movwf	wr8s@s,c
 11433  004B60  0E0F               	movlw	high STR_23
 11434  004B62  6E0E               	movwf	wr8s@s+1,c
 11435  004B64  EC67  F033         	call	_wr8s	;wreg free
 11436  004B68  EC89  F035         	call	_cmd_incrementn
 11437                           
 11438                           ;display.c: 295:         break;
 11439  004B6C  0012               	return	
 11440  004B6E                     
 11441                           ;display.c: 297:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
 11442  004B6E  0E00               	movlw	0
 11443  004B70  6E11               	movwf	cmd@command,c
 11444  004B72  0E00               	movlw	0
 11445  004B74  6E12               	movwf	cmd@command+1,c
 11446  004B76  0EFF               	movlw	255
 11447  004B78  6E13               	movwf	cmd@command+2,c
 11448  004B7A  0E04               	movlw	4
 11449  004B7C  6E14               	movwf	cmd@command+3,c
 11450  004B7E  EC70  F034         	call	_cmd	;wreg free
 11451                           
 11452                           ;display.c: 298:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 268);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 212);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(
      +                          wr8s(1081344UL +cmd_offset, "Error"));
 11453  004B82  0E0C               	movlw	12
 11454  004B84  6E11               	movwf	cmd@command,c
 11455  004B86  0EFF               	movlw	255
 11456  004B88  6E12               	movwf	cmd@command+1,c
 11457  004B8A  0EFF               	movlw	255
 11458  004B8C  6E13               	movwf	cmd@command+2,c
 11459  004B8E  0EFF               	movlw	255
 11460  004B90  6E14               	movwf	cmd@command+3,c
 11461  004B92  EC70  F034         	call	_cmd	;wreg free
 11462  004B96  504F               	movf	_cmd_offset,w,c
 11463  004B98  6E1B               	movwf	??_display_bspd& (0+255),c
 11464  004B9A  5050               	movf	_cmd_offset+1,w,c
 11465  004B9C  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11466  004B9E  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11467  004BA0  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11468  004BA2  0E00               	movlw	0
 11469  004BA4  241B               	addwf	??_display_bspd,w,c
 11470  004BA6  6E04               	movwf	wr16@addr,c
 11471  004BA8  0E80               	movlw	128
 11472  004BAA  201C               	addwfc	??_display_bspd+1,w,c
 11473  004BAC  6E05               	movwf	wr16@addr+1,c
 11474  004BAE  0E10               	movlw	16
 11475  004BB0  201D               	addwfc	??_display_bspd+2,w,c
 11476  004BB2  6E06               	movwf	wr16@addr+2,c
 11477  004BB4  0E00               	movlw	0
 11478  004BB6  201E               	addwfc	??_display_bspd+3,w,c
 11479  004BB8  6E07               	movwf	wr16@addr+3,c
 11480  004BBA  0E01               	movlw	1
 11481  004BBC  6E09               	movwf	wr16@value+1,c
 11482  004BBE  0E0C               	movlw	12
 11483  004BC0  6E08               	movwf	wr16@value,c
 11484  004BC2  EC48  F035         	call	_wr16	;wreg free
 11485  004BC6  0E02               	movlw	2
 11486  004BC8  EC89  F035         	call	_cmd_incrementn
 11487  004BCC  504F               	movf	_cmd_offset,w,c
 11488  004BCE  6E1B               	movwf	??_display_bspd& (0+255),c
 11489  004BD0  5050               	movf	_cmd_offset+1,w,c
 11490  004BD2  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11491  004BD4  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11492  004BD6  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11493  004BD8  0E00               	movlw	0
 11494  004BDA  241B               	addwf	??_display_bspd,w,c
 11495  004BDC  6E04               	movwf	wr16@addr,c
 11496  004BDE  0E80               	movlw	128
 11497  004BE0  201C               	addwfc	??_display_bspd+1,w,c
 11498  004BE2  6E05               	movwf	wr16@addr+1,c
 11499  004BE4  0E10               	movlw	16
 11500  004BE6  201D               	addwfc	??_display_bspd+2,w,c
 11501  004BE8  6E06               	movwf	wr16@addr+2,c
 11502  004BEA  0E00               	movlw	0
 11503  004BEC  201E               	addwfc	??_display_bspd+3,w,c
 11504  004BEE  6E07               	movwf	wr16@addr+3,c
 11505  004BF0  0E00               	movlw	0
 11506  004BF2  6E09               	movwf	wr16@value+1,c
 11507  004BF4  0ED4               	movlw	212
 11508  004BF6  6E08               	movwf	wr16@value,c
 11509  004BF8  EC48  F035         	call	_wr16	;wreg free
 11510  004BFC  0E02               	movlw	2
 11511  004BFE  EC89  F035         	call	_cmd_incrementn
 11512  004C02  504F               	movf	_cmd_offset,w,c
 11513  004C04  6E1B               	movwf	??_display_bspd& (0+255),c
 11514  004C06  5050               	movf	_cmd_offset+1,w,c
 11515  004C08  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11516  004C0A  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11517  004C0C  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11518  004C0E  0E00               	movlw	0
 11519  004C10  241B               	addwf	??_display_bspd,w,c
 11520  004C12  6E04               	movwf	wr16@addr,c
 11521  004C14  0E80               	movlw	128
 11522  004C16  201C               	addwfc	??_display_bspd+1,w,c
 11523  004C18  6E05               	movwf	wr16@addr+1,c
 11524  004C1A  0E10               	movlw	16
 11525  004C1C  201D               	addwfc	??_display_bspd+2,w,c
 11526  004C1E  6E06               	movwf	wr16@addr+2,c
 11527  004C20  0E00               	movlw	0
 11528  004C22  201E               	addwfc	??_display_bspd+3,w,c
 11529  004C24  6E07               	movwf	wr16@addr+3,c
 11530  004C26  0E00               	movlw	0
 11531  004C28  6E09               	movwf	wr16@value+1,c
 11532  004C2A  0E1C               	movlw	28
 11533  004C2C  6E08               	movwf	wr16@value,c
 11534  004C2E  EC48  F035         	call	_wr16	;wreg free
 11535  004C32  0E02               	movlw	2
 11536  004C34  EC89  F035         	call	_cmd_incrementn
 11537  004C38  504F               	movf	_cmd_offset,w,c
 11538  004C3A  6E1B               	movwf	??_display_bspd& (0+255),c
 11539  004C3C  5050               	movf	_cmd_offset+1,w,c
 11540  004C3E  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11541  004C40  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11542  004C42  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11543  004C44  0E00               	movlw	0
 11544  004C46  241B               	addwf	??_display_bspd,w,c
 11545  004C48  6E04               	movwf	wr16@addr,c
 11546  004C4A  0E80               	movlw	128
 11547  004C4C  201C               	addwfc	??_display_bspd+1,w,c
 11548  004C4E  6E05               	movwf	wr16@addr+1,c
 11549  004C50  0E10               	movlw	16
 11550  004C52  201D               	addwfc	??_display_bspd+2,w,c
 11551  004C54  6E06               	movwf	wr16@addr+2,c
 11552  004C56  0E00               	movlw	0
 11553  004C58  201E               	addwfc	??_display_bspd+3,w,c
 11554  004C5A  6E07               	movwf	wr16@addr+3,c
 11555  004C5C  0E06               	movlw	6
 11556  004C5E  6E09               	movwf	wr16@value+1,c
 11557  004C60  0E00               	movlw	0
 11558  004C62  6E08               	movwf	wr16@value,c
 11559  004C64  EC48  F035         	call	_wr16	;wreg free
 11560  004C68  0E02               	movlw	2
 11561  004C6A  EC89  F035         	call	_cmd_incrementn
 11562  004C6E  504F               	movf	_cmd_offset,w,c
 11563  004C70  6E1B               	movwf	??_display_bspd& (0+255),c
 11564  004C72  5050               	movf	_cmd_offset+1,w,c
 11565  004C74  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11566  004C76  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11567  004C78  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11568  004C7A  0E00               	movlw	0
 11569  004C7C  241B               	addwf	??_display_bspd,w,c
 11570  004C7E  6E09               	movwf	wr8s@addr,c
 11571  004C80  0E80               	movlw	128
 11572  004C82  201C               	addwfc	??_display_bspd+1,w,c
 11573  004C84  6E0A               	movwf	wr8s@addr+1,c
 11574  004C86  0E10               	movlw	16
 11575  004C88  201D               	addwfc	??_display_bspd+2,w,c
 11576  004C8A  6E0B               	movwf	wr8s@addr+2,c
 11577  004C8C  0E00               	movlw	0
 11578  004C8E  201E               	addwfc	??_display_bspd+3,w,c
 11579  004C90  6E0C               	movwf	wr8s@addr+3,c
 11580  004C92  0E59               	movlw	low STR_24
 11581  004C94  6E0D               	movwf	wr8s@s,c
 11582  004C96  0E0F               	movlw	high STR_24
 11583  004C98  6E0E               	movwf	wr8s@s+1,c
 11584  004C9A  EC67  F033         	call	_wr8s	;wreg free
 11585  004C9E  EC89  F035         	call	_cmd_incrementn
 11586                           
 11587                           ;display.c: 302:     }
 11588                           
 11589                           ;display.c: 301:         break;
 11590                           
 11591                           ;display.c: 300:         default:
 11592                           
 11593                           ;display.c: 299:         break;
 11594  004CA2  0012               	return	
 11595  004CA4                     l690:
 11596  004CA4  C019  F01B         	movff	display_bspd@bspd,??_display_bspd
 11597  004CA8  C01A  F01C         	movff	display_bspd@bspd+1,??_display_bspd+1
 11598                           
 11599                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11600                           ; Switch size 1, requested type "space"
 11601                           ; Number of cases is 1, Range of values is 0 to 0
 11602                           ; switch strategies available:
 11603                           ; Name         Instructions Cycles
 11604                           ; simple_byte            4     3 (average)
 11605                           ;	Chosen strategy is simple_byte
 11606  004CAC  501C               	movf	??_display_bspd+1,w,c
 11607  004CAE  0A00               	xorlw	0	; case 0
 11608  004CB0  A4D8               	btfss	status,2,c
 11609  004CB2  0012               	return	
 11610                           
 11611                           ; Switch size 1, requested type "space"
 11612                           ; Number of cases is 3, Range of values is 0 to 2
 11613                           ; switch strategies available:
 11614                           ; Name         Instructions Cycles
 11615                           ; simple_byte           10     6 (average)
 11616                           ;	Chosen strategy is simple_byte
 11617  004CB4  501B               	movf	??_display_bspd,w,c
 11618  004CB6  0A00               	xorlw	0	; case 0
 11619  004CB8  B4D8               	btfsc	status,2,c
 11620  004CBA  D623               	goto	l691
 11621  004CBC  0A01               	xorlw	1	; case 1
 11622  004CBE  B4D8               	btfsc	status,2,c
 11623  004CC0  D6BB               	goto	l693
 11624  004CC2  0A03               	xorlw	3	; case 2
 11625  004CC4  A4D8               	btfss	status,2,c
 11626  004CC6  0012               	return	
 11627  004CC8  D752               	goto	l694
 11628  004CCA                     __end_of_display_bspd:
 11629                           	opt stack 0
 11630                           tblptru	equ	0xFF8
 11631                           tblptrh	equ	0xFF7
 11632                           tblptrl	equ	0xFF6
 11633                           tablat	equ	0xFF5
 11634                           prodh	equ	0xFF4
 11635                           prodl	equ	0xFF3
 11636                           intcon	equ	0xFF2
 11637                           postinc0	equ	0xFEE
 11638                           wreg	equ	0xFE8
 11639                           postdec1	equ	0xFE5
 11640                           plusw1	equ	0xFE3
 11641                           fsr1l	equ	0xFE1
 11642                           plusw2	equ	0xFDB
 11643                           status	equ	0xFD8
 11644                           
 11645 ;; *************** function _display_bottom_section *****************
 11646 ;; Defined at:
 11647 ;;		line 33 in file "display.c"
 11648 ;; Parameters:    Size  Location     Type
 11649 ;;  volts           2   30[COMRAM] int 
 11650 ;;  tp              2   32[COMRAM] int 
 11651 ;; Auto vars:     Size  Location     Type
 11652 ;;		None
 11653 ;; Return value:  Size  Location     Type
 11654 ;;                  1    wreg      void 
 11655 ;; Registers used:
 11656 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11657 ;; Tracked objects:
 11658 ;;		On entry : 0/0
 11659 ;;		On exit  : 0/0
 11660 ;;		Unchanged: 0/0
 11661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11665 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11666 ;;Total ram usage:        4 bytes
 11667 ;; Hardware stack levels used:    1
 11668 ;; Hardware stack levels required when called:    8
 11669 ;; This function calls:
 11670 ;;		_cmd
 11671 ;;		_display_battery
 11672 ;;		_display_tp
 11673 ;; This function is called by:
 11674 ;;		_display
 11675 ;;		_main
 11676 ;; This function uses a non-reentrant model
 11677 ;;
 11678                           
 11679                           	psect	text20
 11680  0064AC                     __ptext20:
 11681                           	opt stack 0
 11682  0064AC                     _display_bottom_section:
 11683                           	opt stack 22
 11684                           
 11685                           ;display.c: 34:     cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)
      +                          ));
 11686                           
 11687                           ;incstack = 0
 11688  0064AC  0E00               	movlw	0
 11689  0064AE  6E11               	movwf	cmd@command,c
 11690  0064B0  0E00               	movlw	0
 11691  0064B2  6E12               	movwf	cmd@command+1,c
 11692  0064B4  0EFF               	movlw	255
 11693  0064B6  6E13               	movwf	cmd@command+2,c
 11694  0064B8  0E04               	movlw	4
 11695  0064BA  6E14               	movwf	cmd@command+3,c
 11696  0064BC  EC70  F034         	call	_cmd	;wreg free
 11697                           
 11698                           ;display.c: 35:     cmd(((31UL<<24)|(((3UL)&15UL)<<0)));
 11699  0064C0  0E03               	movlw	3
 11700  0064C2  6E11               	movwf	cmd@command,c
 11701  0064C4  0E00               	movlw	0
 11702  0064C6  6E12               	movwf	cmd@command+1,c
 11703  0064C8  0E00               	movlw	0
 11704  0064CA  6E13               	movwf	cmd@command+2,c
 11705  0064CC  0E1F               	movlw	31
 11706  0064CE  6E14               	movwf	cmd@command+3,c
 11707  0064D0  EC70  F034         	call	_cmd	;wreg free
 11708                           
 11709                           ;display.c: 36:     cmd(((14UL<<24)|(((30)&4095UL)<<0)));
 11710  0064D4  0E1E               	movlw	30
 11711  0064D6  6E11               	movwf	cmd@command,c
 11712  0064D8  0E00               	movlw	0
 11713  0064DA  6E12               	movwf	cmd@command+1,c
 11714  0064DC  0E00               	movlw	0
 11715  0064DE  6E13               	movwf	cmd@command+2,c
 11716  0064E0  0E0E               	movlw	14
 11717  0064E2  6E14               	movwf	cmd@command+3,c
 11718  0064E4  EC70  F034         	call	_cmd	;wreg free
 11719                           
 11720                           ;display.c: 37:     cmd(((2UL<<30)|(((0)&511UL)<<21)|(((237)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
 11721  0064E8  0E00               	movlw	0
 11722  0064EA  6E11               	movwf	cmd@command,c
 11723  0064EC  0ED0               	movlw	208
 11724  0064EE  6E12               	movwf	cmd@command+1,c
 11725  0064F0  0E0E               	movlw	14
 11726  0064F2  6E13               	movwf	cmd@command+2,c
 11727  0064F4  0E80               	movlw	128
 11728  0064F6  6E14               	movwf	cmd@command+3,c
 11729  0064F8  EC70  F034         	call	_cmd	;wreg free
 11730                           
 11731                           ;display.c: 38:     cmd(((2UL<<30)|(((480)&511UL)<<21)|(((237)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
 11732  0064FC  0E00               	movlw	0
 11733  0064FE  6E11               	movwf	cmd@command,c
 11734  006500  0ED0               	movlw	208
 11735  006502  6E12               	movwf	cmd@command+1,c
 11736  006504  0E0E               	movlw	14
 11737  006506  6E13               	movwf	cmd@command+2,c
 11738  006508  0EBC               	movlw	188
 11739  00650A  6E14               	movwf	cmd@command+3,c
 11740  00650C  EC70  F034         	call	_cmd	;wreg free
 11741                           
 11742                           ;display.c: 39:     cmd(((33UL<<24)));
 11743  006510  0E00               	movlw	0
 11744  006512  6E11               	movwf	cmd@command,c
 11745  006514  0E00               	movlw	0
 11746  006516  6E12               	movwf	cmd@command+1,c
 11747  006518  0E00               	movlw	0
 11748  00651A  6E13               	movwf	cmd@command+2,c
 11749  00651C  0E21               	movlw	33
 11750  00651E  6E14               	movwf	cmd@command+3,c
 11751  006520  EC70  F034         	call	_cmd	;wreg free
 11752                           
 11753                           ;display.c: 41:     display_battery(volts);
 11754  006524  C01F  F019         	movff	display_bottom_section@volts,display_battery@volts
 11755  006528  C020  F01A         	movff	display_bottom_section@volts+1,display_battery@volts+1
 11756  00652C  EC65  F026         	call	_display_battery	;wreg free
 11757                           
 11758                           ;display.c: 42:     display_tp(tp);
 11759  006530  C021  F019         	movff	display_bottom_section@tp,display_tp@tp
 11760  006534  C022  F01A         	movff	display_bottom_section@tp+1,display_tp@tp+1
 11761  006538  EC83  F031         	call	_display_tp	;wreg free
 11762  00653C  0012               	return		;funcret
 11763  00653E                     __end_of_display_bottom_section:
 11764                           	opt stack 0
 11765                           tblptru	equ	0xFF8
 11766                           tblptrh	equ	0xFF7
 11767                           tblptrl	equ	0xFF6
 11768                           tablat	equ	0xFF5
 11769                           prodh	equ	0xFF4
 11770                           prodl	equ	0xFF3
 11771                           intcon	equ	0xFF2
 11772                           postinc0	equ	0xFEE
 11773                           wreg	equ	0xFE8
 11774                           postdec1	equ	0xFE5
 11775                           plusw1	equ	0xFE3
 11776                           fsr1l	equ	0xFE1
 11777                           plusw2	equ	0xFDB
 11778                           status	equ	0xFD8
 11779                           
 11780 ;; *************** function _display_tp *****************
 11781 ;; Defined at:
 11782 ;;		line 333 in file "display.c"
 11783 ;; Parameters:    Size  Location     Type
 11784 ;;  tp              2   24[COMRAM] int 
 11785 ;; Auto vars:     Size  Location     Type
 11786 ;;		None
 11787 ;; Return value:  Size  Location     Type
 11788 ;;                  1    wreg      void 
 11789 ;; Registers used:
 11790 ;;		wreg, status,2, status,0, cstack
 11791 ;; Tracked objects:
 11792 ;;		On entry : 0/0
 11793 ;;		On exit  : 0/0
 11794 ;;		Unchanged: 0/0
 11795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11798 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11799 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11800 ;;Total ram usage:        6 bytes
 11801 ;; Hardware stack levels used:    1
 11802 ;; Hardware stack levels required when called:    7
 11803 ;; This function calls:
 11804 ;;		_cmd
 11805 ;;		_cmd_incrementn
 11806 ;;		_wr16
 11807 ;; This function is called by:
 11808 ;;		_display_bottom_section
 11809 ;; This function uses a non-reentrant model
 11810 ;;
 11811                           
 11812                           	psect	text21
 11813  006306                     __ptext21:
 11814                           	opt stack 0
 11815  006306                     _display_tp:
 11816                           	opt stack 22
 11817                           
 11818                           ;display.c: 335:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 455);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 2048UL);cmd_incrementn(2);cmd(tp);
 11819                           
 11820                           ;incstack = 0
 11821  006306  0E2E               	movlw	46
 11822  006308  6E11               	movwf	cmd@command,c
 11823  00630A  0EFF               	movlw	255
 11824  00630C  6E12               	movwf	cmd@command+1,c
 11825  00630E  0EFF               	movlw	255
 11826  006310  6E13               	movwf	cmd@command+2,c
 11827  006312  0EFF               	movlw	255
 11828  006314  6E14               	movwf	cmd@command+3,c
 11829  006316  EC70  F034         	call	_cmd	;wreg free
 11830  00631A  504F               	movf	_cmd_offset,w,c
 11831  00631C  6E1B               	movwf	??_display_tp& (0+255),c
 11832  00631E  5050               	movf	_cmd_offset+1,w,c
 11833  006320  6E1C               	movwf	(??_display_tp+1)& (0+255),c
 11834  006322  6A1D               	clrf	(??_display_tp+2)& (0+255),c
 11835  006324  6A1E               	clrf	(??_display_tp+3)& (0+255),c
 11836  006326  0E00               	movlw	0
 11837  006328  241B               	addwf	??_display_tp,w,c
 11838  00632A  6E04               	movwf	wr16@addr,c
 11839  00632C  0E80               	movlw	128
 11840  00632E  201C               	addwfc	??_display_tp+1,w,c
 11841  006330  6E05               	movwf	wr16@addr+1,c
 11842  006332  0E10               	movlw	16
 11843  006334  201D               	addwfc	??_display_tp+2,w,c
 11844  006336  6E06               	movwf	wr16@addr+2,c
 11845  006338  0E00               	movlw	0
 11846  00633A  201E               	addwfc	??_display_tp+3,w,c
 11847  00633C  6E07               	movwf	wr16@addr+3,c
 11848  00633E  0E01               	movlw	1
 11849  006340  6E09               	movwf	wr16@value+1,c
 11850  006342  0EC7               	movlw	199
 11851  006344  6E08               	movwf	wr16@value,c
 11852  006346  EC48  F035         	call	_wr16	;wreg free
 11853  00634A  0E02               	movlw	2
 11854  00634C  EC89  F035         	call	_cmd_incrementn
 11855  006350  504F               	movf	_cmd_offset,w,c
 11856  006352  6E1B               	movwf	??_display_tp& (0+255),c
 11857  006354  5050               	movf	_cmd_offset+1,w,c
 11858  006356  6E1C               	movwf	(??_display_tp+1)& (0+255),c
 11859  006358  6A1D               	clrf	(??_display_tp+2)& (0+255),c
 11860  00635A  6A1E               	clrf	(??_display_tp+3)& (0+255),c
 11861  00635C  0E00               	movlw	0
 11862  00635E  241B               	addwf	??_display_tp,w,c
 11863  006360  6E04               	movwf	wr16@addr,c
 11864  006362  0E80               	movlw	128
 11865  006364  201C               	addwfc	??_display_tp+1,w,c
 11866  006366  6E05               	movwf	wr16@addr+1,c
 11867  006368  0E10               	movlw	16
 11868  00636A  201D               	addwfc	??_display_tp+2,w,c
 11869  00636C  6E06               	movwf	wr16@addr+2,c
 11870  00636E  0E00               	movlw	0
 11871  006370  201E               	addwfc	??_display_tp+3,w,c
 11872  006372  6E07               	movwf	wr16@addr+3,c
 11873  006374  0E00               	movlw	0
 11874  006376  6E09               	movwf	wr16@value+1,c
 11875  006378  0EEC               	movlw	236
 11876  00637A  6E08               	movwf	wr16@value,c
 11877  00637C  EC48  F035         	call	_wr16	;wreg free
 11878  006380  0E02               	movlw	2
 11879  006382  EC89  F035         	call	_cmd_incrementn
 11880  006386  504F               	movf	_cmd_offset,w,c
 11881  006388  6E1B               	movwf	??_display_tp& (0+255),c
 11882  00638A  5050               	movf	_cmd_offset+1,w,c
 11883  00638C  6E1C               	movwf	(??_display_tp+1)& (0+255),c
 11884  00638E  6A1D               	clrf	(??_display_tp+2)& (0+255),c
 11885  006390  6A1E               	clrf	(??_display_tp+3)& (0+255),c
 11886  006392  0E00               	movlw	0
 11887  006394  241B               	addwf	??_display_tp,w,c
 11888  006396  6E04               	movwf	wr16@addr,c
 11889  006398  0E80               	movlw	128
 11890  00639A  201C               	addwfc	??_display_tp+1,w,c
 11891  00639C  6E05               	movwf	wr16@addr+1,c
 11892  00639E  0E10               	movlw	16
 11893  0063A0  201D               	addwfc	??_display_tp+2,w,c
 11894  0063A2  6E06               	movwf	wr16@addr+2,c
 11895  0063A4  0E00               	movlw	0
 11896  0063A6  201E               	addwfc	??_display_tp+3,w,c
 11897  0063A8  6E07               	movwf	wr16@addr+3,c
 11898  0063AA  0E00               	movlw	0
 11899  0063AC  6E09               	movwf	wr16@value+1,c
 11900  0063AE  0E1E               	movlw	30
 11901  0063B0  6E08               	movwf	wr16@value,c
 11902  0063B2  EC48  F035         	call	_wr16	;wreg free
 11903  0063B6  0E02               	movlw	2
 11904  0063B8  EC89  F035         	call	_cmd_incrementn
 11905  0063BC  504F               	movf	_cmd_offset,w,c
 11906  0063BE  6E1B               	movwf	??_display_tp& (0+255),c
 11907  0063C0  5050               	movf	_cmd_offset+1,w,c
 11908  0063C2  6E1C               	movwf	(??_display_tp+1)& (0+255),c
 11909  0063C4  6A1D               	clrf	(??_display_tp+2)& (0+255),c
 11910  0063C6  6A1E               	clrf	(??_display_tp+3)& (0+255),c
 11911  0063C8  0E00               	movlw	0
 11912  0063CA  241B               	addwf	??_display_tp,w,c
 11913  0063CC  6E04               	movwf	wr16@addr,c
 11914  0063CE  0E80               	movlw	128
 11915  0063D0  201C               	addwfc	??_display_tp+1,w,c
 11916  0063D2  6E05               	movwf	wr16@addr+1,c
 11917  0063D4  0E10               	movlw	16
 11918  0063D6  201D               	addwfc	??_display_tp+2,w,c
 11919  0063D8  6E06               	movwf	wr16@addr+2,c
 11920  0063DA  0E00               	movlw	0
 11921  0063DC  201E               	addwfc	??_display_tp+3,w,c
 11922  0063DE  6E07               	movwf	wr16@addr+3,c
 11923  0063E0  0E08               	movlw	8
 11924  0063E2  6E09               	movwf	wr16@value+1,c
 11925  0063E4  0E00               	movlw	0
 11926  0063E6  6E08               	movwf	wr16@value,c
 11927  0063E8  EC48  F035         	call	_wr16	;wreg free
 11928  0063EC  0E02               	movlw	2
 11929  0063EE  EC89  F035         	call	_cmd_incrementn
 11930  0063F2  C019  F011         	movff	display_tp@tp,cmd@command
 11931  0063F6  C01A  F012         	movff	display_tp@tp+1,cmd@command+1
 11932  0063FA  0E00               	movlw	0
 11933  0063FC  BE12               	btfsc	cmd@command+1,7,c
 11934  0063FE  0EFF               	movlw	-1
 11935  006400  6E13               	movwf	cmd@command+2,c
 11936  006402  6E14               	movwf	cmd@command+3,c
 11937  006404  EC70  F034         	call	_cmd	;wreg free
 11938  006408  0012               	return		;funcret
 11939  00640A                     __end_of_display_tp:
 11940                           	opt stack 0
 11941                           tblptru	equ	0xFF8
 11942                           tblptrh	equ	0xFF7
 11943                           tblptrl	equ	0xFF6
 11944                           tablat	equ	0xFF5
 11945                           prodh	equ	0xFF4
 11946                           prodl	equ	0xFF3
 11947                           intcon	equ	0xFF2
 11948                           postinc0	equ	0xFEE
 11949                           wreg	equ	0xFE8
 11950                           postdec1	equ	0xFE5
 11951                           plusw1	equ	0xFE3
 11952                           fsr1l	equ	0xFE1
 11953                           plusw2	equ	0xFDB
 11954                           status	equ	0xFD8
 11955                           
 11956 ;; *************** function _display_battery *****************
 11957 ;; Defined at:
 11958 ;;		line 305 in file "display.c"
 11959 ;; Parameters:    Size  Location     Type
 11960 ;;  volts           2   24[COMRAM] int 
 11961 ;; Auto vars:     Size  Location     Type
 11962 ;;		None
 11963 ;; Return value:  Size  Location     Type
 11964 ;;                  1    wreg      void 
 11965 ;; Registers used:
 11966 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11967 ;; Tracked objects:
 11968 ;;		On entry : 0/0
 11969 ;;		On exit  : 0/0
 11970 ;;		Unchanged: 0/0
 11971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11975 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11976 ;;Total ram usage:        6 bytes
 11977 ;; Hardware stack levels used:    1
 11978 ;; Hardware stack levels required when called:    7
 11979 ;; This function calls:
 11980 ;;		___awdiv
 11981 ;;		___awmod
 11982 ;;		_cmd
 11983 ;;		_cmd_incrementn
 11984 ;;		_wr16
 11985 ;;		_wr8s
 11986 ;; This function is called by:
 11987 ;;		_display_bottom_section
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           	psect	text22
 11992  004CCA                     __ptext22:
 11993                           	opt stack 0
 11994  004CCA                     _display_battery:
 11995                           	opt stack 22
 11996                           
 11997                           ;display.c: 306:     cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL
      +                          )<<0)));
 11998                           
 11999                           ;incstack = 0
 12000  004CCA  0EFF               	movlw	255
 12001  004CCC  6E11               	movwf	cmd@command,c
 12002  004CCE  0EFF               	movlw	255
 12003  004CD0  6E12               	movwf	cmd@command+1,c
 12004  004CD2  0EFF               	movlw	255
 12005  004CD4  6E13               	movwf	cmd@command+2,c
 12006  004CD6  0E04               	movlw	4
 12007  004CD8  6E14               	movwf	cmd@command+3,c
 12008  004CDA  EC70  F034         	call	_cmd	;wreg free
 12009                           
 12010                           ;display.c: 307:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 240);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 2048UL);cmd_incrementn(2);cmd(volts/10);
 12011  004CDE  0E2E               	movlw	46
 12012  004CE0  6E11               	movwf	cmd@command,c
 12013  004CE2  0EFF               	movlw	255
 12014  004CE4  6E12               	movwf	cmd@command+1,c
 12015  004CE6  0EFF               	movlw	255
 12016  004CE8  6E13               	movwf	cmd@command+2,c
 12017  004CEA  0EFF               	movlw	255
 12018  004CEC  6E14               	movwf	cmd@command+3,c
 12019  004CEE  EC70  F034         	call	_cmd	;wreg free
 12020  004CF2  504F               	movf	_cmd_offset,w,c
 12021  004CF4  6E1B               	movwf	??_display_battery& (0+255),c
 12022  004CF6  5050               	movf	_cmd_offset+1,w,c
 12023  004CF8  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 12024  004CFA  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 12025  004CFC  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 12026  004CFE  0E00               	movlw	0
 12027  004D00  241B               	addwf	??_display_battery,w,c
 12028  004D02  6E04               	movwf	wr16@addr,c
 12029  004D04  0E80               	movlw	128
 12030  004D06  201C               	addwfc	??_display_battery+1,w,c
 12031  004D08  6E05               	movwf	wr16@addr+1,c
 12032  004D0A  0E10               	movlw	16
 12033  004D0C  201D               	addwfc	??_display_battery+2,w,c
 12034  004D0E  6E06               	movwf	wr16@addr+2,c
 12035  004D10  0E00               	movlw	0
 12036  004D12  201E               	addwfc	??_display_battery+3,w,c
 12037  004D14  6E07               	movwf	wr16@addr+3,c
 12038  004D16  0E00               	movlw	0
 12039  004D18  6E09               	movwf	wr16@value+1,c
 12040  004D1A  0EF0               	movlw	240
 12041  004D1C  6E08               	movwf	wr16@value,c
 12042  004D1E  EC48  F035         	call	_wr16	;wreg free
 12043  004D22  0E02               	movlw	2
 12044  004D24  EC89  F035         	call	_cmd_incrementn
 12045  004D28  504F               	movf	_cmd_offset,w,c
 12046  004D2A  6E1B               	movwf	??_display_battery& (0+255),c
 12047  004D2C  5050               	movf	_cmd_offset+1,w,c
 12048  004D2E  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 12049  004D30  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 12050  004D32  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 12051  004D34  0E00               	movlw	0
 12052  004D36  241B               	addwf	??_display_battery,w,c
 12053  004D38  6E04               	movwf	wr16@addr,c
 12054  004D3A  0E80               	movlw	128
 12055  004D3C  201C               	addwfc	??_display_battery+1,w,c
 12056  004D3E  6E05               	movwf	wr16@addr+1,c
 12057  004D40  0E10               	movlw	16
 12058  004D42  201D               	addwfc	??_display_battery+2,w,c
 12059  004D44  6E06               	movwf	wr16@addr+2,c
 12060  004D46  0E00               	movlw	0
 12061  004D48  201E               	addwfc	??_display_battery+3,w,c
 12062  004D4A  6E07               	movwf	wr16@addr+3,c
 12063  004D4C  0E00               	movlw	0
 12064  004D4E  6E09               	movwf	wr16@value+1,c
 12065  004D50  0EEC               	movlw	236
 12066  004D52  6E08               	movwf	wr16@value,c
 12067  004D54  EC48  F035         	call	_wr16	;wreg free
 12068  004D58  0E02               	movlw	2
 12069  004D5A  EC89  F035         	call	_cmd_incrementn
 12070  004D5E  504F               	movf	_cmd_offset,w,c
 12071  004D60  6E1B               	movwf	??_display_battery& (0+255),c
 12072  004D62  5050               	movf	_cmd_offset+1,w,c
 12073  004D64  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 12074  004D66  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 12075  004D68  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 12076  004D6A  0E00               	movlw	0
 12077  004D6C  241B               	addwf	??_display_battery,w,c
 12078  004D6E  6E04               	movwf	wr16@addr,c
 12079  004D70  0E80               	movlw	128
 12080  004D72  201C               	addwfc	??_display_battery+1,w,c
 12081  004D74  6E05               	movwf	wr16@addr+1,c
 12082  004D76  0E10               	movlw	16
 12083  004D78  201D               	addwfc	??_display_battery+2,w,c
 12084  004D7A  6E06               	movwf	wr16@addr+2,c
 12085  004D7C  0E00               	movlw	0
 12086  004D7E  201E               	addwfc	??_display_battery+3,w,c
 12087  004D80  6E07               	movwf	wr16@addr+3,c
 12088  004D82  0E00               	movlw	0
 12089  004D84  6E09               	movwf	wr16@value+1,c
 12090  004D86  0E1E               	movlw	30
 12091  004D88  6E08               	movwf	wr16@value,c
 12092  004D8A  EC48  F035         	call	_wr16	;wreg free
 12093  004D8E  0E02               	movlw	2
 12094  004D90  EC89  F035         	call	_cmd_incrementn
 12095  004D94  504F               	movf	_cmd_offset,w,c
 12096  004D96  6E1B               	movwf	??_display_battery& (0+255),c
 12097  004D98  5050               	movf	_cmd_offset+1,w,c
 12098  004D9A  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 12099  004D9C  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 12100  004D9E  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 12101  004DA0  0E00               	movlw	0
 12102  004DA2  241B               	addwf	??_display_battery,w,c
 12103  004DA4  6E04               	movwf	wr16@addr,c
 12104  004DA6  0E80               	movlw	128
 12105  004DA8  201C               	addwfc	??_display_battery+1,w,c
 12106  004DAA  6E05               	movwf	wr16@addr+1,c
 12107  004DAC  0E10               	movlw	16
 12108  004DAE  201D               	addwfc	??_display_battery+2,w,c
 12109  004DB0  6E06               	movwf	wr16@addr+2,c
 12110  004DB2  0E00               	movlw	0
 12111  004DB4  201E               	addwfc	??_display_battery+3,w,c
 12112  004DB6  6E07               	movwf	wr16@addr+3,c
 12113  004DB8  0E08               	movlw	8
 12114  004DBA  6E09               	movwf	wr16@value+1,c
 12115  004DBC  0E00               	movlw	0
 12116  004DBE  6E08               	movwf	wr16@value,c
 12117  004DC0  EC48  F035         	call	_wr16	;wreg free
 12118  004DC4  0E02               	movlw	2
 12119  004DC6  EC89  F035         	call	_cmd_incrementn
 12120  004DCA  C019  F003         	movff	display_battery@volts,___awdiv@dividend
 12121  004DCE  C01A  F004         	movff	display_battery@volts+1,___awdiv@dividend+1
 12122  004DD2  0E00               	movlw	0
 12123  004DD4  6E06               	movwf	___awdiv@divisor+1,c
 12124  004DD6  0E0A               	movlw	10
 12125  004DD8  6E05               	movwf	___awdiv@divisor,c
 12126  004DDA  EC25  F033         	call	___awdiv	;wreg free
 12127  004DDE  C003  F011         	movff	?___awdiv,cmd@command
 12128  004DE2  C004  F012         	movff	?___awdiv+1,cmd@command+1
 12129  004DE6  0E00               	movlw	0
 12130  004DE8  BE12               	btfsc	cmd@command+1,7,c
 12131  004DEA  0EFF               	movlw	-1
 12132  004DEC  6E13               	movwf	cmd@command+2,c
 12133  004DEE  6E14               	movwf	cmd@command+3,c
 12134  004DF0  EC70  F034         	call	_cmd	;wreg free
 12135                           
 12136                           ;display.c: 308:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 240);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081
      +                          344UL +cmd_offset, "."));
 12137  004DF4  0E0C               	movlw	12
 12138  004DF6  6E11               	movwf	cmd@command,c
 12139  004DF8  0EFF               	movlw	255
 12140  004DFA  6E12               	movwf	cmd@command+1,c
 12141  004DFC  0EFF               	movlw	255
 12142  004DFE  6E13               	movwf	cmd@command+2,c
 12143  004E00  0EFF               	movlw	255
 12144  004E02  6E14               	movwf	cmd@command+3,c
 12145  004E04  EC70  F034         	call	_cmd	;wreg free
 12146  004E08  504F               	movf	_cmd_offset,w,c
 12147  004E0A  6E1B               	movwf	??_display_battery& (0+255),c
 12148  004E0C  5050               	movf	_cmd_offset+1,w,c
 12149  004E0E  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 12150  004E10  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 12151  004E12  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 12152  004E14  0E00               	movlw	0
 12153  004E16  241B               	addwf	??_display_battery,w,c
 12154  004E18  6E04               	movwf	wr16@addr,c
 12155  004E1A  0E80               	movlw	128
 12156  004E1C  201C               	addwfc	??_display_battery+1,w,c
 12157  004E1E  6E05               	movwf	wr16@addr+1,c
 12158  004E20  0E10               	movlw	16
 12159  004E22  201D               	addwfc	??_display_battery+2,w,c
 12160  004E24  6E06               	movwf	wr16@addr+2,c
 12161  004E26  0E00               	movlw	0
 12162  004E28  201E               	addwfc	??_display_battery+3,w,c
 12163  004E2A  6E07               	movwf	wr16@addr+3,c
 12164  004E2C  0E00               	movlw	0
 12165  004E2E  6E09               	movwf	wr16@value+1,c
 12166  004E30  0EF0               	movlw	240
 12167  004E32  6E08               	movwf	wr16@value,c
 12168  004E34  EC48  F035         	call	_wr16	;wreg free
 12169  004E38  0E02               	movlw	2
 12170  004E3A  EC89  F035         	call	_cmd_incrementn
 12171  004E3E  504F               	movf	_cmd_offset,w,c
 12172  004E40  6E1B               	movwf	??_display_battery& (0+255),c
 12173  004E42  5050               	movf	_cmd_offset+1,w,c
 12174  004E44  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 12175  004E46  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 12176  004E48  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 12177  004E4A  0E00               	movlw	0
 12178  004E4C  241B               	addwf	??_display_battery,w,c
 12179  004E4E  6E04               	movwf	wr16@addr,c
 12180  004E50  0E80               	movlw	128
 12181  004E52  201C               	addwfc	??_display_battery+1,w,c
 12182  004E54  6E05               	movwf	wr16@addr+1,c
 12183  004E56  0E10               	movlw	16
 12184  004E58  201D               	addwfc	??_display_battery+2,w,c
 12185  004E5A  6E06               	movwf	wr16@addr+2,c
 12186  004E5C  0E00               	movlw	0
 12187  004E5E  201E               	addwfc	??_display_battery+3,w,c
 12188  004E60  6E07               	movwf	wr16@addr+3,c
 12189  004E62  0E00               	movlw	0
 12190  004E64  6E09               	movwf	wr16@value+1,c
 12191  004E66  0EEC               	movlw	236
 12192  004E68  6E08               	movwf	wr16@value,c
 12193  004E6A  EC48  F035         	call	_wr16	;wreg free
 12194  004E6E  0E02               	movlw	2
 12195  004E70  EC89  F035         	call	_cmd_incrementn
 12196  004E74  504F               	movf	_cmd_offset,w,c
 12197  004E76  6E1B               	movwf	??_display_battery& (0+255),c
 12198  004E78  5050               	movf	_cmd_offset+1,w,c
 12199  004E7A  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 12200  004E7C  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 12201  004E7E  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 12202  004E80  0E00               	movlw	0
 12203  004E82  241B               	addwf	??_display_battery,w,c
 12204  004E84  6E04               	movwf	wr16@addr,c
 12205  004E86  0E80               	movlw	128
 12206  004E88  201C               	addwfc	??_display_battery+1,w,c
 12207  004E8A  6E05               	movwf	wr16@addr+1,c
 12208  004E8C  0E10               	movlw	16
 12209  004E8E  201D               	addwfc	??_display_battery+2,w,c
 12210  004E90  6E06               	movwf	wr16@addr+2,c
 12211  004E92  0E00               	movlw	0
 12212  004E94  201E               	addwfc	??_display_battery+3,w,c
 12213  004E96  6E07               	movwf	wr16@addr+3,c
 12214  004E98  0E00               	movlw	0
 12215  004E9A  6E09               	movwf	wr16@value+1,c
 12216  004E9C  0E1E               	movlw	30
 12217  004E9E  6E08               	movwf	wr16@value,c
 12218  004EA0  EC48  F035         	call	_wr16	;wreg free
 12219  004EA4  0E02               	movlw	2
 12220  004EA6  EC89  F035         	call	_cmd_incrementn
 12221  004EAA  504F               	movf	_cmd_offset,w,c
 12222  004EAC  6E1B               	movwf	??_display_battery& (0+255),c
 12223  004EAE  5050               	movf	_cmd_offset+1,w,c
 12224  004EB0  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 12225  004EB2  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 12226  004EB4  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 12227  004EB6  0E00               	movlw	0
 12228  004EB8  241B               	addwf	??_display_battery,w,c
 12229  004EBA  6E04               	movwf	wr16@addr,c
 12230  004EBC  0E80               	movlw	128
 12231  004EBE  201C               	addwfc	??_display_battery+1,w,c
 12232  004EC0  6E05               	movwf	wr16@addr+1,c
 12233  004EC2  0E10               	movlw	16
 12234  004EC4  201D               	addwfc	??_display_battery+2,w,c
 12235  004EC6  6E06               	movwf	wr16@addr+2,c
 12236  004EC8  0E00               	movlw	0
 12237  004ECA  201E               	addwfc	??_display_battery+3,w,c
 12238  004ECC  6E07               	movwf	wr16@addr+3,c
 12239  004ECE  0E00               	movlw	0
 12240  004ED0  6E09               	movwf	wr16@value+1,c
 12241  004ED2  0E00               	movlw	0
 12242  004ED4  6E08               	movwf	wr16@value,c
 12243  004ED6  EC48  F035         	call	_wr16	;wreg free
 12244  004EDA  0E02               	movlw	2
 12245  004EDC  EC89  F035         	call	_cmd_incrementn
 12246  004EE0  504F               	movf	_cmd_offset,w,c
 12247  004EE2  6E1B               	movwf	??_display_battery& (0+255),c
 12248  004EE4  5050               	movf	_cmd_offset+1,w,c
 12249  004EE6  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 12250  004EE8  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 12251  004EEA  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 12252  004EEC  0E00               	movlw	0
 12253  004EEE  241B               	addwf	??_display_battery,w,c
 12254  004EF0  6E09               	movwf	wr8s@addr,c
 12255  004EF2  0E80               	movlw	128
 12256  004EF4  201C               	addwfc	??_display_battery+1,w,c
 12257  004EF6  6E0A               	movwf	wr8s@addr+1,c
 12258  004EF8  0E10               	movlw	16
 12259  004EFA  201D               	addwfc	??_display_battery+2,w,c
 12260  004EFC  6E0B               	movwf	wr8s@addr+2,c
 12261  004EFE  0E00               	movlw	0
 12262  004F00  201E               	addwfc	??_display_battery+3,w,c
 12263  004F02  6E0C               	movwf	wr8s@addr+3,c
 12264  004F04  0E97               	movlw	low STR_21
 12265  004F06  6E0D               	movwf	wr8s@s,c
 12266  004F08  0E0F               	movlw	high STR_21
 12267  004F0A  6E0E               	movwf	wr8s@s+1,c
 12268  004F0C  EC67  F033         	call	_wr8s	;wreg free
 12269  004F10  EC89  F035         	call	_cmd_incrementn
 12270                           
 12271                           ;display.c: 309:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 248);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd(volts%10);
 12272  004F14  0E2E               	movlw	46
 12273  004F16  6E11               	movwf	cmd@command,c
 12274  004F18  0EFF               	movlw	255
 12275  004F1A  6E12               	movwf	cmd@command+1,c
 12276  004F1C  0EFF               	movlw	255
 12277  004F1E  6E13               	movwf	cmd@command+2,c
 12278  004F20  0EFF               	movlw	255
 12279  004F22  6E14               	movwf	cmd@command+3,c
 12280  004F24  EC70  F034         	call	_cmd	;wreg free
 12281  004F28  504F               	movf	_cmd_offset,w,c
 12282  004F2A  6E1B               	movwf	??_display_battery& (0+255),c
 12283  004F2C  5050               	movf	_cmd_offset+1,w,c
 12284  004F2E  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 12285  004F30  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 12286  004F32  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 12287  004F34  0E00               	movlw	0
 12288  004F36  241B               	addwf	??_display_battery,w,c
 12289  004F38  6E04               	movwf	wr16@addr,c
 12290  004F3A  0E80               	movlw	128
 12291  004F3C  201C               	addwfc	??_display_battery+1,w,c
 12292  004F3E  6E05               	movwf	wr16@addr+1,c
 12293  004F40  0E10               	movlw	16
 12294  004F42  201D               	addwfc	??_display_battery+2,w,c
 12295  004F44  6E06               	movwf	wr16@addr+2,c
 12296  004F46  0E00               	movlw	0
 12297  004F48  201E               	addwfc	??_display_battery+3,w,c
 12298  004F4A  6E07               	movwf	wr16@addr+3,c
 12299  004F4C  0E00               	movlw	0
 12300  004F4E  6E09               	movwf	wr16@value+1,c
 12301  004F50  0EF8               	movlw	248
 12302  004F52  6E08               	movwf	wr16@value,c
 12303  004F54  EC48  F035         	call	_wr16	;wreg free
 12304  004F58  0E02               	movlw	2
 12305  004F5A  EC89  F035         	call	_cmd_incrementn
 12306  004F5E  504F               	movf	_cmd_offset,w,c
 12307  004F60  6E1B               	movwf	??_display_battery& (0+255),c
 12308  004F62  5050               	movf	_cmd_offset+1,w,c
 12309  004F64  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 12310  004F66  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 12311  004F68  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 12312  004F6A  0E00               	movlw	0
 12313  004F6C  241B               	addwf	??_display_battery,w,c
 12314  004F6E  6E04               	movwf	wr16@addr,c
 12315  004F70  0E80               	movlw	128
 12316  004F72  201C               	addwfc	??_display_battery+1,w,c
 12317  004F74  6E05               	movwf	wr16@addr+1,c
 12318  004F76  0E10               	movlw	16
 12319  004F78  201D               	addwfc	??_display_battery+2,w,c
 12320  004F7A  6E06               	movwf	wr16@addr+2,c
 12321  004F7C  0E00               	movlw	0
 12322  004F7E  201E               	addwfc	??_display_battery+3,w,c
 12323  004F80  6E07               	movwf	wr16@addr+3,c
 12324  004F82  0E00               	movlw	0
 12325  004F84  6E09               	movwf	wr16@value+1,c
 12326  004F86  0EEC               	movlw	236
 12327  004F88  6E08               	movwf	wr16@value,c
 12328  004F8A  EC48  F035         	call	_wr16	;wreg free
 12329  004F8E  0E02               	movlw	2
 12330  004F90  EC89  F035         	call	_cmd_incrementn
 12331  004F94  504F               	movf	_cmd_offset,w,c
 12332  004F96  6E1B               	movwf	??_display_battery& (0+255),c
 12333  004F98  5050               	movf	_cmd_offset+1,w,c
 12334  004F9A  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 12335  004F9C  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 12336  004F9E  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 12337  004FA0  0E00               	movlw	0
 12338  004FA2  241B               	addwf	??_display_battery,w,c
 12339  004FA4  6E04               	movwf	wr16@addr,c
 12340  004FA6  0E80               	movlw	128
 12341  004FA8  201C               	addwfc	??_display_battery+1,w,c
 12342  004FAA  6E05               	movwf	wr16@addr+1,c
 12343  004FAC  0E10               	movlw	16
 12344  004FAE  201D               	addwfc	??_display_battery+2,w,c
 12345  004FB0  6E06               	movwf	wr16@addr+2,c
 12346  004FB2  0E00               	movlw	0
 12347  004FB4  201E               	addwfc	??_display_battery+3,w,c
 12348  004FB6  6E07               	movwf	wr16@addr+3,c
 12349  004FB8  0E00               	movlw	0
 12350  004FBA  6E09               	movwf	wr16@value+1,c
 12351  004FBC  0E1E               	movlw	30
 12352  004FBE  6E08               	movwf	wr16@value,c
 12353  004FC0  EC48  F035         	call	_wr16	;wreg free
 12354  004FC4  0E02               	movlw	2
 12355  004FC6  EC89  F035         	call	_cmd_incrementn
 12356  004FCA  504F               	movf	_cmd_offset,w,c
 12357  004FCC  6E1B               	movwf	??_display_battery& (0+255),c
 12358  004FCE  5050               	movf	_cmd_offset+1,w,c
 12359  004FD0  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 12360  004FD2  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 12361  004FD4  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 12362  004FD6  0E00               	movlw	0
 12363  004FD8  241B               	addwf	??_display_battery,w,c
 12364  004FDA  6E04               	movwf	wr16@addr,c
 12365  004FDC  0E80               	movlw	128
 12366  004FDE  201C               	addwfc	??_display_battery+1,w,c
 12367  004FE0  6E05               	movwf	wr16@addr+1,c
 12368  004FE2  0E10               	movlw	16
 12369  004FE4  201D               	addwfc	??_display_battery+2,w,c
 12370  004FE6  6E06               	movwf	wr16@addr+2,c
 12371  004FE8  0E00               	movlw	0
 12372  004FEA  201E               	addwfc	??_display_battery+3,w,c
 12373  004FEC  6E07               	movwf	wr16@addr+3,c
 12374  004FEE  0E00               	movlw	0
 12375  004FF0  6E09               	movwf	wr16@value+1,c
 12376  004FF2  0E00               	movlw	0
 12377  004FF4  6E08               	movwf	wr16@value,c
 12378  004FF6  EC48  F035         	call	_wr16	;wreg free
 12379  004FFA  0E02               	movlw	2
 12380  004FFC  EC89  F035         	call	_cmd_incrementn
 12381  005000  C019  F00B         	movff	display_battery@volts,___awmod@dividend
 12382  005004  C01A  F00C         	movff	display_battery@volts+1,___awmod@dividend+1
 12383  005008  0E00               	movlw	0
 12384  00500A  6E0E               	movwf	___awmod@divisor+1,c
 12385  00500C  0E0A               	movlw	10
 12386  00500E  6E0D               	movwf	___awmod@divisor,c
 12387  005010  ECA3  F033         	call	___awmod	;wreg free
 12388  005014  C00B  F011         	movff	?___awmod,cmd@command
 12389  005018  C00C  F012         	movff	?___awmod+1,cmd@command+1
 12390  00501C  0E00               	movlw	0
 12391  00501E  BE12               	btfsc	cmd@command+1,7,c
 12392  005020  0EFF               	movlw	-1
 12393  005022  6E13               	movwf	cmd@command+2,c
 12394  005024  6E14               	movwf	cmd@command+3,c
 12395  005026  EC70  F034         	call	_cmd	;wreg free
 12396  00502A  0012               	return		;funcret
 12397  00502C                     __end_of_display_battery:
 12398                           	opt stack 0
 12399                           tblptru	equ	0xFF8
 12400                           tblptrh	equ	0xFF7
 12401                           tblptrl	equ	0xFF6
 12402                           tablat	equ	0xFF5
 12403                           prodh	equ	0xFF4
 12404                           prodl	equ	0xFF3
 12405                           intcon	equ	0xFF2
 12406                           postinc0	equ	0xFEE
 12407                           wreg	equ	0xFE8
 12408                           postdec1	equ	0xFE5
 12409                           plusw1	equ	0xFE3
 12410                           fsr1l	equ	0xFE1
 12411                           plusw2	equ	0xFDB
 12412                           status	equ	0xFD8
 12413                           
 12414 ;; *************** function _wr8s *****************
 12415 ;; Defined at:
 12416 ;;		line 43 in file "FT800.c"
 12417 ;; Parameters:    Size  Location     Type
 12418 ;;  addr            4    8[COMRAM] unsigned long 
 12419 ;;  s               2   12[COMRAM] PTR const unsigned char 
 12420 ;;		 -> STR_36(2), STR_35(2), STR_34(7), STR_33(5), 
 12421 ;;		 -> STR_32(11), STR_31(6), STR_30(9), STR_29(5), 
 12422 ;;		 -> STR_28(2), STR_27(8), STR_26(7), STR_25(2), 
 12423 ;;		 -> STR_24(6), STR_23(8), STR_22(7), STR_21(2), 
 12424 ;;		 -> STR_20(2), STR_19(2), STR_18(6), STR_17(7), 
 12425 ;;		 -> STR_16(5), STR_15(7), STR_14(11), STR_13(5), 
 12426 ;;		 -> STR_12(2), STR_11(4), STR_10(2), STR_9(3), 
 12427 ;;		 -> STR_8(2), STR_7(5), STR_6(6), STR_5(4), 
 12428 ;;		 -> STR_4(4), STR_3(6), STR_2(10), STR_1(4), 
 12429 ;; Auto vars:     Size  Location     Type
 12430 ;;  i               1   17[COMRAM] unsigned char 
 12431 ;;  l               1   16[COMRAM] unsigned char 
 12432 ;; Return value:  Size  Location     Type
 12433 ;;                  1    wreg      unsigned char 
 12434 ;; Registers used:
 12435 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12436 ;; Tracked objects:
 12437 ;;		On entry : 0/0
 12438 ;;		On exit  : 0/0
 12439 ;;		Unchanged: 0/0
 12440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12441 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12444 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12445 ;;Total ram usage:       10 bytes
 12446 ;; Hardware stack levels used:    1
 12447 ;; Hardware stack levels required when called:    5
 12448 ;; This function calls:
 12449 ;;		_SPI_Exchange8bit
 12450 ;;		_strlen
 12451 ;; This function is called by:
 12452 ;;		_display_labels
 12453 ;;		_display_status
 12454 ;;		_display_laptime
 12455 ;;		_display_bspd
 12456 ;;		_display_battery
 12457 ;;		_display_fuel_level
 12458 ;;		_display_gasPres
 12459 ;;		_display_etc
 12460 ;;		_display_rpm
 12461 ;; This function uses a non-reentrant model
 12462 ;;
 12463                           
 12464                           	psect	text23
 12465  0066CE                     __ptext23:
 12466                           	opt stack 0
 12467  0066CE                     _wr8s:
 12468                           	opt stack 24
 12469                           
 12470                           ;FT800.c: 43: ft_uint8_t wr8s(unsigned long addr, const ft_char8_t *s);FT800.c: 44: {;FT
      +                          800.c: 45:     LATDbits.LATD0 = 0;
 12471                           
 12472                           ;incstack = 0
 12473  0066CE  908C               	bcf	3980,0,c	;volatile
 12474                           
 12475                           ;FT800.c: 46:     SPI_Exchange8bit(0x80 | (addr >> 16));
 12476  0066D0  500B               	movf	wr8s@addr+2,w,c
 12477  0066D2  0980               	iorlw	128
 12478  0066D4  ECC5  F035         	call	_SPI_Exchange8bit
 12479                           
 12480                           ;FT800.c: 47:     SPI_Exchange8bit(addr >> 8);
 12481  0066D8  500A               	movf	wr8s@addr+1,w,c
 12482  0066DA  ECC5  F035         	call	_SPI_Exchange8bit
 12483                           
 12484                           ;FT800.c: 48:     SPI_Exchange8bit(addr);
 12485  0066DE  5009               	movf	wr8s@addr,w,c
 12486  0066E0  ECC5  F035         	call	_SPI_Exchange8bit
 12487                           
 12488                           ;FT800.c: 49:     ft_uint8_t l = strlen(s);
 12489  0066E4  C00D  F003         	movff	wr8s@s,strlen@s
 12490  0066E8  C00E  F004         	movff	wr8s@s+1,strlen@s+1
 12491  0066EC  EC50  F034         	call	_strlen	;wreg free
 12492  0066F0  5003               	movf	?_strlen,w,c
 12493  0066F2  6E11               	movwf	wr8s@l,c
 12494                           
 12495                           ;FT800.c: 50:     ft_uint8_t i;;FT800.c: 51:     for(i=0;i<=l;i++){
 12496  0066F4  0E00               	movlw	0
 12497  0066F6  6E12               	movwf	wr8s@i,c
 12498  0066F8  D014               	goto	l31
 12499  0066FA                     
 12500                           ;FT800.c: 52:         SPI_Exchange8bit(s[i]);
 12501  0066FA  5012               	movf	wr8s@i,w,c
 12502  0066FC  0D01               	mullw	1
 12503  0066FE  C00D  F00F         	movff	wr8s@s,??_wr8s
 12504  006702  C00E  F010         	movff	wr8s@s+1,??_wr8s+1
 12505  006706  50F3               	movf	prodl,w,c
 12506  006708  260F               	addwf	??_wr8s,f,c
 12507  00670A  50F4               	movf	prodh,w,c
 12508  00670C  2210               	addwfc	??_wr8s+1,f,c
 12509  00670E  C00F  FFF6         	movff	??_wr8s,tblptrl
 12510  006712  C010  FFF7         	movff	??_wr8s+1,tblptrh
 12511  006716                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12512  006716  6AF8               	clrf	tblptru,c
 12513  006718                     	endif
 12514  006718                     	if	0	;tblptru may be non-zero
 12515  006718                     	endif
 12516  006718  0008               	tblrd		*
 12517  00671A  50F5               	movf	tablat,w,c
 12518  00671C  ECC5  F035         	call	_SPI_Exchange8bit
 12519                           
 12520                           ;FT800.c: 53:     }
 12521  006720  2A12               	incf	wr8s@i,f,c
 12522  006722                     l31:
 12523  006722  5012               	movf	wr8s@i,w,c
 12524  006724  5C11               	subwf	wr8s@l,w,c
 12525  006726  A0D8               	btfss	status,0,c
 12526  006728  D005               	goto	l34
 12527  00672A  D7E7               	goto	l32
 12528  00672C                     
 12529                           ;FT800.c: 55:         SPI_Exchange8bit(0);
 12530  00672C  0E00               	movlw	0
 12531  00672E  ECC5  F035         	call	_SPI_Exchange8bit
 12532                           
 12533                           ;FT800.c: 56:     }
 12534  006732  2A12               	incf	wr8s@i,f,c
 12535  006734                     l34:
 12536  006734  C012  F00F         	movff	wr8s@i,??_wr8s
 12537  006738  0E03               	movlw	3
 12538  00673A  160F               	andwf	??_wr8s,f,c
 12539  00673C  A4D8               	btfss	status,2,c
 12540  00673E  D7F6               	goto	l35
 12541                           
 12542                           ;FT800.c: 57:     LATDbits.LATD0 = 1;
 12543  006740  808C               	bsf	3980,0,c	;volatile
 12544                           
 12545                           ;FT800.c: 58:     return i;
 12546  006742  5012               	movf	wr8s@i,w,c
 12547  006744  0012               	return	
 12548  006746                     __end_of_wr8s:
 12549                           	opt stack 0
 12550                           tblptru	equ	0xFF8
 12551                           tblptrh	equ	0xFF7
 12552                           tblptrl	equ	0xFF6
 12553                           tablat	equ	0xFF5
 12554                           prodh	equ	0xFF4
 12555                           prodl	equ	0xFF3
 12556                           intcon	equ	0xFF2
 12557                           postinc0	equ	0xFEE
 12558                           wreg	equ	0xFE8
 12559                           postdec1	equ	0xFE5
 12560                           plusw1	equ	0xFE3
 12561                           fsr1l	equ	0xFE1
 12562                           plusw2	equ	0xFDB
 12563                           status	equ	0xFD8
 12564                           
 12565 ;; *************** function _strlen *****************
 12566 ;; Defined at:
 12567 ;;		line 12 in file "F:\Microchip\XC8\pic\sources\c99\common\strlen.c"
 12568 ;; Parameters:    Size  Location     Type
 12569 ;;  s               2    2[COMRAM] PTR const unsigned char 
 12570 ;;		 -> STR_36(2), STR_35(2), STR_34(7), STR_33(5), 
 12571 ;;		 -> STR_32(11), STR_31(6), STR_30(9), STR_29(5), 
 12572 ;;		 -> STR_28(2), STR_27(8), STR_26(7), STR_25(2), 
 12573 ;;		 -> STR_24(6), STR_23(8), STR_22(7), STR_21(2), 
 12574 ;;		 -> STR_20(2), STR_19(2), STR_18(6), STR_17(7), 
 12575 ;;		 -> STR_16(5), STR_15(7), STR_14(11), STR_13(5), 
 12576 ;;		 -> STR_12(2), STR_11(4), STR_10(2), STR_9(3), 
 12577 ;;		 -> STR_8(2), STR_7(5), STR_6(6), STR_5(4), 
 12578 ;;		 -> STR_4(4), STR_3(6), STR_2(10), STR_1(4), 
 12579 ;; Auto vars:     Size  Location     Type
 12580 ;;  a               2    6[COMRAM] PTR const unsigned char 
 12581 ;;		 -> STR_36(2), STR_35(2), STR_34(7), STR_33(5), 
 12582 ;;		 -> STR_32(11), STR_31(6), STR_30(9), STR_29(5), 
 12583 ;;		 -> STR_28(2), STR_27(8), STR_26(7), STR_25(2), 
 12584 ;;		 -> STR_24(6), STR_23(8), STR_22(7), STR_21(2), 
 12585 ;;		 -> STR_20(2), STR_19(2), STR_18(6), STR_17(7), 
 12586 ;;		 -> STR_16(5), STR_15(7), STR_14(11), STR_13(5), 
 12587 ;;		 -> STR_12(2), STR_11(4), STR_10(2), STR_9(3), 
 12588 ;;		 -> STR_8(2), STR_7(5), STR_6(6), STR_5(4), 
 12589 ;;		 -> STR_4(4), STR_3(6), STR_2(10), STR_1(4), 
 12590 ;; Return value:  Size  Location     Type
 12591 ;;                  2    2[COMRAM] unsigned int 
 12592 ;; Registers used:
 12593 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 12594 ;; Tracked objects:
 12595 ;;		On entry : 0/0
 12596 ;;		On exit  : 0/0
 12597 ;;		Unchanged: 0/0
 12598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12600 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12601 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12602 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12603 ;;Total ram usage:        6 bytes
 12604 ;; Hardware stack levels used:    1
 12605 ;; Hardware stack levels required when called:    4
 12606 ;; This function calls:
 12607 ;;		Nothing
 12608 ;; This function is called by:
 12609 ;;		_wr8s
 12610 ;; This function uses a non-reentrant model
 12611 ;;
 12612                           
 12613                           	psect	text24
 12614  0068A0                     __ptext24:
 12615                           	opt stack 0
 12616  0068A0                     _strlen:
 12617                           	opt stack 24
 12618                           
 12619                           ;incstack = 0
 12620  0068A0  C003  F007         	movff	strlen@s,strlen@a
 12621  0068A4  C004  F008         	movff	strlen@s+1,strlen@a+1
 12622  0068A8  D002               	goto	l1549
 12623  0068AA  4A03               	infsnz	strlen@s,f,c
 12624  0068AC  2A04               	incf	strlen@s+1,f,c
 12625  0068AE                     l1549:
 12626  0068AE  C003  FFF6         	movff	strlen@s,tblptrl
 12627  0068B2  C004  FFF7         	movff	strlen@s+1,tblptrh
 12628  0068B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12629  0068B6  6AF8               	clrf	tblptru,c
 12630  0068B8                     	endif
 12631  0068B8                     	if	0	;tblptru may be non-zero
 12632  0068B8                     	endif
 12633  0068B8  0008               	tblrd		*
 12634  0068BA  50F5               	movf	tablat,w,c
 12635  0068BC  0900               	iorlw	0
 12636  0068BE  A4D8               	btfss	status,2,c
 12637  0068C0  D7F4               	goto	l1550
 12638  0068C2  C007  F005         	movff	strlen@a,??_strlen
 12639  0068C6  C008  F006         	movff	strlen@a+1,??_strlen+1
 12640  0068CA  1E05               	comf	??_strlen,f,c
 12641  0068CC  1E06               	comf	??_strlen+1,f,c
 12642  0068CE  4A05               	infsnz	??_strlen,f,c
 12643  0068D0  2A06               	incf	??_strlen+1,f,c
 12644  0068D2  5003               	movf	strlen@s,w,c
 12645  0068D4  2405               	addwf	??_strlen,w,c
 12646  0068D6  6E03               	movwf	?_strlen,c
 12647  0068D8  5004               	movf	strlen@s+1,w,c
 12648  0068DA  2006               	addwfc	??_strlen+1,w,c
 12649  0068DC  6E04               	movwf	?_strlen+1,c
 12650  0068DE  0012               	return	
 12651  0068E0                     __end_of_strlen:
 12652                           	opt stack 0
 12653                           tblptru	equ	0xFF8
 12654                           tblptrh	equ	0xFF7
 12655                           tblptrl	equ	0xFF6
 12656                           tablat	equ	0xFF5
 12657                           prodh	equ	0xFF4
 12658                           prodl	equ	0xFF3
 12659                           intcon	equ	0xFF2
 12660                           postinc0	equ	0xFEE
 12661                           wreg	equ	0xFE8
 12662                           postdec1	equ	0xFE5
 12663                           plusw1	equ	0xFE3
 12664                           fsr1l	equ	0xFE1
 12665                           plusw2	equ	0xFDB
 12666                           status	equ	0xFD8
 12667                           
 12668 ;; *************** function _cmd *****************
 12669 ;; Defined at:
 12670 ;;		line 126 in file "FT800.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;  command         4   16[COMRAM] unsigned long 
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;		None
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      void 
 12677 ;; Registers used:
 12678 ;;		wreg, status,2, status,0, cstack
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12684 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12686 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12687 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12688 ;;Total ram usage:        8 bytes
 12689 ;; Hardware stack levels used:    1
 12690 ;; Hardware stack levels required when called:    6
 12691 ;; This function calls:
 12692 ;;		_cmd_incrementn
 12693 ;;		_wr32
 12694 ;; This function is called by:
 12695 ;;		_display_start
 12696 ;;		_display_end
 12697 ;;		_display_bottom_section
 12698 ;;		_display_labels
 12699 ;;		_display_grids
 12700 ;;		_display_status
 12701 ;;		_display_laptime
 12702 ;;		_display_waterTemp
 12703 ;;		_display_oilTemp
 12704 ;;		_display_bspd
 12705 ;;		_display_battery
 12706 ;;		_display_fuel_level
 12707 ;;		_display_gasPres
 12708 ;;		_display_tp
 12709 ;;		_display_etc
 12710 ;;		_display_speed
 12711 ;;		_display_brake_bias
 12712 ;;		_display_rpm
 12713 ;;		_display_gear
 12714 ;;		_display_fuel
 12715 ;; This function uses a non-reentrant model
 12716 ;;
 12717                           
 12718                           	psect	text25
 12719  0068E0                     __ptext25:
 12720                           	opt stack 0
 12721  0068E0                     _cmd:
 12722                           	opt stack 23
 12723                           
 12724                           ;FT800.c: 127:     wr32(1081344UL + cmd_offset, command);cmd_incrementn(4);
 12725                           
 12726                           ;incstack = 0
 12727  0068E0  504F               	movf	_cmd_offset,w,c
 12728  0068E2  6E15               	movwf	??_cmd& (0+255),c
 12729  0068E4  5050               	movf	_cmd_offset+1,w,c
 12730  0068E6  6E16               	movwf	(??_cmd+1)& (0+255),c
 12731  0068E8  6A17               	clrf	(??_cmd+2)& (0+255),c
 12732  0068EA  6A18               	clrf	(??_cmd+3)& (0+255),c
 12733  0068EC  0E00               	movlw	0
 12734  0068EE  2415               	addwf	??_cmd,w,c
 12735  0068F0  6E04               	movwf	wr32@addr,c
 12736  0068F2  0E80               	movlw	128
 12737  0068F4  2016               	addwfc	??_cmd+1,w,c
 12738  0068F6  6E05               	movwf	wr32@addr+1,c
 12739  0068F8  0E10               	movlw	16
 12740  0068FA  2017               	addwfc	??_cmd+2,w,c
 12741  0068FC  6E06               	movwf	wr32@addr+2,c
 12742  0068FE  0E00               	movlw	0
 12743  006900  2018               	addwfc	??_cmd+3,w,c
 12744  006902  6E07               	movwf	wr32@addr+3,c
 12745  006904  C011  F008         	movff	cmd@command,wr32@value
 12746  006908  C012  F009         	movff	cmd@command+1,wr32@value+1
 12747  00690C  C013  F00A         	movff	cmd@command+2,wr32@value+2
 12748  006910  C014  F00B         	movff	cmd@command+3,wr32@value+3
 12749  006914  ECDB  F033         	call	_wr32	;wreg free
 12750  006918  0E04               	movlw	4
 12751  00691A  EC89  F035         	call	_cmd_incrementn
 12752  00691E  0012               	return		;funcret
 12753  006920                     __end_of_cmd:
 12754                           	opt stack 0
 12755                           tblptru	equ	0xFF8
 12756                           tblptrh	equ	0xFF7
 12757                           tblptrl	equ	0xFF6
 12758                           tablat	equ	0xFF5
 12759                           prodh	equ	0xFF4
 12760                           prodl	equ	0xFF3
 12761                           intcon	equ	0xFF2
 12762                           postinc0	equ	0xFEE
 12763                           wreg	equ	0xFE8
 12764                           postdec1	equ	0xFE5
 12765                           plusw1	equ	0xFE3
 12766                           fsr1l	equ	0xFE1
 12767                           plusw2	equ	0xFDB
 12768                           status	equ	0xFD8
 12769                           
 12770 ;; *************** function _cmd_incrementn *****************
 12771 ;; Defined at:
 12772 ;;		line 122 in file "FT800.c"
 12773 ;; Parameters:    Size  Location     Type
 12774 ;;  n               1    wreg     unsigned char 
 12775 ;; Auto vars:     Size  Location     Type
 12776 ;;  n               1    4[COMRAM] unsigned char 
 12777 ;; Return value:  Size  Location     Type
 12778 ;;                  1    wreg      void 
 12779 ;; Registers used:
 12780 ;;		wreg, status,2, status,0
 12781 ;; Tracked objects:
 12782 ;;		On entry : 0/0
 12783 ;;		On exit  : 0/0
 12784 ;;		Unchanged: 0/0
 12785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12790 ;;Total ram usage:        3 bytes
 12791 ;; Hardware stack levels used:    1
 12792 ;; Hardware stack levels required when called:    4
 12793 ;; This function calls:
 12794 ;;		Nothing
 12795 ;; This function is called by:
 12796 ;;		_cmd
 12797 ;;		_display_labels
 12798 ;;		_display_status
 12799 ;;		_display_laptime
 12800 ;;		_display_waterTemp
 12801 ;;		_display_oilTemp
 12802 ;;		_display_bspd
 12803 ;;		_display_battery
 12804 ;;		_display_fuel_level
 12805 ;;		_display_gasPres
 12806 ;;		_display_tp
 12807 ;;		_display_etc
 12808 ;;		_display_speed
 12809 ;;		_display_brake_bias
 12810 ;;		_display_rpm
 12811 ;;		_display_fuel
 12812 ;; This function uses a non-reentrant model
 12813 ;;
 12814                           
 12815                           	psect	text26
 12816  006B12                     __ptext26:
 12817                           	opt stack 0
 12818  006B12                     _cmd_incrementn:
 12819                           	opt stack 25
 12820                           
 12821                           ;incstack = 0
 12822                           ;cmd_incrementn@n stored from wreg
 12823  006B12  6E05               	movwf	cmd_incrementn@n,c
 12824                           
 12825                           ;FT800.c: 123:     cmd_offset=(cmd_offset+n)%4096;
 12826  006B14  5005               	movf	cmd_incrementn@n,w,c
 12827  006B16  244F               	addwf	_cmd_offset,w,c
 12828  006B18  6E03               	movwf	??_cmd_incrementn& (0+255),c
 12829  006B1A  0E00               	movlw	0
 12830  006B1C  2050               	addwfc	_cmd_offset+1,w,c
 12831  006B1E  6E04               	movwf	(??_cmd_incrementn+1)& (0+255),c
 12832  006B20  0EFF               	movlw	255
 12833  006B22  1403               	andwf	??_cmd_incrementn,w,c
 12834  006B24  6E4F               	movwf	_cmd_offset,c
 12835  006B26  0E0F               	movlw	15
 12836  006B28  1404               	andwf	??_cmd_incrementn+1,w,c
 12837  006B2A  6E50               	movwf	_cmd_offset+1,c
 12838  006B2C  0012               	return		;funcret
 12839  006B2E                     __end_of_cmd_incrementn:
 12840                           	opt stack 0
 12841                           tblptru	equ	0xFF8
 12842                           tblptrh	equ	0xFF7
 12843                           tblptrl	equ	0xFF6
 12844                           tablat	equ	0xFF5
 12845                           prodh	equ	0xFF4
 12846                           prodl	equ	0xFF3
 12847                           intcon	equ	0xFF2
 12848                           postinc0	equ	0xFEE
 12849                           wreg	equ	0xFE8
 12850                           postdec1	equ	0xFE5
 12851                           plusw1	equ	0xFE3
 12852                           fsr1l	equ	0xFE1
 12853                           plusw2	equ	0xFDB
 12854                           status	equ	0xFD8
 12855                           
 12856 ;; *************** function ___awmod *****************
 12857 ;; Defined at:
 12858 ;;		line 7 in file "F:\Microchip\XC8\pic\sources\c99\common\awmod.c"
 12859 ;; Parameters:    Size  Location     Type
 12860 ;;  dividend        2   10[COMRAM] int 
 12861 ;;  divisor         2   12[COMRAM] int 
 12862 ;; Auto vars:     Size  Location     Type
 12863 ;;  sign            1   15[COMRAM] unsigned char 
 12864 ;;  counter         1   14[COMRAM] unsigned char 
 12865 ;; Return value:  Size  Location     Type
 12866 ;;                  2   10[COMRAM] int 
 12867 ;; Registers used:
 12868 ;;		wreg, status,2, status,0
 12869 ;; Tracked objects:
 12870 ;;		On entry : 0/0
 12871 ;;		On exit  : 0/0
 12872 ;;		Unchanged: 0/0
 12873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12875 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12877 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12878 ;;Total ram usage:        6 bytes
 12879 ;; Hardware stack levels used:    1
 12880 ;; Hardware stack levels required when called:    4
 12881 ;; This function calls:
 12882 ;;		Nothing
 12883 ;; This function is called by:
 12884 ;;		_display_battery
 12885 ;;		_display_gasPres
 12886 ;;		_display_rpm
 12887 ;;		_main
 12888 ;; This function uses a non-reentrant model
 12889 ;;
 12890                           
 12891                           	psect	text27
 12892  006746                     __ptext27:
 12893                           	opt stack 0
 12894  006746                     ___awmod:
 12895                           	opt stack 25
 12896                           
 12897                           ;incstack = 0
 12898  006746  0E00               	movlw	0
 12899  006748  6E10               	movwf	___awmod@sign,c
 12900  00674A  AE0C               	btfss	___awmod@dividend+1,7,c
 12901  00674C  D006               	goto	l1109
 12902  00674E  6C0B               	negf	___awmod@dividend,c
 12903  006750  1E0C               	comf	___awmod@dividend+1,f,c
 12904  006752  B0D8               	btfsc	status,0,c
 12905  006754  2A0C               	incf	___awmod@dividend+1,f,c
 12906  006756  0E01               	movlw	1
 12907  006758  6E10               	movwf	___awmod@sign,c
 12908  00675A                     l1109:
 12909  00675A  AE0E               	btfss	___awmod@divisor+1,7,c
 12910  00675C  D004               	goto	l1110
 12911  00675E  6C0D               	negf	___awmod@divisor,c
 12912  006760  1E0E               	comf	___awmod@divisor+1,f,c
 12913  006762  B0D8               	btfsc	status,0,c
 12914  006764  2A0E               	incf	___awmod@divisor+1,f,c
 12915  006766                     l1110:
 12916  006766  500D               	movf	___awmod@divisor,w,c
 12917  006768  100E               	iorwf	___awmod@divisor+1,w,c
 12918  00676A  B4D8               	btfsc	status,2,c
 12919  00676C  D018               	goto	l1117
 12920  00676E  0E01               	movlw	1
 12921  006770  6E0F               	movwf	___awmod@counter,c
 12922  006772  D004               	goto	l1112
 12923  006774  90D8               	bcf	status,0,c
 12924  006776  360D               	rlcf	___awmod@divisor,f,c
 12925  006778  360E               	rlcf	___awmod@divisor+1,f,c
 12926  00677A  2A0F               	incf	___awmod@counter,f,c
 12927  00677C                     l1112:
 12928  00677C  AE0E               	btfss	___awmod@divisor+1,7,c
 12929  00677E  D7FA               	goto	l1113
 12930  006780                     u1290:
 12931  006780  500D               	movf	___awmod@divisor,w,c
 12932  006782  5C0B               	subwf	___awmod@dividend,w,c
 12933  006784  500E               	movf	___awmod@divisor+1,w,c
 12934  006786  580C               	subwfb	___awmod@dividend+1,w,c
 12935  006788  A0D8               	btfss	status,0,c
 12936  00678A  D004               	goto	l1116
 12937  00678C  500D               	movf	___awmod@divisor,w,c
 12938  00678E  5E0B               	subwf	___awmod@dividend,f,c
 12939  006790  500E               	movf	___awmod@divisor+1,w,c
 12940  006792  5A0C               	subwfb	___awmod@dividend+1,f,c
 12941  006794                     l1116:
 12942  006794  90D8               	bcf	status,0,c
 12943  006796  320E               	rrcf	___awmod@divisor+1,f,c
 12944  006798  320D               	rrcf	___awmod@divisor,f,c
 12945  00679A  2E0F               	decfsz	___awmod@counter,f,c
 12946  00679C  D7F1               	goto	u1290
 12947  00679E                     l1117:
 12948  00679E  5010               	movf	___awmod@sign,w,c
 12949  0067A0  B4D8               	btfsc	status,2,c
 12950  0067A2  D004               	goto	l1118
 12951  0067A4  6C0B               	negf	___awmod@dividend,c
 12952  0067A6  1E0C               	comf	___awmod@dividend+1,f,c
 12953  0067A8  B0D8               	btfsc	status,0,c
 12954  0067AA  2A0C               	incf	___awmod@dividend+1,f,c
 12955  0067AC                     l1118:
 12956  0067AC  C00B  F00B         	movff	___awmod@dividend,?___awmod
 12957  0067B0  C00C  F00C         	movff	___awmod@dividend+1,?___awmod+1
 12958  0067B4  0012               	return	
 12959  0067B6                     __end_of___awmod:
 12960                           	opt stack 0
 12961                           tblptru	equ	0xFF8
 12962                           tblptrh	equ	0xFF7
 12963                           tblptrl	equ	0xFF6
 12964                           tablat	equ	0xFF5
 12965                           prodh	equ	0xFF4
 12966                           prodl	equ	0xFF3
 12967                           intcon	equ	0xFF2
 12968                           postinc0	equ	0xFEE
 12969                           wreg	equ	0xFE8
 12970                           postdec1	equ	0xFE5
 12971                           plusw1	equ	0xFE3
 12972                           fsr1l	equ	0xFE1
 12973                           plusw2	equ	0xFDB
 12974                           status	equ	0xFD8
 12975                           
 12976 ;; *************** function ___awdiv *****************
 12977 ;; Defined at:
 12978 ;;		line 7 in file "F:\Microchip\XC8\pic\sources\c99\common\awdiv.c"
 12979 ;; Parameters:    Size  Location     Type
 12980 ;;  dividend        2    2[COMRAM] int 
 12981 ;;  divisor         2    4[COMRAM] int 
 12982 ;; Auto vars:     Size  Location     Type
 12983 ;;  quotient        2    8[COMRAM] int 
 12984 ;;  sign            1    7[COMRAM] unsigned char 
 12985 ;;  counter         1    6[COMRAM] unsigned char 
 12986 ;; Return value:  Size  Location     Type
 12987 ;;                  2    2[COMRAM] int 
 12988 ;; Registers used:
 12989 ;;		wreg, status,2, status,0
 12990 ;; Tracked objects:
 12991 ;;		On entry : 0/0
 12992 ;;		On exit  : 0/0
 12993 ;;		Unchanged: 0/0
 12994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12996 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12998 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12999 ;;Total ram usage:        8 bytes
 13000 ;; Hardware stack levels used:    1
 13001 ;; Hardware stack levels required when called:    4
 13002 ;; This function calls:
 13003 ;;		Nothing
 13004 ;; This function is called by:
 13005 ;;		_display_battery
 13006 ;;		_display_gasPres
 13007 ;;		_display_rpm
 13008 ;;		_main
 13009 ;; This function uses a non-reentrant model
 13010 ;;
 13011                           
 13012                           	psect	text28
 13013  00664A                     __ptext28:
 13014                           	opt stack 0
 13015  00664A                     ___awdiv:
 13016                           	opt stack 25
 13017                           
 13018                           ;incstack = 0
 13019  00664A  0E00               	movlw	0
 13020  00664C  6E08               	movwf	___awdiv@sign,c
 13021  00664E  AE06               	btfss	___awdiv@divisor+1,7,c
 13022  006650  D006               	goto	l1096
 13023  006652  6C05               	negf	___awdiv@divisor,c
 13024  006654  1E06               	comf	___awdiv@divisor+1,f,c
 13025  006656  B0D8               	btfsc	status,0,c
 13026  006658  2A06               	incf	___awdiv@divisor+1,f,c
 13027  00665A  0E01               	movlw	1
 13028  00665C  6E08               	movwf	___awdiv@sign,c
 13029  00665E                     l1096:
 13030  00665E  AE04               	btfss	___awdiv@dividend+1,7,c
 13031  006660  D006               	goto	l1097
 13032  006662  6C03               	negf	___awdiv@dividend,c
 13033  006664  1E04               	comf	___awdiv@dividend+1,f,c
 13034  006666  B0D8               	btfsc	status,0,c
 13035  006668  2A04               	incf	___awdiv@dividend+1,f,c
 13036  00666A  0E01               	movlw	1
 13037  00666C  1A08               	xorwf	___awdiv@sign,f,c
 13038  00666E                     l1097:
 13039  00666E  0E00               	movlw	0
 13040  006670  6E0A               	movwf	___awdiv@quotient+1,c
 13041  006672  0E00               	movlw	0
 13042  006674  6E09               	movwf	___awdiv@quotient,c
 13043  006676  5005               	movf	___awdiv@divisor,w,c
 13044  006678  1006               	iorwf	___awdiv@divisor+1,w,c
 13045  00667A  B4D8               	btfsc	status,2,c
 13046  00667C  D01C               	goto	l1104
 13047  00667E  0E01               	movlw	1
 13048  006680  6E07               	movwf	___awdiv@counter,c
 13049  006682  D004               	goto	l1099
 13050  006684  90D8               	bcf	status,0,c
 13051  006686  3605               	rlcf	___awdiv@divisor,f,c
 13052  006688  3606               	rlcf	___awdiv@divisor+1,f,c
 13053  00668A  2A07               	incf	___awdiv@counter,f,c
 13054  00668C                     l1099:
 13055  00668C  AE06               	btfss	___awdiv@divisor+1,7,c
 13056  00668E  D7FA               	goto	l1100
 13057  006690                     u1230:
 13058  006690  90D8               	bcf	status,0,c
 13059  006692  3609               	rlcf	___awdiv@quotient,f,c
 13060  006694  360A               	rlcf	___awdiv@quotient+1,f,c
 13061  006696  5005               	movf	___awdiv@divisor,w,c
 13062  006698  5C03               	subwf	___awdiv@dividend,w,c
 13063  00669A  5006               	movf	___awdiv@divisor+1,w,c
 13064  00669C  5804               	subwfb	___awdiv@dividend+1,w,c
 13065  00669E  A0D8               	btfss	status,0,c
 13066  0066A0  D005               	goto	l1103
 13067  0066A2  5005               	movf	___awdiv@divisor,w,c
 13068  0066A4  5E03               	subwf	___awdiv@dividend,f,c
 13069  0066A6  5006               	movf	___awdiv@divisor+1,w,c
 13070  0066A8  5A04               	subwfb	___awdiv@dividend+1,f,c
 13071  0066AA  8009               	bsf	___awdiv@quotient,0,c
 13072  0066AC                     l1103:
 13073  0066AC  90D8               	bcf	status,0,c
 13074  0066AE  3206               	rrcf	___awdiv@divisor+1,f,c
 13075  0066B0  3205               	rrcf	___awdiv@divisor,f,c
 13076  0066B2  2E07               	decfsz	___awdiv@counter,f,c
 13077  0066B4  D7ED               	goto	u1230
 13078  0066B6                     l1104:
 13079  0066B6  5008               	movf	___awdiv@sign,w,c
 13080  0066B8  B4D8               	btfsc	status,2,c
 13081  0066BA  D004               	goto	l1105
 13082  0066BC  6C09               	negf	___awdiv@quotient,c
 13083  0066BE  1E0A               	comf	___awdiv@quotient+1,f,c
 13084  0066C0  B0D8               	btfsc	status,0,c
 13085  0066C2  2A0A               	incf	___awdiv@quotient+1,f,c
 13086  0066C4                     l1105:
 13087  0066C4  C009  F003         	movff	___awdiv@quotient,?___awdiv
 13088  0066C8  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
 13089  0066CC  0012               	return	
 13090  0066CE                     __end_of___awdiv:
 13091                           	opt stack 0
 13092                           tblptru	equ	0xFF8
 13093                           tblptrh	equ	0xFF7
 13094                           tblptrl	equ	0xFF6
 13095                           tablat	equ	0xFF5
 13096                           prodh	equ	0xFF4
 13097                           prodl	equ	0xFF3
 13098                           intcon	equ	0xFF2
 13099                           postinc0	equ	0xFEE
 13100                           wreg	equ	0xFE8
 13101                           postdec1	equ	0xFE5
 13102                           plusw1	equ	0xFE3
 13103                           fsr1l	equ	0xFE1
 13104                           plusw2	equ	0xFDB
 13105                           status	equ	0xFD8
 13106                           
 13107 ;; *************** function ___xxtofl *****************
 13108 ;; Defined at:
 13109 ;;		line 10 in file "F:\Microchip\XC8\pic\sources\c99\common\xxtofl.c"
 13110 ;; Parameters:    Size  Location     Type
 13111 ;;  sign            1    wreg     unsigned char 
 13112 ;;  val             4    2[COMRAM] long 
 13113 ;; Auto vars:     Size  Location     Type
 13114 ;;  sign            1   10[COMRAM] unsigned char 
 13115 ;;  arg             4   12[COMRAM] unsigned long 
 13116 ;;  exp             1   11[COMRAM] unsigned char 
 13117 ;; Return value:  Size  Location     Type
 13118 ;;                  4    2[COMRAM] unsigned char 
 13119 ;; Registers used:
 13120 ;;		wreg, status,2, status,0
 13121 ;; Tracked objects:
 13122 ;;		On entry : 0/0
 13123 ;;		On exit  : 0/0
 13124 ;;		Unchanged: 0/0
 13125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13127 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13128 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13129 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13130 ;;Total ram usage:       14 bytes
 13131 ;; Hardware stack levels used:    1
 13132 ;; Hardware stack levels required when called:    4
 13133 ;; This function calls:
 13134 ;;		Nothing
 13135 ;; This function is called by:
 13136 ;;		_main
 13137 ;; This function uses a non-reentrant model
 13138 ;;
 13139                           
 13140                           	psect	text29
 13141  005C5A                     __ptext29:
 13142                           	opt stack 0
 13143  005C5A                     ___xxtofl:
 13144                           	opt stack 26
 13145                           
 13146                           ;incstack = 0
 13147                           ;___xxtofl@sign stored from wreg
 13148  005C5A  6E0B               	movwf	___xxtofl@sign,c
 13149  005C5C  500B               	movf	___xxtofl@sign,w,c
 13150  005C5E  A4D8               	btfss	status,2,c
 13151  005C60  AE06               	btfss	___xxtofl@val+3,7,c
 13152  005C62  D01A               	goto	l1530
 13153  005C64  C003  F007         	movff	___xxtofl@val,??___xxtofl
 13154  005C68  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
 13155  005C6C  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
 13156  005C70  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
 13157  005C74  1E07               	comf	??___xxtofl,f,c
 13158  005C76  1E08               	comf	??___xxtofl+1,f,c
 13159  005C78  1E09               	comf	??___xxtofl+2,f,c
 13160  005C7A  1E0A               	comf	??___xxtofl+3,f,c
 13161  005C7C  2A07               	incf	??___xxtofl,f,c
 13162  005C7E  0E00               	movlw	0
 13163  005C80  2208               	addwfc	??___xxtofl+1,f,c
 13164  005C82  2209               	addwfc	??___xxtofl+2,f,c
 13165  005C84  220A               	addwfc	??___xxtofl+3,f,c
 13166  005C86  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
 13167  005C8A  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
 13168  005C8E  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
 13169  005C92  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
 13170  005C96  D008               	goto	l1531
 13171  005C98                     l1530:
 13172  005C98  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
 13173  005C9C  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13174  005CA0  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13175  005CA4  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13176  005CA8                     l1531:
 13177  005CA8  5003               	movf	___xxtofl@val,w,c
 13178  005CAA  1004               	iorwf	___xxtofl@val+1,w,c
 13179  005CAC  1005               	iorwf	___xxtofl@val+2,w,c
 13180  005CAE  1006               	iorwf	___xxtofl@val+3,w,c
 13181  005CB0  A4D8               	btfss	status,2,c
 13182  005CB2  D009               	goto	l1532
 13183  005CB4  0E00               	movlw	0
 13184  005CB6  6E03               	movwf	?___xxtofl,c
 13185  005CB8  0E00               	movlw	0
 13186  005CBA  6E04               	movwf	?___xxtofl+1,c
 13187  005CBC  0E00               	movlw	0
 13188  005CBE  6E05               	movwf	?___xxtofl+2,c
 13189  005CC0  0E00               	movlw	0
 13190  005CC2  6E06               	movwf	?___xxtofl+3,c
 13191  005CC4  0012               	return	
 13192  005CC6                     l1532:
 13193  005CC6  0E96               	movlw	150
 13194  005CC8  6E0C               	movwf	___xxtofl@exp,c
 13195  005CCA  D006               	goto	l1534
 13196  005CCC  2A0C               	incf	___xxtofl@exp,f,c
 13197  005CCE  90D8               	bcf	status,0,c
 13198  005CD0  3210               	rrcf	___xxtofl@arg+3,f,c
 13199  005CD2  320F               	rrcf	___xxtofl@arg+2,f,c
 13200  005CD4  320E               	rrcf	___xxtofl@arg+1,f,c
 13201  005CD6  320D               	rrcf	___xxtofl@arg,f,c
 13202  005CD8                     l1534:
 13203  005CD8  0E00               	movlw	0
 13204  005CDA  140D               	andwf	___xxtofl@arg,w,c
 13205  005CDC  6E07               	movwf	??___xxtofl& (0+255),c
 13206  005CDE  0E00               	movlw	0
 13207  005CE0  140E               	andwf	___xxtofl@arg+1,w,c
 13208  005CE2  6E08               	movwf	(??___xxtofl+1)& (0+255),c
 13209  005CE4  0E00               	movlw	0
 13210  005CE6  140F               	andwf	___xxtofl@arg+2,w,c
 13211  005CE8  6E09               	movwf	(??___xxtofl+2)& (0+255),c
 13212  005CEA  0EFE               	movlw	254
 13213  005CEC  1410               	andwf	___xxtofl@arg+3,w,c
 13214  005CEE  6E0A               	movwf	(??___xxtofl+3)& (0+255),c
 13215  005CF0  5007               	movf	??___xxtofl,w,c
 13216  005CF2  1008               	iorwf	??___xxtofl+1,w,c
 13217  005CF4  1009               	iorwf	??___xxtofl+2,w,c
 13218  005CF6  100A               	iorwf	??___xxtofl+3,w,c
 13219  005CF8  B4D8               	btfsc	status,2,c
 13220  005CFA  D00D               	goto	l1537
 13221  005CFC  D7E7               	goto	l1535
 13222  005CFE  2A0C               	incf	___xxtofl@exp,f,c
 13223  005D00  0E01               	movlw	1
 13224  005D02  260D               	addwf	___xxtofl@arg,f,c
 13225  005D04  0E00               	movlw	0
 13226  005D06  220E               	addwfc	___xxtofl@arg+1,f,c
 13227  005D08  220F               	addwfc	___xxtofl@arg+2,f,c
 13228  005D0A  2210               	addwfc	___xxtofl@arg+3,f,c
 13229  005D0C  90D8               	bcf	status,0,c
 13230  005D0E  3210               	rrcf	___xxtofl@arg+3,f,c
 13231  005D10  320F               	rrcf	___xxtofl@arg+2,f,c
 13232  005D12  320E               	rrcf	___xxtofl@arg+1,f,c
 13233  005D14  320D               	rrcf	___xxtofl@arg,f,c
 13234  005D16                     l1537:
 13235  005D16  0E00               	movlw	0
 13236  005D18  140D               	andwf	___xxtofl@arg,w,c
 13237  005D1A  6E07               	movwf	??___xxtofl& (0+255),c
 13238  005D1C  0E00               	movlw	0
 13239  005D1E  140E               	andwf	___xxtofl@arg+1,w,c
 13240  005D20  6E08               	movwf	(??___xxtofl+1)& (0+255),c
 13241  005D22  0E00               	movlw	0
 13242  005D24  140F               	andwf	___xxtofl@arg+2,w,c
 13243  005D26  6E09               	movwf	(??___xxtofl+2)& (0+255),c
 13244  005D28  0EFF               	movlw	255
 13245  005D2A  1410               	andwf	___xxtofl@arg+3,w,c
 13246  005D2C  6E0A               	movwf	(??___xxtofl+3)& (0+255),c
 13247  005D2E  5007               	movf	??___xxtofl,w,c
 13248  005D30  1008               	iorwf	??___xxtofl+1,w,c
 13249  005D32  1009               	iorwf	??___xxtofl+2,w,c
 13250  005D34  100A               	iorwf	??___xxtofl+3,w,c
 13251  005D36  B4D8               	btfsc	status,2,c
 13252  005D38  D007               	goto	l1540
 13253  005D3A  D7E1               	goto	l1538
 13254  005D3C  060C               	decf	___xxtofl@exp,f,c
 13255  005D3E  90D8               	bcf	status,0,c
 13256  005D40  360D               	rlcf	___xxtofl@arg,f,c
 13257  005D42  360E               	rlcf	___xxtofl@arg+1,f,c
 13258  005D44  360F               	rlcf	___xxtofl@arg+2,f,c
 13259  005D46  3610               	rlcf	___xxtofl@arg+3,f,c
 13260  005D48                     l1540:
 13261  005D48  BE0F               	btfsc	___xxtofl@arg+2,7,c
 13262  005D4A  D003               	goto	u1680
 13263  005D4C  0E02               	movlw	2
 13264  005D4E  600C               	cpfslt	___xxtofl@exp,c
 13265  005D50  D7F5               	goto	l1541
 13266  005D52                     u1680:
 13267  005D52  A00C               	btfss	___xxtofl@exp,0,c
 13268  005D54  9E0F               	bcf	___xxtofl@arg+2,7,c
 13269  005D56  90D8               	bcf	status,0,c
 13270  005D58  320C               	rrcf	___xxtofl@exp,f,c
 13271  005D5A  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
 13272  005D5E  6A08               	clrf	(??___xxtofl+1)& (0+255),c
 13273  005D60  6A09               	clrf	(??___xxtofl+2)& (0+255),c
 13274  005D62  6A0A               	clrf	(??___xxtofl+3)& (0+255),c
 13275  005D64  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
 13276  005D68  6A09               	clrf	??___xxtofl+2,c
 13277  005D6A  6A08               	clrf	??___xxtofl+1,c
 13278  005D6C  6A07               	clrf	??___xxtofl,c
 13279  005D6E  5007               	movf	??___xxtofl,w,c
 13280  005D70  120D               	iorwf	___xxtofl@arg,f,c
 13281  005D72  5008               	movf	??___xxtofl+1,w,c
 13282  005D74  120E               	iorwf	___xxtofl@arg+1,f,c
 13283  005D76  5009               	movf	??___xxtofl+2,w,c
 13284  005D78  120F               	iorwf	___xxtofl@arg+2,f,c
 13285  005D7A  500A               	movf	??___xxtofl+3,w,c
 13286  005D7C  1210               	iorwf	___xxtofl@arg+3,f,c
 13287  005D7E  500B               	movf	___xxtofl@sign,w,c
 13288  005D80  A4D8               	btfss	status,2,c
 13289  005D82  AE06               	btfss	___xxtofl@val+3,7,c
 13290  005D84  D001               	goto	l1546
 13291  005D86  8E10               	bsf	___xxtofl@arg+3,7,c
 13292  005D88                     l1546:
 13293  005D88  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
 13294  005D8C  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
 13295  005D90  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
 13296  005D94  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
 13297  005D98  0012               	return	
 13298  005D9A                     __end_of___xxtofl:
 13299                           	opt stack 0
 13300                           tblptru	equ	0xFF8
 13301                           tblptrh	equ	0xFF7
 13302                           tblptrl	equ	0xFF6
 13303                           tablat	equ	0xFF5
 13304                           prodh	equ	0xFF4
 13305                           prodl	equ	0xFF3
 13306                           intcon	equ	0xFF2
 13307                           postinc0	equ	0xFEE
 13308                           wreg	equ	0xFE8
 13309                           postdec1	equ	0xFE5
 13310                           plusw1	equ	0xFE3
 13311                           fsr1l	equ	0xFE1
 13312                           plusw2	equ	0xFDB
 13313                           status	equ	0xFD8
 13314                           
 13315 ;; *************** function ___flge *****************
 13316 ;; Defined at:
 13317 ;;		line 4 in file "F:\Microchip\XC8\pic\sources\c99\common\flge.c"
 13318 ;; Parameters:    Size  Location     Type
 13319 ;;  ff1             4   16[COMRAM] unsigned char 
 13320 ;;  ff2             4   20[COMRAM] unsigned char 
 13321 ;; Auto vars:     Size  Location     Type
 13322 ;;		None
 13323 ;; Return value:  Size  Location     Type
 13324 ;;		None               void
 13325 ;; Registers used:
 13326 ;;		wreg, status,2, status,0
 13327 ;; Tracked objects:
 13328 ;;		On entry : 0/0
 13329 ;;		On exit  : 0/0
 13330 ;;		Unchanged: 0/0
 13331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13332 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13334 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13335 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13336 ;;Total ram usage:       12 bytes
 13337 ;; Hardware stack levels used:    1
 13338 ;; Hardware stack levels required when called:    4
 13339 ;; This function calls:
 13340 ;;		Nothing
 13341 ;; This function is called by:
 13342 ;;		_main
 13343 ;; This function uses a non-reentrant model
 13344 ;;
 13345                           
 13346                           	psect	text30
 13347  005D9A                     __ptext30:
 13348                           	opt stack 0
 13349  005D9A                     ___flge:
 13350                           	opt stack 26
 13351                           
 13352                           ;incstack = 0
 13353  005D9A  0E00               	movlw	0
 13354  005D9C  1411               	andwf	___flge@ff1,w,c
 13355  005D9E  6E19               	movwf	??___flge& (0+255),c
 13356  005DA0  0E00               	movlw	0
 13357  005DA2  1412               	andwf	___flge@ff1+1,w,c
 13358  005DA4  6E1A               	movwf	(??___flge+1)& (0+255),c
 13359  005DA6  0E80               	movlw	128
 13360  005DA8  1413               	andwf	___flge@ff1+2,w,c
 13361  005DAA  6E1B               	movwf	(??___flge+2)& (0+255),c
 13362  005DAC  0E7F               	movlw	127
 13363  005DAE  1414               	andwf	___flge@ff1+3,w,c
 13364  005DB0  6E1C               	movwf	(??___flge+3)& (0+255),c
 13365  005DB2  5019               	movf	??___flge,w,c
 13366  005DB4  101A               	iorwf	??___flge+1,w,c
 13367  005DB6  101B               	iorwf	??___flge+2,w,c
 13368  005DB8  101C               	iorwf	??___flge+3,w,c
 13369  005DBA  A4D8               	btfss	status,2,c
 13370  005DBC  D008               	goto	l1137
 13371  005DBE  0E00               	movlw	0
 13372  005DC0  6E11               	movwf	___flge@ff1,c
 13373  005DC2  0E00               	movlw	0
 13374  005DC4  6E12               	movwf	___flge@ff1+1,c
 13375  005DC6  0E00               	movlw	0
 13376  005DC8  6E13               	movwf	___flge@ff1+2,c
 13377  005DCA  0E00               	movlw	0
 13378  005DCC  6E14               	movwf	___flge@ff1+3,c
 13379  005DCE                     l1137:
 13380  005DCE  0E00               	movlw	0
 13381  005DD0  1415               	andwf	___flge@ff2,w,c
 13382  005DD2  6E19               	movwf	??___flge& (0+255),c
 13383  005DD4  0E00               	movlw	0
 13384  005DD6  1416               	andwf	___flge@ff2+1,w,c
 13385  005DD8  6E1A               	movwf	(??___flge+1)& (0+255),c
 13386  005DDA  0E80               	movlw	128
 13387  005DDC  1417               	andwf	___flge@ff2+2,w,c
 13388  005DDE  6E1B               	movwf	(??___flge+2)& (0+255),c
 13389  005DE0  0E7F               	movlw	127
 13390  005DE2  1418               	andwf	___flge@ff2+3,w,c
 13391  005DE4  6E1C               	movwf	(??___flge+3)& (0+255),c
 13392  005DE6  5019               	movf	??___flge,w,c
 13393  005DE8  101A               	iorwf	??___flge+1,w,c
 13394  005DEA  101B               	iorwf	??___flge+2,w,c
 13395  005DEC  101C               	iorwf	??___flge+3,w,c
 13396  005DEE  A4D8               	btfss	status,2,c
 13397  005DF0  D008               	goto	l1138
 13398  005DF2  0E00               	movlw	0
 13399  005DF4  6E15               	movwf	___flge@ff2,c
 13400  005DF6  0E00               	movlw	0
 13401  005DF8  6E16               	movwf	___flge@ff2+1,c
 13402  005DFA  0E00               	movlw	0
 13403  005DFC  6E17               	movwf	___flge@ff2+2,c
 13404  005DFE  0E00               	movlw	0
 13405  005E00  6E18               	movwf	___flge@ff2+3,c
 13406  005E02                     l1138:
 13407  005E02  AE14               	btfss	___flge@ff1+3,7,c
 13408  005E04  D01D               	goto	l1139
 13409  005E06  C011  F019         	movff	___flge@ff1,??___flge
 13410  005E0A  C012  F01A         	movff	___flge@ff1+1,??___flge+1
 13411  005E0E  C013  F01B         	movff	___flge@ff1+2,??___flge+2
 13412  005E12  C014  F01C         	movff	___flge@ff1+3,??___flge+3
 13413  005E16  1E19               	comf	??___flge,f,c
 13414  005E18  1E1A               	comf	??___flge+1,f,c
 13415  005E1A  1E1B               	comf	??___flge+2,f,c
 13416  005E1C  1E1C               	comf	??___flge+3,f,c
 13417  005E1E  2A19               	incf	??___flge,f,c
 13418  005E20  0E00               	movlw	0
 13419  005E22  221A               	addwfc	??___flge+1,f,c
 13420  005E24  221B               	addwfc	??___flge+2,f,c
 13421  005E26  221C               	addwfc	??___flge+3,f,c
 13422  005E28  0E00               	movlw	0
 13423  005E2A  2419               	addwf	??___flge,w,c
 13424  005E2C  6E11               	movwf	___flge@ff1,c
 13425  005E2E  0E00               	movlw	0
 13426  005E30  201A               	addwfc	??___flge+1,w,c
 13427  005E32  6E12               	movwf	___flge@ff1+1,c
 13428  005E34  0E00               	movlw	0
 13429  005E36  201B               	addwfc	??___flge+2,w,c
 13430  005E38  6E13               	movwf	___flge@ff1+2,c
 13431  005E3A  0E80               	movlw	128
 13432  005E3C  201C               	addwfc	??___flge+3,w,c
 13433  005E3E  6E14               	movwf	___flge@ff1+3,c
 13434  005E40                     l1139:
 13435  005E40  AE18               	btfss	___flge@ff2+3,7,c
 13436  005E42  D01D               	goto	l1140
 13437  005E44  C015  F019         	movff	___flge@ff2,??___flge
 13438  005E48  C016  F01A         	movff	___flge@ff2+1,??___flge+1
 13439  005E4C  C017  F01B         	movff	___flge@ff2+2,??___flge+2
 13440  005E50  C018  F01C         	movff	___flge@ff2+3,??___flge+3
 13441  005E54  1E19               	comf	??___flge,f,c
 13442  005E56  1E1A               	comf	??___flge+1,f,c
 13443  005E58  1E1B               	comf	??___flge+2,f,c
 13444  005E5A  1E1C               	comf	??___flge+3,f,c
 13445  005E5C  2A19               	incf	??___flge,f,c
 13446  005E5E  0E00               	movlw	0
 13447  005E60  221A               	addwfc	??___flge+1,f,c
 13448  005E62  221B               	addwfc	??___flge+2,f,c
 13449  005E64  221C               	addwfc	??___flge+3,f,c
 13450  005E66  0E00               	movlw	0
 13451  005E68  2419               	addwf	??___flge,w,c
 13452  005E6A  6E15               	movwf	___flge@ff2,c
 13453  005E6C  0E00               	movlw	0
 13454  005E6E  201A               	addwfc	??___flge+1,w,c
 13455  005E70  6E16               	movwf	___flge@ff2+1,c
 13456  005E72  0E00               	movlw	0
 13457  005E74  201B               	addwfc	??___flge+2,w,c
 13458  005E76  6E17               	movwf	___flge@ff2+2,c
 13459  005E78  0E80               	movlw	128
 13460  005E7A  201C               	addwfc	??___flge+3,w,c
 13461  005E7C  6E18               	movwf	___flge@ff2+3,c
 13462  005E7E                     l1140:
 13463  005E7E  0E00               	movlw	0
 13464  005E80  1A11               	xorwf	___flge@ff1,f,c
 13465  005E82  0E00               	movlw	0
 13466  005E84  1A12               	xorwf	___flge@ff1+1,f,c
 13467  005E86  0E00               	movlw	0
 13468  005E88  1A13               	xorwf	___flge@ff1+2,f,c
 13469  005E8A  0E80               	movlw	128
 13470  005E8C  1A14               	xorwf	___flge@ff1+3,f,c
 13471  005E8E  0E00               	movlw	0
 13472  005E90  1A15               	xorwf	___flge@ff2,f,c
 13473  005E92  0E00               	movlw	0
 13474  005E94  1A16               	xorwf	___flge@ff2+1,f,c
 13475  005E96  0E00               	movlw	0
 13476  005E98  1A17               	xorwf	___flge@ff2+2,f,c
 13477  005E9A  0E80               	movlw	128
 13478  005E9C  1A18               	xorwf	___flge@ff2+3,f,c
 13479  005E9E  5015               	movf	___flge@ff2,w,c
 13480  005EA0  5C11               	subwf	___flge@ff1,w,c
 13481  005EA2  5016               	movf	___flge@ff2+1,w,c
 13482  005EA4  5812               	subwfb	___flge@ff1+1,w,c
 13483  005EA6  5017               	movf	___flge@ff2+2,w,c
 13484  005EA8  5813               	subwfb	___flge@ff1+2,w,c
 13485  005EAA  5018               	movf	___flge@ff2+3,w,c
 13486  005EAC  5814               	subwfb	___flge@ff1+3,w,c
 13487  005EAE  B0D8               	btfsc	status,0,c
 13488  005EB0  D002               	goto	l1142
 13489  005EB2  90D8               	bcf	status,0,c
 13490  005EB4  0012               	return	
 13491  005EB6                     l1142:
 13492  005EB6  80D8               	bsf	status,0,c
 13493  005EB8  0012               	return	
 13494  005EBA                     __end_of___flge:
 13495                           	opt stack 0
 13496                           tblptru	equ	0xFF8
 13497                           tblptrh	equ	0xFF7
 13498                           tblptrl	equ	0xFF6
 13499                           tablat	equ	0xFF5
 13500                           prodh	equ	0xFF4
 13501                           prodl	equ	0xFF3
 13502                           intcon	equ	0xFF2
 13503                           postinc0	equ	0xFEE
 13504                           wreg	equ	0xFE8
 13505                           postdec1	equ	0xFE5
 13506                           plusw1	equ	0xFE3
 13507                           fsr1l	equ	0xFE1
 13508                           plusw2	equ	0xFDB
 13509                           status	equ	0xFD8
 13510                           
 13511 ;; *************** function _TMR1_Reload *****************
 13512 ;; Defined at:
 13513 ;;		line 143 in file "mcc_generated_files/tmr1.c"
 13514 ;; Parameters:    Size  Location     Type
 13515 ;;		None
 13516 ;; Auto vars:     Size  Location     Type
 13517 ;;		None
 13518 ;; Return value:  Size  Location     Type
 13519 ;;                  1    wreg      void 
 13520 ;; Registers used:
 13521 ;;		wreg, status,2
 13522 ;; Tracked objects:
 13523 ;;		On entry : 0/0
 13524 ;;		On exit  : 0/0
 13525 ;;		Unchanged: 0/0
 13526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13531 ;;Total ram usage:        0 bytes
 13532 ;; Hardware stack levels used:    1
 13533 ;; Hardware stack levels required when called:    4
 13534 ;; This function calls:
 13535 ;;		Nothing
 13536 ;; This function is called by:
 13537 ;;		_main
 13538 ;; This function uses a non-reentrant model
 13539 ;;
 13540                           
 13541                           	psect	text31
 13542  006BB8                     __ptext31:
 13543                           	opt stack 0
 13544  006BB8                     _TMR1_Reload:
 13545                           	opt stack 26
 13546                           
 13547                           ;mcc_generated_files/tmr1.c: 146:     TMR1H = (timer1ReloadVal >> 8);
 13548                           
 13549                           ;incstack = 0
 13550  006BB8  504E               	movf	_timer1ReloadVal+1,w,c	;volatile
 13551  006BBA  6ECF               	movwf	4047,c	;volatile
 13552                           
 13553                           ;mcc_generated_files/tmr1.c: 147:     TMR1L = timer1ReloadVal;
 13554  006BBC  C04D  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 13555  006BC0  0012               	return		;funcret
 13556  006BC2                     __end_of_TMR1_Reload:
 13557                           	opt stack 0
 13558                           tblptru	equ	0xFF8
 13559                           tblptrh	equ	0xFF7
 13560                           tblptrl	equ	0xFF6
 13561                           tablat	equ	0xFF5
 13562                           prodh	equ	0xFF4
 13563                           prodl	equ	0xFF3
 13564                           intcon	equ	0xFF2
 13565                           postinc0	equ	0xFEE
 13566                           wreg	equ	0xFE8
 13567                           postdec1	equ	0xFE5
 13568                           plusw1	equ	0xFE3
 13569                           fsr1l	equ	0xFE1
 13570                           plusw2	equ	0xFDB
 13571                           status	equ	0xFD8
 13572                           
 13573 ;; *************** function _TMR0_StopTimer *****************
 13574 ;; Defined at:
 13575 ;;		line 101 in file "mcc_generated_files/tmr0.c"
 13576 ;; Parameters:    Size  Location     Type
 13577 ;;		None
 13578 ;; Auto vars:     Size  Location     Type
 13579 ;;		None
 13580 ;; Return value:  Size  Location     Type
 13581 ;;                  1    wreg      void 
 13582 ;; Registers used:
 13583 ;;		None
 13584 ;; Tracked objects:
 13585 ;;		On entry : 0/0
 13586 ;;		On exit  : 0/0
 13587 ;;		Unchanged: 0/0
 13588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13593 ;;Total ram usage:        0 bytes
 13594 ;; Hardware stack levels used:    1
 13595 ;; Hardware stack levels required when called:    4
 13596 ;; This function calls:
 13597 ;;		Nothing
 13598 ;; This function is called by:
 13599 ;;		_main
 13600 ;; This function uses a non-reentrant model
 13601 ;;
 13602                           
 13603                           	psect	text32
 13604  006BDE                     __ptext32:
 13605                           	opt stack 0
 13606  006BDE                     _TMR0_StopTimer:
 13607                           	opt stack 26
 13608                           
 13609                           ;mcc_generated_files/tmr0.c: 104:     T0CONbits.TMR0ON = 0;
 13610                           
 13611                           ;incstack = 0
 13612  006BDE  9ED5               	bcf	4053,7,c	;volatile
 13613  006BE0  0012               	return		;funcret
 13614  006BE2                     __end_of_TMR0_StopTimer:
 13615                           	opt stack 0
 13616                           tblptru	equ	0xFF8
 13617                           tblptrh	equ	0xFF7
 13618                           tblptrl	equ	0xFF6
 13619                           tablat	equ	0xFF5
 13620                           prodh	equ	0xFF4
 13621                           prodl	equ	0xFF3
 13622                           intcon	equ	0xFF2
 13623                           postinc0	equ	0xFEE
 13624                           wreg	equ	0xFE8
 13625                           postdec1	equ	0xFE5
 13626                           plusw1	equ	0xFE3
 13627                           fsr1l	equ	0xFE1
 13628                           plusw2	equ	0xFDB
 13629                           status	equ	0xFD8
 13630                           
 13631 ;; *************** function _SYSTEM_Initialize *****************
 13632 ;; Defined at:
 13633 ;;		line 111 in file "mcc_generated_files/mcc.c"
 13634 ;; Parameters:    Size  Location     Type
 13635 ;;		None
 13636 ;; Auto vars:     Size  Location     Type
 13637 ;;		None
 13638 ;; Return value:  Size  Location     Type
 13639 ;;                  1    wreg      void 
 13640 ;; Registers used:
 13641 ;;		wreg, status,2, status,0, cstack
 13642 ;; Tracked objects:
 13643 ;;		On entry : 0/0
 13644 ;;		On exit  : 0/0
 13645 ;;		Unchanged: 0/0
 13646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13651 ;;Total ram usage:        0 bytes
 13652 ;; Hardware stack levels used:    1
 13653 ;; Hardware stack levels required when called:    6
 13654 ;; This function calls:
 13655 ;;		_ECAN_Initialize
 13656 ;;		_INTERRUPT_Initialize
 13657 ;;		_OSCILLATOR_Initialize
 13658 ;;		_PIN_MANAGER_Initialize
 13659 ;;		_SPI_Initialize
 13660 ;;		_TMR0_Initialize
 13661 ;;		_TMR1_Initialize
 13662 ;; This function is called by:
 13663 ;;		_main
 13664 ;; This function uses a non-reentrant model
 13665 ;;
 13666                           
 13667                           	psect	text33
 13668  006AD6                     __ptext33:
 13669                           	opt stack 0
 13670  006AD6                     _SYSTEM_Initialize:
 13671                           	opt stack 24
 13672                           
 13673                           ;mcc_generated_files/mcc.c: 114:     INTERRUPT_Initialize();
 13674                           
 13675                           ;incstack = 0
 13676  006AD6  ECF5  F035         	call	_INTERRUPT_Initialize	;wreg free
 13677                           
 13678                           ;mcc_generated_files/mcc.c: 115:     PIN_MANAGER_Initialize();
 13679  006ADA  EC06  F035         	call	_PIN_MANAGER_Initialize	;wreg free
 13680                           
 13681                           ;mcc_generated_files/mcc.c: 116:     OSCILLATOR_Initialize();
 13682  006ADE  ECBC  F035         	call	_OSCILLATOR_Initialize	;wreg free
 13683                           
 13684                           ;mcc_generated_files/mcc.c: 117:     SPI_Initialize();
 13685  006AE2  ECD5  F035         	call	_SPI_Initialize	;wreg free
 13686                           
 13687                           ;mcc_generated_files/mcc.c: 118:     TMR1_Initialize();
 13688  006AE6  ECAF  F034         	call	_TMR1_Initialize	;wreg free
 13689                           
 13690                           ;mcc_generated_files/mcc.c: 119:     TMR0_Initialize();
 13691  006AEA  ECEA  F034         	call	_TMR0_Initialize	;wreg free
 13692                           
 13693                           ;mcc_generated_files/mcc.c: 120:     ECAN_Initialize();
 13694  006AEE  EC05  F032         	call	_ECAN_Initialize	;wreg free
 13695  006AF2  0012               	return		;funcret
 13696  006AF4                     __end_of_SYSTEM_Initialize:
 13697                           	opt stack 0
 13698                           tblptru	equ	0xFF8
 13699                           tblptrh	equ	0xFF7
 13700                           tblptrl	equ	0xFF6
 13701                           tablat	equ	0xFF5
 13702                           prodh	equ	0xFF4
 13703                           prodl	equ	0xFF3
 13704                           intcon	equ	0xFF2
 13705                           postinc0	equ	0xFEE
 13706                           wreg	equ	0xFE8
 13707                           postdec1	equ	0xFE5
 13708                           plusw1	equ	0xFE3
 13709                           fsr1l	equ	0xFE1
 13710                           plusw2	equ	0xFDB
 13711                           status	equ	0xFD8
 13712                           
 13713 ;; *************** function _TMR1_Initialize *****************
 13714 ;; Defined at:
 13715 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 13716 ;; Parameters:    Size  Location     Type
 13717 ;;		None
 13718 ;; Auto vars:     Size  Location     Type
 13719 ;;		None
 13720 ;; Return value:  Size  Location     Type
 13721 ;;                  1    wreg      void 
 13722 ;; Registers used:
 13723 ;;		wreg, status,2, status,0, cstack
 13724 ;; Tracked objects:
 13725 ;;		On entry : 0/0
 13726 ;;		On exit  : 0/0
 13727 ;;		Unchanged: 0/0
 13728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13731 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13733 ;;Total ram usage:        2 bytes
 13734 ;; Hardware stack levels used:    1
 13735 ;; Hardware stack levels required when called:    5
 13736 ;; This function calls:
 13737 ;;		_TMR1_SetInterruptHandler
 13738 ;;		_TMR1_StartTimer
 13739 ;; This function is called by:
 13740 ;;		_SYSTEM_Initialize
 13741 ;; This function uses a non-reentrant model
 13742 ;;
 13743                           
 13744                           	psect	text34
 13745  00695E                     __ptext34:
 13746                           	opt stack 0
 13747  00695E                     _TMR1_Initialize:
 13748                           	opt stack 24
 13749                           
 13750                           ;mcc_generated_files/tmr1.c: 68:     T1CON = 0x30;
 13751                           
 13752                           ;incstack = 0
 13753  00695E  0E30               	movlw	48
 13754  006960  6ECD               	movwf	4045,c	;volatile
 13755                           
 13756                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 13757  006962  0E00               	movlw	0
 13758  006964  6EAA               	movwf	4010,c	;volatile
 13759                           
 13760                           ;mcc_generated_files/tmr1.c: 74:     TMR1H = 0x15;
 13761  006966  0E15               	movlw	21
 13762  006968  6ECF               	movwf	4047,c	;volatile
 13763                           
 13764                           ;mcc_generated_files/tmr1.c: 77:     TMR1L = 0xA0;
 13765  00696A  0EA0               	movlw	160
 13766  00696C  6ECE               	movwf	4046,c	;volatile
 13767                           
 13768                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13769  00696E  50CE               	movf	4046,w,c	;volatile
 13770  006970  CFCF F005          	movff	4047,??_TMR1_Initialize	;volatile
 13771  006974  6A06               	clrf	(??_TMR1_Initialize+1)& (0+255),c
 13772  006976  C005  F006         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 13773  00697A  6A05               	clrf	??_TMR1_Initialize,c
 13774  00697C  1005               	iorwf	??_TMR1_Initialize,w,c
 13775  00697E  6E4D               	movwf	_timer1ReloadVal,c	;volatile
 13776  006980  5006               	movf	??_TMR1_Initialize+1,w,c
 13777  006982  6E4E               	movwf	_timer1ReloadVal+1,c	;volatile
 13778                           
 13779                           ;mcc_generated_files/tmr1.c: 83:     PIR1bits.TMR1IF = 0;
 13780  006984  909E               	bcf	3998,0,c	;volatile
 13781                           
 13782                           ;mcc_generated_files/tmr1.c: 86:     PIE1bits.TMR1IE = 1;
 13783  006986  809D               	bsf	3997,0,c	;volatile
 13784                           
 13785                           ;mcc_generated_files/tmr1.c: 89:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 13786  006988  0EEE               	movlw	low _TMR1_DefaultInterruptHandler
 13787  00698A  6E03               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
 13788  00698C  0E6B               	movlw	high _TMR1_DefaultInterruptHandler
 13789  00698E  6E04               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
 13790  006990  ECE1  F035         	call	_TMR1_SetInterruptHandler	;wreg free
 13791                           
 13792                           ;mcc_generated_files/tmr1.c: 92:     TMR1_StartTimer();
 13793  006994  ECF1  F035         	call	_TMR1_StartTimer	;wreg free
 13794  006998  0012               	return		;funcret
 13795  00699A                     __end_of_TMR1_Initialize:
 13796                           	opt stack 0
 13797                           tblptru	equ	0xFF8
 13798                           tblptrh	equ	0xFF7
 13799                           tblptrl	equ	0xFF6
 13800                           tablat	equ	0xFF5
 13801                           prodh	equ	0xFF4
 13802                           prodl	equ	0xFF3
 13803                           intcon	equ	0xFF2
 13804                           postinc0	equ	0xFEE
 13805                           wreg	equ	0xFE8
 13806                           postdec1	equ	0xFE5
 13807                           plusw1	equ	0xFE3
 13808                           fsr1l	equ	0xFE1
 13809                           plusw2	equ	0xFDB
 13810                           status	equ	0xFD8
 13811                           
 13812 ;; *************** function _TMR1_StartTimer *****************
 13813 ;; Defined at:
 13814 ;;		line 95 in file "mcc_generated_files/tmr1.c"
 13815 ;; Parameters:    Size  Location     Type
 13816 ;;		None
 13817 ;; Auto vars:     Size  Location     Type
 13818 ;;		None
 13819 ;; Return value:  Size  Location     Type
 13820 ;;                  1    wreg      void 
 13821 ;; Registers used:
 13822 ;;		None
 13823 ;; Tracked objects:
 13824 ;;		On entry : 0/0
 13825 ;;		On exit  : 0/0
 13826 ;;		Unchanged: 0/0
 13827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13832 ;;Total ram usage:        0 bytes
 13833 ;; Hardware stack levels used:    1
 13834 ;; Hardware stack levels required when called:    4
 13835 ;; This function calls:
 13836 ;;		Nothing
 13837 ;; This function is called by:
 13838 ;;		_TMR1_Initialize
 13839 ;; This function uses a non-reentrant model
 13840 ;;
 13841                           
 13842                           	psect	text35
 13843  006BE2                     __ptext35:
 13844                           	opt stack 0
 13845  006BE2                     _TMR1_StartTimer:
 13846                           	opt stack 24
 13847                           
 13848                           ;mcc_generated_files/tmr1.c: 98:     T1CONbits.TMR1ON = 1;
 13849                           
 13850                           ;incstack = 0
 13851  006BE2  80CD               	bsf	4045,0,c	;volatile
 13852  006BE4  0012               	return		;funcret
 13853  006BE6                     __end_of_TMR1_StartTimer:
 13854                           	opt stack 0
 13855                           tblptru	equ	0xFF8
 13856                           tblptrh	equ	0xFF7
 13857                           tblptrl	equ	0xFF6
 13858                           tablat	equ	0xFF5
 13859                           prodh	equ	0xFF4
 13860                           prodl	equ	0xFF3
 13861                           intcon	equ	0xFF2
 13862                           postinc0	equ	0xFEE
 13863                           wreg	equ	0xFE8
 13864                           postdec1	equ	0xFE5
 13865                           plusw1	equ	0xFE3
 13866                           fsr1l	equ	0xFE1
 13867                           plusw2	equ	0xFDB
 13868                           status	equ	0xFD8
 13869                           
 13870 ;; *************** function _TMR1_SetInterruptHandler *****************
 13871 ;; Defined at:
 13872 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 13873 ;; Parameters:    Size  Location     Type
 13874 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 13875 ;;		 -> refresh(1), TMR1_DefaultInterruptHandler(1), 
 13876 ;; Auto vars:     Size  Location     Type
 13877 ;;		None
 13878 ;; Return value:  Size  Location     Type
 13879 ;;                  1    wreg      void 
 13880 ;; Registers used:
 13881 ;;		wreg, status,2, status,0
 13882 ;; Tracked objects:
 13883 ;;		On entry : 0/0
 13884 ;;		On exit  : 0/0
 13885 ;;		Unchanged: 0/0
 13886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13890 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13891 ;;Total ram usage:        2 bytes
 13892 ;; Hardware stack levels used:    1
 13893 ;; Hardware stack levels required when called:    4
 13894 ;; This function calls:
 13895 ;;		Nothing
 13896 ;; This function is called by:
 13897 ;;		_TMR1_Initialize
 13898 ;;		_main
 13899 ;; This function uses a non-reentrant model
 13900 ;;
 13901                           
 13902                           	psect	text36
 13903  006BC2                     __ptext36:
 13904                           	opt stack 0
 13905  006BC2                     _TMR1_SetInterruptHandler:
 13906                           	opt stack 26
 13907                           
 13908                           ;mcc_generated_files/tmr1.c: 184:     TMR1_InterruptHandler = InterruptHandler;
 13909                           
 13910                           ;incstack = 0
 13911  006BC2  C003  F04B         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 13912  006BC6  C004  F04C         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 13913  006BCA  0012               	return		;funcret
 13914  006BCC                     __end_of_TMR1_SetInterruptHandler:
 13915                           	opt stack 0
 13916                           tblptru	equ	0xFF8
 13917                           tblptrh	equ	0xFF7
 13918                           tblptrl	equ	0xFF6
 13919                           tablat	equ	0xFF5
 13920                           prodh	equ	0xFF4
 13921                           prodl	equ	0xFF3
 13922                           intcon	equ	0xFF2
 13923                           postinc0	equ	0xFEE
 13924                           wreg	equ	0xFE8
 13925                           postdec1	equ	0xFE5
 13926                           plusw1	equ	0xFE3
 13927                           fsr1l	equ	0xFE1
 13928                           plusw2	equ	0xFDB
 13929                           status	equ	0xFD8
 13930                           
 13931 ;; *************** function _TMR0_Initialize *****************
 13932 ;; Defined at:
 13933 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 13934 ;; Parameters:    Size  Location     Type
 13935 ;;		None
 13936 ;; Auto vars:     Size  Location     Type
 13937 ;;		None
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  1    wreg      void 
 13940 ;; Registers used:
 13941 ;;		wreg, status,2, status,0, cstack
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/0
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13949 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13951 ;;Total ram usage:        2 bytes
 13952 ;; Hardware stack levels used:    1
 13953 ;; Hardware stack levels required when called:    5
 13954 ;; This function calls:
 13955 ;;		_TMR0_SetInterruptHandler
 13956 ;;		_TMR0_StartTimer
 13957 ;; This function is called by:
 13958 ;;		_SYSTEM_Initialize
 13959 ;; This function uses a non-reentrant model
 13960 ;;
 13961                           
 13962                           	psect	text37
 13963  0069D4                     __ptext37:
 13964                           	opt stack 0
 13965  0069D4                     _TMR0_Initialize:
 13966                           	opt stack 24
 13967                           
 13968                           ;mcc_generated_files/tmr0.c: 71:     T0CON = 0x15;
 13969                           
 13970                           ;incstack = 0
 13971  0069D4  0E15               	movlw	21
 13972  0069D6  6ED5               	movwf	4053,c	;volatile
 13973                           
 13974                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xCF;
 13975  0069D8  0ECF               	movlw	207
 13976  0069DA  6ED7               	movwf	4055,c	;volatile
 13977                           
 13978                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x2B;
 13979  0069DC  0E2B               	movlw	43
 13980  0069DE  6ED6               	movwf	4054,c	;volatile
 13981                           
 13982                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal = (TMR0H << 8) | TMR0L;
 13983  0069E0  50D6               	movf	4054,w,c	;volatile
 13984  0069E2  CFD7 F005          	movff	4055,??_TMR0_Initialize	;volatile
 13985  0069E6  6A06               	clrf	(??_TMR0_Initialize+1)& (0+255),c
 13986  0069E8  C005  F006         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 13987  0069EC  6A05               	clrf	??_TMR0_Initialize,c
 13988  0069EE  1005               	iorwf	??_TMR0_Initialize,w,c
 13989  0069F0  6E47               	movwf	_timer0ReloadVal,c	;volatile
 13990  0069F2  5006               	movf	??_TMR0_Initialize+1,w,c
 13991  0069F4  6E48               	movwf	_timer0ReloadVal+1,c	;volatile
 13992                           
 13993                           ;mcc_generated_files/tmr0.c: 83:     INTCONbits.TMR0IF = 0;
 13994  0069F6  94F2               	bcf	intcon,2,c	;volatile
 13995                           
 13996                           ;mcc_generated_files/tmr0.c: 86:     INTCONbits.TMR0IE = 1;
 13997  0069F8  8AF2               	bsf	intcon,5,c	;volatile
 13998                           
 13999                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 14000  0069FA  0EF0               	movlw	low _TMR0_DefaultInterruptHandler
 14001  0069FC  6E03               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
 14002  0069FE  0E6B               	movlw	high _TMR0_DefaultInterruptHandler
 14003  006A00  6E04               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
 14004  006A02  ECE6  F035         	call	_TMR0_SetInterruptHandler	;wreg free
 14005                           
 14006                           ;mcc_generated_files/tmr0.c: 92:     TMR0_StartTimer();
 14007  006A06  ECF3  F035         	call	_TMR0_StartTimer	;wreg free
 14008  006A0A  0012               	return		;funcret
 14009  006A0C                     __end_of_TMR0_Initialize:
 14010                           	opt stack 0
 14011                           tblptru	equ	0xFF8
 14012                           tblptrh	equ	0xFF7
 14013                           tblptrl	equ	0xFF6
 14014                           tablat	equ	0xFF5
 14015                           prodh	equ	0xFF4
 14016                           prodl	equ	0xFF3
 14017                           intcon	equ	0xFF2
 14018                           postinc0	equ	0xFEE
 14019                           wreg	equ	0xFE8
 14020                           postdec1	equ	0xFE5
 14021                           plusw1	equ	0xFE3
 14022                           fsr1l	equ	0xFE1
 14023                           plusw2	equ	0xFDB
 14024                           status	equ	0xFD8
 14025                           
 14026 ;; *************** function _TMR0_StartTimer *****************
 14027 ;; Defined at:
 14028 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 14029 ;; Parameters:    Size  Location     Type
 14030 ;;		None
 14031 ;; Auto vars:     Size  Location     Type
 14032 ;;		None
 14033 ;; Return value:  Size  Location     Type
 14034 ;;                  1    wreg      void 
 14035 ;; Registers used:
 14036 ;;		None
 14037 ;; Tracked objects:
 14038 ;;		On entry : 0/0
 14039 ;;		On exit  : 0/0
 14040 ;;		Unchanged: 0/0
 14041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14046 ;;Total ram usage:        0 bytes
 14047 ;; Hardware stack levels used:    1
 14048 ;; Hardware stack levels required when called:    4
 14049 ;; This function calls:
 14050 ;;		Nothing
 14051 ;; This function is called by:
 14052 ;;		_TMR0_Initialize
 14053 ;; This function uses a non-reentrant model
 14054 ;;
 14055                           
 14056                           	psect	text38
 14057  006BE6                     __ptext38:
 14058                           	opt stack 0
 14059  006BE6                     _TMR0_StartTimer:
 14060                           	opt stack 24
 14061                           
 14062                           ;mcc_generated_files/tmr0.c: 98:     T0CONbits.TMR0ON = 1;
 14063                           
 14064                           ;incstack = 0
 14065  006BE6  8ED5               	bsf	4053,7,c	;volatile
 14066  006BE8  0012               	return		;funcret
 14067  006BEA                     __end_of_TMR0_StartTimer:
 14068                           	opt stack 0
 14069                           tblptru	equ	0xFF8
 14070                           tblptrh	equ	0xFF7
 14071                           tblptrl	equ	0xFF6
 14072                           tablat	equ	0xFF5
 14073                           prodh	equ	0xFF4
 14074                           prodl	equ	0xFF3
 14075                           intcon	equ	0xFF2
 14076                           postinc0	equ	0xFEE
 14077                           wreg	equ	0xFE8
 14078                           postdec1	equ	0xFE5
 14079                           plusw1	equ	0xFE3
 14080                           fsr1l	equ	0xFE1
 14081                           plusw2	equ	0xFDB
 14082                           status	equ	0xFD8
 14083                           
 14084 ;; *************** function _TMR0_SetInterruptHandler *****************
 14085 ;; Defined at:
 14086 ;;		line 154 in file "mcc_generated_files/tmr0.c"
 14087 ;; Parameters:    Size  Location     Type
 14088 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 14089 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 14090 ;; Auto vars:     Size  Location     Type
 14091 ;;		None
 14092 ;; Return value:  Size  Location     Type
 14093 ;;                  1    wreg      void 
 14094 ;; Registers used:
 14095 ;;		wreg, status,2, status,0
 14096 ;; Tracked objects:
 14097 ;;		On entry : 0/0
 14098 ;;		On exit  : 0/0
 14099 ;;		Unchanged: 0/0
 14100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14105 ;;Total ram usage:        2 bytes
 14106 ;; Hardware stack levels used:    1
 14107 ;; Hardware stack levels required when called:    4
 14108 ;; This function calls:
 14109 ;;		Nothing
 14110 ;; This function is called by:
 14111 ;;		_TMR0_Initialize
 14112 ;; This function uses a non-reentrant model
 14113 ;;
 14114                           
 14115                           	psect	text39
 14116  006BCC                     __ptext39:
 14117                           	opt stack 0
 14118  006BCC                     _TMR0_SetInterruptHandler:
 14119                           	opt stack 24
 14120                           
 14121                           ;mcc_generated_files/tmr0.c: 155:     TMR0_InterruptHandler = InterruptHandler;
 14122                           
 14123                           ;incstack = 0
 14124  006BCC  C003  F049         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 14125  006BD0  C004  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 14126  006BD4  0012               	return		;funcret
 14127  006BD6                     __end_of_TMR0_SetInterruptHandler:
 14128                           	opt stack 0
 14129                           tblptru	equ	0xFF8
 14130                           tblptrh	equ	0xFF7
 14131                           tblptrl	equ	0xFF6
 14132                           tablat	equ	0xFF5
 14133                           prodh	equ	0xFF4
 14134                           prodl	equ	0xFF3
 14135                           intcon	equ	0xFF2
 14136                           postinc0	equ	0xFEE
 14137                           wreg	equ	0xFE8
 14138                           postdec1	equ	0xFE5
 14139                           plusw1	equ	0xFE3
 14140                           fsr1l	equ	0xFE1
 14141                           plusw2	equ	0xFDB
 14142                           status	equ	0xFD8
 14143                           
 14144 ;; *************** function _SPI_Initialize *****************
 14145 ;; Defined at:
 14146 ;;		line 63 in file "mcc_generated_files/spi.c"
 14147 ;; Parameters:    Size  Location     Type
 14148 ;;		None
 14149 ;; Auto vars:     Size  Location     Type
 14150 ;;		None
 14151 ;; Return value:  Size  Location     Type
 14152 ;;                  1    wreg      void 
 14153 ;; Registers used:
 14154 ;;		wreg, status,2
 14155 ;; Tracked objects:
 14156 ;;		On entry : 0/0
 14157 ;;		On exit  : 0/0
 14158 ;;		Unchanged: 0/0
 14159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14164 ;;Total ram usage:        0 bytes
 14165 ;; Hardware stack levels used:    1
 14166 ;; Hardware stack levels required when called:    4
 14167 ;; This function calls:
 14168 ;;		Nothing
 14169 ;; This function is called by:
 14170 ;;		_SYSTEM_Initialize
 14171 ;; This function uses a non-reentrant model
 14172 ;;
 14173                           
 14174                           	psect	text40
 14175  006BAA                     __ptext40:
 14176                           	opt stack 0
 14177  006BAA                     _SPI_Initialize:
 14178                           	opt stack 25
 14179                           
 14180                           ;mcc_generated_files/spi.c: 68:     SSPSTAT = 0x00;
 14181                           
 14182                           ;incstack = 0
 14183  006BAA  0E00               	movlw	0
 14184  006BAC  6EC7               	movwf	4039,c	;volatile
 14185                           
 14186                           ;mcc_generated_files/spi.c: 71:     SSPCON1 = 0x20;
 14187  006BAE  0E20               	movlw	32
 14188  006BB0  6EC6               	movwf	4038,c	;volatile
 14189                           
 14190                           ;mcc_generated_files/spi.c: 74:     SSPADD = 0x00;
 14191  006BB2  0E00               	movlw	0
 14192  006BB4  6EC8               	movwf	4040,c	;volatile
 14193  006BB6  0012               	return		;funcret
 14194  006BB8                     __end_of_SPI_Initialize:
 14195                           	opt stack 0
 14196                           tblptru	equ	0xFF8
 14197                           tblptrh	equ	0xFF7
 14198                           tblptrl	equ	0xFF6
 14199                           tablat	equ	0xFF5
 14200                           prodh	equ	0xFF4
 14201                           prodl	equ	0xFF3
 14202                           intcon	equ	0xFF2
 14203                           postinc0	equ	0xFEE
 14204                           wreg	equ	0xFE8
 14205                           postdec1	equ	0xFE5
 14206                           plusw1	equ	0xFE3
 14207                           fsr1l	equ	0xFE1
 14208                           plusw2	equ	0xFDB
 14209                           status	equ	0xFD8
 14210                           
 14211 ;; *************** function _PIN_MANAGER_Initialize *****************
 14212 ;; Defined at:
 14213 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 14214 ;; Parameters:    Size  Location     Type
 14215 ;;		None
 14216 ;; Auto vars:     Size  Location     Type
 14217 ;;		None
 14218 ;; Return value:  Size  Location     Type
 14219 ;;                  1    wreg      void 
 14220 ;; Registers used:
 14221 ;;		wreg, status,2
 14222 ;; Tracked objects:
 14223 ;;		On entry : 0/0
 14224 ;;		On exit  : 0/0
 14225 ;;		Unchanged: 0/0
 14226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14231 ;;Total ram usage:        0 bytes
 14232 ;; Hardware stack levels used:    1
 14233 ;; Hardware stack levels required when called:    4
 14234 ;; This function calls:
 14235 ;;		Nothing
 14236 ;; This function is called by:
 14237 ;;		_SYSTEM_Initialize
 14238 ;; This function uses a non-reentrant model
 14239 ;;
 14240                           
 14241                           	psect	text41
 14242  006A0C                     __ptext41:
 14243                           	opt stack 0
 14244  006A0C                     _PIN_MANAGER_Initialize:
 14245                           	opt stack 25
 14246                           
 14247                           ;mcc_generated_files/pin_manager.c: 57:     LATE = 0x00;
 14248                           
 14249                           ;incstack = 0
 14250  006A0C  0E00               	movlw	0
 14251  006A0E  6E8D               	movwf	3981,c	;volatile
 14252                           
 14253                           ;mcc_generated_files/pin_manager.c: 58:     LATD = 0x00;
 14254  006A10  0E00               	movlw	0
 14255  006A12  6E8C               	movwf	3980,c	;volatile
 14256                           
 14257                           ;mcc_generated_files/pin_manager.c: 59:     LATA = 0x00;
 14258  006A14  0E00               	movlw	0
 14259  006A16  6E89               	movwf	3977,c	;volatile
 14260                           
 14261                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
 14262  006A18  0E00               	movlw	0
 14263  006A1A  6E8A               	movwf	3978,c	;volatile
 14264                           
 14265                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
 14266  006A1C  0E00               	movlw	0
 14267  006A1E  6E8B               	movwf	3979,c	;volatile
 14268                           
 14269                           ;mcc_generated_files/pin_manager.c: 66:     TRISE = 0x07;
 14270  006A20  0E07               	movlw	7
 14271  006A22  6E96               	movwf	3990,c	;volatile
 14272                           
 14273                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xEC;
 14274  006A24  0EEC               	movlw	236
 14275  006A26  6E92               	movwf	3986,c	;volatile
 14276                           
 14277                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDB;
 14278  006A28  0EDB               	movlw	219
 14279  006A2A  6E93               	movwf	3987,c	;volatile
 14280                           
 14281                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD5;
 14282  006A2C  0ED5               	movlw	213
 14283  006A2E  6E94               	movwf	3988,c	;volatile
 14284                           
 14285                           ;mcc_generated_files/pin_manager.c: 70:     TRISD = 0xC2;
 14286  006A30  0EC2               	movlw	194
 14287  006A32  6E95               	movwf	3989,c	;volatile
 14288                           
 14289                           ;mcc_generated_files/pin_manager.c: 75:     ANCON0 = 0xFF;
 14290  006A34  010F               	movlb	15	; () banked
 14291  006A36  695D               	setf	93,b	;volatile
 14292                           
 14293                           ;mcc_generated_files/pin_manager.c: 76:     ANCON1 = 0x7D;
 14294  006A38  0E7D               	movlw	125
 14295  006A3A  6F5C               	movwf	92,b	;volatile
 14296                           
 14297                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0xCF;
 14298  006A3C  0ECF               	movlw	207
 14299  006A3E  6F5B               	movwf	91,b	;volatile
 14300                           
 14301                           ; BSR set to: 15
 14302  006A40  0012               	return		;funcret
 14303  006A42                     __end_of_PIN_MANAGER_Initialize:
 14304                           	opt stack 0
 14305                           tblptru	equ	0xFF8
 14306                           tblptrh	equ	0xFF7
 14307                           tblptrl	equ	0xFF6
 14308                           tablat	equ	0xFF5
 14309                           prodh	equ	0xFF4
 14310                           prodl	equ	0xFF3
 14311                           intcon	equ	0xFF2
 14312                           postinc0	equ	0xFEE
 14313                           wreg	equ	0xFE8
 14314                           postdec1	equ	0xFE5
 14315                           plusw1	equ	0xFE3
 14316                           fsr1l	equ	0xFE1
 14317                           plusw2	equ	0xFDB
 14318                           status	equ	0xFD8
 14319                           
 14320 ;; *************** function _OSCILLATOR_Initialize *****************
 14321 ;; Defined at:
 14322 ;;		line 123 in file "mcc_generated_files/mcc.c"
 14323 ;; Parameters:    Size  Location     Type
 14324 ;;		None
 14325 ;; Auto vars:     Size  Location     Type
 14326 ;;		None
 14327 ;; Return value:  Size  Location     Type
 14328 ;;                  1    wreg      void 
 14329 ;; Registers used:
 14330 ;;		wreg, status,2
 14331 ;; Tracked objects:
 14332 ;;		On entry : 0/0
 14333 ;;		On exit  : 0/0
 14334 ;;		Unchanged: 0/0
 14335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14340 ;;Total ram usage:        0 bytes
 14341 ;; Hardware stack levels used:    1
 14342 ;; Hardware stack levels required when called:    4
 14343 ;; This function calls:
 14344 ;;		Nothing
 14345 ;; This function is called by:
 14346 ;;		_SYSTEM_Initialize
 14347 ;; This function uses a non-reentrant model
 14348 ;;
 14349                           
 14350                           	psect	text42
 14351  006B78                     __ptext42:
 14352                           	opt stack 0
 14353  006B78                     _OSCILLATOR_Initialize:
 14354                           	opt stack 25
 14355                           
 14356                           ;mcc_generated_files/mcc.c: 126:     OSCCON = 0x60;
 14357                           
 14358                           ; BSR set to: 15
 14359                           ;incstack = 0
 14360  006B78  0E60               	movlw	96
 14361  006B7A  6ED3               	movwf	4051,c	;volatile
 14362                           
 14363                           ;mcc_generated_files/mcc.c: 128:     OSCCON2 = 0x00;
 14364  006B7C  0E00               	movlw	0
 14365  006B7E  6ED2               	movwf	4050,c	;volatile
 14366                           
 14367                           ;mcc_generated_files/mcc.c: 130:     OSCTUNE = 0x00;
 14368  006B80  0E00               	movlw	0
 14369  006B82  6E9B               	movwf	3995,c	;volatile
 14370                           
 14371                           ;mcc_generated_files/mcc.c: 132:     REFOCON = 0x00;
 14372  006B84  0E00               	movlw	0
 14373  006B86  6E9A               	movwf	3994,c	;volatile
 14374  006B88  0012               	return		;funcret
 14375  006B8A                     __end_of_OSCILLATOR_Initialize:
 14376                           	opt stack 0
 14377                           tblptru	equ	0xFF8
 14378                           tblptrh	equ	0xFF7
 14379                           tblptrl	equ	0xFF6
 14380                           tablat	equ	0xFF5
 14381                           prodh	equ	0xFF4
 14382                           prodl	equ	0xFF3
 14383                           intcon	equ	0xFF2
 14384                           postinc0	equ	0xFEE
 14385                           wreg	equ	0xFE8
 14386                           postdec1	equ	0xFE5
 14387                           plusw1	equ	0xFE3
 14388                           fsr1l	equ	0xFE1
 14389                           plusw2	equ	0xFDB
 14390                           status	equ	0xFD8
 14391                           
 14392 ;; *************** function _INTERRUPT_Initialize *****************
 14393 ;; Defined at:
 14394 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 14395 ;; Parameters:    Size  Location     Type
 14396 ;;		None
 14397 ;; Auto vars:     Size  Location     Type
 14398 ;;		None
 14399 ;; Return value:  Size  Location     Type
 14400 ;;                  1    wreg      void 
 14401 ;; Registers used:
 14402 ;;		None
 14403 ;; Tracked objects:
 14404 ;;		On entry : 0/0
 14405 ;;		On exit  : 0/0
 14406 ;;		Unchanged: 0/0
 14407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14412 ;;Total ram usage:        0 bytes
 14413 ;; Hardware stack levels used:    1
 14414 ;; Hardware stack levels required when called:    4
 14415 ;; This function calls:
 14416 ;;		Nothing
 14417 ;; This function is called by:
 14418 ;;		_SYSTEM_Initialize
 14419 ;; This function uses a non-reentrant model
 14420 ;;
 14421                           
 14422                           	psect	text43
 14423  006BEA                     __ptext43:
 14424                           	opt stack 0
 14425  006BEA                     _INTERRUPT_Initialize:
 14426                           	opt stack 25
 14427                           
 14428                           ;mcc_generated_files/interrupt_manager.c: 54:     RCONbits.IPEN = 0;
 14429                           
 14430                           ;incstack = 0
 14431  006BEA  9ED0               	bcf	4048,7,c	;volatile
 14432  006BEC  0012               	return		;funcret
 14433  006BEE                     __end_of_INTERRUPT_Initialize:
 14434                           	opt stack 0
 14435                           tblptru	equ	0xFF8
 14436                           tblptrh	equ	0xFF7
 14437                           tblptrl	equ	0xFF6
 14438                           tablat	equ	0xFF5
 14439                           prodh	equ	0xFF4
 14440                           prodl	equ	0xFF3
 14441                           intcon	equ	0xFF2
 14442                           postinc0	equ	0xFEE
 14443                           wreg	equ	0xFE8
 14444                           postdec1	equ	0xFE5
 14445                           plusw1	equ	0xFE3
 14446                           fsr1l	equ	0xFE1
 14447                           plusw2	equ	0xFDB
 14448                           status	equ	0xFD8
 14449                           
 14450 ;; *************** function _ECAN_Initialize *****************
 14451 ;; Defined at:
 14452 ;;		line 63 in file "mcc_generated_files/ecan.c"
 14453 ;; Parameters:    Size  Location     Type
 14454 ;;		None
 14455 ;; Auto vars:     Size  Location     Type
 14456 ;;		None
 14457 ;; Return value:  Size  Location     Type
 14458 ;;                  1    wreg      void 
 14459 ;; Registers used:
 14460 ;;		wreg, status,2, status,0
 14461 ;; Tracked objects:
 14462 ;;		On entry : 0/0
 14463 ;;		On exit  : 0/0
 14464 ;;		Unchanged: 0/0
 14465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14470 ;;Total ram usage:        1 bytes
 14471 ;; Hardware stack levels used:    1
 14472 ;; Hardware stack levels required when called:    4
 14473 ;; This function calls:
 14474 ;;		Nothing
 14475 ;; This function is called by:
 14476 ;;		_SYSTEM_Initialize
 14477 ;; This function uses a non-reentrant model
 14478 ;;
 14479                           
 14480                           	psect	text44
 14481  00640A                     __ptext44:
 14482                           	opt stack 0
 14483  00640A                     _ECAN_Initialize:
 14484                           	opt stack 25
 14485                           
 14486                           ;mcc_generated_files/ecan.c: 65:     CANCON = 0x80;
 14487                           
 14488                           ;incstack = 0
 14489  00640A  0E80               	movlw	128
 14490  00640C  6E6F               	movwf	3951,c	;volatile
 14491  00640E  506E               	movf	3950,w,c	;volatile
 14492  006410  0BE0               	andlw	224
 14493  006412  0A80               	xorlw	128
 14494  006414  A4D8               	btfss	status,2,c
 14495  006416  D7FB               	goto	l439
 14496                           
 14497                           ;mcc_generated_files/ecan.c: 71:     ECANCON = 0x00;
 14498  006418  0E00               	movlw	0
 14499  00641A  6E72               	movwf	3954,c	;volatile
 14500                           
 14501                           ;mcc_generated_files/ecan.c: 85:     RXM0EIDH = 0xFF;
 14502  00641C  010E               	movlb	14	; () banked
 14503  00641E  69FA               	setf	250,b	;volatile
 14504                           
 14505                           ; BSR set to: 14
 14506                           ;mcc_generated_files/ecan.c: 86:     RXM0EIDL = 0xFF;
 14507  006420  69FB               	setf	251,b	;volatile
 14508                           
 14509                           ; BSR set to: 14
 14510                           ;mcc_generated_files/ecan.c: 87:     RXM0SIDH = 0xFF;
 14511  006422  69F8               	setf	248,b	;volatile
 14512                           
 14513                           ; BSR set to: 14
 14514                           ;mcc_generated_files/ecan.c: 88:     RXM0SIDL = 0xFF;
 14515  006424  69F9               	setf	249,b	;volatile
 14516                           
 14517                           ; BSR set to: 14
 14518                           ;mcc_generated_files/ecan.c: 90:     RXM1EIDH = 0xFF;
 14519  006426  69FE               	setf	254,b	;volatile
 14520                           
 14521                           ; BSR set to: 14
 14522                           ;mcc_generated_files/ecan.c: 91:     RXM1EIDL = 0xFF;
 14523  006428  69FF               	setf	255,b	;volatile
 14524                           
 14525                           ; BSR set to: 14
 14526                           ;mcc_generated_files/ecan.c: 92:     RXM1SIDH = 0xFF;
 14527  00642A  69FC               	setf	252,b	;volatile
 14528                           
 14529                           ; BSR set to: 14
 14530                           ;mcc_generated_files/ecan.c: 93:     RXM1SIDL = 0xFF;
 14531  00642C  69FD               	setf	253,b	;volatile
 14532                           
 14533                           ;mcc_generated_files/ecan.c: 99:     RXF0EIDH = 0x00;
 14534  00642E  0E00               	movlw	0
 14535  006430  6FE2               	movwf	226,b	;volatile
 14536                           
 14537                           ;mcc_generated_files/ecan.c: 100:     RXF0EIDL = 0x00;
 14538  006432  0E00               	movlw	0
 14539  006434  6FE3               	movwf	227,b	;volatile
 14540                           
 14541                           ;mcc_generated_files/ecan.c: 101:     RXF0SIDH = 0x00;
 14542  006436  0E00               	movlw	0
 14543  006438  6FE0               	movwf	224,b	;volatile
 14544                           
 14545                           ;mcc_generated_files/ecan.c: 102:     RXF0SIDL = 0x00;
 14546  00643A  0E00               	movlw	0
 14547  00643C  6FE1               	movwf	225,b	;volatile
 14548                           
 14549                           ;mcc_generated_files/ecan.c: 104:     RXF1EIDH = 0x00;
 14550  00643E  0E00               	movlw	0
 14551  006440  6FE6               	movwf	230,b	;volatile
 14552                           
 14553                           ;mcc_generated_files/ecan.c: 105:     RXF1EIDL = 0x00;
 14554  006442  0E00               	movlw	0
 14555  006444  6FE7               	movwf	231,b	;volatile
 14556                           
 14557                           ;mcc_generated_files/ecan.c: 106:     RXF1SIDH = 0x00;
 14558  006446  0E00               	movlw	0
 14559  006448  6FE4               	movwf	228,b	;volatile
 14560                           
 14561                           ;mcc_generated_files/ecan.c: 107:     RXF1SIDL = 0x00;
 14562  00644A  0E00               	movlw	0
 14563  00644C  6FE5               	movwf	229,b	;volatile
 14564                           
 14565                           ;mcc_generated_files/ecan.c: 109:     RXF2EIDH = 0x00;
 14566  00644E  0E00               	movlw	0
 14567  006450  6FEA               	movwf	234,b	;volatile
 14568                           
 14569                           ;mcc_generated_files/ecan.c: 110:     RXF2EIDL = 0x00;
 14570  006452  0E00               	movlw	0
 14571  006454  6FEB               	movwf	235,b	;volatile
 14572                           
 14573                           ;mcc_generated_files/ecan.c: 111:     RXF2SIDH = 0x00;
 14574  006456  0E00               	movlw	0
 14575  006458  6FE8               	movwf	232,b	;volatile
 14576                           
 14577                           ;mcc_generated_files/ecan.c: 112:     RXF2SIDL = 0x00;
 14578  00645A  0E00               	movlw	0
 14579  00645C  6FE9               	movwf	233,b	;volatile
 14580                           
 14581                           ;mcc_generated_files/ecan.c: 114:     RXF3EIDH = 0x00;
 14582  00645E  0E00               	movlw	0
 14583  006460  6FEE               	movwf	238,b	;volatile
 14584                           
 14585                           ;mcc_generated_files/ecan.c: 115:     RXF3EIDL = 0x00;
 14586  006462  0E00               	movlw	0
 14587  006464  6FEF               	movwf	239,b	;volatile
 14588                           
 14589                           ;mcc_generated_files/ecan.c: 116:     RXF3SIDH = 0x00;
 14590  006466  0E00               	movlw	0
 14591  006468  6FEC               	movwf	236,b	;volatile
 14592                           
 14593                           ;mcc_generated_files/ecan.c: 117:     RXF3SIDL = 0x00;
 14594  00646A  0E00               	movlw	0
 14595  00646C  6FED               	movwf	237,b	;volatile
 14596                           
 14597                           ;mcc_generated_files/ecan.c: 119:     RXF4EIDH = 0x00;
 14598  00646E  0E00               	movlw	0
 14599  006470  6FF2               	movwf	242,b	;volatile
 14600                           
 14601                           ;mcc_generated_files/ecan.c: 120:     RXF4EIDL = 0x00;
 14602  006472  0E00               	movlw	0
 14603  006474  6FF3               	movwf	243,b	;volatile
 14604                           
 14605                           ;mcc_generated_files/ecan.c: 121:     RXF4SIDH = 0x00;
 14606  006476  0E00               	movlw	0
 14607  006478  6FF0               	movwf	240,b	;volatile
 14608                           
 14609                           ;mcc_generated_files/ecan.c: 122:     RXF4SIDL = 0x00;
 14610  00647A  0E00               	movlw	0
 14611  00647C  6FF1               	movwf	241,b	;volatile
 14612                           
 14613                           ;mcc_generated_files/ecan.c: 124:     RXF5EIDH = 0x00;
 14614  00647E  0E00               	movlw	0
 14615  006480  6FF6               	movwf	246,b	;volatile
 14616                           
 14617                           ;mcc_generated_files/ecan.c: 125:     RXF5EIDL = 0x00;
 14618  006482  0E00               	movlw	0
 14619  006484  6FF7               	movwf	247,b	;volatile
 14620                           
 14621                           ;mcc_generated_files/ecan.c: 126:     RXF5SIDH = 0x00;
 14622  006486  0E00               	movlw	0
 14623  006488  6FF4               	movwf	244,b	;volatile
 14624                           
 14625                           ;mcc_generated_files/ecan.c: 127:     RXF5SIDL = 0x00;
 14626  00648A  0E00               	movlw	0
 14627  00648C  6FF5               	movwf	245,b	;volatile
 14628                           
 14629                           ;mcc_generated_files/ecan.c: 142:     BRGCON1 = 0x03;
 14630  00648E  0E03               	movlw	3
 14631  006490  6F43               	movwf	67,b	;volatile
 14632                           
 14633                           ;mcc_generated_files/ecan.c: 143:     BRGCON2 = 0x98;
 14634  006492  0E98               	movlw	152
 14635  006494  6F44               	movwf	68,b	;volatile
 14636                           
 14637                           ;mcc_generated_files/ecan.c: 144:     BRGCON3 = 0x01;
 14638  006496  0E01               	movlw	1
 14639  006498  6F45               	movwf	69,b	;volatile
 14640                           
 14641                           ;mcc_generated_files/ecan.c: 146:     CANCON = 0x00;
 14642  00649A  0E00               	movlw	0
 14643  00649C  6E6F               	movwf	3951,c	;volatile
 14644  00649E                     
 14645                           ; BSR set to: 14
 14646                           
 14647                           ; BSR set to: 14
 14648  00649E  CF6E F003          	movff	3950,??_ECAN_Initialize	;volatile
 14649  0064A2  0EE0               	movlw	224
 14650  0064A4  1603               	andwf	??_ECAN_Initialize,f,c
 14651  0064A6  B4D8               	btfsc	status,2,c
 14652  0064A8  0012               	return	
 14653  0064AA  D7F9               	goto	l442
 14654  0064AC                     __end_of_ECAN_Initialize:
 14655                           	opt stack 0
 14656                           tblptru	equ	0xFF8
 14657                           tblptrh	equ	0xFF7
 14658                           tblptrl	equ	0xFF6
 14659                           tablat	equ	0xFF5
 14660                           prodh	equ	0xFF4
 14661                           prodl	equ	0xFF3
 14662                           intcon	equ	0xFF2
 14663                           postinc0	equ	0xFEE
 14664                           wreg	equ	0xFE8
 14665                           postdec1	equ	0xFE5
 14666                           plusw1	equ	0xFE3
 14667                           fsr1l	equ	0xFE1
 14668                           plusw2	equ	0xFDB
 14669                           status	equ	0xFD8
 14670                           
 14671 ;; *************** function _FT800_Init *****************
 14672 ;; Defined at:
 14673 ;;		line 143 in file "FT800.c"
 14674 ;; Parameters:    Size  Location     Type
 14675 ;;		None
 14676 ;; Auto vars:     Size  Location     Type
 14677 ;;		None
 14678 ;; Return value:  Size  Location     Type
 14679 ;;                  1    wreg      void 
 14680 ;; Registers used:
 14681 ;;		wreg, status,2, status,0, cstack
 14682 ;; Tracked objects:
 14683 ;;		On entry : 0/0
 14684 ;;		On exit  : 0/0
 14685 ;;		Unchanged: 0/0
 14686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14691 ;;Total ram usage:        2 bytes
 14692 ;; Hardware stack levels used:    1
 14693 ;; Hardware stack levels required when called:    6
 14694 ;; This function calls:
 14695 ;;		_host_command
 14696 ;;		_rd16
 14697 ;;		_wr16
 14698 ;;		_wr32
 14699 ;;		_wr8
 14700 ;; This function is called by:
 14701 ;;		_main
 14702 ;; This function uses a non-reentrant model
 14703 ;;
 14704                           
 14705                           	psect	text45
 14706  00537A                     __ptext45:
 14707                           	opt stack 0
 14708  00537A                     _FT800_Init:
 14709                           	opt stack 24
 14710                           
 14711                           ;FT800.c: 145:     LATCbits.LATC1 = 0;
 14712                           
 14713                           ;incstack = 0
 14714  00537A  928B               	bcf	3979,1,c	;volatile
 14715                           
 14716                           ;FT800.c: 146:     _delay((unsigned long)((20)*(64000000/4000.0)));
 14717  00537C  0E02               	movlw	2
 14718  00537E  6E11               	movwf	(??_FT800_Init+1)& (0+255),c
 14719  005380  0EA0               	movlw	160
 14720  005382  6E10               	movwf	??_FT800_Init& (0+255),c
 14721  005384  0E92               	movlw	146
 14722  005386                     u2117:
 14723  005386  2EE8               	decfsz	wreg,f,c
 14724  005388  D7FE               	bra	u2117
 14725  00538A  2E10               	decfsz	??_FT800_Init& (0+255),f,c
 14726  00538C  D7FC               	bra	u2117
 14727  00538E  2E11               	decfsz	(??_FT800_Init+1)& (0+255),f,c
 14728  005390  D7FA               	bra	u2117
 14729  005392  D000               	nop2	
 14730                           
 14731                           ;FT800.c: 147:     LATCbits.LATC1 = 1;
 14732  005394  828B               	bsf	3979,1,c	;volatile
 14733                           
 14734                           ;FT800.c: 148:     _delay((unsigned long)((20)*(64000000/4000.0)));
 14735  005396  0E02               	movlw	2
 14736  005398  6E11               	movwf	(??_FT800_Init+1)& (0+255),c
 14737  00539A  0EA0               	movlw	160
 14738  00539C  6E10               	movwf	??_FT800_Init& (0+255),c
 14739  00539E  0E92               	movlw	146
 14740  0053A0                     u2127:
 14741  0053A0  2EE8               	decfsz	wreg,f,c
 14742  0053A2  D7FE               	bra	u2127
 14743  0053A4  2E10               	decfsz	??_FT800_Init& (0+255),f,c
 14744  0053A6  D7FC               	bra	u2127
 14745  0053A8  2E11               	decfsz	(??_FT800_Init+1)& (0+255),f,c
 14746  0053AA  D7FA               	bra	u2127
 14747  0053AC  D000               	nop2	
 14748                           
 14749                           ;FT800.c: 150:     host_command(0x00);
 14750  0053AE  0E00               	movlw	0
 14751  0053B0  ECA4  F035         	call	_host_command
 14752                           
 14753                           ;FT800.c: 152:     host_command(0x44);
 14754  0053B4  0E44               	movlw	68
 14755  0053B6  ECA4  F035         	call	_host_command
 14756                           
 14757                           ;FT800.c: 154:     host_command(0x62);
 14758  0053BA  0E62               	movlw	98
 14759  0053BC  ECA4  F035         	call	_host_command
 14760                           
 14761                           ;FT800.c: 157:     wr16(1057840UL, 480);
 14762  0053C0  0E30               	movlw	48
 14763  0053C2  6E04               	movwf	wr16@addr,c
 14764  0053C4  0E24               	movlw	36
 14765  0053C6  6E05               	movwf	wr16@addr+1,c
 14766  0053C8  0E10               	movlw	16
 14767  0053CA  6E06               	movwf	wr16@addr+2,c
 14768  0053CC  0E00               	movlw	0
 14769  0053CE  6E07               	movwf	wr16@addr+3,c
 14770  0053D0  0E01               	movlw	1
 14771  0053D2  6E09               	movwf	wr16@value+1,c
 14772  0053D4  0EE0               	movlw	224
 14773  0053D6  6E08               	movwf	wr16@value,c
 14774  0053D8  EC48  F035         	call	_wr16	;wreg free
 14775                           
 14776                           ;FT800.c: 158:     wr16(1057860UL, 272);
 14777  0053DC  0E44               	movlw	68
 14778  0053DE  6E04               	movwf	wr16@addr,c
 14779  0053E0  0E24               	movlw	36
 14780  0053E2  6E05               	movwf	wr16@addr+1,c
 14781  0053E4  0E10               	movlw	16
 14782  0053E6  6E06               	movwf	wr16@addr+2,c
 14783  0053E8  0E00               	movlw	0
 14784  0053EA  6E07               	movwf	wr16@addr+3,c
 14785  0053EC  0E01               	movlw	1
 14786  0053EE  6E09               	movwf	wr16@value+1,c
 14787  0053F0  0E10               	movlw	16
 14788  0053F2  6E08               	movwf	wr16@value,c
 14789  0053F4  EC48  F035         	call	_wr16	;wreg free
 14790                           
 14791                           ;FT800.c: 159:     wr16(1057832UL, 525);
 14792  0053F8  0E28               	movlw	40
 14793  0053FA  6E04               	movwf	wr16@addr,c
 14794  0053FC  0E24               	movlw	36
 14795  0053FE  6E05               	movwf	wr16@addr+1,c
 14796  005400  0E10               	movlw	16
 14797  005402  6E06               	movwf	wr16@addr+2,c
 14798  005404  0E00               	movlw	0
 14799  005406  6E07               	movwf	wr16@addr+3,c
 14800  005408  0E02               	movlw	2
 14801  00540A  6E09               	movwf	wr16@value+1,c
 14802  00540C  0E0D               	movlw	13
 14803  00540E  6E08               	movwf	wr16@value,c
 14804  005410  EC48  F035         	call	_wr16	;wreg free
 14805                           
 14806                           ;FT800.c: 160:     wr16(1057844UL, 0);
 14807  005414  0E34               	movlw	52
 14808  005416  6E04               	movwf	wr16@addr,c
 14809  005418  0E24               	movlw	36
 14810  00541A  6E05               	movwf	wr16@addr+1,c
 14811  00541C  0E10               	movlw	16
 14812  00541E  6E06               	movwf	wr16@addr+2,c
 14813  005420  0E00               	movlw	0
 14814  005422  6E07               	movwf	wr16@addr+3,c
 14815  005424  0E00               	movlw	0
 14816  005426  6E09               	movwf	wr16@value+1,c
 14817  005428  0E00               	movlw	0
 14818  00542A  6E08               	movwf	wr16@value,c
 14819  00542C  EC48  F035         	call	_wr16	;wreg free
 14820                           
 14821                           ;FT800.c: 161:     wr16(1057848UL, 41);
 14822  005430  0E38               	movlw	56
 14823  005432  6E04               	movwf	wr16@addr,c
 14824  005434  0E24               	movlw	36
 14825  005436  6E05               	movwf	wr16@addr+1,c
 14826  005438  0E10               	movlw	16
 14827  00543A  6E06               	movwf	wr16@addr+2,c
 14828  00543C  0E00               	movlw	0
 14829  00543E  6E07               	movwf	wr16@addr+3,c
 14830  005440  0E00               	movlw	0
 14831  005442  6E09               	movwf	wr16@value+1,c
 14832  005444  0E29               	movlw	41
 14833  005446  6E08               	movwf	wr16@value,c
 14834  005448  EC48  F035         	call	_wr16	;wreg free
 14835                           
 14836                           ;FT800.c: 162:     wr16(1057836UL, 43);
 14837  00544C  0E2C               	movlw	44
 14838  00544E  6E04               	movwf	wr16@addr,c
 14839  005450  0E24               	movlw	36
 14840  005452  6E05               	movwf	wr16@addr+1,c
 14841  005454  0E10               	movlw	16
 14842  005456  6E06               	movwf	wr16@addr+2,c
 14843  005458  0E00               	movlw	0
 14844  00545A  6E07               	movwf	wr16@addr+3,c
 14845  00545C  0E00               	movlw	0
 14846  00545E  6E09               	movwf	wr16@value+1,c
 14847  005460  0E2B               	movlw	43
 14848  005462  6E08               	movwf	wr16@value,c
 14849  005464  EC48  F035         	call	_wr16	;wreg free
 14850                           
 14851                           ;FT800.c: 163:     wr16(1057852UL, 286);
 14852  005468  0E3C               	movlw	60
 14853  00546A  6E04               	movwf	wr16@addr,c
 14854  00546C  0E24               	movlw	36
 14855  00546E  6E05               	movwf	wr16@addr+1,c
 14856  005470  0E10               	movlw	16
 14857  005472  6E06               	movwf	wr16@addr+2,c
 14858  005474  0E00               	movlw	0
 14859  005476  6E07               	movwf	wr16@addr+3,c
 14860  005478  0E01               	movlw	1
 14861  00547A  6E09               	movwf	wr16@value+1,c
 14862  00547C  0E1E               	movlw	30
 14863  00547E  6E08               	movwf	wr16@value,c
 14864  005480  EC48  F035         	call	_wr16	;wreg free
 14865                           
 14866                           ;FT800.c: 164:     wr16(1057864UL, 0);
 14867  005484  0E48               	movlw	72
 14868  005486  6E04               	movwf	wr16@addr,c
 14869  005488  0E24               	movlw	36
 14870  00548A  6E05               	movwf	wr16@addr+1,c
 14871  00548C  0E10               	movlw	16
 14872  00548E  6E06               	movwf	wr16@addr+2,c
 14873  005490  0E00               	movlw	0
 14874  005492  6E07               	movwf	wr16@addr+3,c
 14875  005494  0E00               	movlw	0
 14876  005496  6E09               	movwf	wr16@value+1,c
 14877  005498  0E00               	movlw	0
 14878  00549A  6E08               	movwf	wr16@value,c
 14879  00549C  EC48  F035         	call	_wr16	;wreg free
 14880                           
 14881                           ;FT800.c: 165:     wr16(1057868UL, 10);
 14882  0054A0  0E4C               	movlw	76
 14883  0054A2  6E04               	movwf	wr16@addr,c
 14884  0054A4  0E24               	movlw	36
 14885  0054A6  6E05               	movwf	wr16@addr+1,c
 14886  0054A8  0E10               	movlw	16
 14887  0054AA  6E06               	movwf	wr16@addr+2,c
 14888  0054AC  0E00               	movlw	0
 14889  0054AE  6E07               	movwf	wr16@addr+3,c
 14890  0054B0  0E00               	movlw	0
 14891  0054B2  6E09               	movwf	wr16@value+1,c
 14892  0054B4  0E0A               	movlw	10
 14893  0054B6  6E08               	movwf	wr16@value,c
 14894  0054B8  EC48  F035         	call	_wr16	;wreg free
 14895                           
 14896                           ;FT800.c: 166:     wr16(1057856UL, 12);
 14897  0054BC  0E40               	movlw	64
 14898  0054BE  6E04               	movwf	wr16@addr,c
 14899  0054C0  0E24               	movlw	36
 14900  0054C2  6E05               	movwf	wr16@addr+1,c
 14901  0054C4  0E10               	movlw	16
 14902  0054C6  6E06               	movwf	wr16@addr+2,c
 14903  0054C8  0E00               	movlw	0
 14904  0054CA  6E07               	movwf	wr16@addr+3,c
 14905  0054CC  0E00               	movlw	0
 14906  0054CE  6E09               	movwf	wr16@value+1,c
 14907  0054D0  0E0C               	movlw	12
 14908  0054D2  6E08               	movwf	wr16@value,c
 14909  0054D4  EC48  F035         	call	_wr16	;wreg free
 14910                           
 14911                           ;FT800.c: 167:     wr8(1057892UL, 0);
 14912  0054D8  0E64               	movlw	100
 14913  0054DA  6E04               	movwf	wr8@addr,c
 14914  0054DC  0E24               	movlw	36
 14915  0054DE  6E05               	movwf	wr8@addr+1,c
 14916  0054E0  0E10               	movlw	16
 14917  0054E2  6E06               	movwf	wr8@addr+2,c
 14918  0054E4  0E00               	movlw	0
 14919  0054E6  6E07               	movwf	wr8@addr+3,c
 14920  0054E8  0E00               	movlw	0
 14921  0054EA  6E08               	movwf	wr8@value,c
 14922  0054EC  EC5B  F035         	call	_wr8	;wreg free
 14923                           
 14924                           ;FT800.c: 168:     wr8(1057884UL, 0);
 14925  0054F0  0E5C               	movlw	92
 14926  0054F2  6E04               	movwf	wr8@addr,c
 14927  0054F4  0E24               	movlw	36
 14928  0054F6  6E05               	movwf	wr8@addr+1,c
 14929  0054F8  0E10               	movlw	16
 14930  0054FA  6E06               	movwf	wr8@addr+2,c
 14931  0054FC  0E00               	movlw	0
 14932  0054FE  6E07               	movwf	wr8@addr+3,c
 14933  005500  0E00               	movlw	0
 14934  005502  6E08               	movwf	wr8@value,c
 14935  005504  EC5B  F035         	call	_wr8	;wreg free
 14936                           
 14937                           ;FT800.c: 169:     wr16(1057880UL, 0x01B6);
 14938  005508  0E58               	movlw	88
 14939  00550A  6E04               	movwf	wr16@addr,c
 14940  00550C  0E24               	movlw	36
 14941  00550E  6E05               	movwf	wr16@addr+1,c
 14942  005510  0E10               	movlw	16
 14943  005512  6E06               	movwf	wr16@addr+2,c
 14944  005514  0E00               	movlw	0
 14945  005516  6E07               	movwf	wr16@addr+3,c
 14946  005518  0E01               	movlw	1
 14947  00551A  6E09               	movwf	wr16@value+1,c
 14948  00551C  0EB6               	movlw	182
 14949  00551E  6E08               	movwf	wr16@value,c
 14950  005520  EC48  F035         	call	_wr16	;wreg free
 14951                           
 14952                           ;FT800.c: 170:     wr8(1057888UL, 0x0000);
 14953  005524  0E60               	movlw	96
 14954  005526  6E04               	movwf	wr8@addr,c
 14955  005528  0E24               	movlw	36
 14956  00552A  6E05               	movwf	wr8@addr+1,c
 14957  00552C  0E10               	movlw	16
 14958  00552E  6E06               	movwf	wr8@addr+2,c
 14959  005530  0E00               	movlw	0
 14960  005532  6E07               	movwf	wr8@addr+3,c
 14961  005534  0E00               	movlw	0
 14962  005536  6E08               	movwf	wr8@value,c
 14963  005538  EC5B  F035         	call	_wr8	;wreg free
 14964                           
 14965                           ;FT800.c: 173:     wr8(1057896UL, 0);
 14966  00553C  0E68               	movlw	104
 14967  00553E  6E04               	movwf	wr8@addr,c
 14968  005540  0E24               	movlw	36
 14969  005542  6E05               	movwf	wr8@addr+1,c
 14970  005544  0E10               	movlw	16
 14971  005546  6E06               	movwf	wr8@addr+2,c
 14972  005548  0E00               	movlw	0
 14973  00554A  6E07               	movwf	wr8@addr+3,c
 14974  00554C  0E00               	movlw	0
 14975  00554E  6E08               	movwf	wr8@value,c
 14976  005550  EC5B  F035         	call	_wr8	;wreg free
 14977                           
 14978                           ;FT800.c: 175:     wr8(1057876UL, 0);
 14979  005554  0E54               	movlw	84
 14980  005556  6E04               	movwf	wr8@addr,c
 14981  005558  0E24               	movlw	36
 14982  00555A  6E05               	movwf	wr8@addr+1,c
 14983  00555C  0E10               	movlw	16
 14984  00555E  6E06               	movwf	wr8@addr+2,c
 14985  005560  0E00               	movlw	0
 14986  005562  6E07               	movwf	wr8@addr+3,c
 14987  005564  0E00               	movlw	0
 14988  005566  6E08               	movwf	wr8@value,c
 14989  005568  EC5B  F035         	call	_wr8	;wreg free
 14990                           
 14991                           ;FT800.c: 182:     wr32(1048576UL +0,((2UL<<24)|(((0)&255UL)<<16)|(((26)&255UL)<<8)|(((0
      +                          )&255UL)<<0)));
 14992  00556C  0E00               	movlw	0
 14993  00556E  6E04               	movwf	wr32@addr,c
 14994  005570  0E00               	movlw	0
 14995  005572  6E05               	movwf	wr32@addr+1,c
 14996  005574  0E10               	movlw	16
 14997  005576  6E06               	movwf	wr32@addr+2,c
 14998  005578  0E00               	movlw	0
 14999  00557A  6E07               	movwf	wr32@addr+3,c
 15000  00557C  0E00               	movlw	0
 15001  00557E  6E08               	movwf	wr32@value,c
 15002  005580  0E1A               	movlw	26
 15003  005582  6E09               	movwf	wr32@value+1,c
 15004  005584  0E00               	movlw	0
 15005  005586  6E0A               	movwf	wr32@value+2,c
 15006  005588  0E02               	movlw	2
 15007  00558A  6E0B               	movwf	wr32@value+3,c
 15008  00558C  ECDB  F033         	call	_wr32	;wreg free
 15009                           
 15010                           ;FT800.c: 183:     wr32(1048576UL +4,((38UL<<24)|(((1)&1UL)<<2)|(((1)&1UL)<<1)|(((1)&1UL
      +                          )<<0)));
 15011  005590  0E04               	movlw	4
 15012  005592  6E04               	movwf	wr32@addr,c
 15013  005594  0E00               	movlw	0
 15014  005596  6E05               	movwf	wr32@addr+1,c
 15015  005598  0E10               	movlw	16
 15016  00559A  6E06               	movwf	wr32@addr+2,c
 15017  00559C  0E00               	movlw	0
 15018  00559E  6E07               	movwf	wr32@addr+3,c
 15019  0055A0  0E07               	movlw	7
 15020  0055A2  6E08               	movwf	wr32@value,c
 15021  0055A4  0E00               	movlw	0
 15022  0055A6  6E09               	movwf	wr32@value+1,c
 15023  0055A8  0E00               	movlw	0
 15024  0055AA  6E0A               	movwf	wr32@value+2,c
 15025  0055AC  0E26               	movlw	38
 15026  0055AE  6E0B               	movwf	wr32@value+3,c
 15027  0055B0  ECDB  F033         	call	_wr32	;wreg free
 15028                           
 15029                           ;FT800.c: 184:     wr32(1048576UL +8,((0UL<<24)));
 15030  0055B4  0E08               	movlw	8
 15031  0055B6  6E04               	movwf	wr32@addr,c
 15032  0055B8  0E00               	movlw	0
 15033  0055BA  6E05               	movwf	wr32@addr+1,c
 15034  0055BC  0E10               	movlw	16
 15035  0055BE  6E06               	movwf	wr32@addr+2,c
 15036  0055C0  0E00               	movlw	0
 15037  0055C2  6E07               	movwf	wr32@addr+3,c
 15038  0055C4  0E00               	movlw	0
 15039  0055C6  6E08               	movwf	wr32@value,c
 15040  0055C8  0E00               	movlw	0
 15041  0055CA  6E09               	movwf	wr32@value+1,c
 15042  0055CC  0E00               	movlw	0
 15043  0055CE  6E0A               	movwf	wr32@value+2,c
 15044  0055D0  0E00               	movlw	0
 15045  0055D2  6E0B               	movwf	wr32@value+3,c
 15046  0055D4  ECDB  F033         	call	_wr32	;wreg free
 15047                           
 15048                           ;FT800.c: 186:     wr8(1057872UL,2UL);
 15049  0055D8  0E50               	movlw	80
 15050  0055DA  6E04               	movwf	wr8@addr,c
 15051  0055DC  0E24               	movlw	36
 15052  0055DE  6E05               	movwf	wr8@addr+1,c
 15053  0055E0  0E10               	movlw	16
 15054  0055E2  6E06               	movwf	wr8@addr+2,c
 15055  0055E4  0E00               	movlw	0
 15056  0055E6  6E07               	movwf	wr8@addr+3,c
 15057  0055E8  0E02               	movlw	2
 15058  0055EA  6E08               	movwf	wr8@value,c
 15059  0055EC  EC5B  F035         	call	_wr8	;wreg free
 15060                           
 15061                           ;FT800.c: 191:     wr8(1057932UL, 0xfc);
 15062  0055F0  0E8C               	movlw	140
 15063  0055F2  6E04               	movwf	wr8@addr,c
 15064  0055F4  0E24               	movlw	36
 15065  0055F6  6E05               	movwf	wr8@addr+1,c
 15066  0055F8  0E10               	movlw	16
 15067  0055FA  6E06               	movwf	wr8@addr+2,c
 15068  0055FC  0E00               	movlw	0
 15069  0055FE  6E07               	movwf	wr8@addr+3,c
 15070  005600  0EFC               	movlw	252
 15071  005602  6E08               	movwf	wr8@value,c
 15072  005604  EC5B  F035         	call	_wr8	;wreg free
 15073                           
 15074                           ;FT800.c: 192:     wr8(1057936UL, 0xff);
 15075  005608  0E90               	movlw	144
 15076  00560A  6E04               	movwf	wr8@addr,c
 15077  00560C  0E24               	movlw	36
 15078  00560E  6E05               	movwf	wr8@addr+1,c
 15079  005610  0E10               	movlw	16
 15080  005612  6E06               	movwf	wr8@addr+2,c
 15081  005614  0E00               	movlw	0
 15082  005616  6E07               	movwf	wr8@addr+3,c
 15083  005618  0EFF               	movlw	255
 15084  00561A  6E08               	movwf	wr8@value,c
 15085  00561C  EC5B  F035         	call	_wr8	;wreg free
 15086                           
 15087                           ;FT800.c: 194:     wr8(1057900UL,5);
 15088  005620  0E6C               	movlw	108
 15089  005622  6E04               	movwf	wr8@addr,c
 15090  005624  0E24               	movlw	36
 15091  005626  6E05               	movwf	wr8@addr+1,c
 15092  005628  0E10               	movlw	16
 15093  00562A  6E06               	movwf	wr8@addr+2,c
 15094  00562C  0E00               	movlw	0
 15095  00562E  6E07               	movwf	wr8@addr+3,c
 15096  005630  0E05               	movlw	5
 15097  005632  6E08               	movwf	wr8@value,c
 15098  005634  EC5B  F035         	call	_wr8	;wreg free
 15099                           
 15100                           ;FT800.c: 196:     cmd_offset=rd16(1058024UL);while(rd16(1058020UL) != cmd_offset);
 15101  005638  0EE8               	movlw	232
 15102  00563A  6E04               	movwf	rd16@addr,c
 15103  00563C  0E24               	movlw	36
 15104  00563E  6E05               	movwf	rd16@addr+1,c
 15105  005640  0E10               	movlw	16
 15106  005642  6E06               	movwf	rd16@addr+2,c
 15107  005644  0E00               	movlw	0
 15108  005646  6E07               	movwf	rd16@addr+3,c
 15109  005648  ECCD  F034         	call	_rd16	;wreg free
 15110  00564C  C004  F04F         	movff	?_rd16,_cmd_offset
 15111  005650  C005  F050         	movff	?_rd16+1,_cmd_offset+1
 15112  005654                     l4042:
 15113  005654  0EE4               	movlw	228
 15114  005656  6E04               	movwf	rd16@addr,c
 15115  005658  0E24               	movlw	36
 15116  00565A  6E05               	movwf	rd16@addr+1,c
 15117  00565C  0E10               	movlw	16
 15118  00565E  6E06               	movwf	rd16@addr+2,c
 15119  005660  0E00               	movlw	0
 15120  005662  6E07               	movwf	rd16@addr+3,c
 15121  005664  ECCD  F034         	call	_rd16	;wreg free
 15122  005668  504F               	movf	_cmd_offset,w,c
 15123  00566A  1804               	xorwf	?_rd16,w,c
 15124  00566C  E1F3               	bnz	l4042
 15125  00566E  5050               	movf	_cmd_offset+1,w,c
 15126  005670  1805               	xorwf	?_rd16+1,w,c
 15127  005672  B4D8               	btfsc	status,2,c
 15128  005674  0012               	return	
 15129  005676  D7EE               	goto	l61
 15130  005678                     __end_of_FT800_Init:
 15131                           	opt stack 0
 15132                           tblptru	equ	0xFF8
 15133                           tblptrh	equ	0xFF7
 15134                           tblptrl	equ	0xFF6
 15135                           tablat	equ	0xFF5
 15136                           prodh	equ	0xFF4
 15137                           prodl	equ	0xFF3
 15138                           intcon	equ	0xFF2
 15139                           postinc0	equ	0xFEE
 15140                           wreg	equ	0xFE8
 15141                           postdec1	equ	0xFE5
 15142                           plusw1	equ	0xFE3
 15143                           fsr1l	equ	0xFE1
 15144                           plusw2	equ	0xFDB
 15145                           status	equ	0xFD8
 15146                           
 15147 ;; *************** function _wr8 *****************
 15148 ;; Defined at:
 15149 ;;		line 16 in file "FT800.c"
 15150 ;; Parameters:    Size  Location     Type
 15151 ;;  addr            4    3[COMRAM] unsigned long 
 15152 ;;  value           1    7[COMRAM] unsigned char 
 15153 ;; Auto vars:     Size  Location     Type
 15154 ;;		None
 15155 ;; Return value:  Size  Location     Type
 15156 ;;                  1    wreg      void 
 15157 ;; Registers used:
 15158 ;;		wreg, status,2, status,0, cstack
 15159 ;; Tracked objects:
 15160 ;;		On entry : 0/0
 15161 ;;		On exit  : 0/0
 15162 ;;		Unchanged: 0/0
 15163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15164 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15167 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15168 ;;Total ram usage:        5 bytes
 15169 ;; Hardware stack levels used:    1
 15170 ;; Hardware stack levels required when called:    5
 15171 ;; This function calls:
 15172 ;;		_SPI_Exchange8bit
 15173 ;; This function is called by:
 15174 ;;		_FT800_Init
 15175 ;; This function uses a non-reentrant model
 15176 ;;
 15177                           
 15178                           	psect	text46
 15179  006AB6                     __ptext46:
 15180                           	opt stack 0
 15181  006AB6                     _wr8:
 15182                           	opt stack 24
 15183                           
 15184                           ;FT800.c: 17:     LATDbits.LATD0 = 0;
 15185                           
 15186                           ;incstack = 0
 15187  006AB6  908C               	bcf	3980,0,c	;volatile
 15188                           
 15189                           ;FT800.c: 18:     SPI_Exchange8bit(0x80 | (addr >> 16));
 15190  006AB8  5006               	movf	wr8@addr+2,w,c
 15191  006ABA  0980               	iorlw	128
 15192  006ABC  ECC5  F035         	call	_SPI_Exchange8bit
 15193                           
 15194                           ;FT800.c: 19:     SPI_Exchange8bit(addr >> 8);
 15195  006AC0  5005               	movf	wr8@addr+1,w,c
 15196  006AC2  ECC5  F035         	call	_SPI_Exchange8bit
 15197                           
 15198                           ;FT800.c: 20:     SPI_Exchange8bit(addr);
 15199  006AC6  5004               	movf	wr8@addr,w,c
 15200  006AC8  ECC5  F035         	call	_SPI_Exchange8bit
 15201                           
 15202                           ;FT800.c: 21:     SPI_Exchange8bit(value);
 15203  006ACC  5008               	movf	wr8@value,w,c
 15204  006ACE  ECC5  F035         	call	_SPI_Exchange8bit
 15205                           
 15206                           ;FT800.c: 22:     LATDbits.LATD0 = 1;
 15207  006AD2  808C               	bsf	3980,0,c	;volatile
 15208  006AD4  0012               	return		;funcret
 15209  006AD6                     __end_of_wr8:
 15210                           	opt stack 0
 15211                           tblptru	equ	0xFF8
 15212                           tblptrh	equ	0xFF7
 15213                           tblptrl	equ	0xFF6
 15214                           tablat	equ	0xFF5
 15215                           prodh	equ	0xFF4
 15216                           prodl	equ	0xFF3
 15217                           intcon	equ	0xFF2
 15218                           postinc0	equ	0xFEE
 15219                           wreg	equ	0xFE8
 15220                           postdec1	equ	0xFE5
 15221                           plusw1	equ	0xFE3
 15222                           fsr1l	equ	0xFE1
 15223                           plusw2	equ	0xFDB
 15224                           status	equ	0xFD8
 15225                           
 15226 ;; *************** function _wr32 *****************
 15227 ;; Defined at:
 15228 ;;		line 34 in file "FT800.c"
 15229 ;; Parameters:    Size  Location     Type
 15230 ;;  addr            4    3[COMRAM] unsigned long 
 15231 ;;  value           4    7[COMRAM] unsigned long 
 15232 ;; Auto vars:     Size  Location     Type
 15233 ;;		None
 15234 ;; Return value:  Size  Location     Type
 15235 ;;                  1    wreg      void 
 15236 ;; Registers used:
 15237 ;;		wreg, status,2, status,0, cstack
 15238 ;; Tracked objects:
 15239 ;;		On entry : 0/0
 15240 ;;		On exit  : 0/0
 15241 ;;		Unchanged: 0/0
 15242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15243 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15245 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15246 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15247 ;;Total ram usage:       12 bytes
 15248 ;; Hardware stack levels used:    1
 15249 ;; Hardware stack levels required when called:    5
 15250 ;; This function calls:
 15251 ;;		_SPI_Exchange8bit
 15252 ;; This function is called by:
 15253 ;;		_cmd
 15254 ;;		_FT800_Init
 15255 ;; This function uses a non-reentrant model
 15256 ;;
 15257                           
 15258                           	psect	text47
 15259  0067B6                     __ptext47:
 15260                           	opt stack 0
 15261  0067B6                     _wr32:
 15262                           	opt stack 23
 15263                           
 15264                           ;FT800.c: 35:     LATDbits.LATD0 = 0;
 15265                           
 15266                           ;incstack = 0
 15267  0067B6  908C               	bcf	3980,0,c	;volatile
 15268                           
 15269                           ;FT800.c: 36:     SPI_Exchange8bit(0x80 | (addr >> 16));
 15270  0067B8  5006               	movf	wr32@addr+2,w,c
 15271  0067BA  0980               	iorlw	128
 15272  0067BC  ECC5  F035         	call	_SPI_Exchange8bit
 15273                           
 15274                           ;FT800.c: 37:     SPI_Exchange8bit(addr >> 8);
 15275  0067C0  5005               	movf	wr32@addr+1,w,c
 15276  0067C2  ECC5  F035         	call	_SPI_Exchange8bit
 15277                           
 15278                           ;FT800.c: 38:     SPI_Exchange8bit(addr);
 15279  0067C6  5004               	movf	wr32@addr,w,c
 15280  0067C8  ECC5  F035         	call	_SPI_Exchange8bit
 15281                           
 15282                           ;FT800.c: 39:     SPI_Exchange8bit(((value) & 0xFFFF) & 0xFF);SPI_Exchange8bit((((value)
      +                           & 0xFFFF) >> 8) & 0xFF);SPI_Exchange8bit((((value) >> 16) & 0xFFFF) & 0xFF);SPI_Exchang
      +                          e8bit(((((value) >> 16) & 0xFFFF) >> 8) & 0xFF);
 15283  0067CC  5008               	movf	wr32@value,w,c
 15284  0067CE  ECC5  F035         	call	_SPI_Exchange8bit
 15285  0067D2  5009               	movf	wr32@value+1,w,c
 15286  0067D4  ECC5  F035         	call	_SPI_Exchange8bit
 15287  0067D8  500A               	movf	wr32@value+2,w,c
 15288  0067DA  ECC5  F035         	call	_SPI_Exchange8bit
 15289  0067DE  C008  F00C         	movff	wr32@value,??_wr32
 15290  0067E2  C009  F00D         	movff	wr32@value+1,??_wr32+1
 15291  0067E6  C00A  F00E         	movff	wr32@value+2,??_wr32+2
 15292  0067EA  C00B  F00F         	movff	wr32@value+3,??_wr32+3
 15293  0067EE  0E11               	movlw	17
 15294  0067F0  D005               	goto	u1160
 15295  0067F2                     u1165:
 15296  0067F2  90D8               	bcf	status,0,c
 15297  0067F4  320F               	rrcf	??_wr32+3,f,c
 15298  0067F6  320E               	rrcf	??_wr32+2,f,c
 15299  0067F8  320D               	rrcf	??_wr32+1,f,c
 15300  0067FA  320C               	rrcf	??_wr32,f,c
 15301  0067FC                     u1160:
 15302  0067FC  2EE8               	decfsz	wreg,f,c
 15303  0067FE  D7F9               	goto	u1165
 15304  006800  C00D  F00C         	movff	??_wr32+1,??_wr32
 15305  006804  C00E  F00D         	movff	??_wr32+2,??_wr32+1
 15306  006808  C00F  F00E         	movff	??_wr32+3,??_wr32+2
 15307  00680C  6A0F               	clrf	??_wr32+3,c
 15308  00680E  500C               	movf	??_wr32,w,c
 15309  006810  ECC5  F035         	call	_SPI_Exchange8bit
 15310                           
 15311                           ;FT800.c: 40:     LATDbits.LATD0 = 1;
 15312  006814  808C               	bsf	3980,0,c	;volatile
 15313  006816  0012               	return		;funcret
 15314  006818                     __end_of_wr32:
 15315                           	opt stack 0
 15316                           tblptru	equ	0xFF8
 15317                           tblptrh	equ	0xFF7
 15318                           tblptrl	equ	0xFF6
 15319                           tablat	equ	0xFF5
 15320                           prodh	equ	0xFF4
 15321                           prodl	equ	0xFF3
 15322                           intcon	equ	0xFF2
 15323                           postinc0	equ	0xFEE
 15324                           wreg	equ	0xFE8
 15325                           postdec1	equ	0xFE5
 15326                           plusw1	equ	0xFE3
 15327                           fsr1l	equ	0xFE1
 15328                           plusw2	equ	0xFDB
 15329                           status	equ	0xFD8
 15330                           
 15331 ;; *************** function _wr16 *****************
 15332 ;; Defined at:
 15333 ;;		line 25 in file "FT800.c"
 15334 ;; Parameters:    Size  Location     Type
 15335 ;;  addr            4    3[COMRAM] unsigned long 
 15336 ;;  value           2    7[COMRAM] unsigned int 
 15337 ;; Auto vars:     Size  Location     Type
 15338 ;;		None
 15339 ;; Return value:  Size  Location     Type
 15340 ;;                  1    wreg      void 
 15341 ;; Registers used:
 15342 ;;		wreg, status,2, status,0, cstack
 15343 ;; Tracked objects:
 15344 ;;		On entry : 0/0
 15345 ;;		On exit  : 0/0
 15346 ;;		Unchanged: 0/0
 15347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15348 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15351 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15352 ;;Total ram usage:        6 bytes
 15353 ;; Hardware stack levels used:    1
 15354 ;; Hardware stack levels required when called:    5
 15355 ;; This function calls:
 15356 ;;		_SPI_Exchange8bit
 15357 ;; This function is called by:
 15358 ;;		_FT800_Init
 15359 ;;		_display_end
 15360 ;;		_display_labels
 15361 ;;		_display_status
 15362 ;;		_display_laptime
 15363 ;;		_display_waterTemp
 15364 ;;		_display_oilTemp
 15365 ;;		_display_bspd
 15366 ;;		_display_battery
 15367 ;;		_display_fuel_level
 15368 ;;		_display_gasPres
 15369 ;;		_display_tp
 15370 ;;		_display_etc
 15371 ;;		_display_speed
 15372 ;;		_display_brake_bias
 15373 ;;		_display_rpm
 15374 ;;		_display_fuel
 15375 ;; This function uses a non-reentrant model
 15376 ;;
 15377                           
 15378                           	psect	text48
 15379  006A90                     __ptext48:
 15380                           	opt stack 0
 15381  006A90                     _wr16:
 15382                           	opt stack 24
 15383                           
 15384                           ;FT800.c: 26:     LATDbits.LATD0 = 0;
 15385                           
 15386                           ;incstack = 0
 15387  006A90  908C               	bcf	3980,0,c	;volatile
 15388                           
 15389                           ;FT800.c: 27:     SPI_Exchange8bit(0x80 | (addr >> 16));
 15390  006A92  5006               	movf	wr16@addr+2,w,c
 15391  006A94  0980               	iorlw	128
 15392  006A96  ECC5  F035         	call	_SPI_Exchange8bit
 15393                           
 15394                           ;FT800.c: 28:     SPI_Exchange8bit(addr >> 8);
 15395  006A9A  5005               	movf	wr16@addr+1,w,c
 15396  006A9C  ECC5  F035         	call	_SPI_Exchange8bit
 15397                           
 15398                           ;FT800.c: 29:     SPI_Exchange8bit(addr);
 15399  006AA0  5004               	movf	wr16@addr,w,c
 15400  006AA2  ECC5  F035         	call	_SPI_Exchange8bit
 15401                           
 15402                           ;FT800.c: 30:     SPI_Exchange8bit((value) & 0xFF);SPI_Exchange8bit(((value) >> 8) & 0xF
      +                          F);
 15403  006AA6  5008               	movf	wr16@value,w,c
 15404  006AA8  ECC5  F035         	call	_SPI_Exchange8bit
 15405  006AAC  5009               	movf	wr16@value+1,w,c
 15406  006AAE  ECC5  F035         	call	_SPI_Exchange8bit
 15407                           
 15408                           ;FT800.c: 31:     LATDbits.LATD0 = 1;
 15409  006AB2  808C               	bsf	3980,0,c	;volatile
 15410  006AB4  0012               	return		;funcret
 15411  006AB6                     __end_of_wr16:
 15412                           	opt stack 0
 15413                           tblptru	equ	0xFF8
 15414                           tblptrh	equ	0xFF7
 15415                           tblptrl	equ	0xFF6
 15416                           tablat	equ	0xFF5
 15417                           prodh	equ	0xFF4
 15418                           prodl	equ	0xFF3
 15419                           intcon	equ	0xFF2
 15420                           postinc0	equ	0xFEE
 15421                           wreg	equ	0xFE8
 15422                           postdec1	equ	0xFE5
 15423                           plusw1	equ	0xFE3
 15424                           fsr1l	equ	0xFE1
 15425                           plusw2	equ	0xFDB
 15426                           status	equ	0xFD8
 15427                           
 15428 ;; *************** function _rd16 *****************
 15429 ;; Defined at:
 15430 ;;		line 72 in file "FT800.c"
 15431 ;; Parameters:    Size  Location     Type
 15432 ;;  addr            4    3[COMRAM] unsigned long 
 15433 ;; Auto vars:     Size  Location     Type
 15434 ;;  temp            1    9[COMRAM] unsigned char 
 15435 ;; Return value:  Size  Location     Type
 15436 ;;                  2    3[COMRAM] unsigned int 
 15437 ;; Registers used:
 15438 ;;		wreg, status,2, cstack
 15439 ;; Tracked objects:
 15440 ;;		On entry : 0/0
 15441 ;;		On exit  : 0/0
 15442 ;;		Unchanged: 0/0
 15443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15446 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15447 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15448 ;;Total ram usage:        7 bytes
 15449 ;; Hardware stack levels used:    1
 15450 ;; Hardware stack levels required when called:    5
 15451 ;; This function calls:
 15452 ;;		_SPI_Exchange8bit
 15453 ;; This function is called by:
 15454 ;;		_FT800_Init
 15455 ;; This function uses a non-reentrant model
 15456 ;;
 15457                           
 15458                           	psect	text49
 15459  00699A                     __ptext49:
 15460                           	opt stack 0
 15461  00699A                     _rd16:
 15462                           	opt stack 24
 15463                           
 15464                           ;FT800.c: 73:     LATDbits.LATD0 = 0;
 15465                           
 15466                           ;incstack = 0
 15467  00699A  908C               	bcf	3980,0,c	;volatile
 15468                           
 15469                           ;FT800.c: 74:     SPI_Exchange8bit(addr >> 16);
 15470  00699C  5006               	movf	rd16@addr+2,w,c
 15471  00699E  ECC5  F035         	call	_SPI_Exchange8bit
 15472                           
 15473                           ;FT800.c: 75:     SPI_Exchange8bit(addr >> 8);
 15474  0069A2  5005               	movf	rd16@addr+1,w,c
 15475  0069A4  ECC5  F035         	call	_SPI_Exchange8bit
 15476                           
 15477                           ;FT800.c: 76:     SPI_Exchange8bit(addr);
 15478  0069A8  5004               	movf	rd16@addr,w,c
 15479  0069AA  ECC5  F035         	call	_SPI_Exchange8bit
 15480                           
 15481                           ;FT800.c: 77:     SPI_Exchange8bit(0);
 15482  0069AE  0E00               	movlw	0
 15483  0069B0  ECC5  F035         	call	_SPI_Exchange8bit
 15484                           
 15485                           ;FT800.c: 78:     SPI_Exchange8bit(0);
 15486  0069B4  0E00               	movlw	0
 15487  0069B6  ECC5  F035         	call	_SPI_Exchange8bit
 15488                           
 15489                           ;FT800.c: 79:     ft_uint8_t temp = SSPBUF;
 15490  0069BA  CFC9 F00A          	movff	4041,rd16@temp	;volatile
 15491                           
 15492                           ;FT800.c: 80:     SPI_Exchange8bit(0);
 15493  0069BE  0E00               	movlw	0
 15494  0069C0  ECC5  F035         	call	_SPI_Exchange8bit
 15495                           
 15496                           ;FT800.c: 81:     LATDbits.LATD0 = 1;
 15497  0069C4  808C               	bsf	3980,0,c	;volatile
 15498                           
 15499                           ;FT800.c: 82:     return ((ft_uint16_t)SSPBUF << 8) | temp;
 15500  0069C6  50C9               	movf	4041,w,c	;volatile
 15501  0069C8  6E08               	movwf	??_rd16& (0+255),c
 15502  0069CA  500A               	movf	rd16@temp,w,c
 15503  0069CC  6E04               	movwf	?_rd16,c
 15504  0069CE  C008  F005         	movff	??_rd16,?_rd16+1
 15505  0069D2  0012               	return	
 15506  0069D4                     __end_of_rd16:
 15507                           	opt stack 0
 15508                           tblptru	equ	0xFF8
 15509                           tblptrh	equ	0xFF7
 15510                           tblptrl	equ	0xFF6
 15511                           tablat	equ	0xFF5
 15512                           prodh	equ	0xFF4
 15513                           prodl	equ	0xFF3
 15514                           intcon	equ	0xFF2
 15515                           postinc0	equ	0xFEE
 15516                           wreg	equ	0xFE8
 15517                           postdec1	equ	0xFE5
 15518                           plusw1	equ	0xFE3
 15519                           fsr1l	equ	0xFE1
 15520                           plusw2	equ	0xFDB
 15521                           status	equ	0xFD8
 15522                           
 15523 ;; *************** function _host_command *****************
 15524 ;; Defined at:
 15525 ;;		line 8 in file "FT800.c"
 15526 ;; Parameters:    Size  Location     Type
 15527 ;;  command         1    wreg     unsigned char 
 15528 ;; Auto vars:     Size  Location     Type
 15529 ;;  command         1    3[COMRAM] unsigned char 
 15530 ;; Return value:  Size  Location     Type
 15531 ;;                  1    wreg      void 
 15532 ;; Registers used:
 15533 ;;		wreg, status,2, cstack
 15534 ;; Tracked objects:
 15535 ;;		On entry : 0/0
 15536 ;;		On exit  : 0/0
 15537 ;;		Unchanged: 0/0
 15538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15543 ;;Total ram usage:        1 bytes
 15544 ;; Hardware stack levels used:    1
 15545 ;; Hardware stack levels required when called:    5
 15546 ;; This function calls:
 15547 ;;		_SPI_Exchange8bit
 15548 ;; This function is called by:
 15549 ;;		_FT800_Init
 15550 ;; This function uses a non-reentrant model
 15551 ;;
 15552                           
 15553                           	psect	text50
 15554  006B48                     __ptext50:
 15555                           	opt stack 0
 15556  006B48                     _host_command:
 15557                           	opt stack 24
 15558                           
 15559                           ;incstack = 0
 15560                           ;host_command@command stored from wreg
 15561  006B48  6E04               	movwf	host_command@command,c
 15562                           
 15563                           ;FT800.c: 9:     LATDbits.LATD0 = 0;
 15564  006B4A  908C               	bcf	3980,0,c	;volatile
 15565                           
 15566                           ;FT800.c: 10:     SPI_Exchange8bit(command);
 15567  006B4C  5004               	movf	host_command@command,w,c
 15568  006B4E  ECC5  F035         	call	_SPI_Exchange8bit
 15569                           
 15570                           ;FT800.c: 11:     SPI_Exchange8bit(0);
 15571  006B52  0E00               	movlw	0
 15572  006B54  ECC5  F035         	call	_SPI_Exchange8bit
 15573                           
 15574                           ;FT800.c: 12:     SPI_Exchange8bit(0);
 15575  006B58  0E00               	movlw	0
 15576  006B5A  ECC5  F035         	call	_SPI_Exchange8bit
 15577                           
 15578                           ;FT800.c: 13:     LATDbits.LATD0 = 1;
 15579  006B5E  808C               	bsf	3980,0,c	;volatile
 15580  006B60  0012               	return		;funcret
 15581  006B62                     __end_of_host_command:
 15582                           	opt stack 0
 15583                           tblptru	equ	0xFF8
 15584                           tblptrh	equ	0xFF7
 15585                           tblptrl	equ	0xFF6
 15586                           tablat	equ	0xFF5
 15587                           prodh	equ	0xFF4
 15588                           prodl	equ	0xFF3
 15589                           intcon	equ	0xFF2
 15590                           postinc0	equ	0xFEE
 15591                           wreg	equ	0xFE8
 15592                           postdec1	equ	0xFE5
 15593                           plusw1	equ	0xFE3
 15594                           fsr1l	equ	0xFE1
 15595                           plusw2	equ	0xFDB
 15596                           status	equ	0xFD8
 15597                           
 15598 ;; *************** function _SPI_Exchange8bit *****************
 15599 ;; Defined at:
 15600 ;;		line 77 in file "mcc_generated_files/spi.c"
 15601 ;; Parameters:    Size  Location     Type
 15602 ;;  data            1    wreg     unsigned char 
 15603 ;; Auto vars:     Size  Location     Type
 15604 ;;  data            1    2[COMRAM] unsigned char 
 15605 ;; Return value:  Size  Location     Type
 15606 ;;                  1    wreg      unsigned char 
 15607 ;; Registers used:
 15608 ;;		wreg, status,2
 15609 ;; Tracked objects:
 15610 ;;		On entry : 0/0
 15611 ;;		On exit  : 0/0
 15612 ;;		Unchanged: 0/0
 15613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15618 ;;Total ram usage:        1 bytes
 15619 ;; Hardware stack levels used:    1
 15620 ;; Hardware stack levels required when called:    4
 15621 ;; This function calls:
 15622 ;;		Nothing
 15623 ;; This function is called by:
 15624 ;;		_host_command
 15625 ;;		_wr8
 15626 ;;		_wr16
 15627 ;;		_wr32
 15628 ;;		_wr8s
 15629 ;;		_rd16
 15630 ;;		_rd8
 15631 ;;		_rd32
 15632 ;;		_SPI_Exchange8bitBuffer
 15633 ;; This function uses a non-reentrant model
 15634 ;;
 15635                           
 15636                           	psect	text51
 15637  006B8A                     __ptext51:
 15638                           	opt stack 0
 15639  006B8A                     _SPI_Exchange8bit:
 15640                           	opt stack 24
 15641                           
 15642                           ;incstack = 0
 15643                           ;SPI_Exchange8bit@data stored from wreg
 15644  006B8A  6E03               	movwf	SPI_Exchange8bit@data,c
 15645                           
 15646                           ;mcc_generated_files/spi.c: 77: uint8_t SPI_Exchange8bit(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 78: {;mcc_generated_files/spi.c: 80:     SSPCON1bits.WCOL = 0;
 15647  006B8C  9EC6               	bcf	4038,7,c	;volatile
 15648                           
 15649                           ;mcc_generated_files/spi.c: 82:     SSPBUF = data;
 15650  006B8E  C003  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 15651  006B92                     
 15652                           ;mcc_generated_files/spi.c: 84:     while(SSPSTATbits.BF == 0x0)
 15653                           
 15654                           ;mcc_generated_files/spi.c: 85:     {;mcc_generated_files/spi.c: 86:     }
 15655  006B92  A0C7               	btfss	4039,0,c	;volatile
 15656  006B94  D7FE               	goto	l181
 15657                           
 15658                           ;mcc_generated_files/spi.c: 88:     return (SSPBUF);
 15659  006B96  50C9               	movf	4041,w,c	;volatile
 15660  006B98  0012               	return		;funcret
 15661  006B9A                     __end_of_SPI_Exchange8bit:
 15662                           	opt stack 0
 15663                           tblptru	equ	0xFF8
 15664                           tblptrh	equ	0xFF7
 15665                           tblptrl	equ	0xFF6
 15666                           tablat	equ	0xFF5
 15667                           prodh	equ	0xFF4
 15668                           prodl	equ	0xFF3
 15669                           intcon	equ	0xFF2
 15670                           postinc0	equ	0xFEE
 15671                           wreg	equ	0xFE8
 15672                           postdec1	equ	0xFE5
 15673                           plusw1	equ	0xFE3
 15674                           fsr1l	equ	0xFE1
 15675                           plusw2	equ	0xFDB
 15676                           status	equ	0xFD8
 15677                           
 15678 ;; *************** function _CAN_receive *****************
 15679 ;; Defined at:
 15680 ;;		line 239 in file "mcc_generated_files/ecan.c"
 15681 ;; Parameters:    Size  Location     Type
 15682 ;;  tempCanMsg      2   21[COMRAM] PTR struct .
 15683 ;;		 -> canMessage(14), 
 15684 ;; Auto vars:     Size  Location     Type
 15685 ;;  returnValue     1   23[COMRAM] unsigned char 
 15686 ;; Return value:  Size  Location     Type
 15687 ;;                  1    wreg      unsigned char 
 15688 ;; Registers used:
 15689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15690 ;; Tracked objects:
 15691 ;;		On entry : 0/0
 15692 ;;		On exit  : 0/0
 15693 ;;		Unchanged: 0/0
 15694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15698 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15699 ;;Total ram usage:        3 bytes
 15700 ;; Hardware stack levels used:    1
 15701 ;; Hardware stack levels required when called:    5
 15702 ;; This function calls:
 15703 ;;		_convertReg2ExtendedCANid
 15704 ;;		_convertReg2StandardCANid
 15705 ;; This function is called by:
 15706 ;;		_main
 15707 ;; This function uses a non-reentrant model
 15708 ;;
 15709                           
 15710                           	psect	text52
 15711  0058EC                     __ptext52:
 15712                           	opt stack 0
 15713  0058EC                     _CAN_receive:
 15714                           	opt stack 25
 15715                           
 15716                           ;mcc_generated_files/ecan.c: 240:     unsigned char returnValue = 0;
 15717                           
 15718                           ;incstack = 0
 15719  0058EC  0E00               	movlw	0
 15720  0058EE  6E18               	movwf	CAN_receive@returnValue,c
 15721                           
 15722                           ;mcc_generated_files/ecan.c: 244:     {;mcc_generated_files/ecan.c: 247:         if (RXB
      +                          0CONbits.RXFUL != 0)
 15723  0058F0  AE60               	btfss	3936,7,c	;volatile
 15724  0058F2  D083               	goto	l461
 15725                           
 15726                           ;mcc_generated_files/ecan.c: 248:         {;mcc_generated_files/ecan.c: 249:            
      +                           if ((RXB0SIDL & 0x08) == 0x08)
 15727  0058F4  A662               	btfss	3938,3,c	;volatile
 15728  0058F6  D01E               	goto	l462
 15729                           
 15730                           ;mcc_generated_files/ecan.c: 250:             {;mcc_generated_files/ecan.c: 252:        
      +                                   tempCanMsg->frame.idType = (unsigned char) 2;
 15731  0058F8  C016  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 15732  0058FC  C017  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 15733  005900  0E02               	movlw	2
 15734  005902  6EDF               	movwf	indf2,c
 15735                           
 15736                           ;mcc_generated_files/ecan.c: 253:                 tempCanMsg->frame.id = convertReg2Exte
      +                          ndedCANid(RXB0EIDH, RXB0EIDL, RXB0SIDH, RXB0SIDL);
 15737  005904  CF64 F003          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
 15738  005908  CF61 F004          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
 15739  00590C  CF62 F005          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
 15740  005910  5063               	movf	3939,w,c	;volatile
 15741  005912  EC89  F02D         	call	_convertReg2ExtendedCANid
 15742  005916  EE20 F001          	lfsr	2,1
 15743  00591A  5016               	movf	CAN_receive@tempCanMsg,w,c
 15744  00591C  26D9               	addwf	fsr2l,f,c
 15745  00591E  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15746  005920  22DA               	addwfc	fsr2h,f,c
 15747  005922  C003  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
 15748  005926  C004  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
 15749  00592A  C005  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
 15750  00592E  C006  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
 15751                           
 15752                           ;mcc_generated_files/ecan.c: 254:             } else {
 15753  005932  D019               	goto	l463
 15754  005934                     l462:
 15755                           
 15756                           ;mcc_generated_files/ecan.c: 256:                 tempCanMsg->frame.idType = (unsigned c
      +                          har) 1;
 15757  005934  C016  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 15758  005938  C017  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 15759  00593C  0E01               	movlw	1
 15760  00593E  6EDF               	movwf	indf2,c
 15761                           
 15762                           ;mcc_generated_files/ecan.c: 257:                 tempCanMsg->frame.id = convertReg2Stan
      +                          dardCANid(RXB0SIDH, RXB0SIDL);
 15763  005940  CF62 F003          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
 15764  005944  5061               	movf	3937,w,c	;volatile
 15765  005946  ECE2  F032         	call	_convertReg2StandardCANid
 15766  00594A  EE20 F001          	lfsr	2,1
 15767  00594E  5016               	movf	CAN_receive@tempCanMsg,w,c
 15768  005950  26D9               	addwf	fsr2l,f,c
 15769  005952  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15770  005954  22DA               	addwfc	fsr2h,f,c
 15771  005956  C003  FFDE         	movff	?_convertReg2StandardCANid,postinc2
 15772  00595A  C004  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
 15773  00595E  C005  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
 15774  005962  C006  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
 15775  005966                     l463:
 15776                           
 15777                           ;mcc_generated_files/ecan.c: 260:             tempCanMsg->frame.dlc = RXB0DLC;
 15778  005966  EE20 F005          	lfsr	2,5
 15779  00596A  5016               	movf	CAN_receive@tempCanMsg,w,c
 15780  00596C  26D9               	addwf	fsr2l,f,c
 15781  00596E  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15782  005970  22DA               	addwfc	fsr2h,f,c
 15783  005972  CF65 FFDF          	movff	3941,indf2	;volatile
 15784                           
 15785                           ;mcc_generated_files/ecan.c: 261:             tempCanMsg->frame.data0 = RXB0D0;
 15786  005976  EE20 F006          	lfsr	2,6
 15787  00597A  5016               	movf	CAN_receive@tempCanMsg,w,c
 15788  00597C  26D9               	addwf	fsr2l,f,c
 15789  00597E  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15790  005980  22DA               	addwfc	fsr2h,f,c
 15791  005982  CF66 FFDF          	movff	3942,indf2	;volatile
 15792                           
 15793                           ;mcc_generated_files/ecan.c: 262:             tempCanMsg->frame.data1 = RXB0D1;
 15794  005986  EE20 F007          	lfsr	2,7
 15795  00598A  5016               	movf	CAN_receive@tempCanMsg,w,c
 15796  00598C  26D9               	addwf	fsr2l,f,c
 15797  00598E  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15798  005990  22DA               	addwfc	fsr2h,f,c
 15799  005992  CF67 FFDF          	movff	3943,indf2	;volatile
 15800                           
 15801                           ;mcc_generated_files/ecan.c: 263:             tempCanMsg->frame.data2 = RXB0D2;
 15802  005996  EE20 F008          	lfsr	2,8
 15803  00599A  5016               	movf	CAN_receive@tempCanMsg,w,c
 15804  00599C  26D9               	addwf	fsr2l,f,c
 15805  00599E  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15806  0059A0  22DA               	addwfc	fsr2h,f,c
 15807  0059A2  CF68 FFDF          	movff	3944,indf2	;volatile
 15808                           
 15809                           ;mcc_generated_files/ecan.c: 264:             tempCanMsg->frame.data3 = RXB0D3;
 15810  0059A6  EE20 F009          	lfsr	2,9
 15811  0059AA  5016               	movf	CAN_receive@tempCanMsg,w,c
 15812  0059AC  26D9               	addwf	fsr2l,f,c
 15813  0059AE  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15814  0059B0  22DA               	addwfc	fsr2h,f,c
 15815  0059B2  CF69 FFDF          	movff	3945,indf2	;volatile
 15816                           
 15817                           ;mcc_generated_files/ecan.c: 265:             tempCanMsg->frame.data4 = RXB0D4;
 15818  0059B6  EE20 F00A          	lfsr	2,10
 15819  0059BA  5016               	movf	CAN_receive@tempCanMsg,w,c
 15820  0059BC  26D9               	addwf	fsr2l,f,c
 15821  0059BE  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15822  0059C0  22DA               	addwfc	fsr2h,f,c
 15823  0059C2  CF6A FFDF          	movff	3946,indf2	;volatile
 15824                           
 15825                           ;mcc_generated_files/ecan.c: 266:             tempCanMsg->frame.data5 = RXB0D5;
 15826  0059C6  EE20 F00B          	lfsr	2,11
 15827  0059CA  5016               	movf	CAN_receive@tempCanMsg,w,c
 15828  0059CC  26D9               	addwf	fsr2l,f,c
 15829  0059CE  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15830  0059D0  22DA               	addwfc	fsr2h,f,c
 15831  0059D2  CF6B FFDF          	movff	3947,indf2	;volatile
 15832                           
 15833                           ;mcc_generated_files/ecan.c: 267:             tempCanMsg->frame.data6 = RXB0D6;
 15834  0059D6  EE20 F00C          	lfsr	2,12
 15835  0059DA  5016               	movf	CAN_receive@tempCanMsg,w,c
 15836  0059DC  26D9               	addwf	fsr2l,f,c
 15837  0059DE  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15838  0059E0  22DA               	addwfc	fsr2h,f,c
 15839  0059E2  CF6C FFDF          	movff	3948,indf2	;volatile
 15840                           
 15841                           ;mcc_generated_files/ecan.c: 268:             tempCanMsg->frame.data7 = RXB0D7;
 15842  0059E6  EE20 F00D          	lfsr	2,13
 15843  0059EA  5016               	movf	CAN_receive@tempCanMsg,w,c
 15844  0059EC  26D9               	addwf	fsr2l,f,c
 15845  0059EE  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15846  0059F0  22DA               	addwfc	fsr2h,f,c
 15847  0059F2  CF6D FFDF          	movff	3949,indf2	;volatile
 15848                           
 15849                           ;mcc_generated_files/ecan.c: 269:             RXB0CONbits.RXFUL = 0;
 15850  0059F6  9E60               	bcf	3936,7,c	;volatile
 15851  0059F8  D087               	goto	l4122
 15852  0059FA                     l461:
 15853  0059FA  010F               	movlb	15	; () banked
 15854  0059FC  AF30               	btfss	48,7,b	;volatile
 15855  0059FE  D086               	goto	l465
 15856                           
 15857                           ; BSR set to: 15
 15858                           ;mcc_generated_files/ecan.c: 272:         {;mcc_generated_files/ecan.c: 273:            
      +                           if ((RXB1SIDL & 0x08) == 0x08)
 15859  005A00  A732               	btfss	50,3,b	;volatile
 15860  005A02  D01E               	goto	l466
 15861                           
 15862                           ; BSR set to: 15
 15863                           ;mcc_generated_files/ecan.c: 274:             {;mcc_generated_files/ecan.c: 276:        
      +                                   tempCanMsg->frame.idType = (unsigned char) 2;
 15864  005A04  C016  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 15865  005A08  C017  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 15866  005A0C  0E02               	movlw	2
 15867  005A0E  6EDF               	movwf	indf2,c
 15868                           
 15869                           ; BSR set to: 15
 15870                           ;mcc_generated_files/ecan.c: 277:                 tempCanMsg->frame.id = convertReg2Exte
      +                          ndedCANid(RXB1EIDH, RXB1EIDL, RXB1SIDH, RXB1SIDL);
 15871  005A10  CF34 F003          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
 15872  005A14  CF31 F004          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
 15873  005A18  CF32 F005          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
 15874  005A1C  5133               	movf	51,w,b	;volatile
 15875  005A1E  EC89  F02D         	call	_convertReg2ExtendedCANid
 15876  005A22  EE20 F001          	lfsr	2,1
 15877  005A26  5016               	movf	CAN_receive@tempCanMsg,w,c
 15878  005A28  26D9               	addwf	fsr2l,f,c
 15879  005A2A  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15880  005A2C  22DA               	addwfc	fsr2h,f,c
 15881  005A2E  C003  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
 15882  005A32  C004  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
 15883  005A36  C005  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
 15884  005A3A  C006  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
 15885                           
 15886                           ;mcc_generated_files/ecan.c: 278:             }
 15887  005A3E  D01A               	goto	l467
 15888  005A40                     l466:
 15889                           
 15890                           ;mcc_generated_files/ecan.c: 280:    {;mcc_generated_files/ecan.c: 282:                 
      +                          tempCanMsg->frame.idType = (unsigned char) 1;
 15891  005A40  C016  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 15892  005A44  C017  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 15893  005A48  0E01               	movlw	1
 15894  005A4A  6EDF               	movwf	indf2,c
 15895                           
 15896                           ;mcc_generated_files/ecan.c: 283:                 tempCanMsg->frame.id = convertReg2Stan
      +                          dardCANid(RXB1SIDH, RXB1SIDL);
 15897  005A4C  CF32 F003          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
 15898  005A50  010F               	movlb	15	; () banked
 15899  005A52  5131               	movf	49,w,b	;volatile
 15900  005A54  ECE2  F032         	call	_convertReg2StandardCANid
 15901  005A58  EE20 F001          	lfsr	2,1
 15902  005A5C  5016               	movf	CAN_receive@tempCanMsg,w,c
 15903  005A5E  26D9               	addwf	fsr2l,f,c
 15904  005A60  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15905  005A62  22DA               	addwfc	fsr2h,f,c
 15906  005A64  C003  FFDE         	movff	?_convertReg2StandardCANid,postinc2
 15907  005A68  C004  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
 15908  005A6C  C005  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
 15909  005A70  C006  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
 15910  005A74                     l467:
 15911                           
 15912                           ;mcc_generated_files/ecan.c: 286:             tempCanMsg->frame.dlc = RXB1DLC;
 15913  005A74  EE20 F005          	lfsr	2,5
 15914  005A78  5016               	movf	CAN_receive@tempCanMsg,w,c
 15915  005A7A  26D9               	addwf	fsr2l,f,c
 15916  005A7C  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15917  005A7E  22DA               	addwfc	fsr2h,f,c
 15918  005A80  CF35 FFDF          	movff	3893,indf2	;volatile
 15919                           
 15920                           ;mcc_generated_files/ecan.c: 287:             tempCanMsg->frame.data0 = RXB1D0;
 15921  005A84  EE20 F006          	lfsr	2,6
 15922  005A88  5016               	movf	CAN_receive@tempCanMsg,w,c
 15923  005A8A  26D9               	addwf	fsr2l,f,c
 15924  005A8C  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15925  005A8E  22DA               	addwfc	fsr2h,f,c
 15926  005A90  CF36 FFDF          	movff	3894,indf2	;volatile
 15927                           
 15928                           ;mcc_generated_files/ecan.c: 288:             tempCanMsg->frame.data1 = RXB1D1;
 15929  005A94  EE20 F007          	lfsr	2,7
 15930  005A98  5016               	movf	CAN_receive@tempCanMsg,w,c
 15931  005A9A  26D9               	addwf	fsr2l,f,c
 15932  005A9C  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15933  005A9E  22DA               	addwfc	fsr2h,f,c
 15934  005AA0  CF37 FFDF          	movff	3895,indf2	;volatile
 15935                           
 15936                           ;mcc_generated_files/ecan.c: 289:             tempCanMsg->frame.data2 = RXB1D2;
 15937  005AA4  EE20 F008          	lfsr	2,8
 15938  005AA8  5016               	movf	CAN_receive@tempCanMsg,w,c
 15939  005AAA  26D9               	addwf	fsr2l,f,c
 15940  005AAC  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15941  005AAE  22DA               	addwfc	fsr2h,f,c
 15942  005AB0  CF38 FFDF          	movff	3896,indf2	;volatile
 15943                           
 15944                           ;mcc_generated_files/ecan.c: 290:             tempCanMsg->frame.data3 = RXB1D3;
 15945  005AB4  EE20 F009          	lfsr	2,9
 15946  005AB8  5016               	movf	CAN_receive@tempCanMsg,w,c
 15947  005ABA  26D9               	addwf	fsr2l,f,c
 15948  005ABC  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15949  005ABE  22DA               	addwfc	fsr2h,f,c
 15950  005AC0  CF39 FFDF          	movff	3897,indf2	;volatile
 15951                           
 15952                           ;mcc_generated_files/ecan.c: 291:             tempCanMsg->frame.data4 = RXB1D4;
 15953  005AC4  EE20 F00A          	lfsr	2,10
 15954  005AC8  5016               	movf	CAN_receive@tempCanMsg,w,c
 15955  005ACA  26D9               	addwf	fsr2l,f,c
 15956  005ACC  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15957  005ACE  22DA               	addwfc	fsr2h,f,c
 15958  005AD0  CF3A FFDF          	movff	3898,indf2	;volatile
 15959                           
 15960                           ;mcc_generated_files/ecan.c: 292:             tempCanMsg->frame.data5 = RXB1D5;
 15961  005AD4  EE20 F00B          	lfsr	2,11
 15962  005AD8  5016               	movf	CAN_receive@tempCanMsg,w,c
 15963  005ADA  26D9               	addwf	fsr2l,f,c
 15964  005ADC  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15965  005ADE  22DA               	addwfc	fsr2h,f,c
 15966  005AE0  CF3B FFDF          	movff	3899,indf2	;volatile
 15967                           
 15968                           ;mcc_generated_files/ecan.c: 293:             tempCanMsg->frame.data6 = RXB1D6;
 15969  005AE4  EE20 F00C          	lfsr	2,12
 15970  005AE8  5016               	movf	CAN_receive@tempCanMsg,w,c
 15971  005AEA  26D9               	addwf	fsr2l,f,c
 15972  005AEC  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15973  005AEE  22DA               	addwfc	fsr2h,f,c
 15974  005AF0  CF3C FFDF          	movff	3900,indf2	;volatile
 15975                           
 15976                           ;mcc_generated_files/ecan.c: 294:             tempCanMsg->frame.data7 = RXB1D7;
 15977  005AF4  EE20 F00D          	lfsr	2,13
 15978  005AF8  5016               	movf	CAN_receive@tempCanMsg,w,c
 15979  005AFA  26D9               	addwf	fsr2l,f,c
 15980  005AFC  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15981  005AFE  22DA               	addwfc	fsr2h,f,c
 15982  005B00  CF3D FFDF          	movff	3901,indf2	;volatile
 15983                           
 15984                           ;mcc_generated_files/ecan.c: 295:             RXB1CONbits.RXFUL = 0;
 15985  005B04  010F               	movlb	15	; () banked
 15986  005B06  9F30               	bcf	48,7,b	;volatile
 15987  005B08                     l4122:
 15988                           
 15989                           ; BSR set to: 15
 15990                           ;mcc_generated_files/ecan.c: 296:             returnValue = 1;
 15991  005B08  0E01               	movlw	1
 15992  005B0A  6E18               	movwf	CAN_receive@returnValue,c
 15993  005B0C                     l465:
 15994                           
 15995                           ;mcc_generated_files/ecan.c: 300:         PIR5bits.RXB1IF = 0;
 15996                           
 15997                           ; BSR set to: 15
 15998                           
 15999                           ; BSR set to: 15
 16000  005B0C  9277               	bcf	3959,1,c	;volatile
 16001                           
 16002                           ;mcc_generated_files/ecan.c: 301:     };mcc_generated_files/ecan.c: 304:     return (ret
      +                          urnValue);
 16003  005B0E  5018               	movf	CAN_receive@returnValue,w,c
 16004  005B10  0012               	return	
 16005  005B12                     __end_of_CAN_receive:
 16006                           	opt stack 0
 16007                           tblptru	equ	0xFF8
 16008                           tblptrh	equ	0xFF7
 16009                           tblptrl	equ	0xFF6
 16010                           tablat	equ	0xFF5
 16011                           prodh	equ	0xFF4
 16012                           prodl	equ	0xFF3
 16013                           intcon	equ	0xFF2
 16014                           postinc0	equ	0xFEE
 16015                           wreg	equ	0xFE8
 16016                           postdec1	equ	0xFE5
 16017                           plusw1	equ	0xFE3
 16018                           fsr1l	equ	0xFE1
 16019                           indf2	equ	0xFDF
 16020                           postinc2	equ	0xFDE
 16021                           plusw2	equ	0xFDB
 16022                           fsr2h	equ	0xFDA
 16023                           fsr2l	equ	0xFD9
 16024                           status	equ	0xFD8
 16025                           
 16026 ;; *************** function _convertReg2StandardCANid *****************
 16027 ;; Defined at:
 16028 ;;		line 385 in file "mcc_generated_files/ecan.c"
 16029 ;; Parameters:    Size  Location     Type
 16030 ;;  tempRXBn_SID    1    wreg     unsigned char 
 16031 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
 16032 ;; Auto vars:     Size  Location     Type
 16033 ;;  tempRXBn_SID    1    8[COMRAM] unsigned char 
 16034 ;;  ConvertedID     4   13[COMRAM] unsigned long 
 16035 ;;  returnValue     4    9[COMRAM] unsigned long 
 16036 ;; Return value:  Size  Location     Type
 16037 ;;                  4    2[COMRAM] unsigned long 
 16038 ;; Registers used:
 16039 ;;		wreg, status,2, status,0
 16040 ;; Tracked objects:
 16041 ;;		On entry : 0/0
 16042 ;;		On exit  : 0/0
 16043 ;;		Unchanged: 0/0
 16044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16046 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16047 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16048 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16049 ;;Total ram usage:       15 bytes
 16050 ;; Hardware stack levels used:    1
 16051 ;; Hardware stack levels required when called:    4
 16052 ;; This function calls:
 16053 ;;		Nothing
 16054 ;; This function is called by:
 16055 ;;		_CAN_receive
 16056 ;; This function uses a non-reentrant model
 16057 ;;
 16058                           
 16059                           	psect	text53
 16060  0065C4                     __ptext53:
 16061                           	opt stack 0
 16062  0065C4                     _convertReg2StandardCANid:
 16063                           	opt stack 25
 16064                           
 16065                           ;incstack = 0
 16066                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
 16067  0065C4  6E09               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
 16068                           
 16069                           ;mcc_generated_files/ecan.c: 386:     unsigned long returnValue = 0;
 16070  0065C6  0E00               	movlw	0
 16071  0065C8  6E0A               	movwf	convertReg2StandardCANid@returnValue,c
 16072  0065CA  0E00               	movlw	0
 16073  0065CC  6E0B               	movwf	convertReg2StandardCANid@returnValue+1,c
 16074  0065CE  0E00               	movlw	0
 16075  0065D0  6E0C               	movwf	convertReg2StandardCANid@returnValue+2,c
 16076  0065D2  0E00               	movlw	0
 16077  0065D4  6E0D               	movwf	convertReg2StandardCANid@returnValue+3,c
 16078                           
 16079                           ;mcc_generated_files/ecan.c: 387:     unsigned long ConvertedID;;mcc_generated_files/eca
      +                          n.c: 391:     ConvertedID = (tempRXBn_SIDH << 3);
 16080  0065D6  5009               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
 16081  0065D8  6E07               	movwf	??_convertReg2StandardCANid& (0+255),c
 16082  0065DA  6A08               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
 16083  0065DC  90D8               	bcf	status,0,c
 16084  0065DE  3607               	rlcf	??_convertReg2StandardCANid,f,c
 16085  0065E0  3608               	rlcf	??_convertReg2StandardCANid+1,f,c
 16086  0065E2  90D8               	bcf	status,0,c
 16087  0065E4  3607               	rlcf	??_convertReg2StandardCANid,f,c
 16088  0065E6  3608               	rlcf	??_convertReg2StandardCANid+1,f,c
 16089  0065E8  90D8               	bcf	status,0,c
 16090  0065EA  3607               	rlcf	??_convertReg2StandardCANid,f,c
 16091  0065EC  3608               	rlcf	??_convertReg2StandardCANid+1,f,c
 16092  0065EE  C007  F00E         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
 16093  0065F2  C008  F00F         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
 16094  0065F6  0E00               	movlw	0
 16095  0065F8  BE0F               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
 16096  0065FA  0EFF               	movlw	-1
 16097  0065FC  6E10               	movwf	convertReg2StandardCANid@ConvertedID+2,c
 16098  0065FE  6E11               	movwf	convertReg2StandardCANid@ConvertedID+3,c
 16099                           
 16100                           ;mcc_generated_files/ecan.c: 392:     ConvertedID = ConvertedID + (tempRXBn_SIDL >> 5);
 16101  006600  C003  F007         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
 16102  006604  0E05               	movlw	5
 16103  006606  6E08               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
 16104  006608                     u1375:
 16105  006608  90D8               	bcf	status,0,c
 16106  00660A  3207               	rrcf	??_convertReg2StandardCANid,f,c
 16107  00660C  2E08               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
 16108  00660E  D7FC               	goto	u1375
 16109  006610  5007               	movf	??_convertReg2StandardCANid,w,c
 16110  006612  240E               	addwf	convertReg2StandardCANid@ConvertedID,w,c
 16111  006614  6E0E               	movwf	convertReg2StandardCANid@ConvertedID,c
 16112  006616  0E00               	movlw	0
 16113  006618  200F               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
 16114  00661A  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+1,c
 16115  00661C  0E00               	movlw	0
 16116  00661E  2010               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
 16117  006620  6E10               	movwf	convertReg2StandardCANid@ConvertedID+2,c
 16118  006622  0E00               	movlw	0
 16119  006624  2011               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
 16120  006626  6E11               	movwf	convertReg2StandardCANid@ConvertedID+3,c
 16121                           
 16122                           ;mcc_generated_files/ecan.c: 393:     returnValue = ConvertedID;
 16123  006628  C00E  F00A         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
 16124  00662C  C00F  F00B         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
 16125  006630  C010  F00C         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
 16126  006634  C011  F00D         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
 16127                           
 16128                           ;mcc_generated_files/ecan.c: 394:     return (returnValue);
 16129  006638  C00A  F003         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
 16130  00663C  C00B  F004         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
 16131  006640  C00C  F005         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
 16132  006644  C00D  F006         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
 16133  006648  0012               	return	
 16134  00664A                     __end_of_convertReg2StandardCANid:
 16135                           	opt stack 0
 16136                           tblptru	equ	0xFF8
 16137                           tblptrh	equ	0xFF7
 16138                           tblptrl	equ	0xFF6
 16139                           tablat	equ	0xFF5
 16140                           prodh	equ	0xFF4
 16141                           prodl	equ	0xFF3
 16142                           intcon	equ	0xFF2
 16143                           postinc0	equ	0xFEE
 16144                           wreg	equ	0xFE8
 16145                           postdec1	equ	0xFE5
 16146                           plusw1	equ	0xFE3
 16147                           fsr1l	equ	0xFE1
 16148                           indf2	equ	0xFDF
 16149                           postinc2	equ	0xFDE
 16150                           plusw2	equ	0xFDB
 16151                           fsr2h	equ	0xFDA
 16152                           fsr2l	equ	0xFD9
 16153                           status	equ	0xFD8
 16154                           
 16155 ;; *************** function _convertReg2ExtendedCANid *****************
 16156 ;; Defined at:
 16157 ;;		line 365 in file "mcc_generated_files/ecan.c"
 16158 ;; Parameters:    Size  Location     Type
 16159 ;;  tempRXBn_EID    1    wreg     unsigned char 
 16160 ;;  tempRXBn_EID    1    2[COMRAM] unsigned char 
 16161 ;;  tempRXBn_SID    1    3[COMRAM] unsigned char 
 16162 ;;  tempRXBn_SID    1    4[COMRAM] unsigned char 
 16163 ;; Auto vars:     Size  Location     Type
 16164 ;;  tempRXBn_EID    1   10[COMRAM] unsigned char 
 16165 ;;  ConvertedID     4   17[COMRAM] unsigned long 
 16166 ;;  returnValue     4   11[COMRAM] unsigned long 
 16167 ;;  CAN_standard    1   16[COMRAM] unsigned char 
 16168 ;;  CAN_standard    1   15[COMRAM] unsigned char 
 16169 ;; Return value:  Size  Location     Type
 16170 ;;                  4    2[COMRAM] unsigned long 
 16171 ;; Registers used:
 16172 ;;		wreg, status,2, status,0
 16173 ;; Tracked objects:
 16174 ;;		On entry : 0/0
 16175 ;;		On exit  : 0/0
 16176 ;;		Unchanged: 0/0
 16177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16179 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16180 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16181 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16182 ;;Total ram usage:       19 bytes
 16183 ;; Hardware stack levels used:    1
 16184 ;; Hardware stack levels required when called:    4
 16185 ;; This function calls:
 16186 ;;		Nothing
 16187 ;; This function is called by:
 16188 ;;		_CAN_receive
 16189 ;; This function uses a non-reentrant model
 16190 ;;
 16191                           
 16192                           	psect	text54
 16193  005B12                     __ptext54:
 16194                           	opt stack 0
 16195  005B12                     _convertReg2ExtendedCANid:
 16196                           	opt stack 25
 16197                           
 16198                           ;incstack = 0
 16199                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
 16200  005B12  6E0B               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
 16201                           
 16202                           ;mcc_generated_files/ecan.c: 366:     unsigned long returnValue = 0;
 16203  005B14  0E00               	movlw	0
 16204  005B16  6E0C               	movwf	convertReg2ExtendedCANid@returnValue,c
 16205  005B18  0E00               	movlw	0
 16206  005B1A  6E0D               	movwf	convertReg2ExtendedCANid@returnValue+1,c
 16207  005B1C  0E00               	movlw	0
 16208  005B1E  6E0E               	movwf	convertReg2ExtendedCANid@returnValue+2,c
 16209  005B20  0E00               	movlw	0
 16210  005B22  6E0F               	movwf	convertReg2ExtendedCANid@returnValue+3,c
 16211                           
 16212                           ;mcc_generated_files/ecan.c: 367:     unsigned long ConvertedID = 0;
 16213  005B24  0E00               	movlw	0
 16214  005B26  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 16215  005B28  0E00               	movlw	0
 16216  005B2A  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 16217  005B2C  0E00               	movlw	0
 16218  005B2E  6E14               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 16219  005B30  0E00               	movlw	0
 16220  005B32  6E15               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 16221                           
 16222                           ;mcc_generated_files/ecan.c: 368:     unsigned char CAN_standardLo_ID_lo2bits;;mcc_gener
      +                          ated_files/ecan.c: 369:     unsigned char CAN_standardLo_ID_hi3bits;;mcc_generated_files
      +                          /ecan.c: 371:     CAN_standardLo_ID_lo2bits = (tempRXBn_SIDL & 0x03);
 16223  005B34  5005               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
 16224  005B36  0B03               	andlw	3
 16225  005B38  6E10               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
 16226                           
 16227                           ;mcc_generated_files/ecan.c: 372:     CAN_standardLo_ID_hi3bits = (tempRXBn_SIDL >> 5);
 16228  005B3A  3805               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
 16229  005B3C  42E8               	rrncf	wreg,f,c
 16230  005B3E  0B07               	andlw	7
 16231  005B40  6E11               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
 16232                           
 16233                           ;mcc_generated_files/ecan.c: 373:     ConvertedID = (tempRXBn_SIDH << 3);
 16234  005B42  5004               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
 16235  005B44  6E07               	movwf	??_convertReg2ExtendedCANid& (0+255),c
 16236  005B46  6A08               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
 16237  005B48  90D8               	bcf	status,0,c
 16238  005B4A  3607               	rlcf	??_convertReg2ExtendedCANid,f,c
 16239  005B4C  3608               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 16240  005B4E  90D8               	bcf	status,0,c
 16241  005B50  3607               	rlcf	??_convertReg2ExtendedCANid,f,c
 16242  005B52  3608               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 16243  005B54  90D8               	bcf	status,0,c
 16244  005B56  3607               	rlcf	??_convertReg2ExtendedCANid,f,c
 16245  005B58  3608               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 16246  005B5A  C007  F012         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 16247  005B5E  C008  F013         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 16248  005B62  0E00               	movlw	0
 16249  005B64  BE13               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
 16250  005B66  0EFF               	movlw	-1
 16251  005B68  6E14               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 16252  005B6A  6E15               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 16253                           
 16254                           ;mcc_generated_files/ecan.c: 374:     ConvertedID = ConvertedID + CAN_standardLo_ID_hi3b
      +                          its;
 16255  005B6C  5011               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
 16256  005B6E  2412               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 16257  005B70  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 16258  005B72  0E00               	movlw	0
 16259  005B74  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 16260  005B76  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 16261  005B78  0E00               	movlw	0
 16262  005B7A  2014               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 16263  005B7C  6E14               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 16264  005B7E  0E00               	movlw	0
 16265  005B80  2015               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 16266  005B82  6E15               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 16267                           
 16268                           ;mcc_generated_files/ecan.c: 375:     ConvertedID = (ConvertedID << 2);
 16269  005B84  C012  F007         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
 16270  005B88  C013  F008         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
 16271  005B8C  C014  F009         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
 16272  005B90  C015  F00A         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
 16273  005B94  0E02               	movlw	2
 16274  005B96                     u1365:
 16275  005B96  90D8               	bcf	status,0,c
 16276  005B98  3607               	rlcf	??_convertReg2ExtendedCANid,f,c
 16277  005B9A  3608               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 16278  005B9C  3609               	rlcf	??_convertReg2ExtendedCANid+2,f,c
 16279  005B9E  360A               	rlcf	??_convertReg2ExtendedCANid+3,f,c
 16280  005BA0  2EE8               	decfsz	wreg,f,c
 16281  005BA2  D7F9               	goto	u1365
 16282  005BA4  C007  F012         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 16283  005BA8  C008  F013         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 16284  005BAC  C009  F014         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
 16285  005BB0  C00A  F015         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
 16286                           
 16287                           ;mcc_generated_files/ecan.c: 376:     ConvertedID = ConvertedID + CAN_standardLo_ID_lo2b
      +                          its;
 16288  005BB4  5010               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
 16289  005BB6  2412               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 16290  005BB8  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 16291  005BBA  0E00               	movlw	0
 16292  005BBC  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 16293  005BBE  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 16294  005BC0  0E00               	movlw	0
 16295  005BC2  2014               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 16296  005BC4  6E14               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 16297  005BC6  0E00               	movlw	0
 16298  005BC8  2015               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 16299  005BCA  6E15               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 16300                           
 16301                           ;mcc_generated_files/ecan.c: 377:     ConvertedID = (ConvertedID << 8);
 16302  005BCC  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
 16303  005BD0  C013  F009         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
 16304  005BD4  C014  F00A         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
 16305  005BD8  6A07               	clrf	??_convertReg2ExtendedCANid& (0+255),c
 16306  005BDA  C007  F012         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 16307  005BDE  C008  F013         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 16308  005BE2  C009  F014         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
 16309  005BE6  C00A  F015         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
 16310                           
 16311                           ;mcc_generated_files/ecan.c: 378:     ConvertedID = ConvertedID + tempRXBn_EIDH;
 16312  005BEA  500B               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
 16313  005BEC  2412               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 16314  005BEE  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 16315  005BF0  0E00               	movlw	0
 16316  005BF2  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 16317  005BF4  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 16318  005BF6  0E00               	movlw	0
 16319  005BF8  2014               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 16320  005BFA  6E14               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 16321  005BFC  0E00               	movlw	0
 16322  005BFE  2015               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 16323  005C00  6E15               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 16324                           
 16325                           ;mcc_generated_files/ecan.c: 379:     ConvertedID = (ConvertedID << 8);
 16326  005C02  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
 16327  005C06  C013  F009         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
 16328  005C0A  C014  F00A         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
 16329  005C0E  6A07               	clrf	??_convertReg2ExtendedCANid& (0+255),c
 16330  005C10  C007  F012         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 16331  005C14  C008  F013         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 16332  005C18  C009  F014         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
 16333  005C1C  C00A  F015         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
 16334                           
 16335                           ;mcc_generated_files/ecan.c: 380:     ConvertedID = ConvertedID + tempRXBn_EIDL;
 16336  005C20  5003               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
 16337  005C22  2412               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 16338  005C24  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 16339  005C26  0E00               	movlw	0
 16340  005C28  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 16341  005C2A  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 16342  005C2C  0E00               	movlw	0
 16343  005C2E  2014               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 16344  005C30  6E14               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 16345  005C32  0E00               	movlw	0
 16346  005C34  2015               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 16347  005C36  6E15               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 16348                           
 16349                           ;mcc_generated_files/ecan.c: 381:     returnValue = ConvertedID;
 16350  005C38  C012  F00C         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
 16351  005C3C  C013  F00D         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
 16352  005C40  C014  F00E         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
 16353  005C44  C015  F00F         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
 16354                           
 16355                           ;mcc_generated_files/ecan.c: 382:     return (returnValue);
 16356  005C48  C00C  F003         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
 16357  005C4C  C00D  F004         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
 16358  005C50  C00E  F005         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
 16359  005C54  C00F  F006         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
 16360  005C58  0012               	return	
 16361  005C5A                     __end_of_convertReg2ExtendedCANid:
 16362                           	opt stack 0
 16363                           tblptru	equ	0xFF8
 16364                           tblptrh	equ	0xFF7
 16365                           tblptrl	equ	0xFF6
 16366                           tablat	equ	0xFF5
 16367                           prodh	equ	0xFF4
 16368                           prodl	equ	0xFF3
 16369                           intcon	equ	0xFF2
 16370                           postinc0	equ	0xFEE
 16371                           wreg	equ	0xFE8
 16372                           postdec1	equ	0xFE5
 16373                           plusw1	equ	0xFE3
 16374                           fsr1l	equ	0xFE1
 16375                           indf2	equ	0xFDF
 16376                           postinc2	equ	0xFDE
 16377                           plusw2	equ	0xFDB
 16378                           fsr2h	equ	0xFDA
 16379                           fsr2l	equ	0xFD9
 16380                           status	equ	0xFD8
 16381                           
 16382 ;; *************** function _INTERRUPT_InterruptManager *****************
 16383 ;; Defined at:
 16384 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 16385 ;; Parameters:    Size  Location     Type
 16386 ;;		None
 16387 ;; Auto vars:     Size  Location     Type
 16388 ;;		None
 16389 ;; Return value:  Size  Location     Type
 16390 ;;                  1    wreg      void 
 16391 ;; Registers used:
 16392 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16393 ;; Tracked objects:
 16394 ;;		On entry : 0/0
 16395 ;;		On exit  : 0/0
 16396 ;;		Unchanged: 0/0
 16397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16400 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16401 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16402 ;;Total ram usage:        2 bytes
 16403 ;; Hardware stack levels used:    1
 16404 ;; Hardware stack levels required when called:    3
 16405 ;; This function calls:
 16406 ;;		_TMR0_ISR
 16407 ;;		_TMR1_ISR
 16408 ;; This function is called by:
 16409 ;;		Interrupt level 2
 16410 ;; This function uses a non-reentrant model
 16411 ;;
 16412                           
 16413                           	psect	intcode
 16414  000008                     __pintcode:
 16415                           	opt stack 0
 16416  000008                     _INTERRUPT_InterruptManager:
 16417                           	opt stack 21
 16418                           
 16419                           ;incstack = 0
 16420  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16421  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 16422  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 16423                           
 16424                           ;mcc_generated_files/interrupt_manager.c: 60:     if(INTCONbits.PEIE == 1 && PIE1bits.TM
      +                          R1IE == 1 && PIR1bits.TMR1IF == 1)
 16425  000012  BCF2               	btfsc	intcon,6,c	;volatile
 16426  000014  A09D               	btfss	3997,0,c	;volatile
 16427  000016  D005               	goto	i2l516
 16428  000018  A09E               	btfss	3998,0,c	;volatile
 16429  00001A  D003               	goto	i2l516
 16430                           
 16431                           ;mcc_generated_files/interrupt_manager.c: 61:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 62:         TMR1_ISR();
 16432  00001C  ECCD  F035         	call	_TMR1_ISR	;wreg free
 16433                           
 16434                           ;mcc_generated_files/interrupt_manager.c: 63:     }
 16435  000020  D005               	goto	i2l518
 16436  000022                     i2l516:
 16437  000022  BAF2               	btfsc	intcon,5,c	;volatile
 16438  000024  A4F2               	btfss	intcon,2,c	;volatile
 16439  000026  D002               	goto	i2l518
 16440                           
 16441                           ;mcc_generated_files/interrupt_manager.c: 65:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 66:         TMR0_ISR();
 16442  000028  EC21  F035         	call	_TMR0_ISR	;wreg free
 16443  00002C                     i2l518:
 16444                           
 16445                           ;mcc_generated_files/interrupt_manager.c: 69:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:     }
 16446  00002C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 16447  000030  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 16448  000034  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16449  000036  0011               	retfie		f
 16450  000038                     __end_of_INTERRUPT_InterruptManager:
 16451                           	opt stack 0
 16452                           pclatu	equ	0xFFB
 16453                           pclath	equ	0xFFA
 16454                           tblptru	equ	0xFF8
 16455                           tblptrh	equ	0xFF7
 16456                           tblptrl	equ	0xFF6
 16457                           tablat	equ	0xFF5
 16458                           prodh	equ	0xFF4
 16459                           prodl	equ	0xFF3
 16460                           intcon	equ	0xFF2
 16461                           postinc0	equ	0xFEE
 16462                           wreg	equ	0xFE8
 16463                           postdec1	equ	0xFE5
 16464                           plusw1	equ	0xFE3
 16465                           fsr1l	equ	0xFE1
 16466                           indf2	equ	0xFDF
 16467                           postinc2	equ	0xFDE
 16468                           plusw2	equ	0xFDB
 16469                           fsr2h	equ	0xFDA
 16470                           fsr2l	equ	0xFD9
 16471                           status	equ	0xFD8
 16472                           
 16473 ;; *************** function _TMR1_ISR *****************
 16474 ;; Defined at:
 16475 ;;		line 160 in file "mcc_generated_files/tmr1.c"
 16476 ;; Parameters:    Size  Location     Type
 16477 ;;		None
 16478 ;; Auto vars:     Size  Location     Type
 16479 ;;		None
 16480 ;; Return value:  Size  Location     Type
 16481 ;;                  1    wreg      void 
 16482 ;; Registers used:
 16483 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16484 ;; Tracked objects:
 16485 ;;		On entry : 0/0
 16486 ;;		On exit  : 0/0
 16487 ;;		Unchanged: 0/0
 16488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16493 ;;Total ram usage:        0 bytes
 16494 ;; Hardware stack levels used:    1
 16495 ;; Hardware stack levels required when called:    2
 16496 ;; This function calls:
 16497 ;;		_TMR1_CallBack
 16498 ;; This function is called by:
 16499 ;;		_INTERRUPT_InterruptManager
 16500 ;; This function uses a non-reentrant model
 16501 ;;
 16502                           
 16503                           	psect	text56
 16504  006B9A                     __ptext56:
 16505                           	opt stack 0
 16506  006B9A                     _TMR1_ISR:
 16507                           	opt stack 21
 16508                           
 16509                           ;mcc_generated_files/tmr1.c: 164:     PIR1bits.TMR1IF = 0;
 16510                           
 16511                           ;incstack = 0
 16512  006B9A  909E               	bcf	3998,0,c	;volatile
 16513                           
 16514                           ;mcc_generated_files/tmr1.c: 166:     TMR1H = (timer1ReloadVal >> 8);
 16515  006B9C  504E               	movf	_timer1ReloadVal+1,w,c	;volatile
 16516  006B9E  6ECF               	movwf	4047,c	;volatile
 16517                           
 16518                           ;mcc_generated_files/tmr1.c: 167:     TMR1L = timer1ReloadVal;
 16519  006BA0  C04D  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 16520                           
 16521                           ;mcc_generated_files/tmr1.c: 171:     TMR1_CallBack();
 16522  006BA4  EC7A  F035         	call	_TMR1_CallBack	;wreg free
 16523  006BA8  0012               	return		;funcret
 16524  006BAA                     __end_of_TMR1_ISR:
 16525                           	opt stack 0
 16526                           pclatu	equ	0xFFB
 16527                           pclath	equ	0xFFA
 16528                           tblptru	equ	0xFF8
 16529                           tblptrh	equ	0xFF7
 16530                           tblptrl	equ	0xFF6
 16531                           tablat	equ	0xFF5
 16532                           prodh	equ	0xFF4
 16533                           prodl	equ	0xFF3
 16534                           intcon	equ	0xFF2
 16535                           postinc0	equ	0xFEE
 16536                           wreg	equ	0xFE8
 16537                           postdec1	equ	0xFE5
 16538                           plusw1	equ	0xFE3
 16539                           fsr1l	equ	0xFE1
 16540                           indf2	equ	0xFDF
 16541                           postinc2	equ	0xFDE
 16542                           plusw2	equ	0xFDB
 16543                           fsr2h	equ	0xFDA
 16544                           fsr2l	equ	0xFD9
 16545                           status	equ	0xFD8
 16546                           
 16547 ;; *************** function _TMR1_CallBack *****************
 16548 ;; Defined at:
 16549 ;;		line 174 in file "mcc_generated_files/tmr1.c"
 16550 ;; Parameters:    Size  Location     Type
 16551 ;;		None
 16552 ;; Auto vars:     Size  Location     Type
 16553 ;;		None
 16554 ;; Return value:  Size  Location     Type
 16555 ;;                  1    wreg      void 
 16556 ;; Registers used:
 16557 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16558 ;; Tracked objects:
 16559 ;;		On entry : 0/0
 16560 ;;		On exit  : 0/0
 16561 ;;		Unchanged: 0/0
 16562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16567 ;;Total ram usage:        0 bytes
 16568 ;; Hardware stack levels used:    1
 16569 ;; Hardware stack levels required when called:    1
 16570 ;; This function calls:
 16571 ;;		Absolute function
 16572 ;;		_TMR1_DefaultInterruptHandler
 16573 ;;		_refresh
 16574 ;; This function is called by:
 16575 ;;		_TMR1_ISR
 16576 ;; This function uses a non-reentrant model
 16577 ;;
 16578                           
 16579                           	psect	text57
 16580  006AF4                     __ptext57:
 16581                           	opt stack 0
 16582  006AF4                     _TMR1_CallBack:
 16583                           	opt stack 21
 16584                           
 16585                           ;mcc_generated_files/tmr1.c: 177:     if(TMR1_InterruptHandler)
 16586                           
 16587                           ;incstack = 0
 16588  006AF4  504B               	movf	_TMR1_InterruptHandler,w,c
 16589  006AF6  104C               	iorwf	_TMR1_InterruptHandler+1,w,c
 16590  006AF8  B4D8               	btfsc	status,2,c
 16591  006AFA  0012               	return	
 16592                           
 16593                           ;mcc_generated_files/tmr1.c: 178:     {;mcc_generated_files/tmr1.c: 179:         TMR1_In
      +                          terruptHandler();
 16594  006AFC  D801               	call	i2u133_48
 16595  006AFE  0012               	return	
 16596  006B00                     i2u133_48:
 16597  006B00  0005               	push	
 16598  006B02  6EFA               	movwf	pclath,c
 16599  006B04  504B               	movf	_TMR1_InterruptHandler,w,c
 16600  006B06  6EFD               	movwf	tosl,c
 16601  006B08  504C               	movf	_TMR1_InterruptHandler+1,w,c
 16602  006B0A  6EFE               	movwf	tosh,c
 16603  006B0C  6AFF               	clrf	tosu,c
 16604  006B0E  50FA               	movf	pclath,w,c
 16605  006B10  0012               	return		;indir
 16606  006B12                     __end_of_TMR1_CallBack:
 16607                           	opt stack 0
 16608                           tosu	equ	0xFFF
 16609                           tosh	equ	0xFFE
 16610                           tosl	equ	0xFFD
 16611                           pclatu	equ	0xFFB
 16612                           pclath	equ	0xFFA
 16613                           tblptru	equ	0xFF8
 16614                           tblptrh	equ	0xFF7
 16615                           tblptrl	equ	0xFF6
 16616                           tablat	equ	0xFF5
 16617                           prodh	equ	0xFF4
 16618                           prodl	equ	0xFF3
 16619                           intcon	equ	0xFF2
 16620                           postinc0	equ	0xFEE
 16621                           wreg	equ	0xFE8
 16622                           postdec1	equ	0xFE5
 16623                           plusw1	equ	0xFE3
 16624                           fsr1l	equ	0xFE1
 16625                           indf2	equ	0xFDF
 16626                           postinc2	equ	0xFDE
 16627                           plusw2	equ	0xFDB
 16628                           fsr2h	equ	0xFDA
 16629                           fsr2l	equ	0xFD9
 16630                           status	equ	0xFD8
 16631                           
 16632 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 16633 ;; Defined at:
 16634 ;;		line 187 in file "mcc_generated_files/tmr1.c"
 16635 ;; Parameters:    Size  Location     Type
 16636 ;;		None
 16637 ;; Auto vars:     Size  Location     Type
 16638 ;;		None
 16639 ;; Return value:  Size  Location     Type
 16640 ;;                  1    wreg      void 
 16641 ;; Registers used:
 16642 ;;		None
 16643 ;; Tracked objects:
 16644 ;;		On entry : 0/0
 16645 ;;		On exit  : 0/0
 16646 ;;		Unchanged: 0/0
 16647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16652 ;;Total ram usage:        0 bytes
 16653 ;; Hardware stack levels used:    1
 16654 ;; This function calls:
 16655 ;;		Nothing
 16656 ;; This function is called by:
 16657 ;;		_TMR1_Initialize
 16658 ;;		_TMR1_CallBack
 16659 ;; This function uses a non-reentrant model
 16660 ;;
 16661                           
 16662                           	psect	text58
 16663  006BEE                     __ptext58:
 16664                           	opt stack 0
 16665  006BEE                     _TMR1_DefaultInterruptHandler:
 16666                           	opt stack 21
 16667                           
 16668                           ;incstack = 0
 16669  006BEE  0012               	return		;funcret
 16670  006BF0                     __end_of_TMR1_DefaultInterruptHandler:
 16671                           	opt stack 0
 16672                           tosu	equ	0xFFF
 16673                           tosh	equ	0xFFE
 16674                           tosl	equ	0xFFD
 16675                           pclatu	equ	0xFFB
 16676                           pclath	equ	0xFFA
 16677                           tblptru	equ	0xFF8
 16678                           tblptrh	equ	0xFF7
 16679                           tblptrl	equ	0xFF6
 16680                           tablat	equ	0xFF5
 16681                           prodh	equ	0xFF4
 16682                           prodl	equ	0xFF3
 16683                           intcon	equ	0xFF2
 16684                           postinc0	equ	0xFEE
 16685                           wreg	equ	0xFE8
 16686                           postdec1	equ	0xFE5
 16687                           plusw1	equ	0xFE3
 16688                           fsr1l	equ	0xFE1
 16689                           indf2	equ	0xFDF
 16690                           postinc2	equ	0xFDE
 16691                           plusw2	equ	0xFDB
 16692                           fsr2h	equ	0xFDA
 16693                           fsr2l	equ	0xFD9
 16694                           status	equ	0xFD8
 16695                           
 16696 ;; *************** function _refresh *****************
 16697 ;; Defined at:
 16698 ;;		line 31 in file "main.c"
 16699 ;; Parameters:    Size  Location     Type
 16700 ;;		None
 16701 ;; Auto vars:     Size  Location     Type
 16702 ;;		None
 16703 ;; Return value:  Size  Location     Type
 16704 ;;                  1    wreg      void 
 16705 ;; Registers used:
 16706 ;;		wreg, status,2
 16707 ;; Tracked objects:
 16708 ;;		On entry : 0/0
 16709 ;;		On exit  : 0/0
 16710 ;;		Unchanged: 0/0
 16711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16716 ;;Total ram usage:        0 bytes
 16717 ;; Hardware stack levels used:    1
 16718 ;; This function calls:
 16719 ;;		Nothing
 16720 ;; This function is called by:
 16721 ;;		_main
 16722 ;;		_TMR1_CallBack
 16723 ;; This function uses a non-reentrant model
 16724 ;;
 16725                           
 16726                           	psect	text59
 16727  006BD6                     __ptext59:
 16728                           	opt stack 0
 16729  006BD6                     _refresh:
 16730                           	opt stack 21
 16731                           
 16732                           ;main.c: 32:     refresh_screen = 1;
 16733                           
 16734                           ;incstack = 0
 16735  006BD6  0E01               	movlw	1
 16736  006BD8  0100               	movlb	0	; () banked
 16737  006BDA  6FC2               	movwf	_refresh_screen& (0+255),b
 16738                           
 16739                           ; BSR set to: 0
 16740  006BDC  0012               	return		;funcret
 16741  006BDE                     __end_of_refresh:
 16742                           	opt stack 0
 16743                           tosu	equ	0xFFF
 16744                           tosh	equ	0xFFE
 16745                           tosl	equ	0xFFD
 16746                           pclatu	equ	0xFFB
 16747                           pclath	equ	0xFFA
 16748                           tblptru	equ	0xFF8
 16749                           tblptrh	equ	0xFF7
 16750                           tblptrl	equ	0xFF6
 16751                           tablat	equ	0xFF5
 16752                           prodh	equ	0xFF4
 16753                           prodl	equ	0xFF3
 16754                           intcon	equ	0xFF2
 16755                           postinc0	equ	0xFEE
 16756                           wreg	equ	0xFE8
 16757                           postdec1	equ	0xFE5
 16758                           plusw1	equ	0xFE3
 16759                           fsr1l	equ	0xFE1
 16760                           indf2	equ	0xFDF
 16761                           postinc2	equ	0xFDE
 16762                           plusw2	equ	0xFDB
 16763                           fsr2h	equ	0xFDA
 16764                           fsr2l	equ	0xFD9
 16765                           status	equ	0xFD8
 16766                           
 16767 ;; *************** function _TMR0_ISR *****************
 16768 ;; Defined at:
 16769 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16770 ;; Parameters:    Size  Location     Type
 16771 ;;		None
 16772 ;; Auto vars:     Size  Location     Type
 16773 ;;		None
 16774 ;; Return value:  Size  Location     Type
 16775 ;;                  1    wreg      void 
 16776 ;; Registers used:
 16777 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16778 ;; Tracked objects:
 16779 ;;		On entry : 0/0
 16780 ;;		On exit  : 0/0
 16781 ;;		Unchanged: 0/0
 16782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16787 ;;Total ram usage:        0 bytes
 16788 ;; Hardware stack levels used:    1
 16789 ;; Hardware stack levels required when called:    1
 16790 ;; This function calls:
 16791 ;;		Absolute function
 16792 ;;		_TMR0_DefaultInterruptHandler
 16793 ;; This function is called by:
 16794 ;;		_INTERRUPT_InterruptManager
 16795 ;; This function uses a non-reentrant model
 16796 ;;
 16797                           
 16798                           	psect	text60
 16799  006A42                     __ptext60:
 16800                           	opt stack 0
 16801  006A42                     _TMR0_ISR:
 16802                           	opt stack 22
 16803                           
 16804                           ;mcc_generated_files/tmr0.c: 138:     INTCONbits.TMR0IF = 0;
 16805                           
 16806                           ; BSR set to: 0
 16807                           ;incstack = 0
 16808  006A42  94F2               	bcf	intcon,2,c	;volatile
 16809                           
 16810                           ;mcc_generated_files/tmr0.c: 142:     TMR0H = timer0ReloadVal >> 8;
 16811  006A44  5048               	movf	_timer0ReloadVal+1,w,c	;volatile
 16812  006A46  6ED7               	movwf	4055,c	;volatile
 16813                           
 16814                           ;mcc_generated_files/tmr0.c: 143:     TMR0L = (uint8_t) timer0ReloadVal;
 16815  006A48  C047  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 16816                           
 16817                           ;mcc_generated_files/tmr0.c: 145:     if(TMR0_InterruptHandler)
 16818  006A4C  5049               	movf	_TMR0_InterruptHandler,w,c
 16819  006A4E  104A               	iorwf	_TMR0_InterruptHandler+1,w,c
 16820  006A50  B4D8               	btfsc	status,2,c
 16821  006A52  0012               	return	
 16822                           
 16823                           ;mcc_generated_files/tmr0.c: 146:     {;mcc_generated_files/tmr0.c: 147:         TMR0_In
      +                          terruptHandler();
 16824  006A54  D801               	call	i2u35_48
 16825  006A56  0012               	return	
 16826  006A58                     i2u35_48:
 16827  006A58  0005               	push	
 16828  006A5A  6EFA               	movwf	pclath,c
 16829  006A5C  5049               	movf	_TMR0_InterruptHandler,w,c
 16830  006A5E  6EFD               	movwf	tosl,c
 16831  006A60  504A               	movf	_TMR0_InterruptHandler+1,w,c
 16832  006A62  6EFE               	movwf	tosh,c
 16833  006A64  6AFF               	clrf	tosu,c
 16834  006A66  50FA               	movf	pclath,w,c
 16835  006A68  0012               	return		;indir
 16836  006A6A                     __end_of_TMR0_ISR:
 16837                           	opt stack 0
 16838                           tosu	equ	0xFFF
 16839                           tosh	equ	0xFFE
 16840                           tosl	equ	0xFFD
 16841                           pclatu	equ	0xFFB
 16842                           pclath	equ	0xFFA
 16843                           tblptru	equ	0xFF8
 16844                           tblptrh	equ	0xFF7
 16845                           tblptrl	equ	0xFF6
 16846                           tablat	equ	0xFF5
 16847                           prodh	equ	0xFF4
 16848                           prodl	equ	0xFF3
 16849                           intcon	equ	0xFF2
 16850                           postinc0	equ	0xFEE
 16851                           wreg	equ	0xFE8
 16852                           postdec1	equ	0xFE5
 16853                           plusw1	equ	0xFE3
 16854                           fsr1l	equ	0xFE1
 16855                           indf2	equ	0xFDF
 16856                           postinc2	equ	0xFDE
 16857                           plusw2	equ	0xFDB
 16858                           fsr2h	equ	0xFDA
 16859                           fsr2l	equ	0xFD9
 16860                           status	equ	0xFD8
 16861                           
 16862 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 16863 ;; Defined at:
 16864 ;;		line 158 in file "mcc_generated_files/tmr0.c"
 16865 ;; Parameters:    Size  Location     Type
 16866 ;;		None
 16867 ;; Auto vars:     Size  Location     Type
 16868 ;;		None
 16869 ;; Return value:  Size  Location     Type
 16870 ;;                  1    wreg      void 
 16871 ;; Registers used:
 16872 ;;		None
 16873 ;; Tracked objects:
 16874 ;;		On entry : 0/0
 16875 ;;		On exit  : 0/0
 16876 ;;		Unchanged: 0/0
 16877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16882 ;;Total ram usage:        0 bytes
 16883 ;; Hardware stack levels used:    1
 16884 ;; This function calls:
 16885 ;;		Nothing
 16886 ;; This function is called by:
 16887 ;;		_TMR0_Initialize
 16888 ;;		_TMR0_ISR
 16889 ;; This function uses a non-reentrant model
 16890 ;;
 16891                           
 16892                           	psect	text61
 16893  006BF0                     __ptext61:
 16894                           	opt stack 0
 16895  006BF0                     _TMR0_DefaultInterruptHandler:
 16896                           	opt stack 22
 16897                           
 16898                           ;incstack = 0
 16899  006BF0  0012               	return		;funcret
 16900  006BF2                     __end_of_TMR0_DefaultInterruptHandler:
 16901                           	opt stack 0
 16902                           tosu	equ	0xFFF
 16903                           tosh	equ	0xFFE
 16904                           tosl	equ	0xFFD
 16905                           pclatu	equ	0xFFB
 16906                           pclath	equ	0xFFA
 16907                           tblptru	equ	0xFF8
 16908                           tblptrh	equ	0xFF7
 16909                           tblptrl	equ	0xFF6
 16910                           tablat	equ	0xFF5
 16911                           prodh	equ	0xFF4
 16912                           prodl	equ	0xFF3
 16913                           intcon	equ	0xFF2
 16914                           postinc0	equ	0xFEE
 16915                           wreg	equ	0xFE8
 16916                           postdec1	equ	0xFE5
 16917                           plusw1	equ	0xFE3
 16918                           fsr1l	equ	0xFE1
 16919                           indf2	equ	0xFDF
 16920                           postinc2	equ	0xFDE
 16921                           plusw2	equ	0xFDB
 16922                           fsr2h	equ	0xFDA
 16923                           fsr2l	equ	0xFD9
 16924                           status	equ	0xFD8
 16925                           tosu	equ	0xFFF
 16926                           tosh	equ	0xFFE
 16927                           tosl	equ	0xFFD
 16928                           pclatu	equ	0xFFB
 16929                           pclath	equ	0xFFA
 16930                           tblptru	equ	0xFF8
 16931                           tblptrh	equ	0xFF7
 16932                           tblptrl	equ	0xFF6
 16933                           tablat	equ	0xFF5
 16934                           prodh	equ	0xFF4
 16935                           prodl	equ	0xFF3
 16936                           intcon	equ	0xFF2
 16937                           postinc0	equ	0xFEE
 16938                           wreg	equ	0xFE8
 16939                           postdec1	equ	0xFE5
 16940                           plusw1	equ	0xFE3
 16941                           fsr1l	equ	0xFE1
 16942                           indf2	equ	0xFDF
 16943                           postinc2	equ	0xFDE
 16944                           plusw2	equ	0xFDB
 16945                           fsr2h	equ	0xFDA
 16946                           fsr2l	equ	0xFD9
 16947                           status	equ	0xFD8
 16948                           
 16949                           	psect	text62
 16950  000000                     __ptext62:
 16951                           	opt stack 0
 16952                           tosu	equ	0xFFF
 16953                           tosh	equ	0xFFE
 16954                           tosl	equ	0xFFD
 16955                           pclatu	equ	0xFFB
 16956                           pclath	equ	0xFFA
 16957                           tblptru	equ	0xFF8
 16958                           tblptrh	equ	0xFF7
 16959                           tblptrl	equ	0xFF6
 16960                           tablat	equ	0xFF5
 16961                           prodh	equ	0xFF4
 16962                           prodl	equ	0xFF3
 16963                           intcon	equ	0xFF2
 16964                           postinc0	equ	0xFEE
 16965                           wreg	equ	0xFE8
 16966                           postdec1	equ	0xFE5
 16967                           plusw1	equ	0xFE3
 16968                           fsr1l	equ	0xFE1
 16969                           indf2	equ	0xFDF
 16970                           postinc2	equ	0xFDE
 16971                           plusw2	equ	0xFDB
 16972                           fsr2h	equ	0xFDA
 16973                           fsr2l	equ	0xFD9
 16974                           status	equ	0xFD8
 16975                           
 16976                           	psect	rparam
 16977  0000                     tosu	equ	0xFFF
 16978                           tosh	equ	0xFFE
 16979                           tosl	equ	0xFFD
 16980                           pclatu	equ	0xFFB
 16981                           pclath	equ	0xFFA
 16982                           tblptru	equ	0xFF8
 16983                           tblptrh	equ	0xFF7
 16984                           tblptrl	equ	0xFF6
 16985                           tablat	equ	0xFF5
 16986                           prodh	equ	0xFF4
 16987                           prodl	equ	0xFF3
 16988                           intcon	equ	0xFF2
 16989                           postinc0	equ	0xFEE
 16990                           wreg	equ	0xFE8
 16991                           postdec1	equ	0xFE5
 16992                           plusw1	equ	0xFE3
 16993                           fsr1l	equ	0xFE1
 16994                           indf2	equ	0xFDF
 16995                           postinc2	equ	0xFDE
 16996                           plusw2	equ	0xFDB
 16997                           fsr2h	equ	0xFDA
 16998                           fsr2l	equ	0xFD9
 16999                           status	equ	0xFD8
 17000                           
 17001                           	psect	temp
 17002  000054                     btemp:
 17003                           	opt stack 0
 17004  000054                     	ds	1
 17005  0000                     int$flags	set	btemp
 17006  0000                     wtemp8	set	btemp+1
 17007  0000                     ttemp5	set	btemp+1
 17008  0000                     ttemp6	set	btemp+4
 17009  0000                     ttemp7	set	btemp+8
 17010                           tosu	equ	0xFFF
 17011                           tosh	equ	0xFFE
 17012                           tosl	equ	0xFFD
 17013                           pclatu	equ	0xFFB
 17014                           pclath	equ	0xFFA
 17015                           tblptru	equ	0xFF8
 17016                           tblptrh	equ	0xFF7
 17017                           tblptrl	equ	0xFF6
 17018                           tablat	equ	0xFF5
 17019                           prodh	equ	0xFF4
 17020                           prodl	equ	0xFF3
 17021                           intcon	equ	0xFF2
 17022                           postinc0	equ	0xFEE
 17023                           wreg	equ	0xFE8
 17024                           postdec1	equ	0xFE5
 17025                           plusw1	equ	0xFE3
 17026                           fsr1l	equ	0xFE1
 17027                           indf2	equ	0xFDF
 17028                           postinc2	equ	0xFDE
 17029                           plusw2	equ	0xFDB
 17030                           fsr2h	equ	0xFDA
 17031                           fsr2l	equ	0xFD9
 17032                           status	equ	0xFD8


Data Sizes:
    Strings     156
    Constant    0
    Data        22
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      83
    BANK0           160     78     135
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[7]), STR_33(CODE[5]), 
		 -> STR_32(CODE[11]), STR_31(CODE[6]), STR_30(CODE[9]), STR_29(CODE[5]), 
		 -> STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[7]), STR_25(CODE[2]), 
		 -> STR_24(CODE[6]), STR_23(CODE[8]), STR_22(CODE[7]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[6]), STR_17(CODE[7]), 
		 -> STR_16(CODE[5]), STR_15(CODE[7]), STR_14(CODE[11]), STR_13(CODE[5]), 
		 -> STR_12(CODE[2]), STR_11(CODE[4]), STR_10(CODE[2]), STR_9(CODE[3]), 
		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[7]), STR_33(CODE[5]), 
		 -> STR_32(CODE[11]), STR_31(CODE[6]), STR_30(CODE[9]), STR_29(CODE[5]), 
		 -> STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[7]), STR_25(CODE[2]), 
		 -> STR_24(CODE[6]), STR_23(CODE[8]), STR_22(CODE[7]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[6]), STR_17(CODE[7]), 
		 -> STR_16(CODE[5]), STR_15(CODE[7]), STR_14(CODE[11]), STR_13(CODE[5]), 
		 -> STR_12(CODE[2]), STR_11(CODE[4]), STR_10(CODE[2]), STR_9(CODE[3]), 
		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[4]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> canMessage(BANK0[14]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> refresh(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> refresh(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    wr8s@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[7]), STR_33(CODE[5]), 
		 -> STR_32(CODE[11]), STR_31(CODE[6]), STR_30(CODE[9]), STR_29(CODE[5]), 
		 -> STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[7]), STR_25(CODE[2]), 
		 -> STR_24(CODE[6]), STR_23(CODE[8]), STR_22(CODE[7]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[6]), STR_17(CODE[7]), 
		 -> STR_16(CODE[5]), STR_15(CODE[7]), STR_14(CODE[11]), STR_13(CODE[5]), 
		 -> STR_12(CODE[2]), STR_11(CODE[4]), STR_10(CODE[2]), STR_9(CODE[3]), 
		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display_status->_cmd
    _display_laptime->_cmd
    _display_gasPres->_cmd
    _display_brake_bias->_cmd
    _display->_display_rpm
    _display_waterTemp->_cmd
    _display_start->_cmd
    _display_speed->_cmd
    _display_rpm->_cmd
    _display_oilTemp->_cmd
    _display_labels->_cmd
    _display_grids->_cmd
    _display_gear->_cmd
    _display_fuel_level->_cmd
    _display_etc->_cmd
    _display_end->_cmd
    _display_bspd->_cmd
    _display_bottom_section->_display_battery
    _display_bottom_section->_display_tp
    _display_tp->_cmd
    _display_battery->_cmd
    _wr8s->_strlen
    _cmd->___awmod
    ___awmod->___awdiv
    ___flge->___xxtofl
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _FT800_Init->_wr32
    _wr8->_SPI_Exchange8bit
    _wr32->_SPI_Exchange8bit
    _wr16->_SPI_Exchange8bit
    _rd16->_SPI_Exchange8bit
    _host_command->_SPI_Exchange8bit
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0 1604773
                                             68 COMRAM     2     2      0
                                              0 BANK0     78    78      0
                        _CAN_receive
                         _FT800_Init
                  _SYSTEM_Initialize
                     _TMR0_StopTimer
                        _TMR1_Reload
           _TMR1_SetInterruptHandler
                            ___awdiv
                            ___awmod
                             ___flge
                           ___xxtofl
                            _display
             _display_bottom_section
                 _display_brake_bias
                        _display_end
                        _display_etc
                 _display_fuel_level
                    _display_gasPres
                       _display_gear
                      _display_grids
                     _display_labels
                    _display_laptime
                    _display_oilTemp
                        _display_rpm
                      _display_speed
                      _display_start
                     _display_status
                  _display_waterTemp
                          _wait2secs
 ---------------------------------------------------------------------------------
 (1) _wait2secs                                            2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _display_status                                       8     5      3   58342
                                             24 COMRAM     8     5      3
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_laptime                                     24     8     16   58702
                                             24 COMRAM    24     8     16
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_gasPres                                      6     4      2   60934
                                             24 COMRAM     6     4      2
                            ___awdiv
                            ___awmod
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_brake_bias                                   6     4      2   52152
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display                                             24     0     24  695883
                                             44 COMRAM    24     0     24
             _display_bottom_section
                       _display_bspd
                        _display_end
                        _display_etc
                 _display_fuel_level
                       _display_gear
                      _display_grids
                     _display_labels
                    _display_oilTemp
                        _display_rpm
                      _display_speed
                      _display_start
                  _display_waterTemp
 ---------------------------------------------------------------------------------
 (1) _display_waterTemp                                    6     4      2   52228
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_start                                        0     0      0   19676
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _display_speed                                        6     4      2   52228
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_rpm                                         20    18      2   61525
                                             24 COMRAM    20    18      2
                            ___awdiv
                            ___awmod
                             ___wmul
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_oilTemp                                      6     4      2   52228
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_labels                                       4     4      0   57938
                                             24 COMRAM     4     4      0
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_grids                                        0     0      0   19676
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _display_gear                                         4     2      2   19850
                                             24 COMRAM     4     2      2
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _display_fuel_level                                   6     4      2   58112
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_etc                                          6     4      2   58112
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_end                                          0     0      0   52032
                                _cmd
                               _wr16
 ---------------------------------------------------------------------------------
 (2) _display_bspd                                         6     4      2   58036
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_bottom_section                               4     0      4  133110
                                             30 COMRAM     4     0      4
                                _cmd
                    _display_battery
                         _display_tp
 ---------------------------------------------------------------------------------
 (2) _display_tp                                           6     4      2   52152
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (2) _display_battery                                      6     4      2   60934
                                             24 COMRAM     6     4      2
                            ___awdiv
                            ___awmod
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (2) _wr8s                                                10     4      6    5884
                                              8 COMRAM    10     4      6
                   _SPI_Exchange8bit
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     166
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  8     4      4   19676
                                             16 COMRAM     8     4      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___wmul (ARG)
                     _cmd_incrementn
                               _wr32
 ---------------------------------------------------------------------------------
 (2) _cmd_incrementn                                       3     3      0      22
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1056
                                             10 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1820
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     334
                                             16 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
                    _ECAN_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                              4 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _FT800_Init                                           2     2      0   34925
                                             15 COMRAM     2     2      0
                       _host_command
                               _rd16
                               _wr16
                               _wr32
                                _wr8
 ---------------------------------------------------------------------------------
 (2) _wr8                                                  5     0      5    1478
                                              3 COMRAM     5     0      5
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _wr32                                                12     4      8     784
                                              3 COMRAM    12     4      8
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _wr16                                                 6     0      6   32356
                                              3 COMRAM     6     0      6
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _rd16                                                 7     3      4     263
                                              3 COMRAM     7     3      4
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _host_command                                         1     1      0      44
                                              3 COMRAM     1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _SPI_Exchange8bit                                     1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             21 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                              2 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                              2 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                            _refresh *
 ---------------------------------------------------------------------------------
 (10) _refresh                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _FT800_Init
     _host_command
       _SPI_Exchange8bit
     _rd16
       _SPI_Exchange8bit
     _wr16
       _SPI_Exchange8bit
     _wr32
       _SPI_Exchange8bit
     _wr8
       _SPI_Exchange8bit
   _SYSTEM_Initialize
     _ECAN_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _TMR0_StopTimer
   _TMR1_Reload
   _TMR1_SetInterruptHandler
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___flge
     ___xxtofl (ARG)
   ___xxtofl
   _display
     _display_bottom_section
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _display_battery
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _cmd
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___wmul (ARG)
           _cmd_incrementn (ARG)
           _wr32 (ARG)
             _SPI_Exchange8bit
         _cmd_incrementn
         _wr16
           _SPI_Exchange8bit
         _wr8s
           _SPI_Exchange8bit
           _strlen
       _display_tp
         _cmd
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___wmul (ARG)
           _cmd_incrementn (ARG)
           _wr32 (ARG)
             _SPI_Exchange8bit
         _cmd_incrementn
         _wr16
           _SPI_Exchange8bit
     _display_bspd
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_end
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _wr16
         _SPI_Exchange8bit
     _display_etc
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_fuel_level
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_gear
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
     _display_grids
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
     _display_labels
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_oilTemp
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
     _display_rpm
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       ___wmul
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_speed
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
     _display_start
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
     _display_waterTemp
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
   _display_bottom_section
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _display_battery
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_tp
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
   _display_brake_bias
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_end
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _wr16
       _SPI_Exchange8bit
   _display_etc
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_fuel_level
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_gasPres
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_gear
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
   _display_grids
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
   _display_labels
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_laptime
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_oilTemp
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_rpm
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___wmul
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_speed
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_start
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
   _display_status
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_waterTemp
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _wait2secs

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _refresh *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      87       5       84.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      53       1       88.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DA       6        0.0%
DATA                 0      0      DA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Dec 27 19:37:13 2018

                                   _SPI_Initialize 6BAA                                        _SSPSTATbits 000FC7  
                                     ?_display_end 0001                                       ?_display_etc 0019  
                                               l31 6722                                                 l32 66FA  
                                               l34 6734                                                 l35 672C  
                                               l61 5654                                       ?_display_rpm 0019  
                                     ___awdiv@sign 0008                           __size_of_ECAN_Initialize 00A2  
                              ___wmul@multiplicand 0005                                        __CFG_BORV$3 000000  
                                  _timer0ReloadVal 0047                                       __CFG_CP0$OFF 000000  
                                     __CFG_CP1$OFF 000000                                       __CFG_CP2$OFF 000000  
                                     __CFG_CP3$OFF 000000                             __end_of_display_labels 1F74  
                                    ?_display_gear 0019                                                l181 6B92  
                                              l442 649E                                                l461 59FA  
                                              l462 5934                                                l702 57B6  
                                              l463 5966                                                l439 640E  
                                              l720 2520                                                l465 5B0C  
                                              l713 2642                                                l466 5A40  
                                              l714 1F76                                                l730 38B6  
                                    ?_display_bspd 0019                                                l467 5A74  
                                              l731 37FC                                                l716 2098  
                                              l732 3820                                                l660 2712  
                                              l717 21BA                                                l741 44CE  
                                              l733 3844                                                l661 2756  
                                              l718 22DC                                                l742 4548  
                                              l670 2ABA                                                l662 276A  
                                              l719 23FE                                                l743 4612  
                                              l671 2BF6                                                l663 27AE  
                                              l744 46B4                                                l672 2C0A  
                                              l664 27C2                                                l745 472E  
                                              l665 2806                                                l657 26A6  
                                              l690 4CA4                                                l738 48C2  
                                              l746 47F8                                                l666 281A  
                                              l658 26BA                                                l691 4902  
                                              l739 4454                                                l667 2956  
                                              l659 26FE                                                l676 2EA8  
                                              l668 296A                                                l860 3B56  
                                              l693 4A38                                                l677 2FDC  
                                              l669 2AA6                                                l694 4B6E  
                                              l862 3C12                                                l854 3A42  
                                              l855 3D04                                                l856 3AE4  
                                              l865 3D04                                                l858 3B30  
                                              l867 3D6A                                                l869 3D94  
                                     __CFG_CPB$OFF 000000                                       __CFG_CPD$OFF 000000  
                                  _timer1ReloadVal 004D                                                _cmd 68E0  
                                              _dli 0051                                                _wr8 6AB6  
                                     ___awmod@sign 0010                             __end_of_display_status 2D2C  
                                              tosl 000FFD                                                wreg 000FE8  
                          __end_of_display_battery 502C                         ??_convertReg2StandardCANid 0007  
                          __end_of_display_gasPres 537A                                __size_of_FT800_Init 02FE  
                                      main@brake_p 007A                                        main@engTemp 008C  
                                             l1100 6684                                               l1110 6766  
                                             l1103 66AC                                               l1104 66B6  
                                             l1112 677C                                               l1105 66C4  
                                             l1113 6774                                               l1140 5E7E  
                                             l1116 6794                                               l1117 679E  
                                             l1109 675A                                               l1142 5EB6  
                                             l1118 67AC                                               l1137 5DCE  
                                             l1138 5E02                                               l1139 5E40  
                                             l1096 665E                                               l1097 666E  
                                             l1530 5C98                                               ?_cmd 0011  
                                             l1531 5CA8                                               l1099 668C  
                                             l1540 5D48                                               l1532 5CC6  
                                             l1541 5D3C                                               l1534 5CD8  
                                             l1550 68AA                                               l1535 5CCC  
                                             l1537 5D16                                               l4122 5B08  
                                             l4042 5654                                               l1546 5D88  
                                             l1538 5CFE                                               l1549 68AE  
                                             l4580 3B30                                               l4572 3AE4  
                                             l4584 3B56                                               l4588 3C12  
                                             ?_wr8 0004                                               STR_1 0F82  
                                             STR_2 0F17                                               STR_3 0F53  
                                             STR_4 0F8A                                               STR_5 0F86  
                                             STR_6 0F47                                               STR_7 0F74  
                                             STR_8 0F91                                               STR_9 0F8E  
                                             u2000 3BF2                                               u2020 3C0C  
                                             u1230 6690                                               u2030 3C0E  
                                             u2015 3BFC                                               u1160 67FC  
                                             u2107 6B38                                               u1165 67F2  
                                             u2117 5386                                               u1405 3888  
                                             _LATA 000F89                                               u2070 3D1C  
                                             _LATB 000F8A                                               u2127 53A0  
                                             _LATC 000F8B                                               _LATD 000F8C  
                                             _LATE 000F8D                                               u1290 6780  
                                             u2090 3D8C                                     ?_display_grids 0001  
                                             u1380 380C                                               u1365 5B96  
                                             u1390 3830                                               u1375 6608  
                                             u1560 2D72                                               u1900 3B74  
                                             u1910 3B76                                               u1831 38D6  
                                             u1680 5D52                            __end_of_display_laptime 3302  
                                             u1841 38F2                                               u1930 3B90  
                                             u1940 3B92                                               u1925 3B80  
                                             u1960 3BD4                                               u1970 3BD6  
                                             u1955 3BCC                                               u1990 3BF0  
                                             u1985 3BE0                                display_oilTemp@temp 0019  
                          __end_of_display_oilTemp 6306                                               _WPUB 000F5B  
                                   ?_display_speed 0019                                        main@oilTemp 008E  
                                   ?_display_start 0001                                        main@message 0060  
                                      display@gear 003D                                        display@bspd 0037  
                                      display@fuel 0033                                        display@oilP 002F  
                                             _rd16 699A                                               _wr32 67B6  
                                             _wr16 6A90                                               _main 38CC  
                                             _wr8s 66CE                                    _TMR0_StartTimer 6BE6  
                                             fsr2h 000FDA                                               indf2 000FDF  
                                             fsr1l 000FE1                                               fsr2l 000FD9  
                                             btemp 0054                                               prodh 000FF4  
                                             prodl 000FF3                                               start 0038  
                                    __CFG_IESO$OFF 000000                                      __CFG_FOSC$HS2 000000  
                           __end_of_SPI_Initialize 6BB8                         ??_TMR1_SetInterruptHandler 0005  
                                    __CFG_MCLRE$ON 000000                                       ___param_bank 000000  
                       __end_of_display_brake_bias 5FD2                                              ??_cmd 0015  
                                            ??_wr8 0009                            __end_of_TMR0_Initialize 6A0C  
                   ??_TMR0_DefaultInterruptHandler 0001                     __size_of_OSCILLATOR_Initialize 0012  
                    __end_of_OSCILLATOR_Initialize 6B8A                                              ?_rd16 0004  
                                   ??_display_gear 001B                                     ??_display_bspd 001B  
                                            ?_wr32 0004                                              ?_wr16 0004  
                                            ?_main 0001                                    __end_of___awdiv 66CE  
                                            ?_wr8s 0009                                              STR_10 0F91  
                                            STR_11 0F7E                                              STR_12 0F99  
                                            STR_20 0F95                                              STR_21 0F97  
                                            STR_13 0F6A                                              STR_22 0F40  
                                            STR_30 0F21                                              STR_14 0F01  
                                            STR_31 0F5F                                              STR_15 0F32  
                                            STR_23 0F2A                                              STR_16 0F6F  
                                            STR_24 0F59                                              STR_32 0F0C  
                                            STR_25 0F97                                              STR_33 0F79  
                                            STR_17 0F39                                              STR_34 0F40  
                                            STR_26 0F40                                              STR_18 0F4D  
                                  ?_display_labels 0001                                              STR_35 0F97  
                                            STR_27 0F2A                                              STR_19 0F93  
                                            STR_28 0F97                                              STR_36 0F9B  
                                  __end_of___awmod 67B6                                              STR_29 0F65  
                                  _TMR1_StartTimer 6BE2                                       main@lap_time 0098  
                                            _T0CON 000FD5                                    ___awdiv@divisor 0005  
                                            _T1CON 000FCD                                              i2l516 0022  
                                            i2l518 002C                                    ___awdiv@counter 0007  
                                            _TMR0H 000FD7                                              _TMR1H 000FCF  
                                            _TMR0L 000FD6                                              _TMR1L 000FCE  
                                            _TRISA 000F92                                              _TRISB 000F93  
                                            _TRISC 000F94                                              _TRISD 000F95  
                                            _TRISE 000F96                  __size_of_TMR0_SetInterruptHandler 000A  
                                    __CFG_WRT0$OFF 000000                                      __CFG_WRT1$OFF 000000  
                                    __CFG_WRT2$OFF 000000                                    ?_display_status 0019  
                        ?_TMR0_SetInterruptHandler 0003                                      __CFG_WRT3$OFF 000000  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                              CAN_receive@tempCanMsg 0016  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                 __end_of_TMR0_ISR 6A6A                                   __end_of_TMR1_ISR 6BAA  
                                    __CFG_WRTB$OFF 000000                                    __end_of_display 65C4  
                                    __CFG_WRTC$OFF 000000                                      __CFG_WRTD$OFF 000000  
                                     display@speed 003B                                     __CFG_EBTRB$OFF 000000  
                          __size_of_cmd_incrementn 001C                                    __end_of_refresh 6BDE  
                          __end_of_TMR1_Initialize 699A                                              pclath 000FFA  
                                            wr8s@i 0012                                              wr8s@l 0011  
                                            wr8s@s 000D                                              tablat 000FF5  
                                            plusw1 000FE3                                              plusw2 000FDB  
                                     display_tp@tp 0019                                       display_rpm@i 002B  
                                     display_rpm@n 0029                                              ttemp5 0055  
                                            ttemp6 0058                                              ttemp7 005C  
              convertReg2ExtendedCANid@ConvertedID 0012                                              status 000FD8  
                                            wtemp8 0055                                    ?_SPI_Initialize 0001  
                       __end_of_display_fuel_level 58EC                                    __initialization 685E  
                             __size_of_CAN_receive 0226                                       __end_of_rd16 69D4  
                                     __end_of_wr16 6AB6                                       __end_of_wr32 6818  
                                     __end_of_main 3E88                                       __end_of_wr8s 6746  
                                    main@battVolts 0090                        ?_INTERRUPT_InterruptManager 0001  
                                           ??_rd16 0008                                             ??_wr32 000C  
                                           ??_wr16 000A                                             ??_main 0045  
                                           ??_wr8s 000F                                      __activetblptr 000003  
                                   __CFG_PLLCFG$ON 000000                                     __CFG_RETEN$OFF 000000  
                                ??_ECAN_Initialize 0003                                     _refresh_screen 00C2  
                         __end_of_SPI_Exchange8bit 6B9A                                   ?_display_battery 0019  
                                  ??_display_grids 0019                            __end_of_TMR0_StartTimer 6BEA  
                                 ?_display_gasPres 0019                                             _CANCON 000F6F  
                                  ??_display_speed 001B                                    ??_display_start 0019  
                                           _ANCON0 000F5D                                             _ANCON1 000F5C  
                                 ___awdiv@dividend 0003                                      main@autoShift 007D  
                                           _T1GCON 000FAA                                    __CFG_BBSIZ$BB2K 000000  
                                 ?_display_laptime 0019                                     __CFG_WDTEN$OFF 000000  
                                 ?_display_oilTemp 0019                                             _OSCCON 000FD3  
                                           _RXB0D0 000F66                                             _RXB0D1 000F67  
                                           _RXB0D2 000F68                                             _RXB0D3 000F69  
                                           _RXB0D4 000F6A                                             _RXB1D0 000F36  
                                           _RXB0D5 000F6B                                             _RXB1D1 000F37  
                                           _RXB0D6 000F6C                                             _RXB1D2 000F38  
                                           _RXB0D7 000F6D                                             _RXB1D3 000F39  
                                           _RXB1D4 000F3A                                             _RXB1D5 000F3B  
                                           _RXB1D6 000F3C                                             _RXB1D7 000F3D  
                                           _TXB0D0 000F26                                             _TXB0D1 000F27  
                                           _TXB0D2 000F28                                             _TXB0D3 000F29  
                                           _TXB0D4 000F2A                                             _TXB1D0 000F16  
                                           _TXB0D5 000F2B                                             _TXB1D1 000F17  
                                           _TXB0D6 000F2C                                             _TXB1D2 000F18  
                                           _TXB0D7 000F2D                                             _TXB1D3 000F19  
                                           _TXB1D4 000F1A                                             _TXB2D0 000F06  
                                           _TXB1D5 000F1B                                             _TXB2D1 000F07  
                                           _TXB1D6 000F1C                                             _TXB2D2 000F08  
                                           _TXB1D7 000F1D                                             _TXB2D3 000F09  
                                           _TXB2D4 000F0A                                             _TXB2D5 000F0B  
                                           _TXB2D6 000F0C                                             _TXB2D7 000F0D  
                                           _SSPADD 000FC8                                             _SSPBUF 000FC9  
                                 __end_of___xxtofl 5D9A                                     __CFG_XINST$OFF 000000  
                                     ??_FT800_Init 0010               __end_of_TMR1_DefaultInterruptHandler 6BF0  
            __size_of_TMR1_DefaultInterruptHandler 0002                       _TMR1_DefaultInterruptHandler 6BEE  
                                           ___flge 5D9A                            __end_of_TMR1_StartTimer 6BE6  
                                     ?_TMR1_Reload 0001                                             ___wmul 6A6A  
                                        ??___awdiv 0007                                     __CFG_STVREN$ON 000000  
                                        ??___awmod 000F                                   ?_TMR0_Initialize 0001  
                                           clear_0 6884                                             clear_1 6890  
                                 ___awdiv@quotient 0009                                    ___awmod@divisor 000D  
                                  ___awmod@counter 000F                               __size_of_display_end 0046  
                                           main@tp 0096                               __size_of_display_etc 0700  
                                           _strlen 68A0                                          ??_display 0045  
                             __size_of_display_rpm 05CA                                          ??_refresh 0001  
                                     __mediumconst 0000                   __end_of_convertReg2StandardCANid 664A  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8           TMR0_SetInterruptHandler@InterruptHandler 0003  
         TMR1_SetInterruptHandler@InterruptHandler 0003                                 __end_of_FT800_Init 5678  
                    __size_of_INTERRUPT_Initialize 0004                              __end_of_TMR1_CallBack 6B12  
                                       ___flge@ff1 0011                                         ___flge@ff2 0015  
                                 ?_TMR1_Initialize 0001                                       ___xxtofl@arg 000D  
                                     ___xxtofl@exp 000C                                  _SYSTEM_Initialize 6AD6  
                                     ___xxtofl@val 0003                                      ?_host_command 0001  
                                       __accesstop 0060                            __end_of__initialization 6896  
                             __end_of_display_gear 4900                               __end_of_display_bspd 4CCA  
                               ?_SYSTEM_Initialize 0001                           _convertReg2ExtendedCANid 5B12  
                           CAN_receive@returnValue 0018                                      ___rparam_used 000001  
                                   __pcstackCOMRAM 0001                                       __pidataBANK0 6B62  
                              ??_SYSTEM_Initialize 0007                                          ?_TMR0_ISR 0001  
                                        ?_TMR1_ISR 0001                      ?_TMR1_DefaultInterruptHandler 0001  
                                       _canMessage 00C3                                    cmd_incrementn@n 0005  
                                   _cmd_incrementn 6B12              convertReg2StandardCANid@tempRXBn_SIDH 0009  
            convertReg2StandardCANid@tempRXBn_SIDL 0003                              display_waterTemp@temp 0019  
                                 ?_TMR0_StartTimer 0001                          __end_of_SYSTEM_Initialize 6AF4  
                                       __pbssBANK0 00AE                                     ??_host_command 0004  
                                 main@BSPD_counter 007F                                         _cmd_offset 004F  
                                          ?___flge 0011                   __end_of_TMR0_SetInterruptHandler 6BD6  
                          __size_of_TMR0_StopTimer 0004                                            ?___wmul 0003  
                                 ??_display_labels 0019                                   ?_TMR1_StartTimer 0001  
                                       ??_TMR0_ISR 0001                                         ??_TMR1_ISR 0001  
                               __size_of_wait2secs 001A                                            _ECANCON 000F72  
                                          _CANSTAT 000F6E                                   ??_display_status 001C  
                       display_laptime@current_dec 001B                         display_laptime@current_int 0019  
                                          _BRGCON1 000E43                                            _BRGCON2 000E44  
                                          _BRGCON3 000E45                                            ?_strlen 0003  
                                 __CFG_CANMX$PORTB 000000                                          ?___xxtofl 0003  
                                          _REFOCON 000F9A                             __end_of_cmd_incrementn 6B2E  
                                          _OSCCON2 000FD2                                 _display_brake_bias 5EBA  
                         ??_display_bottom_section 0023                                            _RXB0DLC 000F65  
                                          _RXB1DLC 000F35                                            i2u35_48 6A58  
                                          _OSCTUNE 000F9B                                            _TXB0DLC 000F25  
                                          _TXB1DLC 000F15                                            _TXB2DLC 000F05  
                             display_battery@volts 0019                                            _SSPCON1 000FC6  
                                       _display_tp 6306                                            _SSPSTAT 000FC7  
                                       cmd@command 0011                                ?_display_brake_bias 0019  
                                 ??_SPI_Initialize 0003                                     display@gasPres 0031  
                                  __CFG_PWRTEN$OFF 000000                                     display@engTemp 003F  
                                          __Hparam 0000                                            __Lparam 0000  
                __size_of_convertReg2StandardCANid 0086                          ?_convertReg2StandardCANid 0003  
                                   display@oilTemp 0041                                    __size_of___flge 0120  
                                          ___awdiv 664A                                            ___awmod 6746  
                                  __size_of___wmul 0026                                    _ECAN_Initialize 640A  
                                     __psmallconst 0F00                               ??_display_brake_bias 001B  
                             __size_of_TMR1_Reload 000A                                            __pcinit 685E  
                                          __ramtop 0F00                                            __ptext0 38CC  
                                          __ptext1 6B2E                                            __ptext2 2674  
                                          __ptext3 2D2C                                            __ptext4 502C  
                                          __ptext5 5EBA                                            __ptext6 653E  
                                          __ptext7 5FD2                                            __ptext8 6920  
                                          __ptext9 60EA                                            _display 653E  
                                        _T0CONbits 000FD5                     ??_TMR1_DefaultInterruptHandler 0001  
                                  __size_of_strlen 0040                                          _T1CONbits 000FCD  
                               _display_fuel_level 5678                              _OSCILLATOR_Initialize 6B78  
                                     __size_of_cmd 0040                                       __size_of_wr8 0020  
                                       ??___xxtofl 0007                                   ___awmod@dividend 000B  
                __size_of_TMR1_SetInterruptHandler 000A                                            _refresh 6BD6  
                         ??_PIN_MANAGER_Initialize 0003                                    ?_cmd_incrementn 0001  
                        ?_TMR1_SetInterruptHandler 0003                                  __CFG_MSSPMSK$MSK7 000000  
                              display_status@radio 001B                                  ?_SPI_Exchange8bit 0001  
                              ?_display_fuel_level 0019                                            main@etc 0094  
                       __size_of_SYSTEM_Initialize 001E                                            main@drs 0075  
                            __size_of_display_gear 04EA                                            main@rpm 0084  
                            __size_of_display_bspd 03CA                               end_of_initialization 6896  
                                          wr8@addr 0004                                 ??_SPI_Exchange8bit 0003  
                             SPI_Exchange8bit@data 0003                                  __end_of_wait2secs 6B48  
                                    ??_CAN_receive 0018                            display_rpm@second_digit 0025  
                                   display_etc@etc 0019                                            postdec1 000FE5  
                             ??_display_fuel_level 001B                                            postinc0 000FEE  
                                          postinc2 000FDE                                         main@F12762 00AE  
                                       main@F12754 00D1                                     display_rpm@rpm 0019  
                                          strlen@a 0007                                            strlen@s 0003  
                             __end_of_host_command 6B62                           _TMR0_SetInterruptHandler 6BCC  
                                        _PORTAbits 000F80                                          _PORTDbits 000F83  
                                     _display_gear 4416                                 display_laptime@lap 0025  
                                     _display_bspd 4900                                      ___xxtofl@sign 000B  
                  __size_of_display_bottom_section 0092                         ??_convertReg2ExtendedCANid 0007  
                                      ?_display_tp 0019                              __end_of_display_grids 4416  
                            __end_of_display_speed 6202                              __end_of_display_start 695E  
                                       main@clutch 007E                                         main@launch 007C  
                         __size_of_display_battery 0362                           __size_of_display_gasPres 034E  
                                       display@etc 0039                                         display@rpm 002D  
                          __end_of_ECAN_Initialize 64AC                           __size_of_display_laptime 05D6  
                                   _TMR0_StopTimer 6BDE                           __size_of_display_oilTemp 0104  
                     __end_of_INTERRUPT_Initialize 6BEE                                __end_of_CAN_receive 5B12  
                                    ??_display_end 0019                                      ??_display_etc 001B  
                                   __end_of___flge 5EBA                                      ??_display_rpm 001B  
                                   __end_of___wmul 6A90                                  __size_of_TMR0_ISR 0028  
                                __size_of_TMR1_ISR 0010                             ?_OSCILLATOR_Initialize 0001  
                                   __end_of_strlen 68E0                                start_initialization 685E  
                         __size_of_TMR0_Initialize 0038                    __size_of_PIN_MANAGER_Initialize 0036  
                                      __end_of_cmd 6920                                        __end_of_wr8 6AD6  
                                 display@battVolts 0043                convertReg2StandardCANid@returnValue 000A  
                           __end_of_TMR0_StopTimer 6BE2                           __size_of_TMR1_Initialize 003C  
                           _display_bottom_section 64AC                                           ??___flge 0019  
                                         ??___wmul 0007                                __size_of_display_tp 0104  
                                      __pdataBANK0 00D1                             display_gasPres@gasPres 0019  
                           __size_of_TMR1_CallBack 001E                                           ??_strlen 0005  
                           display_rpm@first_digit 0023                                  main@timer_started 0074  
                              __end_of_display_end 685E                                __end_of_display_etc 2674  
                              __end_of_display_rpm 38CC                                        __pbssCOMRAM 0047  
                                    __pcstackBANK0 0060                                  __size_of___xxtofl 0140  
                               display_speed@speed 0019                              _TMR0_InterruptHandler 0049  
                         __size_of_TMR0_StartTimer 0004                                        _CAN_receive 58EC  
                                 ?_ECAN_Initialize 0001                                    ?_TMR0_StopTimer 0001  
                           _PIN_MANAGER_Initialize 6A0C                              __size_of_host_command 001A  
                                        __pintcode 0008                   __end_of_TMR1_SetInterruptHandler 6BCC  
                                         ?___awdiv 0003                                           ?___awmod 000B  
                                ??_display_battery 001B                                  ??_display_gasPres 001B  
                          display_laptime@best_dec 001F                            display_laptime@best_lap 0027  
                          display_laptime@best_int 001D                                   ??_cmd_incrementn 0003  
                     ??_INTERRUPT_InterruptManager 0001                                  ??_display_laptime 0029  
                                ??_display_oilTemp 001B                                           ?_display 002D  
                                      __smallconst 0F00                           __size_of_TMR1_StartTimer 0004  
                                      _COMSTATbits 000F71                            display_laptime@last_dec 0023  
                          display_laptime@last_int 0021                                           ?_refresh 0001  
                 __end_of_convertReg2ExtendedCANid 5C5A                               _INTERRUPT_Initialize 6BEA  
                                    _TMR1_CallBack 6AF4                                  ??_TMR0_Initialize 0005  
                                     _host_command 6B48                                     ___wmul@product 0007  
                                         _LATAbits 000F89                                           _LATCbits 000F8B  
                                         _LATDbits 000F8C                                           _PIE1bits 000F9D  
                                         _PIE5bits 000F76                                          _wait2secs 6B2E  
                                         i2u133_48 6B00                __size_of_INTERRUPT_InterruptManager 0030  
                       ??_TMR0_SetInterruptHandler 0005                                           _PIR1bits 000F9E  
                                         _PIR5bits 000F77                          __size_of_SPI_Exchange8bit 0010  
                                         _RXB0EIDH 000F63                                           _RXB0EIDL 000F64  
                                         _RXB1EIDH 000F33                                           _RXB1EIDL 000F34  
                                         _RCONbits 000FD0                                      ??_TMR1_Reload 0003  
                                         _RXB0SIDH 000F61                                           _RXB0SIDL 000F62  
                                         _RXB1SIDH 000F31                                           _RXF0EIDH 000EE2  
                                         _RXB1SIDL 000F32                                           _RXF0EIDL 000EE3  
                                         _RXF1EIDH 000EE6                                           _RXF1EIDL 000EE7  
                                         _RXF2EIDH 000EEA                                           _RXF2EIDL 000EEB  
                                         _RXF3EIDH 000EEE                                           _RXF3EIDL 000EEF  
                                         _RXF4EIDH 000EF2                                           _RXF4EIDL 000EF3  
                                         _RXF5EIDH 000EF6                                           _RXF5EIDL 000EF7  
                                         _RXF0SIDH 000EE0                                           _RXF0SIDL 000EE1  
                                         _TXB0EIDH 000F23                                           _RXF1SIDH 000EE4  
                                         _TXB0EIDL 000F24                                           _RXF1SIDL 000EE5  
                                         _TXB1EIDH 000F13                                           _RXF2SIDH 000EE8  
                                         _TXB1EIDL 000F14                                           _RXF2SIDL 000EE9  
                                         _TXB2EIDH 000F03                                           _RXF3SIDH 000EEC  
                                         _TXB2EIDL 000F04                                           _RXF3SIDL 000EED  
                                         _RXF4SIDH 000EF0                                           _RXF4SIDL 000EF1  
                                         _TMR0_ISR 6A42                                           _RXF5SIDH 000EF4  
                                         _RXF5SIDL 000EF5                                           _TMR1_ISR 6B9A  
                                         _RXM0EIDH 000EFA                                           _RXM0EIDL 000EFB  
                                         _TXB0SIDH 000F21                                           _RXM1EIDH 000EFE  
                                         _TXB0SIDL 000F22                                           _RXM1EIDL 000EFF  
                                         _TXB1SIDH 000F11                                           _TXB1SIDL 000F12  
                                         _TXB2SIDH 000F01                                           _TXB2SIDL 000F02  
                                        wr32@value 0008                                          wr16@value 0008  
                                         _RXM0SIDH 000EF8                                           _RXM0SIDL 000EF9  
                                         _RXM1SIDH 000EFC                                           _RXM1SIDL 000EFD  
                                      _display_end 6818                                        _display_etc 1F74  
                                      _display_rpm 3302                        __size_of_display_brake_bias 0118  
                                ??_TMR1_Initialize 0005                                  ___wmul@multiplier 0003  
                                 __CFG_SOSCSEL$DIG 000000                                  _display_waterTemp 5FD2  
                                        main@radio 0081                                          display@tp 0035  
                               ?_display_waterTemp 0019                                          main@speed 0088  
                          __size_of_display_labels 0FD6                                       ??_display_tp 001B  
                          __size_of_display_status 06B8                                          copy_data0 6872  
                            ?_INTERRUPT_Initialize 0001                                     ?_TMR1_CallBack 0001  
                              ??_display_waterTemp 001B                           _convertReg2StandardCANid 65C4  
            convertReg2ExtendedCANid@tempRXBn_EIDH 000B              convertReg2ExtendedCANid@tempRXBn_EIDL 0003  
            convertReg2ExtendedCANid@tempRXBn_SIDH 0004                                         ?_wait2secs 0001  
            convertReg2ExtendedCANid@tempRXBn_SIDL 0005                                           __Hrparam 0000  
                                       _FT800_Init 537A                                           __Lrparam 0000  
                               __CFG_BOREN$SBORDIS 000000                            __size_of_SPI_Initialize 000E  
                      __size_of_display_fuel_level 0274                            ??_OSCILLATOR_Initialize 0003  
                                ??_TMR0_StartTimer 0003                                   __size_of___awdiv 0084  
                                       _CIOCONbits 000F70                                   __size_of___awmod 0070  
                        __end_of_display_waterTemp 60EA                                 __end_of_display_tp 640A  
                                         rd16@addr 0004                           _TMR1_SetInterruptHandler 6BC2  
convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 0011                                           rd16@temp 000A  
                              __end_of_TMR1_Reload 6BC2                              _TMR1_InterruptHandler 004B  
                                 __size_of_display 0086  convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 0010  
                                         ___xxtofl 5C5A                                   display_gear@gear 0019  
                                 __size_of_refresh 0008                             display_fuel_level@fuel 0019  
                                         __ptext10 3302                                           __ptext11 6A6A  
                                         __ptext20 64AC                                           __ptext12 6202  
                                         __ptext21 6306                                           __ptext13 0F9E  
                                       _T1GCONbits 000FAA                                           __ptext30 5D9A  
                                         __ptext22 4CCA                                           __ptext14 3E88  
                                         __ptext31 6BB8                                           __ptext23 66CE  
                                         __ptext15 4416                                           __ptext40 6BAA  
                                         __ptext32 6BDE                                           __ptext24 68A0  
                                         __ptext16 5678                                           __ptext41 6A0C  
                                         __ptext33 6AD6                                           __ptext25 68E0  
                                         __ptext17 1F74                                           __ptext50 6B48  
                                         __ptext42 6B78                                           __ptext34 695E  
                                         __ptext26 6B12                                           __ptext18 6818  
                                         __ptext51 6B8A                                           __ptext43 6BEA  
                                         __ptext35 6BE2                                           __ptext27 6746  
                                         __ptext19 4900                                           __ptext60 6A42  
                                         __ptext52 58EC                                           __ptext44 640A  
                                         __ptext36 6BC2                                           __ptext28 664A  
                                         __ptext61 6BF0                                           __ptext53 65C4  
                                         __ptext45 537A                                           __ptext37 69D4  
                                         __ptext29 5C5A                                           __ptext62 0000  
                                         __ptext54 5B12                                           __ptext46 6AB6  
                                         __ptext38 6BE6                                           __ptext47 67B6  
                                         __ptext39 6BCC                                           __ptext56 6B9A  
                                         __ptext48 6A90                                           __ptext57 6AF4  
                                         __ptext49 699A                                           __ptext58 6BEE  
                                         __ptext59 6BD6                                  ??_TMR1_StartTimer 0003  
              convertReg2StandardCANid@ConvertedID 000E                                   display_bspd@bspd 0019  
                                    __size_of_rd16 003A                                      __size_of_wr16 0026  
                                    __size_of_wr32 0062                                      __size_of_main 05BC  
                                    __size_of_wr8s 0078                            ?_display_bottom_section 001F  
             __end_of_TMR0_DefaultInterruptHandler 6BF2              __size_of_TMR0_DefaultInterruptHandler 0002  
                     _TMR0_DefaultInterruptHandler 6BF0                convertReg2ExtendedCANid@returnValue 000C  
                __size_of_convertReg2ExtendedCANid 0148                                           wr32@addr 0004  
                                         wr16@addr 0004                          ?_convertReg2ExtendedCANid 0003  
                             display_status@clutch 001A                               display_status@launch 0020  
                                         _up_blink 0053                                           int$flags 0054  
               __end_of_INTERRUPT_InterruptManager 0038                         _INTERRUPT_InterruptManager 0008  
                                         main@bias 0078                                           main@gasP 0092  
                                         main@gear 008A                                           main@bspd 0082  
                                         main@fuel 0086                                           main@oilP 0076  
                           __size_of_display_grids 058E                                __CFG_INTOSCSEL$HIGH 000000  
                           __size_of_display_speed 0118                             __size_of_display_start 003E  
                                      _RXB0CONbits 000F60                                        _RXB1CONbits 000F30  
                                       _INTCONbits 000FF2                                           wr8@value 0008  
                           ??_INTERRUPT_Initialize 0003                                    ??_TMR1_CallBack 0001  
                                         wr8s@addr 0009                                           intlevel2 0000  
                                 ??_TMR0_StopTimer 0003                     __end_of_display_bottom_section 653E  
                                  _display_battery 4CCA                                    _display_gasPres 502C  
                          ?_PIN_MANAGER_Initialize 0001                                        _TXB0CONbits 000F20  
                                     ?_CAN_receive 0016                                        _TXB1CONbits 000F10  
                                      ??_wait2secs 0003                                    _display_laptime 2D2C  
                                      _TXB2CONbits 000F00                                    _display_oilTemp 6202  
                         display_bottom_section@tp 0021                                        ?_FT800_Init 0001  
                    ?_TMR0_DefaultInterruptHandler 0001                                   _SPI_Exchange8bit 6B8A  
                                      _TMR1_Reload 6BB8                                 __CFG_WDTPS$1048576 000000  
                              host_command@command 0004                         __size_of_display_waterTemp 0118  
                                  display_rpm@diff 0027                                    _TMR0_Initialize 69D4  
                                   _display_labels 0F9E                            display_status@autoShift 0019  
                                      _SSPCON1bits 000FC6                                     _display_status 2674  
           display_laptime@time_difference_decimal 002D                     __end_of_PIN_MANAGER_Initialize 6A42  
                                    _display_grids 3E88                                      _display_speed 60EA  
                              __CFG_BORPWR$ZPBORMV 000000                                      _display_start 6920  
           display_laptime@time_difference_integer 002F                             display_brake_bias@bias 0019  
                                  _TMR1_Initialize 695E                        display_bottom_section@volts 001F  
