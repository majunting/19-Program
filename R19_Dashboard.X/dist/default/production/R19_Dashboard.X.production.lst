

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Apr 05 14:20:38 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,inline
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.00
    80                           ; Generated 27/05/2018 GMT
    81                           ; 
    82                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F46K80 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  006844                     __pidataBANK0:
   116                           	opt stack 0
   117                           
   118                           ;initializer for main@F12754
   119  006844  0000               	dw	0
   120  006846  0001               	dw	1
   121  006848  0000               	dw	0
   122  00684A  0000               	dw	0
   123  00684C  0000               	dw	0
   124  00684E  0000               	dw	0
   125  006850  0000               	dw	0
   126  006852  0000               	dw	0
   127  006854  0000               	dw	0
   128  006856  0000               	dw	0
   129  006858  0000               	dw	0
   130  0000                     _BRGCON3	set	3653
   131  0000                     _BRGCON2	set	3652
   132  0000                     _BRGCON1	set	3651
   133  0000                     _RXF5SIDL	set	3829
   134  0000                     _RXF5SIDH	set	3828
   135  0000                     _RXF5EIDL	set	3831
   136  0000                     _RXF5EIDH	set	3830
   137  0000                     _RXF4SIDL	set	3825
   138  0000                     _RXF4SIDH	set	3824
   139  0000                     _RXF4EIDL	set	3827
   140  0000                     _RXF4EIDH	set	3826
   141  0000                     _RXF3SIDL	set	3821
   142  0000                     _RXF3SIDH	set	3820
   143  0000                     _RXF3EIDL	set	3823
   144  0000                     _RXF3EIDH	set	3822
   145  0000                     _RXF2SIDL	set	3817
   146  0000                     _RXF2SIDH	set	3816
   147  0000                     _RXF2EIDL	set	3819
   148  0000                     _RXF2EIDH	set	3818
   149  0000                     _RXF1SIDL	set	3813
   150  0000                     _RXF1SIDH	set	3812
   151  0000                     _RXF1EIDL	set	3815
   152  0000                     _RXF1EIDH	set	3814
   153  0000                     _RXF0SIDL	set	3809
   154  0000                     _RXF0SIDH	set	3808
   155  0000                     _RXF0EIDL	set	3811
   156  0000                     _RXF0EIDH	set	3810
   157  0000                     _RXM1SIDL	set	3837
   158  0000                     _RXM1SIDH	set	3836
   159  0000                     _RXM1EIDL	set	3839
   160  0000                     _RXM1EIDH	set	3838
   161  0000                     _RXM0SIDL	set	3833
   162  0000                     _RXM0SIDH	set	3832
   163  0000                     _RXM0EIDL	set	3835
   164  0000                     _RXM0EIDH	set	3834
   165  0000                     _RXB1D7	set	3901
   166  0000                     _RXB1D6	set	3900
   167  0000                     _RXB1D5	set	3899
   168  0000                     _RXB1D4	set	3898
   169  0000                     _RXB1D3	set	3897
   170  0000                     _RXB1D2	set	3896
   171  0000                     _RXB1D1	set	3895
   172  0000                     _RXB1D0	set	3894
   173  0000                     _RXB1DLC	set	3893
   174  0000                     _RXB1SIDH	set	3889
   175  0000                     _RXB1EIDL	set	3892
   176  0000                     _RXB1EIDH	set	3891
   177  0000                     _RXB1SIDL	set	3890
   178  0000                     _RXB1CONbits	set	3888
   179  0000                     _TXB2D7	set	3853
   180  0000                     _TXB2D6	set	3852
   181  0000                     _TXB2D5	set	3851
   182  0000                     _TXB2D4	set	3850
   183  0000                     _TXB2D3	set	3849
   184  0000                     _TXB2D2	set	3848
   185  0000                     _TXB2D1	set	3847
   186  0000                     _TXB2D0	set	3846
   187  0000                     _TXB2DLC	set	3845
   188  0000                     _TXB2SIDL	set	3842
   189  0000                     _TXB2SIDH	set	3841
   190  0000                     _TXB2EIDL	set	3844
   191  0000                     _TXB2EIDH	set	3843
   192  0000                     _TXB2CONbits	set	3840
   193  0000                     _TXB1D7	set	3869
   194  0000                     _TXB1D6	set	3868
   195  0000                     _TXB1D5	set	3867
   196  0000                     _TXB1D4	set	3866
   197  0000                     _TXB1D3	set	3865
   198  0000                     _TXB1D2	set	3864
   199  0000                     _TXB1D1	set	3863
   200  0000                     _TXB1D0	set	3862
   201  0000                     _TXB1DLC	set	3861
   202  0000                     _TXB1SIDL	set	3858
   203  0000                     _TXB1SIDH	set	3857
   204  0000                     _TXB1EIDL	set	3860
   205  0000                     _TXB1EIDH	set	3859
   206  0000                     _TXB1CONbits	set	3856
   207  0000                     _TXB0D7	set	3885
   208  0000                     _TXB0D6	set	3884
   209  0000                     _TXB0D5	set	3883
   210  0000                     _TXB0D4	set	3882
   211  0000                     _TXB0D3	set	3881
   212  0000                     _TXB0D2	set	3880
   213  0000                     _TXB0D1	set	3879
   214  0000                     _TXB0D0	set	3878
   215  0000                     _TXB0DLC	set	3877
   216  0000                     _TXB0SIDL	set	3874
   217  0000                     _TXB0SIDH	set	3873
   218  0000                     _TXB0EIDL	set	3876
   219  0000                     _TXB0EIDH	set	3875
   220  0000                     _TXB0CONbits	set	3872
   221  0000                     _WPUB	set	3931
   222  0000                     _ANCON1	set	3932
   223  0000                     _ANCON0	set	3933
   224  0000                     _CIOCONbits	set	3952
   225  0000                     _PORTDbits	set	3971
   226  0000                     _PORTAbits	set	3968
   227  0000                     _LATAbits	set	3977
   228  0000                     _T0CONbits	set	4053
   229  0000                     _TMR0L	set	4054
   230  0000                     _TMR0H	set	4055
   231  0000                     _T0CON	set	4053
   232  0000                     _REFOCON	set	3994
   233  0000                     _OSCTUNE	set	3995
   234  0000                     _OSCCON2	set	4050
   235  0000                     _OSCCON	set	4051
   236  0000                     _INTCONbits	set	4082
   237  0000                     _RCONbits	set	4048
   238  0000                     _COMSTATbits	set	3953
   239  0000                     _RXB0D7	set	3949
   240  0000                     _RXB0D6	set	3948
   241  0000                     _RXB0D5	set	3947
   242  0000                     _RXB0D4	set	3946
   243  0000                     _RXB0D3	set	3945
   244  0000                     _RXB0D2	set	3944
   245  0000                     _RXB0D1	set	3943
   246  0000                     _RXB0D0	set	3942
   247  0000                     _RXB0DLC	set	3941
   248  0000                     _RXB0SIDH	set	3937
   249  0000                     _RXB0EIDL	set	3940
   250  0000                     _RXB0EIDH	set	3939
   251  0000                     _RXB0SIDL	set	3938
   252  0000                     _RXB0CONbits	set	3936
   253  0000                     _PIE5bits	set	3958
   254  0000                     _PIR5bits	set	3959
   255  0000                     _ECANCON	set	3954
   256  0000                     _CANSTAT	set	3950
   257  0000                     _CANCON	set	3951
   258  0000                     _SSPSTATbits	set	4039
   259  0000                     _SSPCON1bits	set	4038
   260  0000                     _SSPADD	set	4040
   261  0000                     _SSPCON1	set	4038
   262  0000                     _SSPSTAT	set	4039
   263  0000                     _TRISD	set	3989
   264  0000                     _TRISC	set	3988
   265  0000                     _TRISB	set	3987
   266  0000                     _TRISA	set	3986
   267  0000                     _TRISE	set	3990
   268  0000                     _LATC	set	3979
   269  0000                     _LATB	set	3978
   270  0000                     _LATA	set	3977
   271  0000                     _LATD	set	3980
   272  0000                     _LATE	set	3981
   273  0000                     _T1GCONbits	set	4010
   274  0000                     _T1CONbits	set	4045
   275  0000                     _PIE1bits	set	3997
   276  0000                     _PIR1bits	set	3998
   277  0000                     _TMR1L	set	4046
   278  0000                     _TMR1H	set	4047
   279  0000                     _T1GCON	set	4010
   280  0000                     _T1CON	set	4045
   281  0000                     _LATCbits	set	3979
   282  0000                     _SSPBUF	set	4041
   283  0000                     _LATDbits	set	3980
   284                           
   285                           	psect	smallconst
   286  000F00                     __psmallconst:
   287                           	opt stack 0
   288  000F00  00                 	db	0
   289  000F01                     STR_14:
   290  000F01  42                 	db	66	;'B'
   291  000F02  53                 	db	83	;'S'
   292  000F03  50                 	db	80	;'P'
   293  000F04  44                 	db	68	;'D'
   294  000F05  20                 	db	32
   295  000F06  53                 	db	83	;'S'
   296  000F07  74                 	db	116	;'t'
   297  000F08  61                 	db	97	;'a'
   298  000F09  74                 	db	116	;'t'
   299  000F0A  65                 	db	101	;'e'
   300  000F0B  00                 	db	0
   301  000F0C                     STR_32:
   302  000F0C  47                 	db	71	;'G'
   303  000F0D  65                 	db	101	;'e'
   304  000F0E  61                 	db	97	;'a'
   305  000F0F  72                 	db	114	;'r'
   306  000F10  20                 	db	32
   307  000F11  53                 	db	83	;'S'
   308  000F12  68                 	db	104	;'h'
   309  000F13  69                 	db	105	;'i'
   310  000F14  66                 	db	102	;'f'
   311  000F15  74                 	db	116	;'t'
   312  000F16  00                 	db	0
   313  000F17                     STR_2:
   314  000F17  47                 	db	71	;'G'
   315  000F18  61                 	db	97	;'a'
   316  000F19  69                 	db	105	;'i'
   317  000F1A  6E                 	db	110	;'n'
   318  000F1B  2F                 	db	47
   319  000F1C  4C                 	db	76	;'L'
   320  000F1D  6F                 	db	111	;'o'
   321  000F1E  73                 	db	115	;'s'
   322  000F1F  73                 	db	115	;'s'
   323  000F20  00                 	db	0
   324  000F21                     STR_30:
   325  000F21  41                 	db	65	;'A'
   326  000F22  6E                 	db	110	;'n'
   327  000F23  74                 	db	116	;'t'
   328  000F24  69                 	db	105	;'i'
   329  000F25  20                 	db	32
   330  000F26  4C                 	db	76	;'L'
   331  000F27  61                 	db	97	;'a'
   332  000F28  67                 	db	103	;'g'
   333  000F29  00                 	db	0
   334  000F2A                     STR_23:
   335  000F2A  57                 	db	87	;'W'
   336  000F2B  61                 	db	97	;'a'
   337  000F2C  72                 	db	114	;'r'
   338  000F2D  6E                 	db	110	;'n'
   339  000F2E  69                 	db	105	;'i'
   340  000F2F  6E                 	db	110	;'n'
   341  000F30  67                 	db	103	;'g'
   342  000F31  00                 	db	0
   343  000F32                     STR_15:
   344  000F32  4C                 	db	76	;'L'
   345  000F33  61                 	db	97	;'a'
   346  000F34  75                 	db	117	;'u'
   347  000F35  6E                 	db	110	;'n'
   348  000F36  63                 	db	99	;'c'
   349  000F37  68                 	db	104	;'h'
   350  000F38  00                 	db	0
   351  000F39                     STR_17:
   352  000F39  43                 	db	67	;'C'
   353  000F3A  6C                 	db	108	;'l'
   354  000F3B  75                 	db	117	;'u'
   355  000F3C  74                 	db	116	;'t'
   356  000F3D  63                 	db	99	;'c'
   357  000F3E  68                 	db	104	;'h'
   358  000F3F  00                 	db	0
   359  000F40                     STR_22:
   360  000F40  4E                 	db	78	;'N'
   361  000F41  6F                 	db	111	;'o'
   362  000F42  72                 	db	114	;'r'
   363  000F43  6D                 	db	109	;'m'
   364  000F44  61                 	db	97	;'a'
   365  000F45  6C                 	db	108	;'l'
   366  000F46  00                 	db	0
   367  000F47                     STR_6:
   368  000F47  53                 	db	83	;'S'
   369  000F48  70                 	db	112	;'p'
   370  000F49  65                 	db	101	;'e'
   371  000F4A  65                 	db	101	;'e'
   372  000F4B  64                 	db	100	;'d'
   373  000F4C  00                 	db	0
   374  000F4D                     STR_18:
   375  000F4D  52                 	db	82	;'R'
   376  000F4E  61                 	db	97	;'a'
   377  000F4F  64                 	db	100	;'d'
   378  000F50  69                 	db	105	;'i'
   379  000F51  6F                 	db	111	;'o'
   380  000F52  00                 	db	0
   381  000F53                     STR_3:
   382  000F53  57                 	db	87	;'W'
   383  000F54  61                 	db	97	;'a'
   384  000F55  74                 	db	116	;'t'
   385  000F56  65                 	db	101	;'e'
   386  000F57  72                 	db	114	;'r'
   387  000F58  00                 	db	0
   388  000F59                     STR_24:
   389  000F59  45                 	db	69	;'E'
   390  000F5A  72                 	db	114	;'r'
   391  000F5B  72                 	db	114	;'r'
   392  000F5C  6F                 	db	111	;'o'
   393  000F5D  72                 	db	114	;'r'
   394  000F5E  00                 	db	0
   395  000F5F                     STR_31:
   396  000F5F  4C                 	db	76	;'L'
   397  000F60  69                 	db	105	;'i'
   398  000F61  6D                 	db	109	;'m'
   399  000F62  69                 	db	105	;'i'
   400  000F63  74                 	db	116	;'t'
   401  000F64  00                 	db	0
   402  000F65                     STR_29:
   403  000F65  49                 	db	73	;'I'
   404  000F66  64                 	db	100	;'d'
   405  000F67  6C                 	db	108	;'l'
   406  000F68  65                 	db	101	;'e'
   407  000F69  00                 	db	0
   408  000F6A                     STR_13:
   409  000F6A  46                 	db	70	;'F'
   410  000F6B  75                 	db	117	;'u'
   411  000F6C  65                 	db	101	;'e'
   412  000F6D  6C                 	db	108	;'l'
   413  000F6E  00                 	db	0
   414  000F6F                     STR_16:
   415  000F6F  41                 	db	65	;'A'
   416  000F70  75                 	db	117	;'u'
   417  000F71  74                 	db	116	;'t'
   418  000F72  6F                 	db	111	;'o'
   419  000F73  00                 	db	0
   420  000F74                     STR_7:
   421  000F74  42                 	db	66	;'B'
   422  000F75  69                 	db	105	;'i'
   423  000F76  61                 	db	97	;'a'
   424  000F77  73                 	db	115	;'s'
   425  000F78  00                 	db	0
   426  000F79                     STR_33:
   427  000F79  54                 	db	84	;'T'
   428  000F7A  65                 	db	101	;'e'
   429  000F7B  73                 	db	115	;'s'
   430  000F7C  74                 	db	116	;'t'
   431  000F7D  00                 	db	0
   432  000F7E                     STR_11:
   433  000F7E  45                 	db	69	;'E'
   434  000F7F  54                 	db	84	;'T'
   435  000F80  43                 	db	67	;'C'
   436  000F81  00                 	db	0
   437  000F82                     STR_1:
   438  000F82  4B                 	db	75	;'K'
   439  000F83  50                 	db	80	;'P'
   440  000F84  48                 	db	72	;'H'
   441  000F85  00                 	db	0
   442  000F86                     STR_5:
   443  000F86  52                 	db	82	;'R'
   444  000F87  50                 	db	80	;'P'
   445  000F88  4D                 	db	77	;'M'
   446  000F89  00                 	db	0
   447  000F8A                     STR_4:
   448  000F8A  4F                 	db	79	;'O'
   449  000F8B  69                 	db	105	;'i'
   450  000F8C  6C                 	db	108	;'l'
   451  000F8D  00                 	db	0
   452  000F8E                     STR_9:
   453  000F8E  54                 	db	84	;'T'
   454  000F8F  50                 	db	80	;'P'
   455  000F90  00                 	db	0
   456  000F91                     STR_8:
   457  000F91  25                 	db	37
   458  000F92  00                 	db	0
   459  000F93                     STR_19:
   460  000F93  2B                 	db	43
   461  000F94  00                 	db	0
   462  000F95                     STR_20:
   463  000F95  2D                 	db	45
   464  000F96  00                 	db	0
   465  000F97                     STR_21:
   466  000F97  2E                 	db	46
   467  000F98  00                 	db	0
   468  000F99                     STR_12:
   469  000F99  56                 	db	86	;'V'
   470  000F9A  00                 	db	0
   471  000F9B                     STR_36:
   472  000F9B  6B                 	db	107	;'k'
   473  000F9C  00                 	db	0
   474  0000                     
   475                           ; #config settings
   476  000F9D  00                 	db	0	; dummy byte at the end
   477  0000                     
   478                           	psect	cinit
   479  006540                     __pcinit:
   480                           	opt stack 0
   481  006540                     start_initialization:
   482                           	opt stack 0
   483  006540                     __initialization:
   484                           	opt stack 0
   485                           
   486                           ; Initialize objects allocated to BANK0 (22 bytes)
   487                           ; load TBLPTR registers with __pidataBANK0
   488  006540  0E44               	movlw	low __pidataBANK0
   489  006542  6EF6               	movwf	tblptrl,c
   490  006544  0E68               	movlw	high __pidataBANK0
   491  006546  6EF7               	movwf	tblptrh,c
   492  006548  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   493  00654A  6EF8               	movwf	tblptru,c
   494  00654C  EE00  F0D4         	lfsr	0,__pdataBANK0
   495  006550  EE10 F016          	lfsr	1,22
   496  006554                     copy_data0:
   497  006554  0009               	tblrd		*+
   498  006556  CFF5 FFEE          	movff	tablat,postinc0
   499  00655A  50E5               	movf	postdec1,w,c
   500  00655C  50E1               	movf	fsr1l,w,c
   501  00655E  E1FA               	bnz	copy_data0
   502                           
   503                           ; Clear objects allocated to BANK0 (35 bytes)
   504  006560  EE00  F0B1         	lfsr	0,__pbssBANK0
   505  006564  0E23               	movlw	35
   506  006566                     clear_0:
   507  006566  6AEE               	clrf	postinc0,c
   508  006568  06E8               	decf	wreg,f,c
   509  00656A  E1FD               	bnz	clear_0
   510                           
   511                           ; Clear objects allocated to COMRAM (13 bytes)
   512  00656C  EE00  F047         	lfsr	0,__pbssCOMRAM
   513  006570  0E0D               	movlw	13
   514  006572                     clear_1:
   515  006572  6AEE               	clrf	postinc0,c
   516  006574  06E8               	decf	wreg,f,c
   517  006576  E1FD               	bnz	clear_1
   518  006578                     end_of_initialization:
   519                           	opt stack 0
   520  006578                     __end_of__initialization:
   521                           	opt stack 0
   522  006578  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   523  00657A  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   524  00657C  0100               	movlb	0
   525  00657E  EF96  F016         	goto	_main	;jump to C main() function
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           postinc0	equ	0xFEE
   531                           wreg	equ	0xFE8
   532                           postdec1	equ	0xFE5
   533                           fsr1l	equ	0xFE1
   534                           
   535                           	psect	bssCOMRAM
   536  000047                     __pbssCOMRAM:
   537                           	opt stack 0
   538  000047                     _timer0ReloadVal:
   539                           	opt stack 0
   540  000047                     	ds	2
   541  000049                     _TMR0_InterruptHandler:
   542                           	opt stack 0
   543  000049                     	ds	2
   544  00004B                     _TMR1_InterruptHandler:
   545                           	opt stack 0
   546  00004B                     	ds	2
   547  00004D                     _timer1ReloadVal:
   548                           	opt stack 0
   549  00004D                     	ds	2
   550  00004F                     _cmd_offset:
   551                           	opt stack 0
   552  00004F                     	ds	2
   553  000051                     _dli:
   554                           	opt stack 0
   555  000051                     	ds	2
   556  000053                     _up_blink:
   557                           	opt stack 0
   558  000053                     	ds	1
   559                           tblptru	equ	0xFF8
   560                           tblptrh	equ	0xFF7
   561                           tblptrl	equ	0xFF6
   562                           tablat	equ	0xFF5
   563                           postinc0	equ	0xFEE
   564                           wreg	equ	0xFE8
   565                           postdec1	equ	0xFE5
   566                           fsr1l	equ	0xFE1
   567                           
   568                           	psect	bssBANK0
   569  0000B1                     __pbssBANK0:
   570                           	opt stack 0
   571  0000B1                     main@F12762:
   572                           	opt stack 0
   573  0000B1                     	ds	20
   574  0000C5                     _refresh_screen:
   575                           	opt stack 0
   576  0000C5                     	ds	1
   577  0000C6                     _canMessage:
   578                           	opt stack 0
   579  0000C6                     	ds	14
   580                           tblptru	equ	0xFF8
   581                           tblptrh	equ	0xFF7
   582                           tblptrl	equ	0xFF6
   583                           tablat	equ	0xFF5
   584                           postinc0	equ	0xFEE
   585                           wreg	equ	0xFE8
   586                           postdec1	equ	0xFE5
   587                           fsr1l	equ	0xFE1
   588                           
   589                           	psect	dataBANK0
   590  0000D4                     __pdataBANK0:
   591                           	opt stack 0
   592  0000D4                     main@F12754:
   593                           	opt stack 0
   594  0000D4                     	ds	22
   595                           tblptru	equ	0xFF8
   596                           tblptrh	equ	0xFF7
   597                           tblptrl	equ	0xFF6
   598                           tablat	equ	0xFF5
   599                           postinc0	equ	0xFEE
   600                           wreg	equ	0xFE8
   601                           postdec1	equ	0xFE5
   602                           fsr1l	equ	0xFE1
   603                           
   604                           	psect	cstackBANK0
   605  000060                     __pcstackBANK0:
   606                           	opt stack 0
   607  000060                     main@message:
   608                           	opt stack 0
   609                           
   610                           ; 20 bytes @ 0x0
   611  000060                     	ds	20
   612  000074                     main@gasP:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x14
   616  000074                     	ds	2
   617  000076                     main@timer_started:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x16
   621  000076                     	ds	1
   622  000077                     main@drs:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x17
   626  000077                     	ds	1
   627  000078                     main@oilP:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x18
   631  000078                     	ds	2
   632  00007A                     main@bias:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x1A
   636  00007A                     	ds	2
   637  00007C                     main@brake_p:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x1C
   641  00007C                     	ds	2
   642  00007E                     main@launch:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x1E
   646  00007E                     	ds	1
   647  00007F                     main@autoShift:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x1F
   651  00007F                     	ds	1
   652  000080                     main@clutch:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x20
   656  000080                     	ds	1
   657  000081                     main@BSPD_counter:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x21
   661  000081                     	ds	2
   662  000083                     main@radio:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x23
   666  000083                     	ds	1
   667  000084                     main@speed:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x24
   671  000084                     	ds	2
   672  000086                     main@gear:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x26
   676  000086                     	ds	2
   677  000088                     main@engTemp:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x28
   681  000088                     	ds	2
   682  00008A                     main@oilTemp:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x2A
   686  00008A                     	ds	2
   687  00008C                     main@battVolts:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x2C
   691  00008C                     	ds	2
   692  00008E                     main@fuelP:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x2E
   696  00008E                     	ds	2
   697  000090                     main@etc:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x30
   701  000090                     	ds	2
   702  000092                     main@fuel:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x32
   706  000092                     	ds	2
   707  000094                     main@bspd_flag:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0x34
   711  000094                     	ds	1
   712  000095                     main@bspd:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x35
   716  000095                     	ds	2
   717  000097                     main@rpm:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x37
   721  000097                     	ds	2
   722  000099                     main@tp:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x39
   726  000099                     	ds	2
   727  00009B                     main@lap_time:
   728                           	opt stack 0
   729                           
   730                           ; 22 bytes @ 0x3B
   731  00009B                     	ds	22
   732                           tblptru	equ	0xFF8
   733                           tblptrh	equ	0xFF7
   734                           tblptrl	equ	0xFF6
   735                           tablat	equ	0xFF5
   736                           postinc0	equ	0xFEE
   737                           wreg	equ	0xFE8
   738                           postdec1	equ	0xFE5
   739                           fsr1l	equ	0xFE1
   740                           
   741                           	psect	cstackCOMRAM
   742  000001                     __pcstackCOMRAM:
   743                           	opt stack 0
   744  000001                     ??_INTERRUPT_InterruptManager:
   745  000001                     
   746                           ; 1 bytes @ 0x0
   747  000001                     	ds	2
   748  000003                     ??_cmd_incrementn:
   749  000003                     ??_ECAN_Initialize:
   750  000003                     ??_wait2secs:
   751  000003                     ?_strlen:
   752                           	opt stack 0
   753  000003                     ?___wmul:
   754                           	opt stack 0
   755  000003                     ?___awdiv:
   756                           	opt stack 0
   757  000003                     ?_convertReg2ExtendedCANid:
   758                           	opt stack 0
   759  000003                     ?_convertReg2StandardCANid:
   760                           	opt stack 0
   761  000003                     ?___xxtofl:
   762                           	opt stack 0
   763  000003                     SPI_Exchange8bit@data:
   764                           	opt stack 0
   765  000003                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   766                           	opt stack 0
   767  000003                     convertReg2StandardCANid@tempRXBn_SIDL:
   768                           	opt stack 0
   769  000003                     TMR1_SetInterruptHandler@InterruptHandler:
   770                           	opt stack 0
   771  000003                     TMR0_SetInterruptHandler@InterruptHandler:
   772                           	opt stack 0
   773  000003                     ___wmul@multiplier:
   774                           	opt stack 0
   775  000003                     ___awdiv@dividend:
   776                           	opt stack 0
   777  000003                     strlen@s:
   778                           	opt stack 0
   779  000003                     ___xxtofl@val:
   780                           	opt stack 0
   781                           
   782                           ; 4 bytes @ 0x2
   783  000003                     	ds	1
   784  000004                     ?_rd16:
   785                           	opt stack 0
   786  000004                     host_command@command:
   787                           	opt stack 0
   788  000004                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   789                           	opt stack 0
   790  000004                     wr8@addr:
   791                           	opt stack 0
   792  000004                     wr16@addr:
   793                           	opt stack 0
   794  000004                     wr32@addr:
   795                           	opt stack 0
   796  000004                     rd16@addr:
   797                           	opt stack 0
   798                           
   799                           ; 4 bytes @ 0x3
   800  000004                     	ds	1
   801  000005                     ??_strlen:
   802  000005                     ??_TMR0_Initialize:
   803  000005                     ??_TMR1_Initialize:
   804  000005                     cmd_incrementn@n:
   805                           	opt stack 0
   806  000005                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   807                           	opt stack 0
   808  000005                     ___wmul@multiplicand:
   809                           	opt stack 0
   810  000005                     ___awdiv@divisor:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x4
   814  000005                     	ds	2
   815  000007                     ??_convertReg2ExtendedCANid:
   816  000007                     ??_convertReg2StandardCANid:
   817  000007                     ??___xxtofl:
   818  000007                     ___awdiv@counter:
   819                           	opt stack 0
   820  000007                     ___wmul@product:
   821                           	opt stack 0
   822  000007                     strlen@a:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x6
   826  000007                     	ds	1
   827  000008                     ??_rd16:
   828  000008                     wr8@value:
   829                           	opt stack 0
   830  000008                     ___awdiv@sign:
   831                           	opt stack 0
   832  000008                     wr16@value:
   833                           	opt stack 0
   834  000008                     wr32@value:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0x7
   838  000008                     	ds	1
   839  000009                     convertReg2StandardCANid@tempRXBn_SIDH:
   840                           	opt stack 0
   841  000009                     ___awdiv@quotient:
   842                           	opt stack 0
   843  000009                     wr8s@addr:
   844                           	opt stack 0
   845                           
   846                           ; 4 bytes @ 0x8
   847  000009                     	ds	1
   848  00000A                     rd16@temp:
   849                           	opt stack 0
   850  00000A                     convertReg2StandardCANid@returnValue:
   851                           	opt stack 0
   852                           
   853                           ; 4 bytes @ 0x9
   854  00000A                     	ds	1
   855  00000B                     ?___awmod:
   856                           	opt stack 0
   857  00000B                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   858                           	opt stack 0
   859  00000B                     ___xxtofl@sign:
   860                           	opt stack 0
   861  00000B                     ___awmod@dividend:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0xA
   865  00000B                     	ds	1
   866  00000C                     ??_wr32:
   867  00000C                     ___xxtofl@exp:
   868                           	opt stack 0
   869  00000C                     convertReg2ExtendedCANid@returnValue:
   870                           	opt stack 0
   871                           
   872                           ; 4 bytes @ 0xB
   873  00000C                     	ds	1
   874  00000D                     wr8s@s:
   875                           	opt stack 0
   876  00000D                     ___awmod@divisor:
   877                           	opt stack 0
   878  00000D                     ___xxtofl@arg:
   879                           	opt stack 0
   880                           
   881                           ; 4 bytes @ 0xC
   882  00000D                     	ds	1
   883  00000E                     convertReg2StandardCANid@ConvertedID:
   884                           	opt stack 0
   885                           
   886                           ; 4 bytes @ 0xD
   887  00000E                     	ds	1
   888  00000F                     ??_wr8s:
   889  00000F                     ___awmod@counter:
   890                           	opt stack 0
   891                           
   892                           ; 1 bytes @ 0xE
   893  00000F                     	ds	1
   894  000010                     ??_FT800_Init:
   895  000010                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   896                           	opt stack 0
   897  000010                     ___awmod@sign:
   898                           	opt stack 0
   899                           
   900                           ; 1 bytes @ 0xF
   901  000010                     	ds	1
   902  000011                     wr8s@l:
   903                           	opt stack 0
   904  000011                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   905                           	opt stack 0
   906  000011                     cmd@command:
   907                           	opt stack 0
   908  000011                     ___flge@ff1:
   909                           	opt stack 0
   910                           
   911                           ; 4 bytes @ 0x10
   912  000011                     	ds	1
   913  000012                     wr8s@i:
   914                           	opt stack 0
   915  000012                     convertReg2ExtendedCANid@ConvertedID:
   916                           	opt stack 0
   917                           
   918                           ; 4 bytes @ 0x11
   919  000012                     	ds	3
   920  000015                     ??_cmd:
   921  000015                     ___flge@ff2:
   922                           	opt stack 0
   923                           
   924                           ; 4 bytes @ 0x14
   925  000015                     	ds	1
   926  000016                     CAN_receive@tempCanMsg:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x15
   930  000016                     	ds	2
   931  000018                     CAN_receive@returnValue:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x17
   935  000018                     	ds	1
   936  000019                     ??_display_labels:
   937  000019                     ??___flge:
   938  000019                     display_status@autoShift:
   939                           	opt stack 0
   940  000019                     display_laptime@current_int:
   941                           	opt stack 0
   942  000019                     display_waterTemp@temp:
   943                           	opt stack 0
   944  000019                     display_oilTemp@temp:
   945                           	opt stack 0
   946  000019                     display_bspd@bspd:
   947                           	opt stack 0
   948  000019                     display_battery@volts:
   949                           	opt stack 0
   950  000019                     display_fuel_level@fuel:
   951                           	opt stack 0
   952  000019                     display_tp@tp:
   953                           	opt stack 0
   954  000019                     display_etc@etc:
   955                           	opt stack 0
   956  000019                     display_speed@speed:
   957                           	opt stack 0
   958  000019                     display_brake_bias@bias:
   959                           	opt stack 0
   960  000019                     display_rpm@rpm:
   961                           	opt stack 0
   962  000019                     display_gear@gear:
   963                           	opt stack 0
   964                           
   965                           ; 2 bytes @ 0x18
   966  000019                     	ds	1
   967  00001A                     display_status@clutch:
   968                           	opt stack 0
   969                           
   970                           ; 1 bytes @ 0x19
   971  00001A                     	ds	1
   972  00001B                     ??_display_rpm:
   973  00001B                     ??_display_speed:
   974  00001B                     ??_display_waterTemp:
   975  00001B                     ??_display_oilTemp:
   976  00001B                     ??_display_etc:
   977  00001B                     ??_display_gear:
   978  00001B                     ??_display_fuel_level:
   979  00001B                     ??_display_bspd:
   980  00001B                     ??_display_battery:
   981  00001B                     ??_display_tp:
   982  00001B                     ??_display_brake_bias:
   983  00001B                     display_status@radio:
   984                           	opt stack 0
   985  00001B                     display_laptime@current_dec:
   986                           	opt stack 0
   987                           
   988                           ; 2 bytes @ 0x1A
   989  00001B                     	ds	1
   990  00001C                     ??_display_status:
   991                           
   992                           ; 1 bytes @ 0x1B
   993  00001C                     	ds	1
   994  00001D                     display_laptime@best_int:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0x1C
   998  00001D                     	ds	2
   999  00001F                     display_bottom_section@volts:
  1000                           	opt stack 0
  1001  00001F                     display_laptime@best_dec:
  1002                           	opt stack 0
  1003                           
  1004                           ; 2 bytes @ 0x1E
  1005  00001F                     	ds	1
  1006  000020                     display_status@launch:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x1F
  1010  000020                     	ds	1
  1011  000021                     display_bottom_section@tp:
  1012                           	opt stack 0
  1013  000021                     display_laptime@last_int:
  1014                           	opt stack 0
  1015                           
  1016                           ; 2 bytes @ 0x20
  1017  000021                     	ds	2
  1018  000023                     display_laptime@last_dec:
  1019                           	opt stack 0
  1020  000023                     display_rpm@first_digit:
  1021                           	opt stack 0
  1022                           
  1023                           ; 2 bytes @ 0x22
  1024  000023                     	ds	2
  1025  000025                     display_laptime@lap:
  1026                           	opt stack 0
  1027  000025                     display_rpm@second_digit:
  1028                           	opt stack 0
  1029                           
  1030                           ; 2 bytes @ 0x24
  1031  000025                     	ds	2
  1032  000027                     display_laptime@best_lap:
  1033                           	opt stack 0
  1034  000027                     display_rpm@diff:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x26
  1038  000027                     	ds	2
  1039  000029                     ??_display_laptime:
  1040  000029                     display_rpm@n:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x28
  1044  000029                     	ds	2
  1045  00002B                     display_rpm@i:
  1046                           	opt stack 0
  1047                           
  1048                           ; 2 bytes @ 0x2A
  1049  00002B                     	ds	2
  1050  00002D                     display@rpm:
  1051                           	opt stack 0
  1052  00002D                     display_laptime@time_difference_decimal:
  1053                           	opt stack 0
  1054                           
  1055                           ; 2 bytes @ 0x2C
  1056  00002D                     	ds	2
  1057  00002F                     display@oilP:
  1058                           	opt stack 0
  1059  00002F                     display_laptime@time_difference_integer:
  1060                           	opt stack 0
  1061                           
  1062                           ; 2 bytes @ 0x2E
  1063  00002F                     	ds	2
  1064  000031                     display@gasPres:
  1065                           	opt stack 0
  1066                           
  1067                           ; 2 bytes @ 0x30
  1068  000031                     	ds	2
  1069  000033                     display@fuel:
  1070                           	opt stack 0
  1071                           
  1072                           ; 2 bytes @ 0x32
  1073  000033                     	ds	2
  1074  000035                     display@tp:
  1075                           	opt stack 0
  1076                           
  1077                           ; 2 bytes @ 0x34
  1078  000035                     	ds	2
  1079  000037                     display@bspd:
  1080                           	opt stack 0
  1081                           
  1082                           ; 2 bytes @ 0x36
  1083  000037                     	ds	2
  1084  000039                     display@etc:
  1085                           	opt stack 0
  1086                           
  1087                           ; 2 bytes @ 0x38
  1088  000039                     	ds	2
  1089  00003B                     display@speed:
  1090                           	opt stack 0
  1091                           
  1092                           ; 2 bytes @ 0x3A
  1093  00003B                     	ds	2
  1094  00003D                     display@gear:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0x3C
  1098  00003D                     	ds	2
  1099  00003F                     display@engTemp:
  1100                           	opt stack 0
  1101                           
  1102                           ; 2 bytes @ 0x3E
  1103  00003F                     	ds	2
  1104  000041                     display@oilTemp:
  1105                           	opt stack 0
  1106                           
  1107                           ; 2 bytes @ 0x40
  1108  000041                     	ds	2
  1109  000043                     display@battVolts:
  1110                           	opt stack 0
  1111                           
  1112                           ; 2 bytes @ 0x42
  1113  000043                     	ds	2
  1114  000045                     ??_main:
  1115                           
  1116                           ; 1 bytes @ 0x44
  1117  000045                     	ds	2
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           postinc0	equ	0xFEE
  1123                           wreg	equ	0xFE8
  1124                           postdec1	equ	0xFE5
  1125                           fsr1l	equ	0xFE1
  1126                           
  1127 ;;
  1128 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1129 ;;
  1130 ;; *************** function _main *****************
  1131 ;; Defined at:
  1132 ;;		line 42 in file "main.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  lap_time       22   59[BANK0 ] struct .
  1137 ;;  message        20    0[BANK0 ] unsigned char [20]
  1138 ;;  tp              2   57[BANK0 ] int 
  1139 ;;  rpm             2   55[BANK0 ] int 
  1140 ;;  bspd            2   53[BANK0 ] int 
  1141 ;;  fuel            2   50[BANK0 ] int 
  1142 ;;  etc             2   48[BANK0 ] int 
  1143 ;;  fuelP           2   46[BANK0 ] int 
  1144 ;;  battVolts       2   44[BANK0 ] int 
  1145 ;;  oilTemp         2   42[BANK0 ] int 
  1146 ;;  engTemp         2   40[BANK0 ] int 
  1147 ;;  gear            2   38[BANK0 ] int 
  1148 ;;  speed           2   36[BANK0 ] int 
  1149 ;;  BSPD_counter    2   33[BANK0 ] int 
  1150 ;;  brake_p         2   28[BANK0 ] int 
  1151 ;;  bias            2   26[BANK0 ] int 
  1152 ;;  oilP            2   24[BANK0 ] int 
  1153 ;;  gasP            2   20[BANK0 ] int 
  1154 ;;  bspd_flag       1   52[BANK0 ] _Bool 
  1155 ;;  radio           1   35[BANK0 ] _Bool 
  1156 ;;  clutch          1   32[BANK0 ] _Bool 
  1157 ;;  autoShift       1   31[BANK0 ] _Bool 
  1158 ;;  launch          1   30[BANK0 ] _Bool 
  1159 ;;  drs             1   23[BANK0 ] _Bool 
  1160 ;;  timer_starte    1   22[BANK0 ] _Bool 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1171 ;;      Locals:         0      81       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1173 ;;      Totals:         2      81       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1174 ;;Total ram usage:       83 bytes
  1175 ;; Hardware stack levels required when called:   10
  1176 ;; This function calls:
  1177 ;;		_CAN_receive
  1178 ;;		_FT800_Init
  1179 ;;		_SYSTEM_Initialize
  1180 ;;		_TMR0_StopTimer
  1181 ;;		_TMR1_Reload
  1182 ;;		_TMR1_SetInterruptHandler
  1183 ;;		___awdiv
  1184 ;;		___awmod
  1185 ;;		___flge
  1186 ;;		___xxtofl
  1187 ;;		_display
  1188 ;;		_display_bottom_section
  1189 ;;		_display_brake_bias
  1190 ;;		_display_bspd
  1191 ;;		_display_end
  1192 ;;		_display_etc
  1193 ;;		_display_fuel_level
  1194 ;;		_display_gear
  1195 ;;		_display_grids
  1196 ;;		_display_labels
  1197 ;;		_display_laptime
  1198 ;;		_display_oilTemp
  1199 ;;		_display_rpm
  1200 ;;		_display_speed
  1201 ;;		_display_start
  1202 ;;		_display_status
  1203 ;;		_display_waterTemp
  1204 ;;		_wait2secs
  1205 ;; This function is called by:
  1206 ;;		Startup code after reset
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text0
  1211  002D2C                     __ptext0:
  1212                           	opt stack 0
  1213  002D2C                     _main:
  1214                           	opt stack 21
  1215                           
  1216                           ;main.c: 43:     Lap_time lap_time= {0,1,0,0,0,0,0,0,0,0,0};
  1217                           
  1218                           ;incstack = 0
  1219  002D2C  EE20  F0D4         	lfsr	2,main@F12754
  1220  002D30  EE10  F09B         	lfsr	1,main@lap_time
  1221  002D34  0E15               	movlw	21
  1222  002D36                     u1891:
  1223  002D36  CFDB FFE3          	movff	plusw2,plusw1
  1224  002D3A  06E8               	decf	wreg,f,c
  1225  002D3C  E2FC               	bc	u1891
  1226                           
  1227                           ;main.c: 44:     _Bool timer_started = 0;
  1228  002D3E  0E00               	movlw	0
  1229  002D40  0100               	movlb	0	; () banked
  1230  002D42  6F76               	movwf	main@timer_started& (0+255),b
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;main.c: 45:     _Bool launch, autoShift, clutch, drs, radio = 0;
  1234  002D44  0E00               	movlw	0
  1235  002D46  6F83               	movwf	main@radio& (0+255),b
  1236                           
  1237                           ;main.c: 46:     char message[20] = {'\0'};
  1238  002D48  EE20  F0B1         	lfsr	2,main@F12762
  1239  002D4C  EE10  F060         	lfsr	1,main@message
  1240  002D50  0E13               	movlw	19
  1241  002D52                     u1901:
  1242  002D52  CFDB FFE3          	movff	plusw2,plusw1
  1243  002D56  06E8               	decf	wreg,f,c
  1244  002D58  E2FC               	bc	u1901
  1245                           
  1246                           ; BSR set to: 0
  1247                           ;main.c: 47:     int rpm = 0, oilP = 0, fuel = 0, tp = 0, speed = 0, gear = 0, engTemp =
      +                           0, oilTemp = 0, battVolts = 0, bias = 0;
  1248  002D5A  0E00               	movlw	0
  1249  002D5C  6F98               	movwf	(main@rpm+1)& (0+255),b
  1250  002D5E  0E00               	movlw	0
  1251  002D60  6F97               	movwf	main@rpm& (0+255),b
  1252                           
  1253                           ; BSR set to: 0
  1254  002D62  0E00               	movlw	0
  1255  002D64  6F79               	movwf	(main@oilP+1)& (0+255),b
  1256  002D66  0E00               	movlw	0
  1257  002D68  6F78               	movwf	main@oilP& (0+255),b
  1258                           
  1259                           ; BSR set to: 0
  1260  002D6A  0E00               	movlw	0
  1261  002D6C  6F93               	movwf	(main@fuel+1)& (0+255),b
  1262  002D6E  0E00               	movlw	0
  1263  002D70  6F92               	movwf	main@fuel& (0+255),b
  1264                           
  1265                           ; BSR set to: 0
  1266  002D72  0E00               	movlw	0
  1267  002D74  6F9A               	movwf	(main@tp+1)& (0+255),b
  1268  002D76  0E00               	movlw	0
  1269  002D78  6F99               	movwf	main@tp& (0+255),b
  1270                           
  1271                           ; BSR set to: 0
  1272  002D7A  0E00               	movlw	0
  1273  002D7C  6F85               	movwf	(main@speed+1)& (0+255),b
  1274  002D7E  0E00               	movlw	0
  1275  002D80  6F84               	movwf	main@speed& (0+255),b
  1276                           
  1277                           ; BSR set to: 0
  1278  002D82  0E00               	movlw	0
  1279  002D84  6F87               	movwf	(main@gear+1)& (0+255),b
  1280  002D86  0E00               	movlw	0
  1281  002D88  6F86               	movwf	main@gear& (0+255),b
  1282                           
  1283                           ; BSR set to: 0
  1284  002D8A  0E00               	movlw	0
  1285  002D8C  6F89               	movwf	(main@engTemp+1)& (0+255),b
  1286  002D8E  0E00               	movlw	0
  1287  002D90  6F88               	movwf	main@engTemp& (0+255),b
  1288                           
  1289                           ; BSR set to: 0
  1290  002D92  0E00               	movlw	0
  1291  002D94  6F8B               	movwf	(main@oilTemp+1)& (0+255),b
  1292  002D96  0E00               	movlw	0
  1293  002D98  6F8A               	movwf	main@oilTemp& (0+255),b
  1294                           
  1295                           ; BSR set to: 0
  1296  002D9A  0E00               	movlw	0
  1297  002D9C  6F8D               	movwf	(main@battVolts+1)& (0+255),b
  1298  002D9E  0E00               	movlw	0
  1299  002DA0  6F8C               	movwf	main@battVolts& (0+255),b
  1300                           
  1301                           ; BSR set to: 0
  1302  002DA2  0E00               	movlw	0
  1303  002DA4  6F7B               	movwf	(main@bias+1)& (0+255),b
  1304  002DA6  0E00               	movlw	0
  1305  002DA8  6F7A               	movwf	main@bias& (0+255),b
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;main.c: 48:     int gasP = 0;
  1309  002DAA  0E00               	movlw	0
  1310  002DAC  6F75               	movwf	(main@gasP+1)& (0+255),b
  1311  002DAE  0E00               	movlw	0
  1312  002DB0  6F74               	movwf	main@gasP& (0+255),b
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;main.c: 49:     int fuelP = 0;
  1316  002DB2  0E00               	movlw	0
  1317  002DB4  6F8F               	movwf	(main@fuelP+1)& (0+255),b
  1318  002DB6  0E00               	movlw	0
  1319  002DB8  6F8E               	movwf	main@fuelP& (0+255),b
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;main.c: 50:     int etc = 0;
  1323  002DBA  0E00               	movlw	0
  1324  002DBC  6F91               	movwf	(main@etc+1)& (0+255),b
  1325  002DBE  0E00               	movlw	0
  1326  002DC0  6F90               	movwf	main@etc& (0+255),b
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;main.c: 51:     int BSPD_counter = 0;
  1330  002DC2  0E00               	movlw	0
  1331  002DC4  6F82               	movwf	(main@BSPD_counter+1)& (0+255),b
  1332  002DC6  0E00               	movlw	0
  1333  002DC8  6F81               	movwf	main@BSPD_counter& (0+255),b
  1334                           
  1335                           ; BSR set to: 0
  1336                           ;main.c: 52:     int bspd = 0;
  1337  002DCA  0E00               	movlw	0
  1338  002DCC  6F96               	movwf	(main@bspd+1)& (0+255),b
  1339  002DCE  0E00               	movlw	0
  1340  002DD0  6F95               	movwf	main@bspd& (0+255),b
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;main.c: 53:     int brake_p = 0;
  1344  002DD2  0E00               	movlw	0
  1345  002DD4  6F7D               	movwf	(main@brake_p+1)& (0+255),b
  1346  002DD6  0E00               	movlw	0
  1347  002DD8  6F7C               	movwf	main@brake_p& (0+255),b
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;main.c: 54:     _Bool bspd_flag = 0;
  1351  002DDA  0E00               	movlw	0
  1352  002DDC  6F94               	movwf	main@bspd_flag& (0+255),b
  1353                           
  1354                           ; BSR set to: 0
  1355                           ;main.c: 55:     wait2secs();
  1356  002DDE  EC08  F034         	call	_wait2secs	;wreg free
  1357                           
  1358                           ;main.c: 58:     SYSTEM_Initialize();
  1359  002DE2  ECDC  F033         	call	_SYSTEM_Initialize	;wreg free
  1360                           
  1361                           ;main.c: 61:     CIOCONbits.CLKSEL = 1;
  1362  002DE6  8070               	bsf	3952,0,c	;volatile
  1363                           
  1364                           ;main.c: 62:     CIOCONbits.ENDRHI = 1;
  1365  002DE8  8A70               	bsf	3952,5,c	;volatile
  1366                           
  1367                           ;main.c: 63:     CIOCONbits.TX2SRC = 0;
  1368  002DEA  9E70               	bcf	3952,7,c	;volatile
  1369                           
  1370                           ;main.c: 64:     CIOCONbits.TX2EN = 1;
  1371  002DEC  8C70               	bsf	3952,6,c	;volatile
  1372                           
  1373                           ;main.c: 65:     RXB0CONbits.RXM0 = 1;
  1374  002DEE  8A60               	bsf	3936,5,c	;volatile
  1375                           
  1376                           ;main.c: 66:     RXB0CONbits.RXM1 = 0;
  1377  002DF0  9C60               	bcf	3936,6,c	;volatile
  1378                           
  1379                           ;main.c: 67:     RXB0CONbits.RB0DBEN = 0;
  1380  002DF2  9460               	bcf	3936,2,c	;volatile
  1381                           
  1382                           ;main.c: 68:     PIE5bits.RXB0IE = 0;
  1383  002DF4  9076               	bcf	3958,0,c	;volatile
  1384                           
  1385                           ;main.c: 69:     PIE5bits.RXB1IE = 0;
  1386  002DF6  9276               	bcf	3958,1,c	;volatile
  1387                           
  1388                           ;main.c: 70:     PIR5bits.ERRIF = 0;
  1389  002DF8  9A77               	bcf	3959,5,c	;volatile
  1390                           
  1391                           ;main.c: 71:     PIR5bits.WAKIF = 0;
  1392  002DFA  9C77               	bcf	3959,6,c	;volatile
  1393                           
  1394                           ;main.c: 79:     RXF2SIDH = 0xC8;
  1395  002DFC  0EC8               	movlw	200
  1396  002DFE  010E               	movlb	14	; () banked
  1397  002E00  6FE8               	movwf	232,b	;volatile
  1398                           
  1399                           ; BSR set to: 14
  1400                           ;main.c: 80:     RXF2SIDL = 0x40;
  1401  002E02  0E40               	movlw	64
  1402  002E04  6FE9               	movwf	233,b	;volatile
  1403                           
  1404                           ; BSR set to: 14
  1405                           ;main.c: 81:     RXM0SIDH = 0xFE;
  1406  002E06  0EFE               	movlw	254
  1407  002E08  6FF8               	movwf	248,b	;volatile
  1408                           
  1409                           ; BSR set to: 14
  1410                           ;main.c: 82:     RXM0SIDL = 0b00011111;
  1411  002E0A  0E1F               	movlw	31
  1412  002E0C  6FF9               	movwf	249,b	;volatile
  1413                           
  1414                           ; BSR set to: 14
  1415                           ;main.c: 83:     RXM1SIDH = 0xFE;
  1416  002E0E  0EFE               	movlw	254
  1417  002E10  6FFC               	movwf	252,b	;volatile
  1418                           
  1419                           ; BSR set to: 14
  1420                           ;main.c: 84:     RXM1SIDL = 0x00011111;
  1421  002E12  0E11               	movlw	17
  1422  002E14  6FFD               	movwf	253,b	;volatile
  1423                           
  1424                           ; BSR set to: 14
  1425                           ;main.c: 87:     SSPSTATbits.SMP = 0;
  1426  002E16  9EC7               	bcf	4039,7,c	;volatile
  1427                           
  1428                           ; BSR set to: 14
  1429                           ;main.c: 88:     SSPSTATbits.CKE = 1;
  1430  002E18  8CC7               	bsf	4039,6,c	;volatile
  1431                           
  1432                           ; BSR set to: 14
  1433                           ;main.c: 89:     SSPCON1bits.SSPEN = 1;
  1434  002E1A  8AC6               	bsf	4038,5,c	;volatile
  1435                           
  1436                           ; BSR set to: 14
  1437                           ;main.c: 90:     SSPCON1bits.CKP = 1;
  1438  002E1C  88C6               	bsf	4038,4,c	;volatile
  1439                           
  1440                           ; BSR set to: 14
  1441                           ;main.c: 91:     SSPCON1bits.SSPM = 0b0010;
  1442  002E1E  50C6               	movf	4038,w,c	;volatile
  1443  002E20  0BF0               	andlw	-16
  1444  002E22  0902               	iorlw	2
  1445  002E24  6EC6               	movwf	4038,c	;volatile
  1446                           
  1447                           ; BSR set to: 14
  1448                           ;main.c: 92:     FT800_Init();
  1449  002E26  EC26  F028         	call	_FT800_Init	;wreg free
  1450                           
  1451                           ;main.c: 94:     wait2secs();
  1452  002E2A  EC08  F034         	call	_wait2secs	;wreg free
  1453                           
  1454                           ;main.c: 95:     SSPCON1bits.SSPM = 0b0001;
  1455  002E2E  50C6               	movf	4038,w,c	;volatile
  1456  002E30  0BF0               	andlw	-16
  1457  002E32  0901               	iorlw	1
  1458  002E34  6EC6               	movwf	4038,c	;volatile
  1459                           
  1460                           ;main.c: 104:     display(rpm, oilP, fuelP, fuel, tp, bspd, etc, speed, gear, engTemp, o
      +                          ilTemp, battVolts);
  1461  002E36  C097  F02D         	movff	main@rpm,display@rpm
  1462  002E3A  C098  F02E         	movff	main@rpm+1,display@rpm+1
  1463  002E3E  C078  F02F         	movff	main@oilP,display@oilP
  1464  002E42  C079  F030         	movff	main@oilP+1,display@oilP+1
  1465  002E46  C08E  F031         	movff	main@fuelP,display@gasPres
  1466  002E4A  C08F  F032         	movff	main@fuelP+1,display@gasPres+1
  1467  002E4E  C092  F033         	movff	main@fuel,display@fuel
  1468  002E52  C093  F034         	movff	main@fuel+1,display@fuel+1
  1469  002E56  C099  F035         	movff	main@tp,display@tp
  1470  002E5A  C09A  F036         	movff	main@tp+1,display@tp+1
  1471  002E5E  C095  F037         	movff	main@bspd,display@bspd
  1472  002E62  C096  F038         	movff	main@bspd+1,display@bspd+1
  1473  002E66  C090  F039         	movff	main@etc,display@etc
  1474  002E6A  C091  F03A         	movff	main@etc+1,display@etc+1
  1475  002E6E  C084  F03B         	movff	main@speed,display@speed
  1476  002E72  C085  F03C         	movff	main@speed+1,display@speed+1
  1477  002E76  C086  F03D         	movff	main@gear,display@gear
  1478  002E7A  C087  F03E         	movff	main@gear+1,display@gear+1
  1479  002E7E  C088  F03F         	movff	main@engTemp,display@engTemp
  1480  002E82  C089  F040         	movff	main@engTemp+1,display@engTemp+1
  1481  002E86  C08A  F041         	movff	main@oilTemp,display@oilTemp
  1482  002E8A  C08B  F042         	movff	main@oilTemp+1,display@oilTemp+1
  1483  002E8E  C08C  F043         	movff	main@battVolts,display@battVolts
  1484  002E92  C08D  F044         	movff	main@battVolts+1,display@battVolts+1
  1485  002E96  EC10  F031         	call	_display	;wreg free
  1486                           
  1487                           ;main.c: 107:     TMR1_SetInterruptHandler(&refresh);
  1488  002E9A  0EB8               	movlw	low _refresh
  1489  002E9C  6E03               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  1490  002E9E  0E68               	movlw	high _refresh
  1491  002EA0  6E04               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  1492  002EA2  EC52  F034         	call	_TMR1_SetInterruptHandler	;wreg free
  1493                           
  1494                           ;main.c: 109:     TMR0_StopTimer();
  1495  002EA6  EC60  F034         	call	_TMR0_StopTimer	;wreg free
  1496                           
  1497                           ;main.c: 110:     (INTCONbits.GIE = 1);
  1498  002EAA  8EF2               	bsf	intcon,7,c	;volatile
  1499                           
  1500                           ;main.c: 111:     (INTCONbits.PEIE = 1);
  1501  002EAC  8CF2               	bsf	intcon,6,c	;volatile
  1502  002EAE                     
  1503                           ;main.c: 114:         if (CAN_receive(&canMessage)) {
  1504  002EAE  0EC6               	movlw	low _canMessage
  1505  002EB0  6E16               	movwf	CAN_receive@tempCanMsg,c
  1506  002EB2  0E00               	movlw	high _canMessage
  1507  002EB4  6E17               	movwf	CAN_receive@tempCanMsg+1,c
  1508  002EB6  ECDF  F02A         	call	_CAN_receive	;wreg free
  1509  002EBA  0900               	iorlw	0
  1510  002EBC  B4D8               	btfsc	status,2,c
  1511  002EBE  D142               	goto	l866
  1512                           
  1513                           ;main.c: 115:             if (canMessage.frame.id == 0x640) {
  1514  002EC0  0E40               	movlw	64
  1515  002EC2  0100               	movlb	0	; () banked
  1516  002EC4  19C7               	xorwf	(_canMessage+1)& (0+255),w,b
  1517  002EC6  E139               	bnz	l4605
  1518  002EC8  0E06               	movlw	6
  1519  002ECA  19C8               	xorwf	(_canMessage+2)& (0+255),w,b
  1520  002ECC  11C9               	iorwf	(_canMessage+3)& (0+255),w,b
  1521  002ECE  11CA               	iorwf	(_canMessage+4)& (0+255),w,b
  1522  002ED0  A4D8               	btfss	status,2,c
  1523  002ED2  D033               	goto	l857
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;main.c: 116:                 rpm = ((canMessage.frame.data0 << 8) | canMessage.frame.da
      +                          ta1);
  1527  002ED4  51CD               	movf	(_canMessage+7)& (0+255),w,b
  1528  002ED6  C0CC  F045         	movff	_canMessage+6,??_main
  1529  002EDA  6A46               	clrf	(??_main+1)& (0+255),c
  1530  002EDC  C045  F046         	movff	??_main,??_main+1
  1531  002EE0  6A45               	clrf	??_main,c
  1532  002EE2  1045               	iorwf	??_main,w,c
  1533  002EE4  6F97               	movwf	main@rpm& (0+255),b
  1534  002EE6  5046               	movf	??_main+1,w,c
  1535  002EE8  6F98               	movwf	(main@rpm+1)& (0+255),b
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;main.c: 117:                 oilP = ((canMessage.frame.data2 << 8) | canMessage.frame.d
      +                          ata3) / 10;
  1539  002EEA  51CF               	movf	(_canMessage+9)& (0+255),w,b
  1540  002EEC  C0CE  F045         	movff	_canMessage+8,??_main
  1541  002EF0  6A46               	clrf	(??_main+1)& (0+255),c
  1542  002EF2  C045  F046         	movff	??_main,??_main+1
  1543  002EF6  6A45               	clrf	??_main,c
  1544  002EF8  1045               	iorwf	??_main,w,c
  1545  002EFA  6E03               	movwf	___awdiv@dividend,c
  1546  002EFC  5046               	movf	??_main+1,w,c
  1547  002EFE  6E04               	movwf	___awdiv@dividend+1,c
  1548  002F00  0E00               	movlw	0
  1549  002F02  6E06               	movwf	___awdiv@divisor+1,c
  1550  002F04  0E0A               	movlw	10
  1551  002F06  6E05               	movwf	___awdiv@divisor,c
  1552  002F08  EC96  F031         	call	___awdiv	;wreg free
  1553  002F0C  C003  F078         	movff	?___awdiv,main@oilP
  1554  002F10  C004  F079         	movff	?___awdiv+1,main@oilP+1
  1555                           
  1556                           ;main.c: 118:                 fuelP = ((canMessage.frame.data4 << 8) | canMessage.frame.
      +                          data5);
  1557  002F14  0100               	movlb	0	; () banked
  1558  002F16  51D1               	movf	(_canMessage+11)& (0+255),w,b
  1559  002F18  C0D0  F045         	movff	_canMessage+10,??_main
  1560  002F1C  6A46               	clrf	(??_main+1)& (0+255),c
  1561  002F1E  C045  F046         	movff	??_main,??_main+1
  1562  002F22  6A45               	clrf	??_main,c
  1563  002F24  1045               	iorwf	??_main,w,c
  1564  002F26  6F8E               	movwf	main@fuelP& (0+255),b
  1565  002F28  5046               	movf	??_main+1,w,c
  1566  002F2A  6F8F               	movwf	(main@fuelP+1)& (0+255),b
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;main.c: 119:                 tp = canMessage.frame.data6;
  1570  002F2C  C0D2  F099         	movff	_canMessage+12,main@tp
  1571  002F30  6B9A               	clrf	(main@tp+1)& (0+255),b
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;main.c: 120:                 speed = canMessage.frame.data7;
  1575  002F32  C0D3  F084         	movff	_canMessage+13,main@speed
  1576  002F36  6B85               	clrf	(main@speed+1)& (0+255),b
  1577                           
  1578                           ;main.c: 121:             } else if (canMessage.frame.id == 0x641) {
  1579  002F38  D105               	goto	l866
  1580  002F3A                     l857:
  1581  002F3A                     l4605:
  1582                           
  1583                           ; BSR set to: 0
  1584  002F3A  0E41               	movlw	65
  1585  002F3C  19C7               	xorwf	(_canMessage+1)& (0+255),w,b
  1586  002F3E  E123               	bnz	l4613
  1587  002F40  0E06               	movlw	6
  1588  002F42  19C8               	xorwf	(_canMessage+2)& (0+255),w,b
  1589  002F44  11C9               	iorwf	(_canMessage+3)& (0+255),w,b
  1590  002F46  11CA               	iorwf	(_canMessage+4)& (0+255),w,b
  1591  002F48  A4D8               	btfss	status,2,c
  1592  002F4A  D01D               	goto	l859
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;main.c: 122:                 brake_p = ((canMessage.frame.data0 << 8) | canMessage.fram
      +                          e.data1) / 10;
  1596  002F4C  51CD               	movf	(_canMessage+7)& (0+255),w,b
  1597  002F4E  C0CC  F045         	movff	_canMessage+6,??_main
  1598  002F52  6A46               	clrf	(??_main+1)& (0+255),c
  1599  002F54  C045  F046         	movff	??_main,??_main+1
  1600  002F58  6A45               	clrf	??_main,c
  1601  002F5A  1045               	iorwf	??_main,w,c
  1602  002F5C  6E03               	movwf	___awdiv@dividend,c
  1603  002F5E  5046               	movf	??_main+1,w,c
  1604  002F60  6E04               	movwf	___awdiv@dividend+1,c
  1605  002F62  0E00               	movlw	0
  1606  002F64  6E06               	movwf	___awdiv@divisor+1,c
  1607  002F66  0E0A               	movlw	10
  1608  002F68  6E05               	movwf	___awdiv@divisor,c
  1609  002F6A  EC96  F031         	call	___awdiv	;wreg free
  1610  002F6E  C003  F07C         	movff	?___awdiv,main@brake_p
  1611  002F72  C004  F07D         	movff	?___awdiv+1,main@brake_p+1
  1612                           
  1613                           ;main.c: 123:                 gear = canMessage.frame.data6;
  1614  002F76  C0D2  F086         	movff	_canMessage+12,main@gear
  1615  002F7A  0100               	movlb	0	; () banked
  1616  002F7C  6B87               	clrf	(main@gear+1)& (0+255),b
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;main.c: 124:                 bias = canMessage.frame.data7;
  1620  002F7E  C0D3  F07A         	movff	_canMessage+13,main@bias
  1621  002F82  6B7B               	clrf	(main@bias+1)& (0+255),b
  1622                           
  1623                           ;main.c: 125:             } else if (canMessage.frame.id == 0x642) {
  1624  002F84  D0DF               	goto	l866
  1625  002F86                     l859:
  1626  002F86                     l4613:
  1627                           
  1628                           ; BSR set to: 0
  1629  002F86  0E42               	movlw	66
  1630  002F88  19C7               	xorwf	(_canMessage+1)& (0+255),w,b
  1631  002F8A  E110               	bnz	l4617
  1632  002F8C  0E06               	movlw	6
  1633  002F8E  19C8               	xorwf	(_canMessage+2)& (0+255),w,b
  1634  002F90  11C9               	iorwf	(_canMessage+3)& (0+255),w,b
  1635  002F92  11CA               	iorwf	(_canMessage+4)& (0+255),w,b
  1636  002F94  A4D8               	btfss	status,2,c
  1637  002F96  D00A               	goto	l861
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;main.c: 126:                 engTemp = canMessage.frame.data0;
  1641  002F98  C0CC  F088         	movff	_canMessage+6,main@engTemp
  1642  002F9C  6B89               	clrf	(main@engTemp+1)& (0+255),b
  1643                           
  1644                           ;main.c: 127:                 oilTemp = canMessage.frame.data1;
  1645  002F9E  C0CD  F08A         	movff	_canMessage+7,main@oilTemp
  1646  002FA2  6B8B               	clrf	(main@oilTemp+1)& (0+255),b
  1647                           
  1648                           ;main.c: 128:                 battVolts = canMessage.frame.data2;
  1649  002FA4  C0CE  F08C         	movff	_canMessage+8,main@battVolts
  1650  002FA8  6B8D               	clrf	(main@battVolts+1)& (0+255),b
  1651                           
  1652                           ;main.c: 129:             } else if (canMessage.frame.id == 0x643) {
  1653  002FAA  D0CC               	goto	l866
  1654  002FAC                     l861:
  1655  002FAC                     l4617:
  1656                           
  1657                           ; BSR set to: 0
  1658  002FAC  0E43               	movlw	67
  1659  002FAE  19C7               	xorwf	(_canMessage+1)& (0+255),w,b
  1660  002FB0  E150               	bnz	l4621
  1661  002FB2  0E06               	movlw	6
  1662  002FB4  19C8               	xorwf	(_canMessage+2)& (0+255),w,b
  1663  002FB6  11C9               	iorwf	(_canMessage+3)& (0+255),w,b
  1664  002FB8  11CA               	iorwf	(_canMessage+4)& (0+255),w,b
  1665  002FBA  A4D8               	btfss	status,2,c
  1666  002FBC  D04A               	goto	l863
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;main.c: 130:                 radio = canMessage.frame.data0 >> 7;
  1670  002FBE  45CC               	rlncf	(_canMessage+6)& (0+255),w,b
  1671  002FC0  0B01               	andlw	1
  1672  002FC2  B4D8               	btfsc	status,2,c
  1673  002FC4  D002               	goto	u1960
  1674  002FC6  0E01               	movlw	1
  1675  002FC8  D001               	goto	u1970
  1676  002FCA                     u1960:
  1677  002FCA  0E00               	movlw	0
  1678  002FCC                     u1970:
  1679  002FCC  6F83               	movwf	main@radio& (0+255),b
  1680                           
  1681                           ;main.c: 131:                 drs = canMessage.frame.data0 >> 6 & 0b1;
  1682  002FCE  C0CC  F045         	movff	_canMessage+6,??_main
  1683  002FD2  0E06               	movlw	6
  1684  002FD4  6E46               	movwf	(??_main+1)& (0+255),c
  1685  002FD6                     u1985:
  1686  002FD6  90D8               	bcf	status,0,c
  1687  002FD8  3245               	rrcf	??_main,f,c
  1688  002FDA  2E46               	decfsz	(??_main+1)& (0+255),f,c
  1689  002FDC  D7FC               	goto	u1985
  1690  002FDE  A045               	btfss	??_main,0,c
  1691  002FE0  D002               	goto	u1990
  1692  002FE2  0E01               	movlw	1
  1693  002FE4  D001               	goto	u2000
  1694  002FE6                     u1990:
  1695  002FE6  0E00               	movlw	0
  1696  002FE8                     u2000:
  1697  002FE8  6F77               	movwf	main@drs& (0+255),b
  1698                           
  1699                           ;main.c: 132:                 etc = canMessage.frame.data0 >> 3 & 0b111;
  1700  002FEA  C0CC  F045         	movff	_canMessage+6,??_main
  1701  002FEE  90D8               	bcf	status,0,c
  1702  002FF0  3245               	rrcf	??_main,f,c
  1703  002FF2  90D8               	bcf	status,0,c
  1704  002FF4  3245               	rrcf	??_main,f,c
  1705  002FF6  90D8               	bcf	status,0,c
  1706  002FF8  3245               	rrcf	??_main,f,c
  1707  002FFA  0E07               	movlw	7
  1708  002FFC  1645               	andwf	??_main,f,c
  1709  002FFE  5045               	movf	??_main,w,c
  1710  003000  6F90               	movwf	main@etc& (0+255),b
  1711  003002  6B91               	clrf	(main@etc+1)& (0+255),b
  1712                           
  1713                           ;main.c: 134:                 launch = canMessage.frame.data1 >> 7 & 0b1;
  1714  003004  6A45               	clrf	??_main& (0+255),c
  1715  003006  AFCD               	btfss	(_canMessage+7)& (0+255),7,b
  1716  003008  D001               	bra	u2015
  1717  00300A  2A45               	incf	??_main& (0+255),f,c
  1718  00300C                     u2015:
  1719  00300C  A045               	btfss	??_main,0,c
  1720  00300E  D002               	goto	u2020
  1721  003010  0E01               	movlw	1
  1722  003012  D001               	goto	u2030
  1723  003014                     u2020:
  1724  003014  0E00               	movlw	0
  1725  003016                     u2030:
  1726  003016  6F7E               	movwf	main@launch& (0+255),b
  1727                           
  1728                           ;main.c: 135:                 autoShift = canMessage.frame.data1 >> 6 & 0b1;
  1729  003018  C0CD  F045         	movff	_canMessage+7,??_main
  1730  00301C  0E06               	movlw	6
  1731  00301E  6E46               	movwf	(??_main+1)& (0+255),c
  1732  003020                     u2045:
  1733  003020  90D8               	bcf	status,0,c
  1734  003022  3245               	rrcf	??_main,f,c
  1735  003024  2E46               	decfsz	(??_main+1)& (0+255),f,c
  1736  003026  D7FC               	goto	u2045
  1737  003028  A045               	btfss	??_main,0,c
  1738  00302A  D002               	goto	u2050
  1739  00302C  0E01               	movlw	1
  1740  00302E  D001               	goto	u2060
  1741  003030                     u2050:
  1742  003030  0E00               	movlw	0
  1743  003032                     u2060:
  1744  003032  6F7F               	movwf	main@autoShift& (0+255),b
  1745                           
  1746                           ;main.c: 136:                 clutch = canMessage.frame.data1 >> 5 & 0b1;
  1747  003034  C0CD  F045         	movff	_canMessage+7,??_main
  1748  003038  0E05               	movlw	5
  1749  00303A  6E46               	movwf	(??_main+1)& (0+255),c
  1750  00303C                     u2075:
  1751  00303C  90D8               	bcf	status,0,c
  1752  00303E  3245               	rrcf	??_main,f,c
  1753  003040  2E46               	decfsz	(??_main+1)& (0+255),f,c
  1754  003042  D7FC               	goto	u2075
  1755  003044  A045               	btfss	??_main,0,c
  1756  003046  D002               	goto	u2080
  1757  003048  0E01               	movlw	1
  1758  00304A  D001               	goto	u2090
  1759  00304C                     u2080:
  1760  00304C  0E00               	movlw	0
  1761  00304E                     u2090:
  1762  00304E  6F80               	movwf	main@clutch& (0+255),b
  1763                           
  1764                           ;main.c: 137:             } else if (canMessage.frame.id == 0x644) {
  1765  003050  D079               	goto	l866
  1766  003052                     l863:
  1767  003052                     l4621:
  1768                           
  1769                           ; BSR set to: 0
  1770  003052  0E44               	movlw	68
  1771  003054  19C7               	xorwf	(_canMessage+1)& (0+255),w,b
  1772  003056  E176               	bnz	l856
  1773  003058  0E06               	movlw	6
  1774  00305A  19C8               	xorwf	(_canMessage+2)& (0+255),w,b
  1775  00305C  11C9               	iorwf	(_canMessage+3)& (0+255),w,b
  1776  00305E  11CA               	iorwf	(_canMessage+4)& (0+255),w,b
  1777  003060  A4D8               	btfss	status,2,c
  1778  003062  D070               	goto	l866
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;main.c: 138:                 lap_time.last = ((canMessage.frame.data0 << 8) | canMessag
      +                          e.frame.data1);
  1782  003064  51CD               	movf	(_canMessage+7)& (0+255),w,b
  1783  003066  C0CC  F045         	movff	_canMessage+6,??_main
  1784  00306A  6A46               	clrf	(??_main+1)& (0+255),c
  1785  00306C  C045  F046         	movff	??_main,??_main+1
  1786  003070  6A45               	clrf	??_main,c
  1787  003072  1045               	iorwf	??_main,w,c
  1788  003074  6FA3               	movwf	(main@lap_time+8)& (0+255),b
  1789  003076  5046               	movf	??_main+1,w,c
  1790  003078  6FA4               	movwf	(main@lap_time+9)& (0+255),b
  1791                           
  1792                           ;main.c: 139:                 lap_time.current = ((canMessage.frame.data2 << 8) | canMes
      +                          sage.frame.data3);
  1793  00307A  51CF               	movf	(_canMessage+9)& (0+255),w,b
  1794  00307C  C0CE  F045         	movff	_canMessage+8,??_main
  1795  003080  6A46               	clrf	(??_main+1)& (0+255),c
  1796  003082  C045  F046         	movff	??_main,??_main+1
  1797  003086  6A45               	clrf	??_main,c
  1798  003088  1045               	iorwf	??_main,w,c
  1799  00308A  6F9B               	movwf	main@lap_time& (0+255),b
  1800  00308C  5046               	movf	??_main+1,w,c
  1801  00308E  6F9C               	movwf	(main@lap_time+1)& (0+255),b
  1802                           
  1803                           ;main.c: 140:                 lap_time.current_number = ((canMessage.frame.data4 << 8) |
      +                           canMessage.frame.data5);
  1804  003090  51D1               	movf	(_canMessage+11)& (0+255),w,b
  1805  003092  C0D0  F045         	movff	_canMessage+10,??_main
  1806  003096  6A46               	clrf	(??_main+1)& (0+255),c
  1807  003098  C045  F046         	movff	??_main,??_main+1
  1808  00309C  6A45               	clrf	??_main,c
  1809  00309E  1045               	iorwf	??_main,w,c
  1810  0030A0  6F9D               	movwf	(main@lap_time+2)& (0+255),b
  1811  0030A2  5046               	movf	??_main+1,w,c
  1812  0030A4  6F9E               	movwf	(main@lap_time+3)& (0+255),b
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;main.c: 141:                 lap_time.last_int = lap_time.last/100;
  1816  0030A6  C0A3  F003         	movff	main@lap_time+8,___awdiv@dividend
  1817  0030AA  C0A4  F004         	movff	main@lap_time+9,___awdiv@dividend+1
  1818  0030AE  0E00               	movlw	0
  1819  0030B0  6E06               	movwf	___awdiv@divisor+1,c
  1820  0030B2  0E64               	movlw	100
  1821  0030B4  6E05               	movwf	___awdiv@divisor,c
  1822  0030B6  EC96  F031         	call	___awdiv	;wreg free
  1823  0030BA  C003  F0A5         	movff	?___awdiv,main@lap_time+10
  1824  0030BE  C004  F0A6         	movff	?___awdiv+1,main@lap_time+11
  1825                           
  1826                           ;main.c: 142:                 lap_time.last_dec = lap_time.last%100;
  1827  0030C2  C0A3  F00B         	movff	main@lap_time+8,___awmod@dividend
  1828  0030C6  C0A4  F00C         	movff	main@lap_time+9,___awmod@dividend+1
  1829  0030CA  0E00               	movlw	0
  1830  0030CC  6E0E               	movwf	___awmod@divisor+1,c
  1831  0030CE  0E64               	movlw	100
  1832  0030D0  6E0D               	movwf	___awmod@divisor,c
  1833  0030D2  EC14  F032         	call	___awmod	;wreg free
  1834  0030D6  C00B  F0A7         	movff	?___awmod,main@lap_time+12
  1835  0030DA  C00C  F0A8         	movff	?___awmod+1,main@lap_time+13
  1836                           
  1837                           ;main.c: 143:                 lap_time.current_int = lap_time.current/100;
  1838  0030DE  C09B  F003         	movff	main@lap_time,___awdiv@dividend
  1839  0030E2  C09C  F004         	movff	main@lap_time+1,___awdiv@dividend+1
  1840  0030E6  0E00               	movlw	0
  1841  0030E8  6E06               	movwf	___awdiv@divisor+1,c
  1842  0030EA  0E64               	movlw	100
  1843  0030EC  6E05               	movwf	___awdiv@divisor,c
  1844  0030EE  EC96  F031         	call	___awdiv	;wreg free
  1845  0030F2  C003  F09F         	movff	?___awdiv,main@lap_time+4
  1846  0030F6  C004  F0A0         	movff	?___awdiv+1,main@lap_time+5
  1847                           
  1848                           ;main.c: 144:                 lap_time.current_dec = lap_time.current%100;
  1849  0030FA  C09B  F00B         	movff	main@lap_time,___awmod@dividend
  1850  0030FE  C09C  F00C         	movff	main@lap_time+1,___awmod@dividend+1
  1851  003102  0E00               	movlw	0
  1852  003104  6E0E               	movwf	___awmod@divisor+1,c
  1853  003106  0E64               	movlw	100
  1854  003108  6E0D               	movwf	___awmod@divisor,c
  1855  00310A  EC14  F032         	call	___awmod	;wreg free
  1856  00310E  C00B  F0A1         	movff	?___awmod,main@lap_time+6
  1857  003112  C00C  F0A2         	movff	?___awmod+1,main@lap_time+7
  1858                           
  1859                           ;main.c: 145:                 if(lap_time.current < lap_time.best) {
  1860  003116  0100               	movlb	0	; () banked
  1861  003118  51A9               	movf	(main@lap_time+14)& (0+255),w,b
  1862  00311A  5D9B               	subwf	main@lap_time& (0+255),w,b
  1863  00311C  519C               	movf	(main@lap_time+1)& (0+255),w,b
  1864  00311E  0A80               	xorlw	128
  1865  003120  6E45               	movwf	??_main& (0+255),c
  1866  003122  51AA               	movf	(main@lap_time+15)& (0+255),w,b
  1867  003124  0A80               	xorlw	128
  1868  003126  5845               	subwfb	??_main& (0+255),w,c
  1869  003128  B0D8               	btfsc	status,0,c
  1870  00312A  D00C               	goto	l866
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;main.c: 146:                     lap_time.best = lap_time.current;
  1874  00312C  C09B  F0A9         	movff	main@lap_time,main@lap_time+14
  1875  003130  C09C  F0AA         	movff	main@lap_time+1,main@lap_time+15
  1876                           
  1877                           ;main.c: 147:                     lap_time.best_int = lap_time.current_int;
  1878  003134  C09F  F0AD         	movff	main@lap_time+4,main@lap_time+18
  1879  003138  C0A0  F0AE         	movff	main@lap_time+5,main@lap_time+19
  1880                           
  1881                           ;main.c: 148:                     lap_time.best_dec = lap_time.current_dec;
  1882  00313C  C0A1  F0AF         	movff	main@lap_time+6,main@lap_time+20
  1883  003140  C0A2  F0B0         	movff	main@lap_time+7,main@lap_time+21
  1884  003144                     l866:
  1885  003144                     l856:
  1886                           
  1887                           ;main.c: 152:         if(refresh_screen) {
  1888                           
  1889                           ; BSR set to: 0
  1890  003144  0100               	movlb	0	; () banked
  1891  003146  51C5               	movf	_refresh_screen& (0+255),w,b
  1892  003148  B4D8               	btfsc	status,2,c
  1893  00314A  D6B1               	goto	l855
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;main.c: 153:             if(!bspd_flag) {
  1897  00314C  5194               	movf	main@bspd_flag& (0+255),w,b
  1898  00314E  A4D8               	btfss	status,2,c
  1899  003150  D038               	goto	l870
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;main.c: 154:                 if(tp > 21 && brake_p > 1.44) {
  1903  003152  BF9A               	btfsc	(main@tp+1)& (0+255),7,b
  1904  003154  D02D               	goto	l869
  1905  003156  519A               	movf	(main@tp+1)& (0+255),w,b
  1906  003158  E104               	bnz	u2140
  1907  00315A  0E16               	movlw	22
  1908  00315C  5D99               	subwf	main@tp& (0+255),w,b
  1909  00315E  A0D8               	btfss	status,0,c
  1910  003160  D027               	goto	l869
  1911  003162                     u2140:
  1912                           
  1913                           ; BSR set to: 0
  1914  003162  0EEC               	movlw	236
  1915  003164  6E11               	movwf	___flge@ff1,c
  1916  003166  0E51               	movlw	81
  1917  003168  6E12               	movwf	___flge@ff1+1,c
  1918  00316A  0EB8               	movlw	184
  1919  00316C  6E13               	movwf	___flge@ff1+2,c
  1920  00316E  0E3F               	movlw	63
  1921  003170  6E14               	movwf	___flge@ff1+3,c
  1922  003172  C07C  F003         	movff	main@brake_p,___xxtofl@val
  1923  003176  C07D  F004         	movff	main@brake_p+1,___xxtofl@val+1
  1924  00317A  0E00               	movlw	0
  1925  00317C  BE04               	btfsc	___xxtofl@val+1,7,c
  1926  00317E  0EFF               	movlw	-1
  1927  003180  6E05               	movwf	___xxtofl@val+2,c
  1928  003182  6E06               	movwf	___xxtofl@val+3,c
  1929  003184  0E01               	movlw	1
  1930  003186  EC96  F02C         	call	___xxtofl
  1931  00318A  C003  F015         	movff	?___xxtofl,___flge@ff2
  1932  00318E  C004  F016         	movff	?___xxtofl+1,___flge@ff2+1
  1933  003192  C005  F017         	movff	?___xxtofl+2,___flge@ff2+2
  1934  003196  C006  F018         	movff	?___xxtofl+3,___flge@ff2+3
  1935  00319A  ECCA  F02D         	call	___flge	;wreg free
  1936  00319E  B0D8               	btfsc	status,0,c
  1937  0031A0  D007               	goto	l869
  1938                           
  1939                           ;main.c: 155:                     BSPD_counter++;
  1940  0031A2  0100               	movlb	0	; () banked
  1941  0031A4  4B81               	infsnz	main@BSPD_counter& (0+255),f,b
  1942  0031A6  2B82               	incf	(main@BSPD_counter+1)& (0+255),f,b
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;main.c: 156:                     bspd = 1;
  1946  0031A8  0E00               	movlw	0
  1947  0031AA  6F96               	movwf	(main@bspd+1)& (0+255),b
  1948  0031AC  0E01               	movlw	1
  1949  0031AE  D008               	goto	L1
  1950  0031B0                     l869:
  1951                           
  1952                           ;main.c: 159:                     BSPD_counter = 0;
  1953                           
  1954                           ; BSR set to: 0
  1955  0031B0  0E00               	movlw	0
  1956  0031B2  0100               	movlb	0	; () banked
  1957  0031B4  6F82               	movwf	(main@BSPD_counter+1)& (0+255),b
  1958  0031B6  0E00               	movlw	0
  1959  0031B8  6F81               	movwf	main@BSPD_counter& (0+255),b
  1960                           
  1961                           ;main.c: 160:                     bspd = 0;
  1962  0031BA  0E00               	movlw	0
  1963  0031BC  6F96               	movwf	(main@bspd+1)& (0+255),b
  1964  0031BE  0E00               	movlw	0
  1965  0031C0                     L1:
  1966  0031C0  6F95               	movwf	main@bspd& (0+255),b
  1967  0031C2                     l870:
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;main.c: 163:             if(BSPD_counter >= 33) bspd_flag = 1;
  1971                           
  1972                           ; BSR set to: 0
  1973                           
  1974                           ;main.c: 162:             }
  1975                           
  1976                           ; BSR set to: 0
  1977  0031C2  BF82               	btfsc	(main@BSPD_counter+1)& (0+255),7,b
  1978  0031C4  D008               	goto	l871
  1979  0031C6  5182               	movf	(main@BSPD_counter+1)& (0+255),w,b
  1980  0031C8  E104               	bnz	u2160
  1981  0031CA  0E21               	movlw	33
  1982  0031CC  5D81               	subwf	main@BSPD_counter& (0+255),w,b
  1983  0031CE  A0D8               	btfss	status,0,c
  1984  0031D0  D002               	goto	l871
  1985  0031D2                     u2160:
  1986                           
  1987                           ; BSR set to: 0
  1988  0031D2  0E01               	movlw	1
  1989  0031D4  6F94               	movwf	main@bspd_flag& (0+255),b
  1990  0031D6                     l871:
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;main.c: 164:             if(bspd_flag) bspd = 2;
  1994  0031D6  5194               	movf	main@bspd_flag& (0+255),w,b
  1995  0031D8  B4D8               	btfsc	status,2,c
  1996  0031DA  D004               	goto	l872
  1997                           
  1998                           ; BSR set to: 0
  1999  0031DC  0E00               	movlw	0
  2000  0031DE  6F96               	movwf	(main@bspd+1)& (0+255),b
  2001  0031E0  0E02               	movlw	2
  2002  0031E2  6F95               	movwf	main@bspd& (0+255),b
  2003  0031E4                     l872:
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;main.c: 165:             if(rpm > 1000 && fuelP < 320) fuel = 0;
  2007                           
  2008                           ; BSR set to: 0
  2009  0031E4  BF98               	btfsc	(main@rpm+1)& (0+255),7,b
  2010  0031E6  D012               	goto	l873
  2011  0031E8  0EE9               	movlw	233
  2012  0031EA  5D97               	subwf	main@rpm& (0+255),w,b
  2013  0031EC  0E03               	movlw	3
  2014  0031EE  5998               	subwfb	(main@rpm+1)& (0+255),w,b
  2015  0031F0  A0D8               	btfss	status,0,c
  2016  0031F2  D00C               	goto	l873
  2017                           
  2018                           ; BSR set to: 0
  2019  0031F4  BF8F               	btfsc	(main@fuelP+1)& (0+255),7,b
  2020  0031F6  D006               	goto	u2190
  2021  0031F8  0E40               	movlw	64
  2022  0031FA  5D8E               	subwf	main@fuelP& (0+255),w,b
  2023  0031FC  0E01               	movlw	1
  2024  0031FE  598F               	subwfb	(main@fuelP+1)& (0+255),w,b
  2025  003200  B0D8               	btfsc	status,0,c
  2026  003202  D004               	goto	l873
  2027  003204                     u2190:
  2028                           
  2029                           ; BSR set to: 0
  2030  003204  0E00               	movlw	0
  2031  003206  6F93               	movwf	(main@fuel+1)& (0+255),b
  2032  003208  0E00               	movlw	0
  2033  00320A  D003               	goto	L2
  2034  00320C                     l873:
  2035                           
  2036                           ; BSR set to: 0
  2037                           
  2038                           ; BSR set to: 0
  2039  00320C  0E00               	movlw	0
  2040  00320E  6F93               	movwf	(main@fuel+1)& (0+255),b
  2041  003210  0E01               	movlw	1
  2042  003212                     L2:
  2043  003212  6F92               	movwf	main@fuel& (0+255),b
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;main.c: 167:             display_start();
  2047                           
  2048                           ; BSR set to: 0
  2049  003214  EC01  F033         	call	_display_start	;wreg free
  2050                           
  2051                           ;main.c: 168:             display_labels();
  2052  003218  ECCF  F007         	call	_display_labels	;wreg free
  2053                           
  2054                           ;main.c: 169:             display_grids();
  2055  00321C  EC54  F01F         	call	_display_grids	;wreg free
  2056                           
  2057                           ;main.c: 170:             display_bottom_section(battVolts, tp);
  2058  003220  C08C  F01F         	movff	main@battVolts,display_bottom_section@volts
  2059  003224  C08D  F020         	movff	main@battVolts+1,display_bottom_section@volts+1
  2060  003228  C099  F021         	movff	main@tp,display_bottom_section@tp
  2061  00322C  C09A  F022         	movff	main@tp+1,display_bottom_section@tp+1
  2062  003230  ECC7  F030         	call	_display_bottom_section	;wreg free
  2063                           
  2064                           ;main.c: 171:             display_rpm(rpm);
  2065  003234  C097  F019         	movff	main@rpm,display_rpm@rpm
  2066  003238  C098  F01A         	movff	main@rpm+1,display_rpm@rpm+1
  2067  00323C  EC6F  F01C         	call	_display_rpm	;wreg free
  2068                           
  2069                           ;main.c: 172:             display_speed(speed);
  2070  003240  C084  F019         	movff	main@speed,display_speed@speed
  2071  003244  C085  F01A         	movff	main@speed+1,display_speed@speed+1
  2072  003248  ECE6  F02E         	call	_display_speed	;wreg free
  2073                           
  2074                           ;main.c: 173:             display_waterTemp(engTemp);
  2075  00324C  C088  F019         	movff	main@engTemp,display_waterTemp@temp
  2076  003250  C089  F01A         	movff	main@engTemp+1,display_waterTemp@temp+1
  2077  003254  EC5A  F02E         	call	_display_waterTemp	;wreg free
  2078                           
  2079                           ;main.c: 174:             display_oilTemp(oilTemp);
  2080  003258  C08A  F019         	movff	main@oilTemp,display_oilTemp@temp
  2081  00325C  C08B  F01A         	movff	main@oilTemp+1,display_oilTemp@temp+1
  2082  003260  EC72  F02F         	call	_display_oilTemp	;wreg free
  2083                           
  2084                           ;main.c: 175:             display_etc(etc);
  2085  003264  C090  F019         	movff	main@etc,display_etc@etc
  2086  003268  C091  F01A         	movff	main@etc+1,display_etc@etc+1
  2087  00326C  ECBA  F00F         	call	_display_etc	;wreg free
  2088                           
  2089                           ;main.c: 176:             display_brake_bias(bias);
  2090  003270  C07A  F019         	movff	main@bias,display_brake_bias@bias
  2091  003274  C07B  F01A         	movff	main@bias+1,display_brake_bias@bias+1
  2092  003278  EC36  F02D         	call	_display_brake_bias	;wreg free
  2093                           
  2094                           ;main.c: 178:             display_bspd(bspd);
  2095  00327C  C095  F019         	movff	main@bspd,display_bspd@bspd
  2096  003280  C096  F01A         	movff	main@bspd+1,display_bspd@bspd+1
  2097  003284  EC90  F024         	call	_display_bspd	;wreg free
  2098                           
  2099                           ;main.c: 179:             display_gear(gear);
  2100  003288  C086  F019         	movff	main@gear,display_gear@gear
  2101  00328C  C087  F01A         	movff	main@gear+1,display_gear@gear+1
  2102  003290  EC1B  F022         	call	_display_gear	;wreg free
  2103                           
  2104                           ;main.c: 180:             display_fuel_level(fuel);
  2105  003294  C092  F019         	movff	main@fuel,display_fuel_level@fuel
  2106  003298  C093  F01A         	movff	main@fuel+1,display_fuel_level@fuel+1
  2107  00329C  ECA5  F029         	call	_display_fuel_level	;wreg free
  2108                           
  2109                           ;main.c: 181:             display_status(launch, autoShift, clutch, radio);
  2110  0032A0  C07F  F019         	movff	main@autoShift,display_status@autoShift
  2111  0032A4  C080  F01A         	movff	main@clutch,display_status@clutch
  2112  0032A8  C083  F01B         	movff	main@radio,display_status@radio
  2113  0032AC  0100               	movlb	0	; () banked
  2114  0032AE  517E               	movf	main@launch& (0+255),w,b
  2115  0032B0  EC3A  F013         	call	_display_status
  2116                           
  2117                           ;main.c: 182:             display_laptime(lap_time.current_int, lap_time.current_dec, la
      +                          p_time.best_int, lap_time.best_dec,
  2118  0032B4  C09F  F019         	movff	main@lap_time+4,display_laptime@current_int
  2119  0032B8  C0A0  F01A         	movff	main@lap_time+5,display_laptime@current_int+1
  2120  0032BC  C0A1  F01B         	movff	main@lap_time+6,display_laptime@current_dec
  2121  0032C0  C0A2  F01C         	movff	main@lap_time+7,display_laptime@current_dec+1
  2122  0032C4  C0AD  F01D         	movff	main@lap_time+18,display_laptime@best_int
  2123  0032C8  C0AE  F01E         	movff	main@lap_time+19,display_laptime@best_int+1
  2124  0032CC  C0AF  F01F         	movff	main@lap_time+20,display_laptime@best_dec
  2125  0032D0  C0B0  F020         	movff	main@lap_time+21,display_laptime@best_dec+1
  2126  0032D4  C0A5  F021         	movff	main@lap_time+10,display_laptime@last_int
  2127  0032D8  C0A6  F022         	movff	main@lap_time+11,display_laptime@last_int+1
  2128  0032DC  C0A7  F023         	movff	main@lap_time+12,display_laptime@last_dec
  2129  0032E0  C0A8  F024         	movff	main@lap_time+13,display_laptime@last_dec+1
  2130  0032E4  C09D  F025         	movff	main@lap_time+2,display_laptime@lap
  2131  0032E8  C09E  F026         	movff	main@lap_time+3,display_laptime@lap+1
  2132  0032EC  C0AB  F027         	movff	main@lap_time+16,display_laptime@best_lap
  2133  0032F0  C0AC  F028         	movff	main@lap_time+17,display_laptime@best_lap+1
  2134  0032F4  EC84  F019         	call	_display_laptime	;wreg free
  2135                           
  2136                           ;main.c: 184:             display_end();
  2137  0032F8  EC7D  F032         	call	_display_end	;wreg free
  2138                           
  2139                           ;main.c: 194:             refresh_screen = 0;
  2140  0032FC  0E00               	movlw	0
  2141  0032FE  0100               	movlb	0	; () banked
  2142  003300  6FC5               	movwf	_refresh_screen& (0+255),b
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;main.c: 195:             TMR1_Reload();
  2146  003302  EC4D  F034         	call	_TMR1_Reload	;wreg free
  2147                           
  2148                           ;main.c: 197:     }
  2149                           
  2150                           ;main.c: 196:         }
  2151  003306  D5D3               	goto	l855
  2152  003308                     __end_of_main:
  2153                           	opt stack 0
  2154                           tblptru	equ	0xFF8
  2155                           tblptrh	equ	0xFF7
  2156                           tblptrl	equ	0xFF6
  2157                           tablat	equ	0xFF5
  2158                           intcon	equ	0xFF2
  2159                           postinc0	equ	0xFEE
  2160                           wreg	equ	0xFE8
  2161                           postdec1	equ	0xFE5
  2162                           plusw1	equ	0xFE3
  2163                           fsr1l	equ	0xFE1
  2164                           plusw2	equ	0xFDB
  2165                           status	equ	0xFD8
  2166                           
  2167 ;; *************** function _wait2secs *****************
  2168 ;; Defined at:
  2169 ;;		line 27 in file "main.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2187 ;;Total ram usage:        2 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    4
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_main
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text1
  2198  006810                     __ptext1:
  2199                           	opt stack 0
  2200  006810                     _wait2secs:
  2201                           	opt stack 26
  2202                           
  2203                           ;main.c: 28:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2204                           
  2205                           ;incstack = 0
  2206  006810  0EA3               	movlw	163
  2207  006812  6E04               	movwf	(??_wait2secs+1)& (0+255),c
  2208  006814  0E57               	movlw	87
  2209  006816  6E03               	movwf	??_wait2secs& (0+255),c
  2210  006818  0E02               	movlw	2
  2211  00681A                     u2207:
  2212  00681A  2EE8               	decfsz	wreg,f,c
  2213  00681C  D7FE               	bra	u2207
  2214  00681E  2E03               	decfsz	??_wait2secs& (0+255),f,c
  2215  006820  D7FC               	bra	u2207
  2216  006822  2E04               	decfsz	(??_wait2secs+1)& (0+255),f,c
  2217  006824  D7FA               	bra	u2207
  2218  006826  D000               	nop2	
  2219  006828  0012               	return		;funcret
  2220  00682A                     __end_of_wait2secs:
  2221                           	opt stack 0
  2222                           tblptru	equ	0xFF8
  2223                           tblptrh	equ	0xFF7
  2224                           tblptrl	equ	0xFF6
  2225                           tablat	equ	0xFF5
  2226                           intcon	equ	0xFF2
  2227                           postinc0	equ	0xFEE
  2228                           wreg	equ	0xFE8
  2229                           postdec1	equ	0xFE5
  2230                           plusw1	equ	0xFE3
  2231                           fsr1l	equ	0xFE1
  2232                           plusw2	equ	0xFDB
  2233                           status	equ	0xFD8
  2234                           
  2235 ;; *************** function _display_status *****************
  2236 ;; Defined at:
  2237 ;;		line 165 in file "display.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  launch          1    wreg     _Bool 
  2240 ;;  autoShift       1   24[COMRAM] _Bool 
  2241 ;;  clutch          1   25[COMRAM] _Bool 
  2242 ;;  radio           1   26[COMRAM] _Bool 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  launch          1   31[COMRAM] _Bool 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2254 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2256 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2257 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2258 ;;Total ram usage:        8 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    7
  2261 ;; This function calls:
  2262 ;;		_cmd
  2263 ;;		_cmd_incrementn
  2264 ;;		_wr16
  2265 ;;		_wr8s
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text2
  2272  002674                     __ptext2:
  2273                           	opt stack 0
  2274  002674                     _display_status:
  2275                           	opt stack 23
  2276                           
  2277                           ;incstack = 0
  2278                           ;display_status@launch stored from wreg
  2279  002674  6E20               	movwf	display_status@launch,c
  2280                           
  2281                           ;display.c: 166:     cmd(((31UL<<24)|(((9UL)&15UL)<<0)));
  2282  002676  0E09               	movlw	9
  2283  002678  6E11               	movwf	cmd@command,c
  2284  00267A  0E00               	movlw	0
  2285  00267C  6E12               	movwf	cmd@command+1,c
  2286  00267E  0E00               	movlw	0
  2287  002680  6E13               	movwf	cmd@command+2,c
  2288  002682  0E1F               	movlw	31
  2289  002684  6E14               	movwf	cmd@command+3,c
  2290  002686  ECE1  F032         	call	_cmd	;wreg free
  2291                           
  2292                           ;display.c: 167:     if(launch) {
  2293  00268A  5020               	movf	display_status@launch,w,c
  2294  00268C  B4D8               	btfsc	status,2,c
  2295  00268E  D00B               	goto	l657
  2296                           
  2297                           ;display.c: 168:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  2298  002690  0E00               	movlw	0
  2299  002692  6E11               	movwf	cmd@command,c
  2300  002694  0EFF               	movlw	255
  2301  002696  6E12               	movwf	cmd@command+1,c
  2302  002698  0E00               	movlw	0
  2303  00269A  6E13               	movwf	cmd@command+2,c
  2304  00269C  0E04               	movlw	4
  2305  00269E  6E14               	movwf	cmd@command+3,c
  2306  0026A0  ECE1  F032         	call	_cmd	;wreg free
  2307                           
  2308                           ;display.c: 169:     } else {
  2309  0026A4  D00A               	goto	l658
  2310  0026A6                     l657:
  2311                           
  2312                           ;display.c: 170:         cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255U
      +                          L)<<0)));
  2313  0026A6  0E3C               	movlw	60
  2314  0026A8  6E11               	movwf	cmd@command,c
  2315  0026AA  0E3C               	movlw	60
  2316  0026AC  6E12               	movwf	cmd@command+1,c
  2317  0026AE  0E3C               	movlw	60
  2318  0026B0  6E13               	movwf	cmd@command+2,c
  2319  0026B2  0E04               	movlw	4
  2320  0026B4  6E14               	movwf	cmd@command+3,c
  2321  0026B6  ECE1  F032         	call	_cmd	;wreg free
  2322  0026BA                     l658:
  2323                           
  2324                           ;display.c: 172:     cmd(((2UL<<30)|(((10)&511UL)<<21)|(((215)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  2325  0026BA  0E00               	movlw	0
  2326  0026BC  6E11               	movwf	cmd@command,c
  2327  0026BE  0E70               	movlw	112
  2328  0026C0  6E12               	movwf	cmd@command+1,c
  2329  0026C2  0E4D               	movlw	77
  2330  0026C4  6E13               	movwf	cmd@command+2,c
  2331  0026C6  0E81               	movlw	129
  2332  0026C8  6E14               	movwf	cmd@command+3,c
  2333  0026CA  ECE1  F032         	call	_cmd	;wreg free
  2334                           
  2335                           ;display.c: 173:     cmd(((2UL<<30)|(((90)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  2336  0026CE  0E00               	movlw	0
  2337  0026D0  6E11               	movwf	cmd@command,c
  2338  0026D2  0E60               	movlw	96
  2339  0026D4  6E12               	movwf	cmd@command+1,c
  2340  0026D6  0E4E               	movlw	78
  2341  0026D8  6E13               	movwf	cmd@command+2,c
  2342  0026DA  0E8B               	movlw	139
  2343  0026DC  6E14               	movwf	cmd@command+3,c
  2344  0026DE  ECE1  F032         	call	_cmd	;wreg free
  2345                           
  2346                           ;display.c: 175:     if (autoShift) {
  2347  0026E2  5019               	movf	display_status@autoShift,w,c
  2348  0026E4  B4D8               	btfsc	status,2,c
  2349  0026E6  D00B               	goto	l659
  2350                           
  2351                           ;display.c: 176:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  2352  0026E8  0E00               	movlw	0
  2353  0026EA  6E11               	movwf	cmd@command,c
  2354  0026EC  0EFF               	movlw	255
  2355  0026EE  6E12               	movwf	cmd@command+1,c
  2356  0026F0  0E00               	movlw	0
  2357  0026F2  6E13               	movwf	cmd@command+2,c
  2358  0026F4  0E04               	movlw	4
  2359  0026F6  6E14               	movwf	cmd@command+3,c
  2360  0026F8  ECE1  F032         	call	_cmd	;wreg free
  2361                           
  2362                           ;display.c: 177:     } else {
  2363  0026FC  D00A               	goto	l660
  2364  0026FE                     l659:
  2365                           
  2366                           ;display.c: 178:         cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255U
      +                          L)<<0)));
  2367  0026FE  0E3C               	movlw	60
  2368  002700  6E11               	movwf	cmd@command,c
  2369  002702  0E3C               	movlw	60
  2370  002704  6E12               	movwf	cmd@command+1,c
  2371  002706  0E3C               	movlw	60
  2372  002708  6E13               	movwf	cmd@command+2,c
  2373  00270A  0E04               	movlw	4
  2374  00270C  6E14               	movwf	cmd@command+3,c
  2375  00270E  ECE1  F032         	call	_cmd	;wreg free
  2376  002712                     l660:
  2377                           
  2378                           ;display.c: 180:     cmd(((2UL<<30)|(((100)&511UL)<<21)|(((215)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  2379  002712  0E00               	movlw	0
  2380  002714  6E11               	movwf	cmd@command,c
  2381  002716  0E70               	movlw	112
  2382  002718  6E12               	movwf	cmd@command+1,c
  2383  00271A  0E8D               	movlw	141
  2384  00271C  6E13               	movwf	cmd@command+2,c
  2385  00271E  0E8C               	movlw	140
  2386  002720  6E14               	movwf	cmd@command+3,c
  2387  002722  ECE1  F032         	call	_cmd	;wreg free
  2388                           
  2389                           ;display.c: 181:     cmd(((2UL<<30)|(((180)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  2390  002726  0E00               	movlw	0
  2391  002728  6E11               	movwf	cmd@command,c
  2392  00272A  0E60               	movlw	96
  2393  00272C  6E12               	movwf	cmd@command+1,c
  2394  00272E  0E8E               	movlw	142
  2395  002730  6E13               	movwf	cmd@command+2,c
  2396  002732  0E96               	movlw	150
  2397  002734  6E14               	movwf	cmd@command+3,c
  2398  002736  ECE1  F032         	call	_cmd	;wreg free
  2399                           
  2400                           ;display.c: 183:     if (clutch) {
  2401  00273A  501A               	movf	display_status@clutch,w,c
  2402  00273C  B4D8               	btfsc	status,2,c
  2403  00273E  D00B               	goto	l661
  2404                           
  2405                           ;display.c: 184:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  2406  002740  0E00               	movlw	0
  2407  002742  6E11               	movwf	cmd@command,c
  2408  002744  0EFF               	movlw	255
  2409  002746  6E12               	movwf	cmd@command+1,c
  2410  002748  0E00               	movlw	0
  2411  00274A  6E13               	movwf	cmd@command+2,c
  2412  00274C  0E04               	movlw	4
  2413  00274E  6E14               	movwf	cmd@command+3,c
  2414  002750  ECE1  F032         	call	_cmd	;wreg free
  2415                           
  2416                           ;display.c: 185:     } else {
  2417  002754  D00A               	goto	l662
  2418  002756                     l661:
  2419                           
  2420                           ;display.c: 186:         cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255U
      +                          L)<<0)));
  2421  002756  0E3C               	movlw	60
  2422  002758  6E11               	movwf	cmd@command,c
  2423  00275A  0E3C               	movlw	60
  2424  00275C  6E12               	movwf	cmd@command+1,c
  2425  00275E  0E3C               	movlw	60
  2426  002760  6E13               	movwf	cmd@command+2,c
  2427  002762  0E04               	movlw	4
  2428  002764  6E14               	movwf	cmd@command+3,c
  2429  002766  ECE1  F032         	call	_cmd	;wreg free
  2430  00276A                     l662:
  2431                           
  2432                           ;display.c: 188:     cmd(((2UL<<30)|(((10)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  2433  00276A  0E00               	movlw	0
  2434  00276C  6E11               	movwf	cmd@command,c
  2435  00276E  0EE0               	movlw	224
  2436  002770  6E12               	movwf	cmd@command+1,c
  2437  002772  0E4B               	movlw	75
  2438  002774  6E13               	movwf	cmd@command+2,c
  2439  002776  0E81               	movlw	129
  2440  002778  6E14               	movwf	cmd@command+3,c
  2441  00277A  ECE1  F032         	call	_cmd	;wreg free
  2442                           
  2443                           ;display.c: 189:     cmd(((2UL<<30)|(((90)&511UL)<<21)|(((205)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  2444  00277E  0E00               	movlw	0
  2445  002780  6E11               	movwf	cmd@command,c
  2446  002782  0ED0               	movlw	208
  2447  002784  6E12               	movwf	cmd@command+1,c
  2448  002786  0E4C               	movlw	76
  2449  002788  6E13               	movwf	cmd@command+2,c
  2450  00278A  0E8B               	movlw	139
  2451  00278C  6E14               	movwf	cmd@command+3,c
  2452  00278E  ECE1  F032         	call	_cmd	;wreg free
  2453                           
  2454                           ;display.c: 191:     if (radio) {
  2455  002792  501B               	movf	display_status@radio,w,c
  2456  002794  B4D8               	btfsc	status,2,c
  2457  002796  D00B               	goto	l663
  2458                           
  2459                           ;display.c: 192:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  2460  002798  0E00               	movlw	0
  2461  00279A  6E11               	movwf	cmd@command,c
  2462  00279C  0EFF               	movlw	255
  2463  00279E  6E12               	movwf	cmd@command+1,c
  2464  0027A0  0E00               	movlw	0
  2465  0027A2  6E13               	movwf	cmd@command+2,c
  2466  0027A4  0E04               	movlw	4
  2467  0027A6  6E14               	movwf	cmd@command+3,c
  2468  0027A8  ECE1  F032         	call	_cmd	;wreg free
  2469                           
  2470                           ;display.c: 193:     } else {
  2471  0027AC  D00A               	goto	l664
  2472  0027AE                     l663:
  2473                           
  2474                           ;display.c: 194:         cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255U
      +                          L)<<0)));
  2475  0027AE  0E3C               	movlw	60
  2476  0027B0  6E11               	movwf	cmd@command,c
  2477  0027B2  0E3C               	movlw	60
  2478  0027B4  6E12               	movwf	cmd@command+1,c
  2479  0027B6  0E3C               	movlw	60
  2480  0027B8  6E13               	movwf	cmd@command+2,c
  2481  0027BA  0E04               	movlw	4
  2482  0027BC  6E14               	movwf	cmd@command+3,c
  2483  0027BE  ECE1  F032         	call	_cmd	;wreg free
  2484  0027C2                     l664:
  2485                           
  2486                           ;display.c: 196:     cmd(((2UL<<30)|(((100)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  2487  0027C2  0E00               	movlw	0
  2488  0027C4  6E11               	movwf	cmd@command,c
  2489  0027C6  0EE0               	movlw	224
  2490  0027C8  6E12               	movwf	cmd@command+1,c
  2491  0027CA  0E8B               	movlw	139
  2492  0027CC  6E13               	movwf	cmd@command+2,c
  2493  0027CE  0E8C               	movlw	140
  2494  0027D0  6E14               	movwf	cmd@command+3,c
  2495  0027D2  ECE1  F032         	call	_cmd	;wreg free
  2496                           
  2497                           ;display.c: 197:     cmd(((2UL<<30)|(((180)&511UL)<<21)|(((205)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  2498  0027D6  0E00               	movlw	0
  2499  0027D8  6E11               	movwf	cmd@command,c
  2500  0027DA  0ED0               	movlw	208
  2501  0027DC  6E12               	movwf	cmd@command+1,c
  2502  0027DE  0E8C               	movlw	140
  2503  0027E0  6E13               	movwf	cmd@command+2,c
  2504  0027E2  0E96               	movlw	150
  2505  0027E4  6E14               	movwf	cmd@command+3,c
  2506  0027E6  ECE1  F032         	call	_cmd	;wreg free
  2507                           
  2508                           ;display.c: 199:     if (launch) {
  2509  0027EA  5020               	movf	display_status@launch,w,c
  2510  0027EC  B4D8               	btfsc	status,2,c
  2511  0027EE  D00B               	goto	l665
  2512                           
  2513                           ;display.c: 200:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<
      +                          <0)));
  2514  0027F0  0E00               	movlw	0
  2515  0027F2  6E11               	movwf	cmd@command,c
  2516  0027F4  0E00               	movlw	0
  2517  0027F6  6E12               	movwf	cmd@command+1,c
  2518  0027F8  0E00               	movlw	0
  2519  0027FA  6E13               	movwf	cmd@command+2,c
  2520  0027FC  0E04               	movlw	4
  2521  0027FE  6E14               	movwf	cmd@command+3,c
  2522  002800  ECE1  F032         	call	_cmd	;wreg free
  2523                           
  2524                           ;display.c: 201:     } else {
  2525  002804  D00A               	goto	l666
  2526  002806                     l665:
  2527                           
  2528                           ;display.c: 202:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&2
      +                          55UL)<<0)));
  2529  002806  0EFF               	movlw	255
  2530  002808  6E11               	movwf	cmd@command,c
  2531  00280A  0EFF               	movlw	255
  2532  00280C  6E12               	movwf	cmd@command+1,c
  2533  00280E  0EFF               	movlw	255
  2534  002810  6E13               	movwf	cmd@command+2,c
  2535  002812  0E04               	movlw	4
  2536  002814  6E14               	movwf	cmd@command+3,c
  2537  002816  ECE1  F032         	call	_cmd	;wreg free
  2538  00281A                     l666:
  2539                           
  2540                           ;display.c: 204:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 50);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 222);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "Launch"));
  2541  00281A  0E0C               	movlw	12
  2542  00281C  6E11               	movwf	cmd@command,c
  2543  00281E  0EFF               	movlw	255
  2544  002820  6E12               	movwf	cmd@command+1,c
  2545  002822  0EFF               	movlw	255
  2546  002824  6E13               	movwf	cmd@command+2,c
  2547  002826  0EFF               	movlw	255
  2548  002828  6E14               	movwf	cmd@command+3,c
  2549  00282A  ECE1  F032         	call	_cmd	;wreg free
  2550  00282E  504F               	movf	_cmd_offset,w,c
  2551  002830  6E1C               	movwf	??_display_status& (0+255),c
  2552  002832  5050               	movf	_cmd_offset+1,w,c
  2553  002834  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2554  002836  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2555  002838  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2556  00283A  0E00               	movlw	0
  2557  00283C  241C               	addwf	??_display_status,w,c
  2558  00283E  6E04               	movwf	wr16@addr,c
  2559  002840  0E80               	movlw	128
  2560  002842  201D               	addwfc	??_display_status+1,w,c
  2561  002844  6E05               	movwf	wr16@addr+1,c
  2562  002846  0E10               	movlw	16
  2563  002848  201E               	addwfc	??_display_status+2,w,c
  2564  00284A  6E06               	movwf	wr16@addr+2,c
  2565  00284C  0E00               	movlw	0
  2566  00284E  201F               	addwfc	??_display_status+3,w,c
  2567  002850  6E07               	movwf	wr16@addr+3,c
  2568  002852  0E00               	movlw	0
  2569  002854  6E09               	movwf	wr16@value+1,c
  2570  002856  0E32               	movlw	50
  2571  002858  6E08               	movwf	wr16@value,c
  2572  00285A  ECB9  F033         	call	_wr16	;wreg free
  2573  00285E  0E02               	movlw	2
  2574  002860  ECFA  F033         	call	_cmd_incrementn
  2575  002864  504F               	movf	_cmd_offset,w,c
  2576  002866  6E1C               	movwf	??_display_status& (0+255),c
  2577  002868  5050               	movf	_cmd_offset+1,w,c
  2578  00286A  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2579  00286C  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2580  00286E  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2581  002870  0E00               	movlw	0
  2582  002872  241C               	addwf	??_display_status,w,c
  2583  002874  6E04               	movwf	wr16@addr,c
  2584  002876  0E80               	movlw	128
  2585  002878  201D               	addwfc	??_display_status+1,w,c
  2586  00287A  6E05               	movwf	wr16@addr+1,c
  2587  00287C  0E10               	movlw	16
  2588  00287E  201E               	addwfc	??_display_status+2,w,c
  2589  002880  6E06               	movwf	wr16@addr+2,c
  2590  002882  0E00               	movlw	0
  2591  002884  201F               	addwfc	??_display_status+3,w,c
  2592  002886  6E07               	movwf	wr16@addr+3,c
  2593  002888  0E00               	movlw	0
  2594  00288A  6E09               	movwf	wr16@value+1,c
  2595  00288C  0EDE               	movlw	222
  2596  00288E  6E08               	movwf	wr16@value,c
  2597  002890  ECB9  F033         	call	_wr16	;wreg free
  2598  002894  0E02               	movlw	2
  2599  002896  ECFA  F033         	call	_cmd_incrementn
  2600  00289A  504F               	movf	_cmd_offset,w,c
  2601  00289C  6E1C               	movwf	??_display_status& (0+255),c
  2602  00289E  5050               	movf	_cmd_offset+1,w,c
  2603  0028A0  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2604  0028A2  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2605  0028A4  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2606  0028A6  0E00               	movlw	0
  2607  0028A8  241C               	addwf	??_display_status,w,c
  2608  0028AA  6E04               	movwf	wr16@addr,c
  2609  0028AC  0E80               	movlw	128
  2610  0028AE  201D               	addwfc	??_display_status+1,w,c
  2611  0028B0  6E05               	movwf	wr16@addr+1,c
  2612  0028B2  0E10               	movlw	16
  2613  0028B4  201E               	addwfc	??_display_status+2,w,c
  2614  0028B6  6E06               	movwf	wr16@addr+2,c
  2615  0028B8  0E00               	movlw	0
  2616  0028BA  201F               	addwfc	??_display_status+3,w,c
  2617  0028BC  6E07               	movwf	wr16@addr+3,c
  2618  0028BE  0E00               	movlw	0
  2619  0028C0  6E09               	movwf	wr16@value+1,c
  2620  0028C2  0E1C               	movlw	28
  2621  0028C4  6E08               	movwf	wr16@value,c
  2622  0028C6  ECB9  F033         	call	_wr16	;wreg free
  2623  0028CA  0E02               	movlw	2
  2624  0028CC  ECFA  F033         	call	_cmd_incrementn
  2625  0028D0  504F               	movf	_cmd_offset,w,c
  2626  0028D2  6E1C               	movwf	??_display_status& (0+255),c
  2627  0028D4  5050               	movf	_cmd_offset+1,w,c
  2628  0028D6  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2629  0028D8  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2630  0028DA  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2631  0028DC  0E00               	movlw	0
  2632  0028DE  241C               	addwf	??_display_status,w,c
  2633  0028E0  6E04               	movwf	wr16@addr,c
  2634  0028E2  0E80               	movlw	128
  2635  0028E4  201D               	addwfc	??_display_status+1,w,c
  2636  0028E6  6E05               	movwf	wr16@addr+1,c
  2637  0028E8  0E10               	movlw	16
  2638  0028EA  201E               	addwfc	??_display_status+2,w,c
  2639  0028EC  6E06               	movwf	wr16@addr+2,c
  2640  0028EE  0E00               	movlw	0
  2641  0028F0  201F               	addwfc	??_display_status+3,w,c
  2642  0028F2  6E07               	movwf	wr16@addr+3,c
  2643  0028F4  0E06               	movlw	6
  2644  0028F6  6E09               	movwf	wr16@value+1,c
  2645  0028F8  0E00               	movlw	0
  2646  0028FA  6E08               	movwf	wr16@value,c
  2647  0028FC  ECB9  F033         	call	_wr16	;wreg free
  2648  002900  0E02               	movlw	2
  2649  002902  ECFA  F033         	call	_cmd_incrementn
  2650  002906  504F               	movf	_cmd_offset,w,c
  2651  002908  6E1C               	movwf	??_display_status& (0+255),c
  2652  00290A  5050               	movf	_cmd_offset+1,w,c
  2653  00290C  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2654  00290E  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2655  002910  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2656  002912  0E00               	movlw	0
  2657  002914  241C               	addwf	??_display_status,w,c
  2658  002916  6E09               	movwf	wr8s@addr,c
  2659  002918  0E80               	movlw	128
  2660  00291A  201D               	addwfc	??_display_status+1,w,c
  2661  00291C  6E0A               	movwf	wr8s@addr+1,c
  2662  00291E  0E10               	movlw	16
  2663  002920  201E               	addwfc	??_display_status+2,w,c
  2664  002922  6E0B               	movwf	wr8s@addr+2,c
  2665  002924  0E00               	movlw	0
  2666  002926  201F               	addwfc	??_display_status+3,w,c
  2667  002928  6E0C               	movwf	wr8s@addr+3,c
  2668  00292A  0E32               	movlw	low STR_15
  2669  00292C  6E0D               	movwf	wr8s@s,c
  2670  00292E  0E0F               	movlw	high STR_15
  2671  002930  6E0E               	movwf	wr8s@s+1,c
  2672  002932  ECD8  F031         	call	_wr8s	;wreg free
  2673  002936  ECFA  F033         	call	_cmd_incrementn
  2674                           
  2675                           ;display.c: 206:     if (autoShift) {
  2676  00293A  5019               	movf	display_status@autoShift,w,c
  2677  00293C  B4D8               	btfsc	status,2,c
  2678  00293E  D00B               	goto	l667
  2679                           
  2680                           ;display.c: 207:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<
      +                          <0)));
  2681  002940  0E00               	movlw	0
  2682  002942  6E11               	movwf	cmd@command,c
  2683  002944  0E00               	movlw	0
  2684  002946  6E12               	movwf	cmd@command+1,c
  2685  002948  0E00               	movlw	0
  2686  00294A  6E13               	movwf	cmd@command+2,c
  2687  00294C  0E04               	movlw	4
  2688  00294E  6E14               	movwf	cmd@command+3,c
  2689  002950  ECE1  F032         	call	_cmd	;wreg free
  2690                           
  2691                           ;display.c: 208:     } else {
  2692  002954  D00A               	goto	l668
  2693  002956                     l667:
  2694                           
  2695                           ;display.c: 209:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&2
      +                          55UL)<<0)));
  2696  002956  0EFF               	movlw	255
  2697  002958  6E11               	movwf	cmd@command,c
  2698  00295A  0EFF               	movlw	255
  2699  00295C  6E12               	movwf	cmd@command+1,c
  2700  00295E  0EFF               	movlw	255
  2701  002960  6E13               	movwf	cmd@command+2,c
  2702  002962  0E04               	movlw	4
  2703  002964  6E14               	movwf	cmd@command+3,c
  2704  002966  ECE1  F032         	call	_cmd	;wreg free
  2705  00296A                     l668:
  2706                           
  2707                           ;display.c: 211:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 140);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 222);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s
      +                          (1081344UL +cmd_offset, "Auto"));
  2708  00296A  0E0C               	movlw	12
  2709  00296C  6E11               	movwf	cmd@command,c
  2710  00296E  0EFF               	movlw	255
  2711  002970  6E12               	movwf	cmd@command+1,c
  2712  002972  0EFF               	movlw	255
  2713  002974  6E13               	movwf	cmd@command+2,c
  2714  002976  0EFF               	movlw	255
  2715  002978  6E14               	movwf	cmd@command+3,c
  2716  00297A  ECE1  F032         	call	_cmd	;wreg free
  2717  00297E  504F               	movf	_cmd_offset,w,c
  2718  002980  6E1C               	movwf	??_display_status& (0+255),c
  2719  002982  5050               	movf	_cmd_offset+1,w,c
  2720  002984  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2721  002986  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2722  002988  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2723  00298A  0E00               	movlw	0
  2724  00298C  241C               	addwf	??_display_status,w,c
  2725  00298E  6E04               	movwf	wr16@addr,c
  2726  002990  0E80               	movlw	128
  2727  002992  201D               	addwfc	??_display_status+1,w,c
  2728  002994  6E05               	movwf	wr16@addr+1,c
  2729  002996  0E10               	movlw	16
  2730  002998  201E               	addwfc	??_display_status+2,w,c
  2731  00299A  6E06               	movwf	wr16@addr+2,c
  2732  00299C  0E00               	movlw	0
  2733  00299E  201F               	addwfc	??_display_status+3,w,c
  2734  0029A0  6E07               	movwf	wr16@addr+3,c
  2735  0029A2  0E00               	movlw	0
  2736  0029A4  6E09               	movwf	wr16@value+1,c
  2737  0029A6  0E8C               	movlw	140
  2738  0029A8  6E08               	movwf	wr16@value,c
  2739  0029AA  ECB9  F033         	call	_wr16	;wreg free
  2740  0029AE  0E02               	movlw	2
  2741  0029B0  ECFA  F033         	call	_cmd_incrementn
  2742  0029B4  504F               	movf	_cmd_offset,w,c
  2743  0029B6  6E1C               	movwf	??_display_status& (0+255),c
  2744  0029B8  5050               	movf	_cmd_offset+1,w,c
  2745  0029BA  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2746  0029BC  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2747  0029BE  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2748  0029C0  0E00               	movlw	0
  2749  0029C2  241C               	addwf	??_display_status,w,c
  2750  0029C4  6E04               	movwf	wr16@addr,c
  2751  0029C6  0E80               	movlw	128
  2752  0029C8  201D               	addwfc	??_display_status+1,w,c
  2753  0029CA  6E05               	movwf	wr16@addr+1,c
  2754  0029CC  0E10               	movlw	16
  2755  0029CE  201E               	addwfc	??_display_status+2,w,c
  2756  0029D0  6E06               	movwf	wr16@addr+2,c
  2757  0029D2  0E00               	movlw	0
  2758  0029D4  201F               	addwfc	??_display_status+3,w,c
  2759  0029D6  6E07               	movwf	wr16@addr+3,c
  2760  0029D8  0E00               	movlw	0
  2761  0029DA  6E09               	movwf	wr16@value+1,c
  2762  0029DC  0EDE               	movlw	222
  2763  0029DE  6E08               	movwf	wr16@value,c
  2764  0029E0  ECB9  F033         	call	_wr16	;wreg free
  2765  0029E4  0E02               	movlw	2
  2766  0029E6  ECFA  F033         	call	_cmd_incrementn
  2767  0029EA  504F               	movf	_cmd_offset,w,c
  2768  0029EC  6E1C               	movwf	??_display_status& (0+255),c
  2769  0029EE  5050               	movf	_cmd_offset+1,w,c
  2770  0029F0  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2771  0029F2  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2772  0029F4  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2773  0029F6  0E00               	movlw	0
  2774  0029F8  241C               	addwf	??_display_status,w,c
  2775  0029FA  6E04               	movwf	wr16@addr,c
  2776  0029FC  0E80               	movlw	128
  2777  0029FE  201D               	addwfc	??_display_status+1,w,c
  2778  002A00  6E05               	movwf	wr16@addr+1,c
  2779  002A02  0E10               	movlw	16
  2780  002A04  201E               	addwfc	??_display_status+2,w,c
  2781  002A06  6E06               	movwf	wr16@addr+2,c
  2782  002A08  0E00               	movlw	0
  2783  002A0A  201F               	addwfc	??_display_status+3,w,c
  2784  002A0C  6E07               	movwf	wr16@addr+3,c
  2785  002A0E  0E00               	movlw	0
  2786  002A10  6E09               	movwf	wr16@value+1,c
  2787  002A12  0E1C               	movlw	28
  2788  002A14  6E08               	movwf	wr16@value,c
  2789  002A16  ECB9  F033         	call	_wr16	;wreg free
  2790  002A1A  0E02               	movlw	2
  2791  002A1C  ECFA  F033         	call	_cmd_incrementn
  2792  002A20  504F               	movf	_cmd_offset,w,c
  2793  002A22  6E1C               	movwf	??_display_status& (0+255),c
  2794  002A24  5050               	movf	_cmd_offset+1,w,c
  2795  002A26  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2796  002A28  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2797  002A2A  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2798  002A2C  0E00               	movlw	0
  2799  002A2E  241C               	addwf	??_display_status,w,c
  2800  002A30  6E04               	movwf	wr16@addr,c
  2801  002A32  0E80               	movlw	128
  2802  002A34  201D               	addwfc	??_display_status+1,w,c
  2803  002A36  6E05               	movwf	wr16@addr+1,c
  2804  002A38  0E10               	movlw	16
  2805  002A3A  201E               	addwfc	??_display_status+2,w,c
  2806  002A3C  6E06               	movwf	wr16@addr+2,c
  2807  002A3E  0E00               	movlw	0
  2808  002A40  201F               	addwfc	??_display_status+3,w,c
  2809  002A42  6E07               	movwf	wr16@addr+3,c
  2810  002A44  0E06               	movlw	6
  2811  002A46  6E09               	movwf	wr16@value+1,c
  2812  002A48  0E00               	movlw	0
  2813  002A4A  6E08               	movwf	wr16@value,c
  2814  002A4C  ECB9  F033         	call	_wr16	;wreg free
  2815  002A50  0E02               	movlw	2
  2816  002A52  ECFA  F033         	call	_cmd_incrementn
  2817  002A56  504F               	movf	_cmd_offset,w,c
  2818  002A58  6E1C               	movwf	??_display_status& (0+255),c
  2819  002A5A  5050               	movf	_cmd_offset+1,w,c
  2820  002A5C  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2821  002A5E  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2822  002A60  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2823  002A62  0E00               	movlw	0
  2824  002A64  241C               	addwf	??_display_status,w,c
  2825  002A66  6E09               	movwf	wr8s@addr,c
  2826  002A68  0E80               	movlw	128
  2827  002A6A  201D               	addwfc	??_display_status+1,w,c
  2828  002A6C  6E0A               	movwf	wr8s@addr+1,c
  2829  002A6E  0E10               	movlw	16
  2830  002A70  201E               	addwfc	??_display_status+2,w,c
  2831  002A72  6E0B               	movwf	wr8s@addr+2,c
  2832  002A74  0E00               	movlw	0
  2833  002A76  201F               	addwfc	??_display_status+3,w,c
  2834  002A78  6E0C               	movwf	wr8s@addr+3,c
  2835  002A7A  0E6F               	movlw	low STR_16
  2836  002A7C  6E0D               	movwf	wr8s@s,c
  2837  002A7E  0E0F               	movlw	high STR_16
  2838  002A80  6E0E               	movwf	wr8s@s+1,c
  2839  002A82  ECD8  F031         	call	_wr8s	;wreg free
  2840  002A86  ECFA  F033         	call	_cmd_incrementn
  2841                           
  2842                           ;display.c: 213:     if (clutch) {
  2843  002A8A  501A               	movf	display_status@clutch,w,c
  2844  002A8C  B4D8               	btfsc	status,2,c
  2845  002A8E  D00B               	goto	l669
  2846                           
  2847                           ;display.c: 214:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<
      +                          <0)));
  2848  002A90  0E00               	movlw	0
  2849  002A92  6E11               	movwf	cmd@command,c
  2850  002A94  0E00               	movlw	0
  2851  002A96  6E12               	movwf	cmd@command+1,c
  2852  002A98  0E00               	movlw	0
  2853  002A9A  6E13               	movwf	cmd@command+2,c
  2854  002A9C  0E04               	movlw	4
  2855  002A9E  6E14               	movwf	cmd@command+3,c
  2856  002AA0  ECE1  F032         	call	_cmd	;wreg free
  2857                           
  2858                           ;display.c: 215:     } else {
  2859  002AA4  D00A               	goto	l670
  2860  002AA6                     l669:
  2861                           
  2862                           ;display.c: 216:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&2
      +                          55UL)<<0)));
  2863  002AA6  0EFF               	movlw	255
  2864  002AA8  6E11               	movwf	cmd@command,c
  2865  002AAA  0EFF               	movlw	255
  2866  002AAC  6E12               	movwf	cmd@command+1,c
  2867  002AAE  0EFF               	movlw	255
  2868  002AB0  6E13               	movwf	cmd@command+2,c
  2869  002AB2  0E04               	movlw	4
  2870  002AB4  6E14               	movwf	cmd@command+3,c
  2871  002AB6  ECE1  F032         	call	_cmd	;wreg free
  2872  002ABA                     l670:
  2873                           
  2874                           ;display.c: 218:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 50);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 197);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "Clutch"));
  2875  002ABA  0E0C               	movlw	12
  2876  002ABC  6E11               	movwf	cmd@command,c
  2877  002ABE  0EFF               	movlw	255
  2878  002AC0  6E12               	movwf	cmd@command+1,c
  2879  002AC2  0EFF               	movlw	255
  2880  002AC4  6E13               	movwf	cmd@command+2,c
  2881  002AC6  0EFF               	movlw	255
  2882  002AC8  6E14               	movwf	cmd@command+3,c
  2883  002ACA  ECE1  F032         	call	_cmd	;wreg free
  2884  002ACE  504F               	movf	_cmd_offset,w,c
  2885  002AD0  6E1C               	movwf	??_display_status& (0+255),c
  2886  002AD2  5050               	movf	_cmd_offset+1,w,c
  2887  002AD4  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2888  002AD6  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2889  002AD8  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2890  002ADA  0E00               	movlw	0
  2891  002ADC  241C               	addwf	??_display_status,w,c
  2892  002ADE  6E04               	movwf	wr16@addr,c
  2893  002AE0  0E80               	movlw	128
  2894  002AE2  201D               	addwfc	??_display_status+1,w,c
  2895  002AE4  6E05               	movwf	wr16@addr+1,c
  2896  002AE6  0E10               	movlw	16
  2897  002AE8  201E               	addwfc	??_display_status+2,w,c
  2898  002AEA  6E06               	movwf	wr16@addr+2,c
  2899  002AEC  0E00               	movlw	0
  2900  002AEE  201F               	addwfc	??_display_status+3,w,c
  2901  002AF0  6E07               	movwf	wr16@addr+3,c
  2902  002AF2  0E00               	movlw	0
  2903  002AF4  6E09               	movwf	wr16@value+1,c
  2904  002AF6  0E32               	movlw	50
  2905  002AF8  6E08               	movwf	wr16@value,c
  2906  002AFA  ECB9  F033         	call	_wr16	;wreg free
  2907  002AFE  0E02               	movlw	2
  2908  002B00  ECFA  F033         	call	_cmd_incrementn
  2909  002B04  504F               	movf	_cmd_offset,w,c
  2910  002B06  6E1C               	movwf	??_display_status& (0+255),c
  2911  002B08  5050               	movf	_cmd_offset+1,w,c
  2912  002B0A  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2913  002B0C  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2914  002B0E  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2915  002B10  0E00               	movlw	0
  2916  002B12  241C               	addwf	??_display_status,w,c
  2917  002B14  6E04               	movwf	wr16@addr,c
  2918  002B16  0E80               	movlw	128
  2919  002B18  201D               	addwfc	??_display_status+1,w,c
  2920  002B1A  6E05               	movwf	wr16@addr+1,c
  2921  002B1C  0E10               	movlw	16
  2922  002B1E  201E               	addwfc	??_display_status+2,w,c
  2923  002B20  6E06               	movwf	wr16@addr+2,c
  2924  002B22  0E00               	movlw	0
  2925  002B24  201F               	addwfc	??_display_status+3,w,c
  2926  002B26  6E07               	movwf	wr16@addr+3,c
  2927  002B28  0E00               	movlw	0
  2928  002B2A  6E09               	movwf	wr16@value+1,c
  2929  002B2C  0EC5               	movlw	197
  2930  002B2E  6E08               	movwf	wr16@value,c
  2931  002B30  ECB9  F033         	call	_wr16	;wreg free
  2932  002B34  0E02               	movlw	2
  2933  002B36  ECFA  F033         	call	_cmd_incrementn
  2934  002B3A  504F               	movf	_cmd_offset,w,c
  2935  002B3C  6E1C               	movwf	??_display_status& (0+255),c
  2936  002B3E  5050               	movf	_cmd_offset+1,w,c
  2937  002B40  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2938  002B42  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2939  002B44  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2940  002B46  0E00               	movlw	0
  2941  002B48  241C               	addwf	??_display_status,w,c
  2942  002B4A  6E04               	movwf	wr16@addr,c
  2943  002B4C  0E80               	movlw	128
  2944  002B4E  201D               	addwfc	??_display_status+1,w,c
  2945  002B50  6E05               	movwf	wr16@addr+1,c
  2946  002B52  0E10               	movlw	16
  2947  002B54  201E               	addwfc	??_display_status+2,w,c
  2948  002B56  6E06               	movwf	wr16@addr+2,c
  2949  002B58  0E00               	movlw	0
  2950  002B5A  201F               	addwfc	??_display_status+3,w,c
  2951  002B5C  6E07               	movwf	wr16@addr+3,c
  2952  002B5E  0E00               	movlw	0
  2953  002B60  6E09               	movwf	wr16@value+1,c
  2954  002B62  0E1C               	movlw	28
  2955  002B64  6E08               	movwf	wr16@value,c
  2956  002B66  ECB9  F033         	call	_wr16	;wreg free
  2957  002B6A  0E02               	movlw	2
  2958  002B6C  ECFA  F033         	call	_cmd_incrementn
  2959  002B70  504F               	movf	_cmd_offset,w,c
  2960  002B72  6E1C               	movwf	??_display_status& (0+255),c
  2961  002B74  5050               	movf	_cmd_offset+1,w,c
  2962  002B76  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2963  002B78  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2964  002B7A  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2965  002B7C  0E00               	movlw	0
  2966  002B7E  241C               	addwf	??_display_status,w,c
  2967  002B80  6E04               	movwf	wr16@addr,c
  2968  002B82  0E80               	movlw	128
  2969  002B84  201D               	addwfc	??_display_status+1,w,c
  2970  002B86  6E05               	movwf	wr16@addr+1,c
  2971  002B88  0E10               	movlw	16
  2972  002B8A  201E               	addwfc	??_display_status+2,w,c
  2973  002B8C  6E06               	movwf	wr16@addr+2,c
  2974  002B8E  0E00               	movlw	0
  2975  002B90  201F               	addwfc	??_display_status+3,w,c
  2976  002B92  6E07               	movwf	wr16@addr+3,c
  2977  002B94  0E06               	movlw	6
  2978  002B96  6E09               	movwf	wr16@value+1,c
  2979  002B98  0E00               	movlw	0
  2980  002B9A  6E08               	movwf	wr16@value,c
  2981  002B9C  ECB9  F033         	call	_wr16	;wreg free
  2982  002BA0  0E02               	movlw	2
  2983  002BA2  ECFA  F033         	call	_cmd_incrementn
  2984  002BA6  504F               	movf	_cmd_offset,w,c
  2985  002BA8  6E1C               	movwf	??_display_status& (0+255),c
  2986  002BAA  5050               	movf	_cmd_offset+1,w,c
  2987  002BAC  6E1D               	movwf	(??_display_status+1)& (0+255),c
  2988  002BAE  6A1E               	clrf	(??_display_status+2)& (0+255),c
  2989  002BB0  6A1F               	clrf	(??_display_status+3)& (0+255),c
  2990  002BB2  0E00               	movlw	0
  2991  002BB4  241C               	addwf	??_display_status,w,c
  2992  002BB6  6E09               	movwf	wr8s@addr,c
  2993  002BB8  0E80               	movlw	128
  2994  002BBA  201D               	addwfc	??_display_status+1,w,c
  2995  002BBC  6E0A               	movwf	wr8s@addr+1,c
  2996  002BBE  0E10               	movlw	16
  2997  002BC0  201E               	addwfc	??_display_status+2,w,c
  2998  002BC2  6E0B               	movwf	wr8s@addr+2,c
  2999  002BC4  0E00               	movlw	0
  3000  002BC6  201F               	addwfc	??_display_status+3,w,c
  3001  002BC8  6E0C               	movwf	wr8s@addr+3,c
  3002  002BCA  0E39               	movlw	low STR_17
  3003  002BCC  6E0D               	movwf	wr8s@s,c
  3004  002BCE  0E0F               	movlw	high STR_17
  3005  002BD0  6E0E               	movwf	wr8s@s+1,c
  3006  002BD2  ECD8  F031         	call	_wr8s	;wreg free
  3007  002BD6  ECFA  F033         	call	_cmd_incrementn
  3008                           
  3009                           ;display.c: 220:     if (radio) {
  3010  002BDA  501B               	movf	display_status@radio,w,c
  3011  002BDC  B4D8               	btfsc	status,2,c
  3012  002BDE  D00B               	goto	l671
  3013                           
  3014                           ;display.c: 221:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<
      +                          <0)));
  3015  002BE0  0E00               	movlw	0
  3016  002BE2  6E11               	movwf	cmd@command,c
  3017  002BE4  0E00               	movlw	0
  3018  002BE6  6E12               	movwf	cmd@command+1,c
  3019  002BE8  0E00               	movlw	0
  3020  002BEA  6E13               	movwf	cmd@command+2,c
  3021  002BEC  0E04               	movlw	4
  3022  002BEE  6E14               	movwf	cmd@command+3,c
  3023  002BF0  ECE1  F032         	call	_cmd	;wreg free
  3024                           
  3025                           ;display.c: 222:     } else {
  3026  002BF4  D00A               	goto	l672
  3027  002BF6                     l671:
  3028                           
  3029                           ;display.c: 223:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&2
      +                          55UL)<<0)));
  3030  002BF6  0EFF               	movlw	255
  3031  002BF8  6E11               	movwf	cmd@command,c
  3032  002BFA  0EFF               	movlw	255
  3033  002BFC  6E12               	movwf	cmd@command+1,c
  3034  002BFE  0EFF               	movlw	255
  3035  002C00  6E13               	movwf	cmd@command+2,c
  3036  002C02  0E04               	movlw	4
  3037  002C04  6E14               	movwf	cmd@command+3,c
  3038  002C06  ECE1  F032         	call	_cmd	;wreg free
  3039  002C0A                     l672:
  3040                           
  3041                           ;display.c: 225:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 140);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 197);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s
      +                          (1081344UL +cmd_offset, "Radio"));
  3042  002C0A  0E0C               	movlw	12
  3043  002C0C  6E11               	movwf	cmd@command,c
  3044  002C0E  0EFF               	movlw	255
  3045  002C10  6E12               	movwf	cmd@command+1,c
  3046  002C12  0EFF               	movlw	255
  3047  002C14  6E13               	movwf	cmd@command+2,c
  3048  002C16  0EFF               	movlw	255
  3049  002C18  6E14               	movwf	cmd@command+3,c
  3050  002C1A  ECE1  F032         	call	_cmd	;wreg free
  3051  002C1E  504F               	movf	_cmd_offset,w,c
  3052  002C20  6E1C               	movwf	??_display_status& (0+255),c
  3053  002C22  5050               	movf	_cmd_offset+1,w,c
  3054  002C24  6E1D               	movwf	(??_display_status+1)& (0+255),c
  3055  002C26  6A1E               	clrf	(??_display_status+2)& (0+255),c
  3056  002C28  6A1F               	clrf	(??_display_status+3)& (0+255),c
  3057  002C2A  0E00               	movlw	0
  3058  002C2C  241C               	addwf	??_display_status,w,c
  3059  002C2E  6E04               	movwf	wr16@addr,c
  3060  002C30  0E80               	movlw	128
  3061  002C32  201D               	addwfc	??_display_status+1,w,c
  3062  002C34  6E05               	movwf	wr16@addr+1,c
  3063  002C36  0E10               	movlw	16
  3064  002C38  201E               	addwfc	??_display_status+2,w,c
  3065  002C3A  6E06               	movwf	wr16@addr+2,c
  3066  002C3C  0E00               	movlw	0
  3067  002C3E  201F               	addwfc	??_display_status+3,w,c
  3068  002C40  6E07               	movwf	wr16@addr+3,c
  3069  002C42  0E00               	movlw	0
  3070  002C44  6E09               	movwf	wr16@value+1,c
  3071  002C46  0E8C               	movlw	140
  3072  002C48  6E08               	movwf	wr16@value,c
  3073  002C4A  ECB9  F033         	call	_wr16	;wreg free
  3074  002C4E  0E02               	movlw	2
  3075  002C50  ECFA  F033         	call	_cmd_incrementn
  3076  002C54  504F               	movf	_cmd_offset,w,c
  3077  002C56  6E1C               	movwf	??_display_status& (0+255),c
  3078  002C58  5050               	movf	_cmd_offset+1,w,c
  3079  002C5A  6E1D               	movwf	(??_display_status+1)& (0+255),c
  3080  002C5C  6A1E               	clrf	(??_display_status+2)& (0+255),c
  3081  002C5E  6A1F               	clrf	(??_display_status+3)& (0+255),c
  3082  002C60  0E00               	movlw	0
  3083  002C62  241C               	addwf	??_display_status,w,c
  3084  002C64  6E04               	movwf	wr16@addr,c
  3085  002C66  0E80               	movlw	128
  3086  002C68  201D               	addwfc	??_display_status+1,w,c
  3087  002C6A  6E05               	movwf	wr16@addr+1,c
  3088  002C6C  0E10               	movlw	16
  3089  002C6E  201E               	addwfc	??_display_status+2,w,c
  3090  002C70  6E06               	movwf	wr16@addr+2,c
  3091  002C72  0E00               	movlw	0
  3092  002C74  201F               	addwfc	??_display_status+3,w,c
  3093  002C76  6E07               	movwf	wr16@addr+3,c
  3094  002C78  0E00               	movlw	0
  3095  002C7A  6E09               	movwf	wr16@value+1,c
  3096  002C7C  0EC5               	movlw	197
  3097  002C7E  6E08               	movwf	wr16@value,c
  3098  002C80  ECB9  F033         	call	_wr16	;wreg free
  3099  002C84  0E02               	movlw	2
  3100  002C86  ECFA  F033         	call	_cmd_incrementn
  3101  002C8A  504F               	movf	_cmd_offset,w,c
  3102  002C8C  6E1C               	movwf	??_display_status& (0+255),c
  3103  002C8E  5050               	movf	_cmd_offset+1,w,c
  3104  002C90  6E1D               	movwf	(??_display_status+1)& (0+255),c
  3105  002C92  6A1E               	clrf	(??_display_status+2)& (0+255),c
  3106  002C94  6A1F               	clrf	(??_display_status+3)& (0+255),c
  3107  002C96  0E00               	movlw	0
  3108  002C98  241C               	addwf	??_display_status,w,c
  3109  002C9A  6E04               	movwf	wr16@addr,c
  3110  002C9C  0E80               	movlw	128
  3111  002C9E  201D               	addwfc	??_display_status+1,w,c
  3112  002CA0  6E05               	movwf	wr16@addr+1,c
  3113  002CA2  0E10               	movlw	16
  3114  002CA4  201E               	addwfc	??_display_status+2,w,c
  3115  002CA6  6E06               	movwf	wr16@addr+2,c
  3116  002CA8  0E00               	movlw	0
  3117  002CAA  201F               	addwfc	??_display_status+3,w,c
  3118  002CAC  6E07               	movwf	wr16@addr+3,c
  3119  002CAE  0E00               	movlw	0
  3120  002CB0  6E09               	movwf	wr16@value+1,c
  3121  002CB2  0E1C               	movlw	28
  3122  002CB4  6E08               	movwf	wr16@value,c
  3123  002CB6  ECB9  F033         	call	_wr16	;wreg free
  3124  002CBA  0E02               	movlw	2
  3125  002CBC  ECFA  F033         	call	_cmd_incrementn
  3126  002CC0  504F               	movf	_cmd_offset,w,c
  3127  002CC2  6E1C               	movwf	??_display_status& (0+255),c
  3128  002CC4  5050               	movf	_cmd_offset+1,w,c
  3129  002CC6  6E1D               	movwf	(??_display_status+1)& (0+255),c
  3130  002CC8  6A1E               	clrf	(??_display_status+2)& (0+255),c
  3131  002CCA  6A1F               	clrf	(??_display_status+3)& (0+255),c
  3132  002CCC  0E00               	movlw	0
  3133  002CCE  241C               	addwf	??_display_status,w,c
  3134  002CD0  6E04               	movwf	wr16@addr,c
  3135  002CD2  0E80               	movlw	128
  3136  002CD4  201D               	addwfc	??_display_status+1,w,c
  3137  002CD6  6E05               	movwf	wr16@addr+1,c
  3138  002CD8  0E10               	movlw	16
  3139  002CDA  201E               	addwfc	??_display_status+2,w,c
  3140  002CDC  6E06               	movwf	wr16@addr+2,c
  3141  002CDE  0E00               	movlw	0
  3142  002CE0  201F               	addwfc	??_display_status+3,w,c
  3143  002CE2  6E07               	movwf	wr16@addr+3,c
  3144  002CE4  0E06               	movlw	6
  3145  002CE6  6E09               	movwf	wr16@value+1,c
  3146  002CE8  0E00               	movlw	0
  3147  002CEA  6E08               	movwf	wr16@value,c
  3148  002CEC  ECB9  F033         	call	_wr16	;wreg free
  3149  002CF0  0E02               	movlw	2
  3150  002CF2  ECFA  F033         	call	_cmd_incrementn
  3151  002CF6  504F               	movf	_cmd_offset,w,c
  3152  002CF8  6E1C               	movwf	??_display_status& (0+255),c
  3153  002CFA  5050               	movf	_cmd_offset+1,w,c
  3154  002CFC  6E1D               	movwf	(??_display_status+1)& (0+255),c
  3155  002CFE  6A1E               	clrf	(??_display_status+2)& (0+255),c
  3156  002D00  6A1F               	clrf	(??_display_status+3)& (0+255),c
  3157  002D02  0E00               	movlw	0
  3158  002D04  241C               	addwf	??_display_status,w,c
  3159  002D06  6E09               	movwf	wr8s@addr,c
  3160  002D08  0E80               	movlw	128
  3161  002D0A  201D               	addwfc	??_display_status+1,w,c
  3162  002D0C  6E0A               	movwf	wr8s@addr+1,c
  3163  002D0E  0E10               	movlw	16
  3164  002D10  201E               	addwfc	??_display_status+2,w,c
  3165  002D12  6E0B               	movwf	wr8s@addr+2,c
  3166  002D14  0E00               	movlw	0
  3167  002D16  201F               	addwfc	??_display_status+3,w,c
  3168  002D18  6E0C               	movwf	wr8s@addr+3,c
  3169  002D1A  0E4D               	movlw	low STR_18
  3170  002D1C  6E0D               	movwf	wr8s@s,c
  3171  002D1E  0E0F               	movlw	high STR_18
  3172  002D20  6E0E               	movwf	wr8s@s+1,c
  3173  002D22  ECD8  F031         	call	_wr8s	;wreg free
  3174  002D26  ECFA  F033         	call	_cmd_incrementn
  3175  002D2A  0012               	return		;funcret
  3176  002D2C                     __end_of_display_status:
  3177                           	opt stack 0
  3178                           tblptru	equ	0xFF8
  3179                           tblptrh	equ	0xFF7
  3180                           tblptrl	equ	0xFF6
  3181                           tablat	equ	0xFF5
  3182                           intcon	equ	0xFF2
  3183                           postinc0	equ	0xFEE
  3184                           wreg	equ	0xFE8
  3185                           postdec1	equ	0xFE5
  3186                           plusw1	equ	0xFE3
  3187                           fsr1l	equ	0xFE1
  3188                           plusw2	equ	0xFDB
  3189                           status	equ	0xFD8
  3190                           
  3191 ;; *************** function _display_laptime *****************
  3192 ;; Defined at:
  3193 ;;		line 228 in file "display.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  current_int     2   24[COMRAM] int 
  3196 ;;  current_dec     2   26[COMRAM] int 
  3197 ;;  best_int        2   28[COMRAM] int 
  3198 ;;  best_dec        2   30[COMRAM] int 
  3199 ;;  last_int        2   32[COMRAM] int 
  3200 ;;  last_dec        2   34[COMRAM] int 
  3201 ;;  lap             2   36[COMRAM] int 
  3202 ;;  best_lap        2   38[COMRAM] int 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  time_differe    2   46[COMRAM] int 
  3205 ;;  time_differe    2   44[COMRAM] int 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3215 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3216 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3217 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3218 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3219 ;;Total ram usage:       24 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    7
  3222 ;; This function calls:
  3223 ;;		_cmd
  3224 ;;		_cmd_incrementn
  3225 ;;		_wr16
  3226 ;;		_wr8s
  3227 ;; This function is called by:
  3228 ;;		_main
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           	psect	text3
  3233  003308                     __ptext3:
  3234                           	opt stack 0
  3235  003308                     _display_laptime:
  3236                           	opt stack 23
  3237                           
  3238                           ;display.c: 238:     int time_difference_integer = last_int - best_int;
  3239                           
  3240                           ;incstack = 0
  3241  003308  C01D  F029         	movff	display_laptime@best_int,??_display_laptime
  3242  00330C  C01E  F02A         	movff	display_laptime@best_int+1,??_display_laptime+1
  3243  003310  1E29               	comf	??_display_laptime,f,c
  3244  003312  1E2A               	comf	??_display_laptime+1,f,c
  3245  003314  4A29               	infsnz	??_display_laptime,f,c
  3246  003316  2A2A               	incf	??_display_laptime+1,f,c
  3247  003318  5021               	movf	display_laptime@last_int,w,c
  3248  00331A  2429               	addwf	??_display_laptime,w,c
  3249  00331C  6E2F               	movwf	display_laptime@time_difference_integer,c
  3250  00331E  5022               	movf	display_laptime@last_int+1,w,c
  3251  003320  202A               	addwfc	??_display_laptime+1,w,c
  3252  003322  6E30               	movwf	display_laptime@time_difference_integer+1,c
  3253                           
  3254                           ;display.c: 239:     int time_difference_decimal = last_dec - best_dec;
  3255  003324  C01F  F029         	movff	display_laptime@best_dec,??_display_laptime
  3256  003328  C020  F02A         	movff	display_laptime@best_dec+1,??_display_laptime+1
  3257  00332C  1E29               	comf	??_display_laptime,f,c
  3258  00332E  1E2A               	comf	??_display_laptime+1,f,c
  3259  003330  4A29               	infsnz	??_display_laptime,f,c
  3260  003332  2A2A               	incf	??_display_laptime+1,f,c
  3261  003334  5023               	movf	display_laptime@last_dec,w,c
  3262  003336  2429               	addwf	??_display_laptime,w,c
  3263  003338  6E2D               	movwf	display_laptime@time_difference_decimal,c
  3264  00333A  5024               	movf	display_laptime@last_dec+1,w,c
  3265  00333C  202A               	addwfc	??_display_laptime+1,w,c
  3266  00333E  6E2E               	movwf	display_laptime@time_difference_decimal+1,c
  3267                           
  3268                           ;display.c: 241:     if(time_difference_integer > 0) {
  3269  003340  BE30               	btfsc	display_laptime@time_difference_integer+1,7,c
  3270  003342  D0A0               	goto	l676
  3271  003344  5030               	movf	display_laptime@time_difference_integer+1,w,c
  3272  003346  E103               	bnz	u1610
  3273  003348  042F               	decf	display_laptime@time_difference_integer,w,c
  3274  00334A  A0D8               	btfss	status,0,c
  3275  00334C  D09B               	goto	l676
  3276  00334E                     u1610:
  3277                           
  3278                           ;display.c: 242:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  3279  00334E  0E00               	movlw	0
  3280  003350  6E11               	movwf	cmd@command,c
  3281  003352  0E00               	movlw	0
  3282  003354  6E12               	movwf	cmd@command+1,c
  3283  003356  0EFF               	movlw	255
  3284  003358  6E13               	movwf	cmd@command+2,c
  3285  00335A  0E04               	movlw	4
  3286  00335C  6E14               	movwf	cmd@command+3,c
  3287  00335E  ECE1  F032         	call	_cmd	;wreg free
  3288                           
  3289                           ;display.c: 243:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 362);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 195);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "+"));
  3290  003362  0E0C               	movlw	12
  3291  003364  6E11               	movwf	cmd@command,c
  3292  003366  0EFF               	movlw	255
  3293  003368  6E12               	movwf	cmd@command+1,c
  3294  00336A  0EFF               	movlw	255
  3295  00336C  6E13               	movwf	cmd@command+2,c
  3296  00336E  0EFF               	movlw	255
  3297  003370  6E14               	movwf	cmd@command+3,c
  3298  003372  ECE1  F032         	call	_cmd	;wreg free
  3299  003376  504F               	movf	_cmd_offset,w,c
  3300  003378  6E29               	movwf	??_display_laptime& (0+255),c
  3301  00337A  5050               	movf	_cmd_offset+1,w,c
  3302  00337C  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3303  00337E  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3304  003380  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3305  003382  0E00               	movlw	0
  3306  003384  2429               	addwf	??_display_laptime,w,c
  3307  003386  6E04               	movwf	wr16@addr,c
  3308  003388  0E80               	movlw	128
  3309  00338A  202A               	addwfc	??_display_laptime+1,w,c
  3310  00338C  6E05               	movwf	wr16@addr+1,c
  3311  00338E  0E10               	movlw	16
  3312  003390  202B               	addwfc	??_display_laptime+2,w,c
  3313  003392  6E06               	movwf	wr16@addr+2,c
  3314  003394  0E00               	movlw	0
  3315  003396  202C               	addwfc	??_display_laptime+3,w,c
  3316  003398  6E07               	movwf	wr16@addr+3,c
  3317  00339A  0E01               	movlw	1
  3318  00339C  6E09               	movwf	wr16@value+1,c
  3319  00339E  0E6A               	movlw	106
  3320  0033A0  6E08               	movwf	wr16@value,c
  3321  0033A2  ECB9  F033         	call	_wr16	;wreg free
  3322  0033A6  0E02               	movlw	2
  3323  0033A8  ECFA  F033         	call	_cmd_incrementn
  3324  0033AC  504F               	movf	_cmd_offset,w,c
  3325  0033AE  6E29               	movwf	??_display_laptime& (0+255),c
  3326  0033B0  5050               	movf	_cmd_offset+1,w,c
  3327  0033B2  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3328  0033B4  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3329  0033B6  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3330  0033B8  0E00               	movlw	0
  3331  0033BA  2429               	addwf	??_display_laptime,w,c
  3332  0033BC  6E04               	movwf	wr16@addr,c
  3333  0033BE  0E80               	movlw	128
  3334  0033C0  202A               	addwfc	??_display_laptime+1,w,c
  3335  0033C2  6E05               	movwf	wr16@addr+1,c
  3336  0033C4  0E10               	movlw	16
  3337  0033C6  202B               	addwfc	??_display_laptime+2,w,c
  3338  0033C8  6E06               	movwf	wr16@addr+2,c
  3339  0033CA  0E00               	movlw	0
  3340  0033CC  202C               	addwfc	??_display_laptime+3,w,c
  3341  0033CE  6E07               	movwf	wr16@addr+3,c
  3342  0033D0  0E00               	movlw	0
  3343  0033D2  6E09               	movwf	wr16@value+1,c
  3344  0033D4  0EC3               	movlw	195
  3345  0033D6  6E08               	movwf	wr16@value,c
  3346  0033D8  ECB9  F033         	call	_wr16	;wreg free
  3347  0033DC  0E02               	movlw	2
  3348  0033DE  ECFA  F033         	call	_cmd_incrementn
  3349  0033E2  504F               	movf	_cmd_offset,w,c
  3350  0033E4  6E29               	movwf	??_display_laptime& (0+255),c
  3351  0033E6  5050               	movf	_cmd_offset+1,w,c
  3352  0033E8  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3353  0033EA  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3354  0033EC  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3355  0033EE  0E00               	movlw	0
  3356  0033F0  2429               	addwf	??_display_laptime,w,c
  3357  0033F2  6E04               	movwf	wr16@addr,c
  3358  0033F4  0E80               	movlw	128
  3359  0033F6  202A               	addwfc	??_display_laptime+1,w,c
  3360  0033F8  6E05               	movwf	wr16@addr+1,c
  3361  0033FA  0E10               	movlw	16
  3362  0033FC  202B               	addwfc	??_display_laptime+2,w,c
  3363  0033FE  6E06               	movwf	wr16@addr+2,c
  3364  003400  0E00               	movlw	0
  3365  003402  202C               	addwfc	??_display_laptime+3,w,c
  3366  003404  6E07               	movwf	wr16@addr+3,c
  3367  003406  0E00               	movlw	0
  3368  003408  6E09               	movwf	wr16@value+1,c
  3369  00340A  0E1E               	movlw	30
  3370  00340C  6E08               	movwf	wr16@value,c
  3371  00340E  ECB9  F033         	call	_wr16	;wreg free
  3372  003412  0E02               	movlw	2
  3373  003414  ECFA  F033         	call	_cmd_incrementn
  3374  003418  504F               	movf	_cmd_offset,w,c
  3375  00341A  6E29               	movwf	??_display_laptime& (0+255),c
  3376  00341C  5050               	movf	_cmd_offset+1,w,c
  3377  00341E  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3378  003420  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3379  003422  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3380  003424  0E00               	movlw	0
  3381  003426  2429               	addwf	??_display_laptime,w,c
  3382  003428  6E04               	movwf	wr16@addr,c
  3383  00342A  0E80               	movlw	128
  3384  00342C  202A               	addwfc	??_display_laptime+1,w,c
  3385  00342E  6E05               	movwf	wr16@addr+1,c
  3386  003430  0E10               	movlw	16
  3387  003432  202B               	addwfc	??_display_laptime+2,w,c
  3388  003434  6E06               	movwf	wr16@addr+2,c
  3389  003436  0E00               	movlw	0
  3390  003438  202C               	addwfc	??_display_laptime+3,w,c
  3391  00343A  6E07               	movwf	wr16@addr+3,c
  3392  00343C  0E00               	movlw	0
  3393  00343E  6E09               	movwf	wr16@value+1,c
  3394  003440  0E00               	movlw	0
  3395  003442  6E08               	movwf	wr16@value,c
  3396  003444  ECB9  F033         	call	_wr16	;wreg free
  3397  003448  0E02               	movlw	2
  3398  00344A  ECFA  F033         	call	_cmd_incrementn
  3399  00344E  504F               	movf	_cmd_offset,w,c
  3400  003450  6E29               	movwf	??_display_laptime& (0+255),c
  3401  003452  5050               	movf	_cmd_offset+1,w,c
  3402  003454  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3403  003456  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3404  003458  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3405  00345A  0E00               	movlw	0
  3406  00345C  2429               	addwf	??_display_laptime,w,c
  3407  00345E  6E09               	movwf	wr8s@addr,c
  3408  003460  0E80               	movlw	128
  3409  003462  202A               	addwfc	??_display_laptime+1,w,c
  3410  003464  6E0A               	movwf	wr8s@addr+1,c
  3411  003466  0E10               	movlw	16
  3412  003468  202B               	addwfc	??_display_laptime+2,w,c
  3413  00346A  6E0B               	movwf	wr8s@addr+2,c
  3414  00346C  0E00               	movlw	0
  3415  00346E  202C               	addwfc	??_display_laptime+3,w,c
  3416  003470  6E0C               	movwf	wr8s@addr+3,c
  3417  003472  0E93               	movlw	low STR_19
  3418  003474  6E0D               	movwf	wr8s@s,c
  3419  003476  0E0F               	movlw	high STR_19
  3420  003478  6E0E               	movwf	wr8s@s+1,c
  3421  00347A  ECD8  F031         	call	_wr8s	;wreg free
  3422  00347E  ECFA  F033         	call	_cmd_incrementn
  3423                           
  3424                           ;display.c: 244:     } else {
  3425  003482  D09A               	goto	l677
  3426  003484                     l676:
  3427                           
  3428                           ;display.c: 245:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  3429  003484  0E00               	movlw	0
  3430  003486  6E11               	movwf	cmd@command,c
  3431  003488  0EFF               	movlw	255
  3432  00348A  6E12               	movwf	cmd@command+1,c
  3433  00348C  0E00               	movlw	0
  3434  00348E  6E13               	movwf	cmd@command+2,c
  3435  003490  0E04               	movlw	4
  3436  003492  6E14               	movwf	cmd@command+3,c
  3437  003494  ECE1  F032         	call	_cmd	;wreg free
  3438                           
  3439                           ;display.c: 246:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 362);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 195);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "-"));
  3440  003498  0E0C               	movlw	12
  3441  00349A  6E11               	movwf	cmd@command,c
  3442  00349C  0EFF               	movlw	255
  3443  00349E  6E12               	movwf	cmd@command+1,c
  3444  0034A0  0EFF               	movlw	255
  3445  0034A2  6E13               	movwf	cmd@command+2,c
  3446  0034A4  0EFF               	movlw	255
  3447  0034A6  6E14               	movwf	cmd@command+3,c
  3448  0034A8  ECE1  F032         	call	_cmd	;wreg free
  3449  0034AC  504F               	movf	_cmd_offset,w,c
  3450  0034AE  6E29               	movwf	??_display_laptime& (0+255),c
  3451  0034B0  5050               	movf	_cmd_offset+1,w,c
  3452  0034B2  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3453  0034B4  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3454  0034B6  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3455  0034B8  0E00               	movlw	0
  3456  0034BA  2429               	addwf	??_display_laptime,w,c
  3457  0034BC  6E04               	movwf	wr16@addr,c
  3458  0034BE  0E80               	movlw	128
  3459  0034C0  202A               	addwfc	??_display_laptime+1,w,c
  3460  0034C2  6E05               	movwf	wr16@addr+1,c
  3461  0034C4  0E10               	movlw	16
  3462  0034C6  202B               	addwfc	??_display_laptime+2,w,c
  3463  0034C8  6E06               	movwf	wr16@addr+2,c
  3464  0034CA  0E00               	movlw	0
  3465  0034CC  202C               	addwfc	??_display_laptime+3,w,c
  3466  0034CE  6E07               	movwf	wr16@addr+3,c
  3467  0034D0  0E01               	movlw	1
  3468  0034D2  6E09               	movwf	wr16@value+1,c
  3469  0034D4  0E6A               	movlw	106
  3470  0034D6  6E08               	movwf	wr16@value,c
  3471  0034D8  ECB9  F033         	call	_wr16	;wreg free
  3472  0034DC  0E02               	movlw	2
  3473  0034DE  ECFA  F033         	call	_cmd_incrementn
  3474  0034E2  504F               	movf	_cmd_offset,w,c
  3475  0034E4  6E29               	movwf	??_display_laptime& (0+255),c
  3476  0034E6  5050               	movf	_cmd_offset+1,w,c
  3477  0034E8  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3478  0034EA  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3479  0034EC  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3480  0034EE  0E00               	movlw	0
  3481  0034F0  2429               	addwf	??_display_laptime,w,c
  3482  0034F2  6E04               	movwf	wr16@addr,c
  3483  0034F4  0E80               	movlw	128
  3484  0034F6  202A               	addwfc	??_display_laptime+1,w,c
  3485  0034F8  6E05               	movwf	wr16@addr+1,c
  3486  0034FA  0E10               	movlw	16
  3487  0034FC  202B               	addwfc	??_display_laptime+2,w,c
  3488  0034FE  6E06               	movwf	wr16@addr+2,c
  3489  003500  0E00               	movlw	0
  3490  003502  202C               	addwfc	??_display_laptime+3,w,c
  3491  003504  6E07               	movwf	wr16@addr+3,c
  3492  003506  0E00               	movlw	0
  3493  003508  6E09               	movwf	wr16@value+1,c
  3494  00350A  0EC3               	movlw	195
  3495  00350C  6E08               	movwf	wr16@value,c
  3496  00350E  ECB9  F033         	call	_wr16	;wreg free
  3497  003512  0E02               	movlw	2
  3498  003514  ECFA  F033         	call	_cmd_incrementn
  3499  003518  504F               	movf	_cmd_offset,w,c
  3500  00351A  6E29               	movwf	??_display_laptime& (0+255),c
  3501  00351C  5050               	movf	_cmd_offset+1,w,c
  3502  00351E  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3503  003520  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3504  003522  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3505  003524  0E00               	movlw	0
  3506  003526  2429               	addwf	??_display_laptime,w,c
  3507  003528  6E04               	movwf	wr16@addr,c
  3508  00352A  0E80               	movlw	128
  3509  00352C  202A               	addwfc	??_display_laptime+1,w,c
  3510  00352E  6E05               	movwf	wr16@addr+1,c
  3511  003530  0E10               	movlw	16
  3512  003532  202B               	addwfc	??_display_laptime+2,w,c
  3513  003534  6E06               	movwf	wr16@addr+2,c
  3514  003536  0E00               	movlw	0
  3515  003538  202C               	addwfc	??_display_laptime+3,w,c
  3516  00353A  6E07               	movwf	wr16@addr+3,c
  3517  00353C  0E00               	movlw	0
  3518  00353E  6E09               	movwf	wr16@value+1,c
  3519  003540  0E1E               	movlw	30
  3520  003542  6E08               	movwf	wr16@value,c
  3521  003544  ECB9  F033         	call	_wr16	;wreg free
  3522  003548  0E02               	movlw	2
  3523  00354A  ECFA  F033         	call	_cmd_incrementn
  3524  00354E  504F               	movf	_cmd_offset,w,c
  3525  003550  6E29               	movwf	??_display_laptime& (0+255),c
  3526  003552  5050               	movf	_cmd_offset+1,w,c
  3527  003554  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3528  003556  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3529  003558  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3530  00355A  0E00               	movlw	0
  3531  00355C  2429               	addwf	??_display_laptime,w,c
  3532  00355E  6E04               	movwf	wr16@addr,c
  3533  003560  0E80               	movlw	128
  3534  003562  202A               	addwfc	??_display_laptime+1,w,c
  3535  003564  6E05               	movwf	wr16@addr+1,c
  3536  003566  0E10               	movlw	16
  3537  003568  202B               	addwfc	??_display_laptime+2,w,c
  3538  00356A  6E06               	movwf	wr16@addr+2,c
  3539  00356C  0E00               	movlw	0
  3540  00356E  202C               	addwfc	??_display_laptime+3,w,c
  3541  003570  6E07               	movwf	wr16@addr+3,c
  3542  003572  0E00               	movlw	0
  3543  003574  6E09               	movwf	wr16@value+1,c
  3544  003576  0E00               	movlw	0
  3545  003578  6E08               	movwf	wr16@value,c
  3546  00357A  ECB9  F033         	call	_wr16	;wreg free
  3547  00357E  0E02               	movlw	2
  3548  003580  ECFA  F033         	call	_cmd_incrementn
  3549  003584  504F               	movf	_cmd_offset,w,c
  3550  003586  6E29               	movwf	??_display_laptime& (0+255),c
  3551  003588  5050               	movf	_cmd_offset+1,w,c
  3552  00358A  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3553  00358C  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3554  00358E  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3555  003590  0E00               	movlw	0
  3556  003592  2429               	addwf	??_display_laptime,w,c
  3557  003594  6E09               	movwf	wr8s@addr,c
  3558  003596  0E80               	movlw	128
  3559  003598  202A               	addwfc	??_display_laptime+1,w,c
  3560  00359A  6E0A               	movwf	wr8s@addr+1,c
  3561  00359C  0E10               	movlw	16
  3562  00359E  202B               	addwfc	??_display_laptime+2,w,c
  3563  0035A0  6E0B               	movwf	wr8s@addr+2,c
  3564  0035A2  0E00               	movlw	0
  3565  0035A4  202C               	addwfc	??_display_laptime+3,w,c
  3566  0035A6  6E0C               	movwf	wr8s@addr+3,c
  3567  0035A8  0E95               	movlw	low STR_20
  3568  0035AA  6E0D               	movwf	wr8s@s,c
  3569  0035AC  0E0F               	movlw	high STR_20
  3570  0035AE  6E0E               	movwf	wr8s@s+1,c
  3571  0035B0  ECD8  F031         	call	_wr8s	;wreg free
  3572  0035B4  ECFA  F033         	call	_cmd_incrementn
  3573  0035B8                     l677:
  3574                           
  3575                           ;display.c: 248:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 415);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 195);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081
      +                          344UL +cmd_offset, "."));
  3576  0035B8  0E0C               	movlw	12
  3577  0035BA  6E11               	movwf	cmd@command,c
  3578  0035BC  0EFF               	movlw	255
  3579  0035BE  6E12               	movwf	cmd@command+1,c
  3580  0035C0  0EFF               	movlw	255
  3581  0035C2  6E13               	movwf	cmd@command+2,c
  3582  0035C4  0EFF               	movlw	255
  3583  0035C6  6E14               	movwf	cmd@command+3,c
  3584  0035C8  ECE1  F032         	call	_cmd	;wreg free
  3585  0035CC  504F               	movf	_cmd_offset,w,c
  3586  0035CE  6E29               	movwf	??_display_laptime& (0+255),c
  3587  0035D0  5050               	movf	_cmd_offset+1,w,c
  3588  0035D2  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3589  0035D4  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3590  0035D6  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3591  0035D8  0E00               	movlw	0
  3592  0035DA  2429               	addwf	??_display_laptime,w,c
  3593  0035DC  6E04               	movwf	wr16@addr,c
  3594  0035DE  0E80               	movlw	128
  3595  0035E0  202A               	addwfc	??_display_laptime+1,w,c
  3596  0035E2  6E05               	movwf	wr16@addr+1,c
  3597  0035E4  0E10               	movlw	16
  3598  0035E6  202B               	addwfc	??_display_laptime+2,w,c
  3599  0035E8  6E06               	movwf	wr16@addr+2,c
  3600  0035EA  0E00               	movlw	0
  3601  0035EC  202C               	addwfc	??_display_laptime+3,w,c
  3602  0035EE  6E07               	movwf	wr16@addr+3,c
  3603  0035F0  0E01               	movlw	1
  3604  0035F2  6E09               	movwf	wr16@value+1,c
  3605  0035F4  0E9F               	movlw	159
  3606  0035F6  6E08               	movwf	wr16@value,c
  3607  0035F8  ECB9  F033         	call	_wr16	;wreg free
  3608  0035FC  0E02               	movlw	2
  3609  0035FE  ECFA  F033         	call	_cmd_incrementn
  3610  003602  504F               	movf	_cmd_offset,w,c
  3611  003604  6E29               	movwf	??_display_laptime& (0+255),c
  3612  003606  5050               	movf	_cmd_offset+1,w,c
  3613  003608  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3614  00360A  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3615  00360C  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3616  00360E  0E00               	movlw	0
  3617  003610  2429               	addwf	??_display_laptime,w,c
  3618  003612  6E04               	movwf	wr16@addr,c
  3619  003614  0E80               	movlw	128
  3620  003616  202A               	addwfc	??_display_laptime+1,w,c
  3621  003618  6E05               	movwf	wr16@addr+1,c
  3622  00361A  0E10               	movlw	16
  3623  00361C  202B               	addwfc	??_display_laptime+2,w,c
  3624  00361E  6E06               	movwf	wr16@addr+2,c
  3625  003620  0E00               	movlw	0
  3626  003622  202C               	addwfc	??_display_laptime+3,w,c
  3627  003624  6E07               	movwf	wr16@addr+3,c
  3628  003626  0E00               	movlw	0
  3629  003628  6E09               	movwf	wr16@value+1,c
  3630  00362A  0EC3               	movlw	195
  3631  00362C  6E08               	movwf	wr16@value,c
  3632  00362E  ECB9  F033         	call	_wr16	;wreg free
  3633  003632  0E02               	movlw	2
  3634  003634  ECFA  F033         	call	_cmd_incrementn
  3635  003638  504F               	movf	_cmd_offset,w,c
  3636  00363A  6E29               	movwf	??_display_laptime& (0+255),c
  3637  00363C  5050               	movf	_cmd_offset+1,w,c
  3638  00363E  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3639  003640  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3640  003642  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3641  003644  0E00               	movlw	0
  3642  003646  2429               	addwf	??_display_laptime,w,c
  3643  003648  6E04               	movwf	wr16@addr,c
  3644  00364A  0E80               	movlw	128
  3645  00364C  202A               	addwfc	??_display_laptime+1,w,c
  3646  00364E  6E05               	movwf	wr16@addr+1,c
  3647  003650  0E10               	movlw	16
  3648  003652  202B               	addwfc	??_display_laptime+2,w,c
  3649  003654  6E06               	movwf	wr16@addr+2,c
  3650  003656  0E00               	movlw	0
  3651  003658  202C               	addwfc	??_display_laptime+3,w,c
  3652  00365A  6E07               	movwf	wr16@addr+3,c
  3653  00365C  0E00               	movlw	0
  3654  00365E  6E09               	movwf	wr16@value+1,c
  3655  003660  0E1E               	movlw	30
  3656  003662  6E08               	movwf	wr16@value,c
  3657  003664  ECB9  F033         	call	_wr16	;wreg free
  3658  003668  0E02               	movlw	2
  3659  00366A  ECFA  F033         	call	_cmd_incrementn
  3660  00366E  504F               	movf	_cmd_offset,w,c
  3661  003670  6E29               	movwf	??_display_laptime& (0+255),c
  3662  003672  5050               	movf	_cmd_offset+1,w,c
  3663  003674  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3664  003676  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3665  003678  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3666  00367A  0E00               	movlw	0
  3667  00367C  2429               	addwf	??_display_laptime,w,c
  3668  00367E  6E04               	movwf	wr16@addr,c
  3669  003680  0E80               	movlw	128
  3670  003682  202A               	addwfc	??_display_laptime+1,w,c
  3671  003684  6E05               	movwf	wr16@addr+1,c
  3672  003686  0E10               	movlw	16
  3673  003688  202B               	addwfc	??_display_laptime+2,w,c
  3674  00368A  6E06               	movwf	wr16@addr+2,c
  3675  00368C  0E00               	movlw	0
  3676  00368E  202C               	addwfc	??_display_laptime+3,w,c
  3677  003690  6E07               	movwf	wr16@addr+3,c
  3678  003692  0E00               	movlw	0
  3679  003694  6E09               	movwf	wr16@value+1,c
  3680  003696  0E00               	movlw	0
  3681  003698  6E08               	movwf	wr16@value,c
  3682  00369A  ECB9  F033         	call	_wr16	;wreg free
  3683  00369E  0E02               	movlw	2
  3684  0036A0  ECFA  F033         	call	_cmd_incrementn
  3685  0036A4  504F               	movf	_cmd_offset,w,c
  3686  0036A6  6E29               	movwf	??_display_laptime& (0+255),c
  3687  0036A8  5050               	movf	_cmd_offset+1,w,c
  3688  0036AA  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3689  0036AC  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3690  0036AE  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3691  0036B0  0E00               	movlw	0
  3692  0036B2  2429               	addwf	??_display_laptime,w,c
  3693  0036B4  6E09               	movwf	wr8s@addr,c
  3694  0036B6  0E80               	movlw	128
  3695  0036B8  202A               	addwfc	??_display_laptime+1,w,c
  3696  0036BA  6E0A               	movwf	wr8s@addr+1,c
  3697  0036BC  0E10               	movlw	16
  3698  0036BE  202B               	addwfc	??_display_laptime+2,w,c
  3699  0036C0  6E0B               	movwf	wr8s@addr+2,c
  3700  0036C2  0E00               	movlw	0
  3701  0036C4  202C               	addwfc	??_display_laptime+3,w,c
  3702  0036C6  6E0C               	movwf	wr8s@addr+3,c
  3703  0036C8  0E97               	movlw	low STR_21
  3704  0036CA  6E0D               	movwf	wr8s@s,c
  3705  0036CC  0E0F               	movlw	high STR_21
  3706  0036CE  6E0E               	movwf	wr8s@s+1,c
  3707  0036D0  ECD8  F031         	call	_wr8s	;wreg free
  3708  0036D4  ECFA  F033         	call	_cmd_incrementn
  3709                           
  3710                           ;display.c: 249:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 410);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 195);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 2048UL);cmd_incrementn(2);cmd(time_difference
      +                          _integer);
  3711  0036D8  0E2E               	movlw	46
  3712  0036DA  6E11               	movwf	cmd@command,c
  3713  0036DC  0EFF               	movlw	255
  3714  0036DE  6E12               	movwf	cmd@command+1,c
  3715  0036E0  0EFF               	movlw	255
  3716  0036E2  6E13               	movwf	cmd@command+2,c
  3717  0036E4  0EFF               	movlw	255
  3718  0036E6  6E14               	movwf	cmd@command+3,c
  3719  0036E8  ECE1  F032         	call	_cmd	;wreg free
  3720  0036EC  504F               	movf	_cmd_offset,w,c
  3721  0036EE  6E29               	movwf	??_display_laptime& (0+255),c
  3722  0036F0  5050               	movf	_cmd_offset+1,w,c
  3723  0036F2  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3724  0036F4  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3725  0036F6  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3726  0036F8  0E00               	movlw	0
  3727  0036FA  2429               	addwf	??_display_laptime,w,c
  3728  0036FC  6E04               	movwf	wr16@addr,c
  3729  0036FE  0E80               	movlw	128
  3730  003700  202A               	addwfc	??_display_laptime+1,w,c
  3731  003702  6E05               	movwf	wr16@addr+1,c
  3732  003704  0E10               	movlw	16
  3733  003706  202B               	addwfc	??_display_laptime+2,w,c
  3734  003708  6E06               	movwf	wr16@addr+2,c
  3735  00370A  0E00               	movlw	0
  3736  00370C  202C               	addwfc	??_display_laptime+3,w,c
  3737  00370E  6E07               	movwf	wr16@addr+3,c
  3738  003710  0E01               	movlw	1
  3739  003712  6E09               	movwf	wr16@value+1,c
  3740  003714  0E9A               	movlw	154
  3741  003716  6E08               	movwf	wr16@value,c
  3742  003718  ECB9  F033         	call	_wr16	;wreg free
  3743  00371C  0E02               	movlw	2
  3744  00371E  ECFA  F033         	call	_cmd_incrementn
  3745  003722  504F               	movf	_cmd_offset,w,c
  3746  003724  6E29               	movwf	??_display_laptime& (0+255),c
  3747  003726  5050               	movf	_cmd_offset+1,w,c
  3748  003728  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3749  00372A  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3750  00372C  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3751  00372E  0E00               	movlw	0
  3752  003730  2429               	addwf	??_display_laptime,w,c
  3753  003732  6E04               	movwf	wr16@addr,c
  3754  003734  0E80               	movlw	128
  3755  003736  202A               	addwfc	??_display_laptime+1,w,c
  3756  003738  6E05               	movwf	wr16@addr+1,c
  3757  00373A  0E10               	movlw	16
  3758  00373C  202B               	addwfc	??_display_laptime+2,w,c
  3759  00373E  6E06               	movwf	wr16@addr+2,c
  3760  003740  0E00               	movlw	0
  3761  003742  202C               	addwfc	??_display_laptime+3,w,c
  3762  003744  6E07               	movwf	wr16@addr+3,c
  3763  003746  0E00               	movlw	0
  3764  003748  6E09               	movwf	wr16@value+1,c
  3765  00374A  0EC3               	movlw	195
  3766  00374C  6E08               	movwf	wr16@value,c
  3767  00374E  ECB9  F033         	call	_wr16	;wreg free
  3768  003752  0E02               	movlw	2
  3769  003754  ECFA  F033         	call	_cmd_incrementn
  3770  003758  504F               	movf	_cmd_offset,w,c
  3771  00375A  6E29               	movwf	??_display_laptime& (0+255),c
  3772  00375C  5050               	movf	_cmd_offset+1,w,c
  3773  00375E  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3774  003760  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3775  003762  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3776  003764  0E00               	movlw	0
  3777  003766  2429               	addwf	??_display_laptime,w,c
  3778  003768  6E04               	movwf	wr16@addr,c
  3779  00376A  0E80               	movlw	128
  3780  00376C  202A               	addwfc	??_display_laptime+1,w,c
  3781  00376E  6E05               	movwf	wr16@addr+1,c
  3782  003770  0E10               	movlw	16
  3783  003772  202B               	addwfc	??_display_laptime+2,w,c
  3784  003774  6E06               	movwf	wr16@addr+2,c
  3785  003776  0E00               	movlw	0
  3786  003778  202C               	addwfc	??_display_laptime+3,w,c
  3787  00377A  6E07               	movwf	wr16@addr+3,c
  3788  00377C  0E00               	movlw	0
  3789  00377E  6E09               	movwf	wr16@value+1,c
  3790  003780  0E1E               	movlw	30
  3791  003782  6E08               	movwf	wr16@value,c
  3792  003784  ECB9  F033         	call	_wr16	;wreg free
  3793  003788  0E02               	movlw	2
  3794  00378A  ECFA  F033         	call	_cmd_incrementn
  3795  00378E  504F               	movf	_cmd_offset,w,c
  3796  003790  6E29               	movwf	??_display_laptime& (0+255),c
  3797  003792  5050               	movf	_cmd_offset+1,w,c
  3798  003794  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3799  003796  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3800  003798  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3801  00379A  0E00               	movlw	0
  3802  00379C  2429               	addwf	??_display_laptime,w,c
  3803  00379E  6E04               	movwf	wr16@addr,c
  3804  0037A0  0E80               	movlw	128
  3805  0037A2  202A               	addwfc	??_display_laptime+1,w,c
  3806  0037A4  6E05               	movwf	wr16@addr+1,c
  3807  0037A6  0E10               	movlw	16
  3808  0037A8  202B               	addwfc	??_display_laptime+2,w,c
  3809  0037AA  6E06               	movwf	wr16@addr+2,c
  3810  0037AC  0E00               	movlw	0
  3811  0037AE  202C               	addwfc	??_display_laptime+3,w,c
  3812  0037B0  6E07               	movwf	wr16@addr+3,c
  3813  0037B2  0E08               	movlw	8
  3814  0037B4  6E09               	movwf	wr16@value+1,c
  3815  0037B6  0E00               	movlw	0
  3816  0037B8  6E08               	movwf	wr16@value,c
  3817  0037BA  ECB9  F033         	call	_wr16	;wreg free
  3818  0037BE  0E02               	movlw	2
  3819  0037C0  ECFA  F033         	call	_cmd_incrementn
  3820  0037C4  C02F  F011         	movff	display_laptime@time_difference_integer,cmd@command
  3821  0037C8  C030  F012         	movff	display_laptime@time_difference_integer+1,cmd@command+1
  3822  0037CC  0E00               	movlw	0
  3823  0037CE  BE12               	btfsc	cmd@command+1,7,c
  3824  0037D0  0EFF               	movlw	-1
  3825  0037D2  6E13               	movwf	cmd@command+2,c
  3826  0037D4  6E14               	movwf	cmd@command+3,c
  3827  0037D6  ECE1  F032         	call	_cmd	;wreg free
  3828                           
  3829                           ;display.c: 250:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 425);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 195);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd(time_difference_deci
      +                          mal);
  3830  0037DA  0E2E               	movlw	46
  3831  0037DC  6E11               	movwf	cmd@command,c
  3832  0037DE  0EFF               	movlw	255
  3833  0037E0  6E12               	movwf	cmd@command+1,c
  3834  0037E2  0EFF               	movlw	255
  3835  0037E4  6E13               	movwf	cmd@command+2,c
  3836  0037E6  0EFF               	movlw	255
  3837  0037E8  6E14               	movwf	cmd@command+3,c
  3838  0037EA  ECE1  F032         	call	_cmd	;wreg free
  3839  0037EE  504F               	movf	_cmd_offset,w,c
  3840  0037F0  6E29               	movwf	??_display_laptime& (0+255),c
  3841  0037F2  5050               	movf	_cmd_offset+1,w,c
  3842  0037F4  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3843  0037F6  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3844  0037F8  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3845  0037FA  0E00               	movlw	0
  3846  0037FC  2429               	addwf	??_display_laptime,w,c
  3847  0037FE  6E04               	movwf	wr16@addr,c
  3848  003800  0E80               	movlw	128
  3849  003802  202A               	addwfc	??_display_laptime+1,w,c
  3850  003804  6E05               	movwf	wr16@addr+1,c
  3851  003806  0E10               	movlw	16
  3852  003808  202B               	addwfc	??_display_laptime+2,w,c
  3853  00380A  6E06               	movwf	wr16@addr+2,c
  3854  00380C  0E00               	movlw	0
  3855  00380E  202C               	addwfc	??_display_laptime+3,w,c
  3856  003810  6E07               	movwf	wr16@addr+3,c
  3857  003812  0E01               	movlw	1
  3858  003814  6E09               	movwf	wr16@value+1,c
  3859  003816  0EA9               	movlw	169
  3860  003818  6E08               	movwf	wr16@value,c
  3861  00381A  ECB9  F033         	call	_wr16	;wreg free
  3862  00381E  0E02               	movlw	2
  3863  003820  ECFA  F033         	call	_cmd_incrementn
  3864  003824  504F               	movf	_cmd_offset,w,c
  3865  003826  6E29               	movwf	??_display_laptime& (0+255),c
  3866  003828  5050               	movf	_cmd_offset+1,w,c
  3867  00382A  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3868  00382C  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3869  00382E  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3870  003830  0E00               	movlw	0
  3871  003832  2429               	addwf	??_display_laptime,w,c
  3872  003834  6E04               	movwf	wr16@addr,c
  3873  003836  0E80               	movlw	128
  3874  003838  202A               	addwfc	??_display_laptime+1,w,c
  3875  00383A  6E05               	movwf	wr16@addr+1,c
  3876  00383C  0E10               	movlw	16
  3877  00383E  202B               	addwfc	??_display_laptime+2,w,c
  3878  003840  6E06               	movwf	wr16@addr+2,c
  3879  003842  0E00               	movlw	0
  3880  003844  202C               	addwfc	??_display_laptime+3,w,c
  3881  003846  6E07               	movwf	wr16@addr+3,c
  3882  003848  0E00               	movlw	0
  3883  00384A  6E09               	movwf	wr16@value+1,c
  3884  00384C  0EC3               	movlw	195
  3885  00384E  6E08               	movwf	wr16@value,c
  3886  003850  ECB9  F033         	call	_wr16	;wreg free
  3887  003854  0E02               	movlw	2
  3888  003856  ECFA  F033         	call	_cmd_incrementn
  3889  00385A  504F               	movf	_cmd_offset,w,c
  3890  00385C  6E29               	movwf	??_display_laptime& (0+255),c
  3891  00385E  5050               	movf	_cmd_offset+1,w,c
  3892  003860  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3893  003862  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3894  003864  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3895  003866  0E00               	movlw	0
  3896  003868  2429               	addwf	??_display_laptime,w,c
  3897  00386A  6E04               	movwf	wr16@addr,c
  3898  00386C  0E80               	movlw	128
  3899  00386E  202A               	addwfc	??_display_laptime+1,w,c
  3900  003870  6E05               	movwf	wr16@addr+1,c
  3901  003872  0E10               	movlw	16
  3902  003874  202B               	addwfc	??_display_laptime+2,w,c
  3903  003876  6E06               	movwf	wr16@addr+2,c
  3904  003878  0E00               	movlw	0
  3905  00387A  202C               	addwfc	??_display_laptime+3,w,c
  3906  00387C  6E07               	movwf	wr16@addr+3,c
  3907  00387E  0E00               	movlw	0
  3908  003880  6E09               	movwf	wr16@value+1,c
  3909  003882  0E1E               	movlw	30
  3910  003884  6E08               	movwf	wr16@value,c
  3911  003886  ECB9  F033         	call	_wr16	;wreg free
  3912  00388A  0E02               	movlw	2
  3913  00388C  ECFA  F033         	call	_cmd_incrementn
  3914  003890  504F               	movf	_cmd_offset,w,c
  3915  003892  6E29               	movwf	??_display_laptime& (0+255),c
  3916  003894  5050               	movf	_cmd_offset+1,w,c
  3917  003896  6E2A               	movwf	(??_display_laptime+1)& (0+255),c
  3918  003898  6A2B               	clrf	(??_display_laptime+2)& (0+255),c
  3919  00389A  6A2C               	clrf	(??_display_laptime+3)& (0+255),c
  3920  00389C  0E00               	movlw	0
  3921  00389E  2429               	addwf	??_display_laptime,w,c
  3922  0038A0  6E04               	movwf	wr16@addr,c
  3923  0038A2  0E80               	movlw	128
  3924  0038A4  202A               	addwfc	??_display_laptime+1,w,c
  3925  0038A6  6E05               	movwf	wr16@addr+1,c
  3926  0038A8  0E10               	movlw	16
  3927  0038AA  202B               	addwfc	??_display_laptime+2,w,c
  3928  0038AC  6E06               	movwf	wr16@addr+2,c
  3929  0038AE  0E00               	movlw	0
  3930  0038B0  202C               	addwfc	??_display_laptime+3,w,c
  3931  0038B2  6E07               	movwf	wr16@addr+3,c
  3932  0038B4  0E00               	movlw	0
  3933  0038B6  6E09               	movwf	wr16@value+1,c
  3934  0038B8  0E00               	movlw	0
  3935  0038BA  6E08               	movwf	wr16@value,c
  3936  0038BC  ECB9  F033         	call	_wr16	;wreg free
  3937  0038C0  0E02               	movlw	2
  3938  0038C2  ECFA  F033         	call	_cmd_incrementn
  3939  0038C6  C02D  F011         	movff	display_laptime@time_difference_decimal,cmd@command
  3940  0038CA  C02E  F012         	movff	display_laptime@time_difference_decimal+1,cmd@command+1
  3941  0038CE  0E00               	movlw	0
  3942  0038D0  BE12               	btfsc	cmd@command+1,7,c
  3943  0038D2  0EFF               	movlw	-1
  3944  0038D4  6E13               	movwf	cmd@command+2,c
  3945  0038D6  6E14               	movwf	cmd@command+3,c
  3946  0038D8  ECE1  F032         	call	_cmd	;wreg free
  3947  0038DC  0012               	return		;funcret
  3948  0038DE                     __end_of_display_laptime:
  3949                           	opt stack 0
  3950                           tblptru	equ	0xFF8
  3951                           tblptrh	equ	0xFF7
  3952                           tblptrl	equ	0xFF6
  3953                           tablat	equ	0xFF5
  3954                           intcon	equ	0xFF2
  3955                           postinc0	equ	0xFEE
  3956                           wreg	equ	0xFE8
  3957                           postdec1	equ	0xFE5
  3958                           plusw1	equ	0xFE3
  3959                           fsr1l	equ	0xFE1
  3960                           plusw2	equ	0xFDB
  3961                           status	equ	0xFD8
  3962                           
  3963 ;; *************** function _display_brake_bias *****************
  3964 ;; Defined at:
  3965 ;;		line 366 in file "display.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  bias            2   24[COMRAM] int 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;		None
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  1    wreg      void 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2, status,0, cstack
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3981 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3982 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3983 ;;Total ram usage:        6 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    7
  3986 ;; This function calls:
  3987 ;;		_cmd
  3988 ;;		_cmd_incrementn
  3989 ;;		_wr16
  3990 ;; This function is called by:
  3991 ;;		_main
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text4
  3996  005A6C                     __ptext4:
  3997                           	opt stack 0
  3998  005A6C                     _display_brake_bias:
  3999                           	opt stack 23
  4000                           
  4001                           ;display.c: 367:     cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL
      +                          )<<0)));
  4002                           
  4003                           ;incstack = 0
  4004  005A6C  0EFF               	movlw	255
  4005  005A6E  6E11               	movwf	cmd@command,c
  4006  005A70  0EFF               	movlw	255
  4007  005A72  6E12               	movwf	cmd@command+1,c
  4008  005A74  0EFF               	movlw	255
  4009  005A76  6E13               	movwf	cmd@command+2,c
  4010  005A78  0E04               	movlw	4
  4011  005A7A  6E14               	movwf	cmd@command+3,c
  4012  005A7C  ECE1  F032         	call	_cmd	;wreg free
  4013                           
  4014                           ;display.c: 368:     if(bias < 100) cmd(4294967086UL);wr16(1081344UL +cmd_offset, 5);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL +cmd_of
      +                          fset, 30);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd(bias);
  4015  005A80  BE1A               	btfsc	display_brake_bias@bias+1,7,c
  4016  005A82  D006               	goto	u1620
  4017  005A84  501A               	movf	display_brake_bias@bias+1,w,c
  4018  005A86  E10E               	bnz	l727
  4019  005A88  0E64               	movlw	100
  4020  005A8A  5C19               	subwf	display_brake_bias@bias,w,c
  4021  005A8C  B0D8               	btfsc	status,0,c
  4022  005A8E  D00A               	goto	l727
  4023  005A90                     u1620:
  4024  005A90  0E2E               	movlw	46
  4025  005A92  6E11               	movwf	cmd@command,c
  4026  005A94  0EFF               	movlw	255
  4027  005A96  6E12               	movwf	cmd@command+1,c
  4028  005A98  0EFF               	movlw	255
  4029  005A9A  6E13               	movwf	cmd@command+2,c
  4030  005A9C  0EFF               	movlw	255
  4031  005A9E  6E14               	movwf	cmd@command+3,c
  4032  005AA0  ECE1  F032         	call	_cmd	;wreg free
  4033  005AA4                     l727:
  4034  005AA4  504F               	movf	_cmd_offset,w,c
  4035  005AA6  6E1B               	movwf	??_display_brake_bias& (0+255),c
  4036  005AA8  5050               	movf	_cmd_offset+1,w,c
  4037  005AAA  6E1C               	movwf	(??_display_brake_bias+1)& (0+255),c
  4038  005AAC  6A1D               	clrf	(??_display_brake_bias+2)& (0+255),c
  4039  005AAE  6A1E               	clrf	(??_display_brake_bias+3)& (0+255),c
  4040  005AB0  0E00               	movlw	0
  4041  005AB2  241B               	addwf	??_display_brake_bias,w,c
  4042  005AB4  6E04               	movwf	wr16@addr,c
  4043  005AB6  0E80               	movlw	128
  4044  005AB8  201C               	addwfc	??_display_brake_bias+1,w,c
  4045  005ABA  6E05               	movwf	wr16@addr+1,c
  4046  005ABC  0E10               	movlw	16
  4047  005ABE  201D               	addwfc	??_display_brake_bias+2,w,c
  4048  005AC0  6E06               	movwf	wr16@addr+2,c
  4049  005AC2  0E00               	movlw	0
  4050  005AC4  201E               	addwfc	??_display_brake_bias+3,w,c
  4051  005AC6  6E07               	movwf	wr16@addr+3,c
  4052  005AC8  0E00               	movlw	0
  4053  005ACA  6E09               	movwf	wr16@value+1,c
  4054  005ACC  0E05               	movlw	5
  4055  005ACE  6E08               	movwf	wr16@value,c
  4056  005AD0  ECB9  F033         	call	_wr16	;wreg free
  4057  005AD4  0E02               	movlw	2
  4058  005AD6  ECFA  F033         	call	_cmd_incrementn
  4059  005ADA  504F               	movf	_cmd_offset,w,c
  4060  005ADC  6E1B               	movwf	??_display_brake_bias& (0+255),c
  4061  005ADE  5050               	movf	_cmd_offset+1,w,c
  4062  005AE0  6E1C               	movwf	(??_display_brake_bias+1)& (0+255),c
  4063  005AE2  6A1D               	clrf	(??_display_brake_bias+2)& (0+255),c
  4064  005AE4  6A1E               	clrf	(??_display_brake_bias+3)& (0+255),c
  4065  005AE6  0E00               	movlw	0
  4066  005AE8  241B               	addwf	??_display_brake_bias,w,c
  4067  005AEA  6E04               	movwf	wr16@addr,c
  4068  005AEC  0E80               	movlw	128
  4069  005AEE  201C               	addwfc	??_display_brake_bias+1,w,c
  4070  005AF0  6E05               	movwf	wr16@addr+1,c
  4071  005AF2  0E10               	movlw	16
  4072  005AF4  201D               	addwfc	??_display_brake_bias+2,w,c
  4073  005AF6  6E06               	movwf	wr16@addr+2,c
  4074  005AF8  0E00               	movlw	0
  4075  005AFA  201E               	addwfc	??_display_brake_bias+3,w,c
  4076  005AFC  6E07               	movwf	wr16@addr+3,c
  4077  005AFE  0E00               	movlw	0
  4078  005B00  6E09               	movwf	wr16@value+1,c
  4079  005B02  0EEC               	movlw	236
  4080  005B04  6E08               	movwf	wr16@value,c
  4081  005B06  ECB9  F033         	call	_wr16	;wreg free
  4082  005B0A  0E02               	movlw	2
  4083  005B0C  ECFA  F033         	call	_cmd_incrementn
  4084  005B10  504F               	movf	_cmd_offset,w,c
  4085  005B12  6E1B               	movwf	??_display_brake_bias& (0+255),c
  4086  005B14  5050               	movf	_cmd_offset+1,w,c
  4087  005B16  6E1C               	movwf	(??_display_brake_bias+1)& (0+255),c
  4088  005B18  6A1D               	clrf	(??_display_brake_bias+2)& (0+255),c
  4089  005B1A  6A1E               	clrf	(??_display_brake_bias+3)& (0+255),c
  4090  005B1C  0E00               	movlw	0
  4091  005B1E  241B               	addwf	??_display_brake_bias,w,c
  4092  005B20  6E04               	movwf	wr16@addr,c
  4093  005B22  0E80               	movlw	128
  4094  005B24  201C               	addwfc	??_display_brake_bias+1,w,c
  4095  005B26  6E05               	movwf	wr16@addr+1,c
  4096  005B28  0E10               	movlw	16
  4097  005B2A  201D               	addwfc	??_display_brake_bias+2,w,c
  4098  005B2C  6E06               	movwf	wr16@addr+2,c
  4099  005B2E  0E00               	movlw	0
  4100  005B30  201E               	addwfc	??_display_brake_bias+3,w,c
  4101  005B32  6E07               	movwf	wr16@addr+3,c
  4102  005B34  0E00               	movlw	0
  4103  005B36  6E09               	movwf	wr16@value+1,c
  4104  005B38  0E1E               	movlw	30
  4105  005B3A  6E08               	movwf	wr16@value,c
  4106  005B3C  ECB9  F033         	call	_wr16	;wreg free
  4107  005B40  0E02               	movlw	2
  4108  005B42  ECFA  F033         	call	_cmd_incrementn
  4109  005B46  504F               	movf	_cmd_offset,w,c
  4110  005B48  6E1B               	movwf	??_display_brake_bias& (0+255),c
  4111  005B4A  5050               	movf	_cmd_offset+1,w,c
  4112  005B4C  6E1C               	movwf	(??_display_brake_bias+1)& (0+255),c
  4113  005B4E  6A1D               	clrf	(??_display_brake_bias+2)& (0+255),c
  4114  005B50  6A1E               	clrf	(??_display_brake_bias+3)& (0+255),c
  4115  005B52  0E00               	movlw	0
  4116  005B54  241B               	addwf	??_display_brake_bias,w,c
  4117  005B56  6E04               	movwf	wr16@addr,c
  4118  005B58  0E80               	movlw	128
  4119  005B5A  201C               	addwfc	??_display_brake_bias+1,w,c
  4120  005B5C  6E05               	movwf	wr16@addr+1,c
  4121  005B5E  0E10               	movlw	16
  4122  005B60  201D               	addwfc	??_display_brake_bias+2,w,c
  4123  005B62  6E06               	movwf	wr16@addr+2,c
  4124  005B64  0E00               	movlw	0
  4125  005B66  201E               	addwfc	??_display_brake_bias+3,w,c
  4126  005B68  6E07               	movwf	wr16@addr+3,c
  4127  005B6A  0E00               	movlw	0
  4128  005B6C  6E09               	movwf	wr16@value+1,c
  4129  005B6E  0E00               	movlw	0
  4130  005B70  6E08               	movwf	wr16@value,c
  4131  005B72  ECB9  F033         	call	_wr16	;wreg free
  4132  005B76  0E02               	movlw	2
  4133  005B78  ECFA  F033         	call	_cmd_incrementn
  4134  005B7C  C019  F011         	movff	display_brake_bias@bias,cmd@command
  4135  005B80  C01A  F012         	movff	display_brake_bias@bias+1,cmd@command+1
  4136  005B84  0E00               	movlw	0
  4137  005B86  BE12               	btfsc	cmd@command+1,7,c
  4138  005B88  0EFF               	movlw	-1
  4139  005B8A  6E13               	movwf	cmd@command+2,c
  4140  005B8C  6E14               	movwf	cmd@command+3,c
  4141  005B8E  ECE1  F032         	call	_cmd	;wreg free
  4142  005B92  0012               	return		;funcret
  4143  005B94                     __end_of_display_brake_bias:
  4144                           	opt stack 0
  4145                           tblptru	equ	0xFF8
  4146                           tblptrh	equ	0xFF7
  4147                           tblptrl	equ	0xFF6
  4148                           tablat	equ	0xFF5
  4149                           intcon	equ	0xFF2
  4150                           postinc0	equ	0xFEE
  4151                           wreg	equ	0xFE8
  4152                           postdec1	equ	0xFE5
  4153                           plusw1	equ	0xFE3
  4154                           fsr1l	equ	0xFE1
  4155                           plusw2	equ	0xFDB
  4156                           status	equ	0xFD8
  4157                           
  4158 ;; *************** function _display *****************
  4159 ;; Defined at:
  4160 ;;		line 3 in file "display.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  rpm             2   44[COMRAM] int 
  4163 ;;  oilP            2   46[COMRAM] int 
  4164 ;;  gasPres         2   48[COMRAM] int 
  4165 ;;  fuel            2   50[COMRAM] int 
  4166 ;;  tp              2   52[COMRAM] int 
  4167 ;;  bspd            2   54[COMRAM] int 
  4168 ;;  etc             2   56[COMRAM] int 
  4169 ;;  speed           2   58[COMRAM] int 
  4170 ;;  gear            2   60[COMRAM] int 
  4171 ;;  engTemp         2   62[COMRAM] int 
  4172 ;;  oilTemp         2   64[COMRAM] int 
  4173 ;;  battVolts       2   66[COMRAM] int 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4185 ;;      Params:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4188 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4189 ;;Total ram usage:       24 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    9
  4192 ;; This function calls:
  4193 ;;		_display_bottom_section
  4194 ;;		_display_bspd
  4195 ;;		_display_end
  4196 ;;		_display_etc
  4197 ;;		_display_fuel_level
  4198 ;;		_display_gear
  4199 ;;		_display_grids
  4200 ;;		_display_labels
  4201 ;;		_display_oilTemp
  4202 ;;		_display_rpm
  4203 ;;		_display_speed
  4204 ;;		_display_start
  4205 ;;		_display_waterTemp
  4206 ;; This function is called by:
  4207 ;;		_main
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text5
  4212  006220                     __ptext5:
  4213                           	opt stack 0
  4214  006220                     _display:
  4215                           	opt stack 21
  4216                           
  4217                           ;display.c: 4:     display_start();
  4218                           
  4219                           ;incstack = 0
  4220  006220  EC01  F033         	call	_display_start	;wreg free
  4221                           
  4222                           ;display.c: 5:     display_labels();
  4223  006224  ECCF  F007         	call	_display_labels	;wreg free
  4224                           
  4225                           ;display.c: 6:     display_grids();
  4226  006228  EC54  F01F         	call	_display_grids	;wreg free
  4227                           
  4228                           ;display.c: 7:     display_bottom_section(battVolts, tp);
  4229  00622C  C043  F01F         	movff	display@battVolts,display_bottom_section@volts
  4230  006230  C044  F020         	movff	display@battVolts+1,display_bottom_section@volts+1
  4231  006234  C035  F021         	movff	display@tp,display_bottom_section@tp
  4232  006238  C036  F022         	movff	display@tp+1,display_bottom_section@tp+1
  4233  00623C  ECC7  F030         	call	_display_bottom_section	;wreg free
  4234                           
  4235                           ;display.c: 8:     display_rpm(rpm);
  4236  006240  C02D  F019         	movff	display@rpm,display_rpm@rpm
  4237  006244  C02E  F01A         	movff	display@rpm+1,display_rpm@rpm+1
  4238  006248  EC6F  F01C         	call	_display_rpm	;wreg free
  4239                           
  4240                           ;display.c: 9:     display_speed(speed);
  4241  00624C  C03B  F019         	movff	display@speed,display_speed@speed
  4242  006250  C03C  F01A         	movff	display@speed+1,display_speed@speed+1
  4243  006254  ECE6  F02E         	call	_display_speed	;wreg free
  4244                           
  4245                           ;display.c: 10:     display_waterTemp(engTemp);
  4246  006258  C03F  F019         	movff	display@engTemp,display_waterTemp@temp
  4247  00625C  C040  F01A         	movff	display@engTemp+1,display_waterTemp@temp+1
  4248  006260  EC5A  F02E         	call	_display_waterTemp	;wreg free
  4249                           
  4250                           ;display.c: 11:     display_oilTemp(oilTemp);
  4251  006264  C041  F019         	movff	display@oilTemp,display_oilTemp@temp
  4252  006268  C042  F01A         	movff	display@oilTemp+1,display_oilTemp@temp+1
  4253  00626C  EC72  F02F         	call	_display_oilTemp	;wreg free
  4254                           
  4255                           ;display.c: 12:     display_etc(etc);
  4256  006270  C039  F019         	movff	display@etc,display_etc@etc
  4257  006274  C03A  F01A         	movff	display@etc+1,display_etc@etc+1
  4258  006278  ECBA  F00F         	call	_display_etc	;wreg free
  4259                           
  4260                           ;display.c: 14:     display_gear(gear);
  4261  00627C  C03D  F019         	movff	display@gear,display_gear@gear
  4262  006280  C03E  F01A         	movff	display@gear+1,display_gear@gear+1
  4263  006284  EC1B  F022         	call	_display_gear	;wreg free
  4264                           
  4265                           ;display.c: 15:     display_fuel_level(fuel);
  4266  006288  C033  F019         	movff	display@fuel,display_fuel_level@fuel
  4267  00628C  C034  F01A         	movff	display@fuel+1,display_fuel_level@fuel+1
  4268  006290  ECA5  F029         	call	_display_fuel_level	;wreg free
  4269                           
  4270                           ;display.c: 16:     display_bspd(bspd);
  4271  006294  C037  F019         	movff	display@bspd,display_bspd@bspd
  4272  006298  C038  F01A         	movff	display@bspd+1,display_bspd@bspd+1
  4273  00629C  EC90  F024         	call	_display_bspd	;wreg free
  4274                           
  4275                           ;display.c: 18:     display_end();
  4276  0062A0  EC7D  F032         	call	_display_end	;wreg free
  4277  0062A4  0012               	return		;funcret
  4278  0062A6                     __end_of_display:
  4279                           	opt stack 0
  4280                           tblptru	equ	0xFF8
  4281                           tblptrh	equ	0xFF7
  4282                           tblptrl	equ	0xFF6
  4283                           tablat	equ	0xFF5
  4284                           intcon	equ	0xFF2
  4285                           postinc0	equ	0xFEE
  4286                           wreg	equ	0xFE8
  4287                           postdec1	equ	0xFE5
  4288                           plusw1	equ	0xFE3
  4289                           fsr1l	equ	0xFE1
  4290                           plusw2	equ	0xFDB
  4291                           status	equ	0xFD8
  4292                           
  4293 ;; *************** function _display_waterTemp *****************
  4294 ;; Defined at:
  4295 ;;		line 271 in file "display.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  temp            2   24[COMRAM] int 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0, cstack
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4311 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4312 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4313 ;;Total ram usage:        6 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    7
  4316 ;; This function calls:
  4317 ;;		_cmd
  4318 ;;		_cmd_incrementn
  4319 ;;		_wr16
  4320 ;; This function is called by:
  4321 ;;		_display
  4322 ;;		_main
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text6
  4327  005CB4                     __ptext6:
  4328                           	opt stack 0
  4329  005CB4                     _display_waterTemp:
  4330                           	opt stack 23
  4331                           
  4332                           ;display.c: 272:     cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL
      +                          )<<0)));
  4333                           
  4334                           ;incstack = 0
  4335  005CB4  0EFF               	movlw	255
  4336  005CB6  6E11               	movwf	cmd@command,c
  4337  005CB8  0EFF               	movlw	255
  4338  005CBA  6E12               	movwf	cmd@command+1,c
  4339  005CBC  0EFF               	movlw	255
  4340  005CBE  6E13               	movwf	cmd@command+2,c
  4341  005CC0  0E04               	movlw	4
  4342  005CC2  6E14               	movwf	cmd@command+3,c
  4343  005CC4  ECE1  F032         	call	_cmd	;wreg free
  4344                           
  4345                           ;display.c: 274:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 47);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 58);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 31);cmd_i
      +                          ncrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd(temp);
  4346  005CC8  0E2E               	movlw	46
  4347  005CCA  6E11               	movwf	cmd@command,c
  4348  005CCC  0EFF               	movlw	255
  4349  005CCE  6E12               	movwf	cmd@command+1,c
  4350  005CD0  0EFF               	movlw	255
  4351  005CD2  6E13               	movwf	cmd@command+2,c
  4352  005CD4  0EFF               	movlw	255
  4353  005CD6  6E14               	movwf	cmd@command+3,c
  4354  005CD8  ECE1  F032         	call	_cmd	;wreg free
  4355  005CDC  504F               	movf	_cmd_offset,w,c
  4356  005CDE  6E1B               	movwf	??_display_waterTemp& (0+255),c
  4357  005CE0  5050               	movf	_cmd_offset+1,w,c
  4358  005CE2  6E1C               	movwf	(??_display_waterTemp+1)& (0+255),c
  4359  005CE4  6A1D               	clrf	(??_display_waterTemp+2)& (0+255),c
  4360  005CE6  6A1E               	clrf	(??_display_waterTemp+3)& (0+255),c
  4361  005CE8  0E00               	movlw	0
  4362  005CEA  241B               	addwf	??_display_waterTemp,w,c
  4363  005CEC  6E04               	movwf	wr16@addr,c
  4364  005CEE  0E80               	movlw	128
  4365  005CF0  201C               	addwfc	??_display_waterTemp+1,w,c
  4366  005CF2  6E05               	movwf	wr16@addr+1,c
  4367  005CF4  0E10               	movlw	16
  4368  005CF6  201D               	addwfc	??_display_waterTemp+2,w,c
  4369  005CF8  6E06               	movwf	wr16@addr+2,c
  4370  005CFA  0E00               	movlw	0
  4371  005CFC  201E               	addwfc	??_display_waterTemp+3,w,c
  4372  005CFE  6E07               	movwf	wr16@addr+3,c
  4373  005D00  0E00               	movlw	0
  4374  005D02  6E09               	movwf	wr16@value+1,c
  4375  005D04  0E2F               	movlw	47
  4376  005D06  6E08               	movwf	wr16@value,c
  4377  005D08  ECB9  F033         	call	_wr16	;wreg free
  4378  005D0C  0E02               	movlw	2
  4379  005D0E  ECFA  F033         	call	_cmd_incrementn
  4380  005D12  504F               	movf	_cmd_offset,w,c
  4381  005D14  6E1B               	movwf	??_display_waterTemp& (0+255),c
  4382  005D16  5050               	movf	_cmd_offset+1,w,c
  4383  005D18  6E1C               	movwf	(??_display_waterTemp+1)& (0+255),c
  4384  005D1A  6A1D               	clrf	(??_display_waterTemp+2)& (0+255),c
  4385  005D1C  6A1E               	clrf	(??_display_waterTemp+3)& (0+255),c
  4386  005D1E  0E00               	movlw	0
  4387  005D20  241B               	addwf	??_display_waterTemp,w,c
  4388  005D22  6E04               	movwf	wr16@addr,c
  4389  005D24  0E80               	movlw	128
  4390  005D26  201C               	addwfc	??_display_waterTemp+1,w,c
  4391  005D28  6E05               	movwf	wr16@addr+1,c
  4392  005D2A  0E10               	movlw	16
  4393  005D2C  201D               	addwfc	??_display_waterTemp+2,w,c
  4394  005D2E  6E06               	movwf	wr16@addr+2,c
  4395  005D30  0E00               	movlw	0
  4396  005D32  201E               	addwfc	??_display_waterTemp+3,w,c
  4397  005D34  6E07               	movwf	wr16@addr+3,c
  4398  005D36  0E00               	movlw	0
  4399  005D38  6E09               	movwf	wr16@value+1,c
  4400  005D3A  0E3A               	movlw	58
  4401  005D3C  6E08               	movwf	wr16@value,c
  4402  005D3E  ECB9  F033         	call	_wr16	;wreg free
  4403  005D42  0E02               	movlw	2
  4404  005D44  ECFA  F033         	call	_cmd_incrementn
  4405  005D48  504F               	movf	_cmd_offset,w,c
  4406  005D4A  6E1B               	movwf	??_display_waterTemp& (0+255),c
  4407  005D4C  5050               	movf	_cmd_offset+1,w,c
  4408  005D4E  6E1C               	movwf	(??_display_waterTemp+1)& (0+255),c
  4409  005D50  6A1D               	clrf	(??_display_waterTemp+2)& (0+255),c
  4410  005D52  6A1E               	clrf	(??_display_waterTemp+3)& (0+255),c
  4411  005D54  0E00               	movlw	0
  4412  005D56  241B               	addwf	??_display_waterTemp,w,c
  4413  005D58  6E04               	movwf	wr16@addr,c
  4414  005D5A  0E80               	movlw	128
  4415  005D5C  201C               	addwfc	??_display_waterTemp+1,w,c
  4416  005D5E  6E05               	movwf	wr16@addr+1,c
  4417  005D60  0E10               	movlw	16
  4418  005D62  201D               	addwfc	??_display_waterTemp+2,w,c
  4419  005D64  6E06               	movwf	wr16@addr+2,c
  4420  005D66  0E00               	movlw	0
  4421  005D68  201E               	addwfc	??_display_waterTemp+3,w,c
  4422  005D6A  6E07               	movwf	wr16@addr+3,c
  4423  005D6C  0E00               	movlw	0
  4424  005D6E  6E09               	movwf	wr16@value+1,c
  4425  005D70  0E1F               	movlw	31
  4426  005D72  6E08               	movwf	wr16@value,c
  4427  005D74  ECB9  F033         	call	_wr16	;wreg free
  4428  005D78  0E02               	movlw	2
  4429  005D7A  ECFA  F033         	call	_cmd_incrementn
  4430  005D7E  504F               	movf	_cmd_offset,w,c
  4431  005D80  6E1B               	movwf	??_display_waterTemp& (0+255),c
  4432  005D82  5050               	movf	_cmd_offset+1,w,c
  4433  005D84  6E1C               	movwf	(??_display_waterTemp+1)& (0+255),c
  4434  005D86  6A1D               	clrf	(??_display_waterTemp+2)& (0+255),c
  4435  005D88  6A1E               	clrf	(??_display_waterTemp+3)& (0+255),c
  4436  005D8A  0E00               	movlw	0
  4437  005D8C  241B               	addwf	??_display_waterTemp,w,c
  4438  005D8E  6E04               	movwf	wr16@addr,c
  4439  005D90  0E80               	movlw	128
  4440  005D92  201C               	addwfc	??_display_waterTemp+1,w,c
  4441  005D94  6E05               	movwf	wr16@addr+1,c
  4442  005D96  0E10               	movlw	16
  4443  005D98  201D               	addwfc	??_display_waterTemp+2,w,c
  4444  005D9A  6E06               	movwf	wr16@addr+2,c
  4445  005D9C  0E00               	movlw	0
  4446  005D9E  201E               	addwfc	??_display_waterTemp+3,w,c
  4447  005DA0  6E07               	movwf	wr16@addr+3,c
  4448  005DA2  0E02               	movlw	2
  4449  005DA4  6E09               	movwf	wr16@value+1,c
  4450  005DA6  0E00               	movlw	0
  4451  005DA8  6E08               	movwf	wr16@value,c
  4452  005DAA  ECB9  F033         	call	_wr16	;wreg free
  4453  005DAE  0E02               	movlw	2
  4454  005DB0  ECFA  F033         	call	_cmd_incrementn
  4455  005DB4  C019  F011         	movff	display_waterTemp@temp,cmd@command
  4456  005DB8  C01A  F012         	movff	display_waterTemp@temp+1,cmd@command+1
  4457  005DBC  0E00               	movlw	0
  4458  005DBE  BE12               	btfsc	cmd@command+1,7,c
  4459  005DC0  0EFF               	movlw	-1
  4460  005DC2  6E13               	movwf	cmd@command+2,c
  4461  005DC4  6E14               	movwf	cmd@command+3,c
  4462  005DC6  ECE1  F032         	call	_cmd	;wreg free
  4463  005DCA  0012               	return		;funcret
  4464  005DCC                     __end_of_display_waterTemp:
  4465                           	opt stack 0
  4466                           tblptru	equ	0xFF8
  4467                           tblptrh	equ	0xFF7
  4468                           tblptrl	equ	0xFF6
  4469                           tablat	equ	0xFF5
  4470                           intcon	equ	0xFF2
  4471                           postinc0	equ	0xFEE
  4472                           wreg	equ	0xFE8
  4473                           postdec1	equ	0xFE5
  4474                           plusw1	equ	0xFE3
  4475                           fsr1l	equ	0xFE1
  4476                           plusw2	equ	0xFDB
  4477                           status	equ	0xFD8
  4478                           
  4479 ;; *************** function _display_start *****************
  4480 ;; Defined at:
  4481 ;;		line 21 in file "display.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;		None
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0, cstack
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4499 ;;Total ram usage:        0 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    7
  4502 ;; This function calls:
  4503 ;;		_cmd
  4504 ;; This function is called by:
  4505 ;;		_display
  4506 ;;		_main
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text7
  4511  006602                     __ptext7:
  4512                           	opt stack 0
  4513  006602                     _display_start:
  4514                           	opt stack 23
  4515                           
  4516                           ;display.c: 22:     cmd(4294967040UL);
  4517                           
  4518                           ;incstack = 0
  4519  006602  0E00               	movlw	0
  4520  006604  6E11               	movwf	cmd@command,c
  4521  006606  0EFF               	movlw	255
  4522  006608  6E12               	movwf	cmd@command+1,c
  4523  00660A  0EFF               	movlw	255
  4524  00660C  6E13               	movwf	cmd@command+2,c
  4525  00660E  0EFF               	movlw	255
  4526  006610  6E14               	movwf	cmd@command+3,c
  4527  006612  ECE1  F032         	call	_cmd	;wreg free
  4528                           
  4529                           ;display.c: 23:     cmd(((2UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)))
      +                          ;
  4530  006616  0E00               	movlw	0
  4531  006618  6E11               	movwf	cmd@command,c
  4532  00661A  0E00               	movlw	0
  4533  00661C  6E12               	movwf	cmd@command+1,c
  4534  00661E  0E00               	movlw	0
  4535  006620  6E13               	movwf	cmd@command+2,c
  4536  006622  0E02               	movlw	2
  4537  006624  6E14               	movwf	cmd@command+3,c
  4538  006626  ECE1  F032         	call	_cmd	;wreg free
  4539                           
  4540                           ;display.c: 24:     cmd(((38UL<<24)|(((1)&1UL)<<2)|(((1)&1UL)<<1)|(((1)&1UL)<<0)));
  4541  00662A  0E07               	movlw	7
  4542  00662C  6E11               	movwf	cmd@command,c
  4543  00662E  0E00               	movlw	0
  4544  006630  6E12               	movwf	cmd@command+1,c
  4545  006632  0E00               	movlw	0
  4546  006634  6E13               	movwf	cmd@command+2,c
  4547  006636  0E26               	movlw	38
  4548  006638  6E14               	movwf	cmd@command+3,c
  4549  00663A  ECE1  F032         	call	_cmd	;wreg free
  4550  00663E  0012               	return		;funcret
  4551  006640                     __end_of_display_start:
  4552                           	opt stack 0
  4553                           tblptru	equ	0xFF8
  4554                           tblptrh	equ	0xFF7
  4555                           tblptrl	equ	0xFF6
  4556                           tablat	equ	0xFF5
  4557                           intcon	equ	0xFF2
  4558                           postinc0	equ	0xFEE
  4559                           wreg	equ	0xFE8
  4560                           postdec1	equ	0xFE5
  4561                           plusw1	equ	0xFE3
  4562                           fsr1l	equ	0xFE1
  4563                           plusw2	equ	0xFDB
  4564                           status	equ	0xFD8
  4565                           
  4566 ;; *************** function _display_speed *****************
  4567 ;; Defined at:
  4568 ;;		line 361 in file "display.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  speed           2   24[COMRAM] int 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4584 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4585 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4586 ;;Total ram usage:        6 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    7
  4589 ;; This function calls:
  4590 ;;		_cmd
  4591 ;;		_cmd_incrementn
  4592 ;;		_wr16
  4593 ;; This function is called by:
  4594 ;;		_display
  4595 ;;		_main
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text8
  4600  005DCC                     __ptext8:
  4601                           	opt stack 0
  4602  005DCC                     _display_speed:
  4603                           	opt stack 23
  4604                           
  4605                           ;display.c: 362:     cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL
      +                          )<<0)));
  4606                           
  4607                           ;incstack = 0
  4608  005DCC  0EFF               	movlw	255
  4609  005DCE  6E11               	movwf	cmd@command,c
  4610  005DD0  0EFF               	movlw	255
  4611  005DD2  6E12               	movwf	cmd@command+1,c
  4612  005DD4  0EFF               	movlw	255
  4613  005DD6  6E13               	movwf	cmd@command+2,c
  4614  005DD8  0E04               	movlw	4
  4615  005DDA  6E14               	movwf	cmd@command+3,c
  4616  005DDC  ECE1  F032         	call	_cmd	;wreg free
  4617                           
  4618                           ;display.c: 363:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 408);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 130);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 31);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 2048UL);cmd_incrementn(2);cmd(speed);
  4619  005DE0  0E2E               	movlw	46
  4620  005DE2  6E11               	movwf	cmd@command,c
  4621  005DE4  0EFF               	movlw	255
  4622  005DE6  6E12               	movwf	cmd@command+1,c
  4623  005DE8  0EFF               	movlw	255
  4624  005DEA  6E13               	movwf	cmd@command+2,c
  4625  005DEC  0EFF               	movlw	255
  4626  005DEE  6E14               	movwf	cmd@command+3,c
  4627  005DF0  ECE1  F032         	call	_cmd	;wreg free
  4628  005DF4  504F               	movf	_cmd_offset,w,c
  4629  005DF6  6E1B               	movwf	??_display_speed& (0+255),c
  4630  005DF8  5050               	movf	_cmd_offset+1,w,c
  4631  005DFA  6E1C               	movwf	(??_display_speed+1)& (0+255),c
  4632  005DFC  6A1D               	clrf	(??_display_speed+2)& (0+255),c
  4633  005DFE  6A1E               	clrf	(??_display_speed+3)& (0+255),c
  4634  005E00  0E00               	movlw	0
  4635  005E02  241B               	addwf	??_display_speed,w,c
  4636  005E04  6E04               	movwf	wr16@addr,c
  4637  005E06  0E80               	movlw	128
  4638  005E08  201C               	addwfc	??_display_speed+1,w,c
  4639  005E0A  6E05               	movwf	wr16@addr+1,c
  4640  005E0C  0E10               	movlw	16
  4641  005E0E  201D               	addwfc	??_display_speed+2,w,c
  4642  005E10  6E06               	movwf	wr16@addr+2,c
  4643  005E12  0E00               	movlw	0
  4644  005E14  201E               	addwfc	??_display_speed+3,w,c
  4645  005E16  6E07               	movwf	wr16@addr+3,c
  4646  005E18  0E01               	movlw	1
  4647  005E1A  6E09               	movwf	wr16@value+1,c
  4648  005E1C  0E98               	movlw	152
  4649  005E1E  6E08               	movwf	wr16@value,c
  4650  005E20  ECB9  F033         	call	_wr16	;wreg free
  4651  005E24  0E02               	movlw	2
  4652  005E26  ECFA  F033         	call	_cmd_incrementn
  4653  005E2A  504F               	movf	_cmd_offset,w,c
  4654  005E2C  6E1B               	movwf	??_display_speed& (0+255),c
  4655  005E2E  5050               	movf	_cmd_offset+1,w,c
  4656  005E30  6E1C               	movwf	(??_display_speed+1)& (0+255),c
  4657  005E32  6A1D               	clrf	(??_display_speed+2)& (0+255),c
  4658  005E34  6A1E               	clrf	(??_display_speed+3)& (0+255),c
  4659  005E36  0E00               	movlw	0
  4660  005E38  241B               	addwf	??_display_speed,w,c
  4661  005E3A  6E04               	movwf	wr16@addr,c
  4662  005E3C  0E80               	movlw	128
  4663  005E3E  201C               	addwfc	??_display_speed+1,w,c
  4664  005E40  6E05               	movwf	wr16@addr+1,c
  4665  005E42  0E10               	movlw	16
  4666  005E44  201D               	addwfc	??_display_speed+2,w,c
  4667  005E46  6E06               	movwf	wr16@addr+2,c
  4668  005E48  0E00               	movlw	0
  4669  005E4A  201E               	addwfc	??_display_speed+3,w,c
  4670  005E4C  6E07               	movwf	wr16@addr+3,c
  4671  005E4E  0E00               	movlw	0
  4672  005E50  6E09               	movwf	wr16@value+1,c
  4673  005E52  0E82               	movlw	130
  4674  005E54  6E08               	movwf	wr16@value,c
  4675  005E56  ECB9  F033         	call	_wr16	;wreg free
  4676  005E5A  0E02               	movlw	2
  4677  005E5C  ECFA  F033         	call	_cmd_incrementn
  4678  005E60  504F               	movf	_cmd_offset,w,c
  4679  005E62  6E1B               	movwf	??_display_speed& (0+255),c
  4680  005E64  5050               	movf	_cmd_offset+1,w,c
  4681  005E66  6E1C               	movwf	(??_display_speed+1)& (0+255),c
  4682  005E68  6A1D               	clrf	(??_display_speed+2)& (0+255),c
  4683  005E6A  6A1E               	clrf	(??_display_speed+3)& (0+255),c
  4684  005E6C  0E00               	movlw	0
  4685  005E6E  241B               	addwf	??_display_speed,w,c
  4686  005E70  6E04               	movwf	wr16@addr,c
  4687  005E72  0E80               	movlw	128
  4688  005E74  201C               	addwfc	??_display_speed+1,w,c
  4689  005E76  6E05               	movwf	wr16@addr+1,c
  4690  005E78  0E10               	movlw	16
  4691  005E7A  201D               	addwfc	??_display_speed+2,w,c
  4692  005E7C  6E06               	movwf	wr16@addr+2,c
  4693  005E7E  0E00               	movlw	0
  4694  005E80  201E               	addwfc	??_display_speed+3,w,c
  4695  005E82  6E07               	movwf	wr16@addr+3,c
  4696  005E84  0E00               	movlw	0
  4697  005E86  6E09               	movwf	wr16@value+1,c
  4698  005E88  0E1F               	movlw	31
  4699  005E8A  6E08               	movwf	wr16@value,c
  4700  005E8C  ECB9  F033         	call	_wr16	;wreg free
  4701  005E90  0E02               	movlw	2
  4702  005E92  ECFA  F033         	call	_cmd_incrementn
  4703  005E96  504F               	movf	_cmd_offset,w,c
  4704  005E98  6E1B               	movwf	??_display_speed& (0+255),c
  4705  005E9A  5050               	movf	_cmd_offset+1,w,c
  4706  005E9C  6E1C               	movwf	(??_display_speed+1)& (0+255),c
  4707  005E9E  6A1D               	clrf	(??_display_speed+2)& (0+255),c
  4708  005EA0  6A1E               	clrf	(??_display_speed+3)& (0+255),c
  4709  005EA2  0E00               	movlw	0
  4710  005EA4  241B               	addwf	??_display_speed,w,c
  4711  005EA6  6E04               	movwf	wr16@addr,c
  4712  005EA8  0E80               	movlw	128
  4713  005EAA  201C               	addwfc	??_display_speed+1,w,c
  4714  005EAC  6E05               	movwf	wr16@addr+1,c
  4715  005EAE  0E10               	movlw	16
  4716  005EB0  201D               	addwfc	??_display_speed+2,w,c
  4717  005EB2  6E06               	movwf	wr16@addr+2,c
  4718  005EB4  0E00               	movlw	0
  4719  005EB6  201E               	addwfc	??_display_speed+3,w,c
  4720  005EB8  6E07               	movwf	wr16@addr+3,c
  4721  005EBA  0E08               	movlw	8
  4722  005EBC  6E09               	movwf	wr16@value+1,c
  4723  005EBE  0E00               	movlw	0
  4724  005EC0  6E08               	movwf	wr16@value,c
  4725  005EC2  ECB9  F033         	call	_wr16	;wreg free
  4726  005EC6  0E02               	movlw	2
  4727  005EC8  ECFA  F033         	call	_cmd_incrementn
  4728  005ECC  C019  F011         	movff	display_speed@speed,cmd@command
  4729  005ED0  C01A  F012         	movff	display_speed@speed+1,cmd@command+1
  4730  005ED4  0E00               	movlw	0
  4731  005ED6  BE12               	btfsc	cmd@command+1,7,c
  4732  005ED8  0EFF               	movlw	-1
  4733  005EDA  6E13               	movwf	cmd@command+2,c
  4734  005EDC  6E14               	movwf	cmd@command+3,c
  4735  005EDE  ECE1  F032         	call	_cmd	;wreg free
  4736  005EE2  0012               	return		;funcret
  4737  005EE4                     __end_of_display_speed:
  4738                           	opt stack 0
  4739                           tblptru	equ	0xFF8
  4740                           tblptrh	equ	0xFF7
  4741                           tblptrl	equ	0xFF6
  4742                           tablat	equ	0xFF5
  4743                           intcon	equ	0xFF2
  4744                           postinc0	equ	0xFEE
  4745                           wreg	equ	0xFE8
  4746                           postdec1	equ	0xFE5
  4747                           plusw1	equ	0xFE3
  4748                           fsr1l	equ	0xFE1
  4749                           plusw2	equ	0xFDB
  4750                           status	equ	0xFD8
  4751                           
  4752 ;; *************** function _display_rpm *****************
  4753 ;; Defined at:
  4754 ;;		line 371 in file "display.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  rpm             2   24[COMRAM] int 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  i               2   42[COMRAM] int 
  4759 ;;  n               2   40[COMRAM] int 
  4760 ;;  diff            2   38[COMRAM] int 
  4761 ;;  second_digit    2   36[COMRAM] int 
  4762 ;;  first_digit     2   34[COMRAM] int 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      void 
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4773 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4774 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4775 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4776 ;;Total ram usage:       20 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    7
  4779 ;; This function calls:
  4780 ;;		___awdiv
  4781 ;;		___awmod
  4782 ;;		___wmul
  4783 ;;		_cmd
  4784 ;;		_cmd_incrementn
  4785 ;;		_wr16
  4786 ;;		_wr8s
  4787 ;; This function is called by:
  4788 ;;		_display
  4789 ;;		_main
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text9
  4794  0038DE                     __ptext9:
  4795                           	opt stack 0
  4796  0038DE                     _display_rpm:
  4797                           	opt stack 23
  4798                           
  4799                           ;display.c: 372:     int first_digit = rpm/1000;
  4800                           
  4801                           ;incstack = 0
  4802  0038DE  C019  F003         	movff	display_rpm@rpm,___awdiv@dividend
  4803  0038E2  C01A  F004         	movff	display_rpm@rpm+1,___awdiv@dividend+1
  4804  0038E6  0E03               	movlw	3
  4805  0038E8  6E06               	movwf	___awdiv@divisor+1,c
  4806  0038EA  0EE8               	movlw	232
  4807  0038EC  6E05               	movwf	___awdiv@divisor,c
  4808  0038EE  EC96  F031         	call	___awdiv	;wreg free
  4809  0038F2  C003  F023         	movff	?___awdiv,display_rpm@first_digit
  4810  0038F6  C004  F024         	movff	?___awdiv+1,display_rpm@first_digit+1
  4811                           
  4812                           ;display.c: 373:     int second_digit = (rpm/100)%10;
  4813  0038FA  0E00               	movlw	0
  4814  0038FC  6E06               	movwf	___awdiv@divisor+1,c
  4815  0038FE  0E64               	movlw	100
  4816  003900  6E05               	movwf	___awdiv@divisor,c
  4817  003902  C019  F003         	movff	display_rpm@rpm,___awdiv@dividend
  4818  003906  C01A  F004         	movff	display_rpm@rpm+1,___awdiv@dividend+1
  4819  00390A  EC96  F031         	call	___awdiv	;wreg free
  4820  00390E  C003  F00B         	movff	?___awdiv,___awmod@dividend
  4821  003912  C004  F00C         	movff	?___awdiv+1,___awmod@dividend+1
  4822  003916  0E00               	movlw	0
  4823  003918  6E0E               	movwf	___awmod@divisor+1,c
  4824  00391A  0E0A               	movlw	10
  4825  00391C  6E0D               	movwf	___awmod@divisor,c
  4826  00391E  EC14  F032         	call	___awmod	;wreg free
  4827  003922  C00B  F025         	movff	?___awmod,display_rpm@second_digit
  4828  003926  C00C  F026         	movff	?___awmod+1,display_rpm@second_digit+1
  4829                           
  4830                           ;display.c: 374:     int diff = 12500/19;
  4831  00392A  0E02               	movlw	2
  4832  00392C  6E28               	movwf	display_rpm@diff+1,c
  4833  00392E  0E91               	movlw	145
  4834  003930  6E27               	movwf	display_rpm@diff,c
  4835                           
  4836                           ;display.c: 376:     int n = rpm/diff;
  4837  003932  C019  F003         	movff	display_rpm@rpm,___awdiv@dividend
  4838  003936  C01A  F004         	movff	display_rpm@rpm+1,___awdiv@dividend+1
  4839  00393A  C027  F005         	movff	display_rpm@diff,___awdiv@divisor
  4840  00393E  C028  F006         	movff	display_rpm@diff+1,___awdiv@divisor+1
  4841  003942  EC96  F031         	call	___awdiv	;wreg free
  4842  003946  C003  F029         	movff	?___awdiv,display_rpm@n
  4843  00394A  C004  F02A         	movff	?___awdiv+1,display_rpm@n+1
  4844                           
  4845                           ;display.c: 378:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 380);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 55);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 31);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 2048UL);cmd_incrementn(2);cmd(first_digit);
  4846  00394E  0E2E               	movlw	46
  4847  003950  6E11               	movwf	cmd@command,c
  4848  003952  0EFF               	movlw	255
  4849  003954  6E12               	movwf	cmd@command+1,c
  4850  003956  0EFF               	movlw	255
  4851  003958  6E13               	movwf	cmd@command+2,c
  4852  00395A  0EFF               	movlw	255
  4853  00395C  6E14               	movwf	cmd@command+3,c
  4854  00395E  ECE1  F032         	call	_cmd	;wreg free
  4855  003962  504F               	movf	_cmd_offset,w,c
  4856  003964  6E1B               	movwf	??_display_rpm& (0+255),c
  4857  003966  5050               	movf	_cmd_offset+1,w,c
  4858  003968  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  4859  00396A  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  4860  00396C  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  4861  00396E  0E00               	movlw	0
  4862  003970  241B               	addwf	??_display_rpm,w,c
  4863  003972  6E04               	movwf	wr16@addr,c
  4864  003974  0E80               	movlw	128
  4865  003976  201C               	addwfc	??_display_rpm+1,w,c
  4866  003978  6E05               	movwf	wr16@addr+1,c
  4867  00397A  0E10               	movlw	16
  4868  00397C  201D               	addwfc	??_display_rpm+2,w,c
  4869  00397E  6E06               	movwf	wr16@addr+2,c
  4870  003980  0E00               	movlw	0
  4871  003982  201E               	addwfc	??_display_rpm+3,w,c
  4872  003984  6E07               	movwf	wr16@addr+3,c
  4873  003986  0E01               	movlw	1
  4874  003988  6E09               	movwf	wr16@value+1,c
  4875  00398A  0E7C               	movlw	124
  4876  00398C  6E08               	movwf	wr16@value,c
  4877  00398E  ECB9  F033         	call	_wr16	;wreg free
  4878  003992  0E02               	movlw	2
  4879  003994  ECFA  F033         	call	_cmd_incrementn
  4880  003998  504F               	movf	_cmd_offset,w,c
  4881  00399A  6E1B               	movwf	??_display_rpm& (0+255),c
  4882  00399C  5050               	movf	_cmd_offset+1,w,c
  4883  00399E  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  4884  0039A0  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  4885  0039A2  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  4886  0039A4  0E00               	movlw	0
  4887  0039A6  241B               	addwf	??_display_rpm,w,c
  4888  0039A8  6E04               	movwf	wr16@addr,c
  4889  0039AA  0E80               	movlw	128
  4890  0039AC  201C               	addwfc	??_display_rpm+1,w,c
  4891  0039AE  6E05               	movwf	wr16@addr+1,c
  4892  0039B0  0E10               	movlw	16
  4893  0039B2  201D               	addwfc	??_display_rpm+2,w,c
  4894  0039B4  6E06               	movwf	wr16@addr+2,c
  4895  0039B6  0E00               	movlw	0
  4896  0039B8  201E               	addwfc	??_display_rpm+3,w,c
  4897  0039BA  6E07               	movwf	wr16@addr+3,c
  4898  0039BC  0E00               	movlw	0
  4899  0039BE  6E09               	movwf	wr16@value+1,c
  4900  0039C0  0E37               	movlw	55
  4901  0039C2  6E08               	movwf	wr16@value,c
  4902  0039C4  ECB9  F033         	call	_wr16	;wreg free
  4903  0039C8  0E02               	movlw	2
  4904  0039CA  ECFA  F033         	call	_cmd_incrementn
  4905  0039CE  504F               	movf	_cmd_offset,w,c
  4906  0039D0  6E1B               	movwf	??_display_rpm& (0+255),c
  4907  0039D2  5050               	movf	_cmd_offset+1,w,c
  4908  0039D4  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  4909  0039D6  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  4910  0039D8  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  4911  0039DA  0E00               	movlw	0
  4912  0039DC  241B               	addwf	??_display_rpm,w,c
  4913  0039DE  6E04               	movwf	wr16@addr,c
  4914  0039E0  0E80               	movlw	128
  4915  0039E2  201C               	addwfc	??_display_rpm+1,w,c
  4916  0039E4  6E05               	movwf	wr16@addr+1,c
  4917  0039E6  0E10               	movlw	16
  4918  0039E8  201D               	addwfc	??_display_rpm+2,w,c
  4919  0039EA  6E06               	movwf	wr16@addr+2,c
  4920  0039EC  0E00               	movlw	0
  4921  0039EE  201E               	addwfc	??_display_rpm+3,w,c
  4922  0039F0  6E07               	movwf	wr16@addr+3,c
  4923  0039F2  0E00               	movlw	0
  4924  0039F4  6E09               	movwf	wr16@value+1,c
  4925  0039F6  0E1F               	movlw	31
  4926  0039F8  6E08               	movwf	wr16@value,c
  4927  0039FA  ECB9  F033         	call	_wr16	;wreg free
  4928  0039FE  0E02               	movlw	2
  4929  003A00  ECFA  F033         	call	_cmd_incrementn
  4930  003A04  504F               	movf	_cmd_offset,w,c
  4931  003A06  6E1B               	movwf	??_display_rpm& (0+255),c
  4932  003A08  5050               	movf	_cmd_offset+1,w,c
  4933  003A0A  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  4934  003A0C  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  4935  003A0E  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  4936  003A10  0E00               	movlw	0
  4937  003A12  241B               	addwf	??_display_rpm,w,c
  4938  003A14  6E04               	movwf	wr16@addr,c
  4939  003A16  0E80               	movlw	128
  4940  003A18  201C               	addwfc	??_display_rpm+1,w,c
  4941  003A1A  6E05               	movwf	wr16@addr+1,c
  4942  003A1C  0E10               	movlw	16
  4943  003A1E  201D               	addwfc	??_display_rpm+2,w,c
  4944  003A20  6E06               	movwf	wr16@addr+2,c
  4945  003A22  0E00               	movlw	0
  4946  003A24  201E               	addwfc	??_display_rpm+3,w,c
  4947  003A26  6E07               	movwf	wr16@addr+3,c
  4948  003A28  0E08               	movlw	8
  4949  003A2A  6E09               	movwf	wr16@value+1,c
  4950  003A2C  0E00               	movlw	0
  4951  003A2E  6E08               	movwf	wr16@value,c
  4952  003A30  ECB9  F033         	call	_wr16	;wreg free
  4953  003A34  0E02               	movlw	2
  4954  003A36  ECFA  F033         	call	_cmd_incrementn
  4955  003A3A  C023  F011         	movff	display_rpm@first_digit,cmd@command
  4956  003A3E  C024  F012         	movff	display_rpm@first_digit+1,cmd@command+1
  4957  003A42  0E00               	movlw	0
  4958  003A44  BE12               	btfsc	cmd@command+1,7,c
  4959  003A46  0EFF               	movlw	-1
  4960  003A48  6E13               	movwf	cmd@command+2,c
  4961  003A4A  6E14               	movwf	cmd@command+3,c
  4962  003A4C  ECE1  F032         	call	_cmd	;wreg free
  4963                           
  4964                           ;display.c: 379:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 397);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 55);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 31);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd(second_digit);
  4965  003A50  0E2E               	movlw	46
  4966  003A52  6E11               	movwf	cmd@command,c
  4967  003A54  0EFF               	movlw	255
  4968  003A56  6E12               	movwf	cmd@command+1,c
  4969  003A58  0EFF               	movlw	255
  4970  003A5A  6E13               	movwf	cmd@command+2,c
  4971  003A5C  0EFF               	movlw	255
  4972  003A5E  6E14               	movwf	cmd@command+3,c
  4973  003A60  ECE1  F032         	call	_cmd	;wreg free
  4974  003A64  504F               	movf	_cmd_offset,w,c
  4975  003A66  6E1B               	movwf	??_display_rpm& (0+255),c
  4976  003A68  5050               	movf	_cmd_offset+1,w,c
  4977  003A6A  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  4978  003A6C  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  4979  003A6E  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  4980  003A70  0E00               	movlw	0
  4981  003A72  241B               	addwf	??_display_rpm,w,c
  4982  003A74  6E04               	movwf	wr16@addr,c
  4983  003A76  0E80               	movlw	128
  4984  003A78  201C               	addwfc	??_display_rpm+1,w,c
  4985  003A7A  6E05               	movwf	wr16@addr+1,c
  4986  003A7C  0E10               	movlw	16
  4987  003A7E  201D               	addwfc	??_display_rpm+2,w,c
  4988  003A80  6E06               	movwf	wr16@addr+2,c
  4989  003A82  0E00               	movlw	0
  4990  003A84  201E               	addwfc	??_display_rpm+3,w,c
  4991  003A86  6E07               	movwf	wr16@addr+3,c
  4992  003A88  0E01               	movlw	1
  4993  003A8A  6E09               	movwf	wr16@value+1,c
  4994  003A8C  0E8D               	movlw	141
  4995  003A8E  6E08               	movwf	wr16@value,c
  4996  003A90  ECB9  F033         	call	_wr16	;wreg free
  4997  003A94  0E02               	movlw	2
  4998  003A96  ECFA  F033         	call	_cmd_incrementn
  4999  003A9A  504F               	movf	_cmd_offset,w,c
  5000  003A9C  6E1B               	movwf	??_display_rpm& (0+255),c
  5001  003A9E  5050               	movf	_cmd_offset+1,w,c
  5002  003AA0  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5003  003AA2  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5004  003AA4  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5005  003AA6  0E00               	movlw	0
  5006  003AA8  241B               	addwf	??_display_rpm,w,c
  5007  003AAA  6E04               	movwf	wr16@addr,c
  5008  003AAC  0E80               	movlw	128
  5009  003AAE  201C               	addwfc	??_display_rpm+1,w,c
  5010  003AB0  6E05               	movwf	wr16@addr+1,c
  5011  003AB2  0E10               	movlw	16
  5012  003AB4  201D               	addwfc	??_display_rpm+2,w,c
  5013  003AB6  6E06               	movwf	wr16@addr+2,c
  5014  003AB8  0E00               	movlw	0
  5015  003ABA  201E               	addwfc	??_display_rpm+3,w,c
  5016  003ABC  6E07               	movwf	wr16@addr+3,c
  5017  003ABE  0E00               	movlw	0
  5018  003AC0  6E09               	movwf	wr16@value+1,c
  5019  003AC2  0E37               	movlw	55
  5020  003AC4  6E08               	movwf	wr16@value,c
  5021  003AC6  ECB9  F033         	call	_wr16	;wreg free
  5022  003ACA  0E02               	movlw	2
  5023  003ACC  ECFA  F033         	call	_cmd_incrementn
  5024  003AD0  504F               	movf	_cmd_offset,w,c
  5025  003AD2  6E1B               	movwf	??_display_rpm& (0+255),c
  5026  003AD4  5050               	movf	_cmd_offset+1,w,c
  5027  003AD6  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5028  003AD8  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5029  003ADA  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5030  003ADC  0E00               	movlw	0
  5031  003ADE  241B               	addwf	??_display_rpm,w,c
  5032  003AE0  6E04               	movwf	wr16@addr,c
  5033  003AE2  0E80               	movlw	128
  5034  003AE4  201C               	addwfc	??_display_rpm+1,w,c
  5035  003AE6  6E05               	movwf	wr16@addr+1,c
  5036  003AE8  0E10               	movlw	16
  5037  003AEA  201D               	addwfc	??_display_rpm+2,w,c
  5038  003AEC  6E06               	movwf	wr16@addr+2,c
  5039  003AEE  0E00               	movlw	0
  5040  003AF0  201E               	addwfc	??_display_rpm+3,w,c
  5041  003AF2  6E07               	movwf	wr16@addr+3,c
  5042  003AF4  0E00               	movlw	0
  5043  003AF6  6E09               	movwf	wr16@value+1,c
  5044  003AF8  0E1F               	movlw	31
  5045  003AFA  6E08               	movwf	wr16@value,c
  5046  003AFC  ECB9  F033         	call	_wr16	;wreg free
  5047  003B00  0E02               	movlw	2
  5048  003B02  ECFA  F033         	call	_cmd_incrementn
  5049  003B06  504F               	movf	_cmd_offset,w,c
  5050  003B08  6E1B               	movwf	??_display_rpm& (0+255),c
  5051  003B0A  5050               	movf	_cmd_offset+1,w,c
  5052  003B0C  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5053  003B0E  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5054  003B10  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5055  003B12  0E00               	movlw	0
  5056  003B14  241B               	addwf	??_display_rpm,w,c
  5057  003B16  6E04               	movwf	wr16@addr,c
  5058  003B18  0E80               	movlw	128
  5059  003B1A  201C               	addwfc	??_display_rpm+1,w,c
  5060  003B1C  6E05               	movwf	wr16@addr+1,c
  5061  003B1E  0E10               	movlw	16
  5062  003B20  201D               	addwfc	??_display_rpm+2,w,c
  5063  003B22  6E06               	movwf	wr16@addr+2,c
  5064  003B24  0E00               	movlw	0
  5065  003B26  201E               	addwfc	??_display_rpm+3,w,c
  5066  003B28  6E07               	movwf	wr16@addr+3,c
  5067  003B2A  0E00               	movlw	0
  5068  003B2C  6E09               	movwf	wr16@value+1,c
  5069  003B2E  0E00               	movlw	0
  5070  003B30  6E08               	movwf	wr16@value,c
  5071  003B32  ECB9  F033         	call	_wr16	;wreg free
  5072  003B36  0E02               	movlw	2
  5073  003B38  ECFA  F033         	call	_cmd_incrementn
  5074  003B3C  C025  F011         	movff	display_rpm@second_digit,cmd@command
  5075  003B40  C026  F012         	movff	display_rpm@second_digit+1,cmd@command+1
  5076  003B44  0E00               	movlw	0
  5077  003B46  BE12               	btfsc	cmd@command+1,7,c
  5078  003B48  0EFF               	movlw	-1
  5079  003B4A  6E13               	movwf	cmd@command+2,c
  5080  003B4C  6E14               	movwf	cmd@command+3,c
  5081  003B4E  ECE1  F032         	call	_cmd	;wreg free
  5082                           
  5083                           ;display.c: 380:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 380);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 55);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 31);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44UL +cmd_offset, "."));
  5084  003B52  0E0C               	movlw	12
  5085  003B54  6E11               	movwf	cmd@command,c
  5086  003B56  0EFF               	movlw	255
  5087  003B58  6E12               	movwf	cmd@command+1,c
  5088  003B5A  0EFF               	movlw	255
  5089  003B5C  6E13               	movwf	cmd@command+2,c
  5090  003B5E  0EFF               	movlw	255
  5091  003B60  6E14               	movwf	cmd@command+3,c
  5092  003B62  ECE1  F032         	call	_cmd	;wreg free
  5093  003B66  504F               	movf	_cmd_offset,w,c
  5094  003B68  6E1B               	movwf	??_display_rpm& (0+255),c
  5095  003B6A  5050               	movf	_cmd_offset+1,w,c
  5096  003B6C  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5097  003B6E  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5098  003B70  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5099  003B72  0E00               	movlw	0
  5100  003B74  241B               	addwf	??_display_rpm,w,c
  5101  003B76  6E04               	movwf	wr16@addr,c
  5102  003B78  0E80               	movlw	128
  5103  003B7A  201C               	addwfc	??_display_rpm+1,w,c
  5104  003B7C  6E05               	movwf	wr16@addr+1,c
  5105  003B7E  0E10               	movlw	16
  5106  003B80  201D               	addwfc	??_display_rpm+2,w,c
  5107  003B82  6E06               	movwf	wr16@addr+2,c
  5108  003B84  0E00               	movlw	0
  5109  003B86  201E               	addwfc	??_display_rpm+3,w,c
  5110  003B88  6E07               	movwf	wr16@addr+3,c
  5111  003B8A  0E01               	movlw	1
  5112  003B8C  6E09               	movwf	wr16@value+1,c
  5113  003B8E  0E7C               	movlw	124
  5114  003B90  6E08               	movwf	wr16@value,c
  5115  003B92  ECB9  F033         	call	_wr16	;wreg free
  5116  003B96  0E02               	movlw	2
  5117  003B98  ECFA  F033         	call	_cmd_incrementn
  5118  003B9C  504F               	movf	_cmd_offset,w,c
  5119  003B9E  6E1B               	movwf	??_display_rpm& (0+255),c
  5120  003BA0  5050               	movf	_cmd_offset+1,w,c
  5121  003BA2  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5122  003BA4  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5123  003BA6  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5124  003BA8  0E00               	movlw	0
  5125  003BAA  241B               	addwf	??_display_rpm,w,c
  5126  003BAC  6E04               	movwf	wr16@addr,c
  5127  003BAE  0E80               	movlw	128
  5128  003BB0  201C               	addwfc	??_display_rpm+1,w,c
  5129  003BB2  6E05               	movwf	wr16@addr+1,c
  5130  003BB4  0E10               	movlw	16
  5131  003BB6  201D               	addwfc	??_display_rpm+2,w,c
  5132  003BB8  6E06               	movwf	wr16@addr+2,c
  5133  003BBA  0E00               	movlw	0
  5134  003BBC  201E               	addwfc	??_display_rpm+3,w,c
  5135  003BBE  6E07               	movwf	wr16@addr+3,c
  5136  003BC0  0E00               	movlw	0
  5137  003BC2  6E09               	movwf	wr16@value+1,c
  5138  003BC4  0E37               	movlw	55
  5139  003BC6  6E08               	movwf	wr16@value,c
  5140  003BC8  ECB9  F033         	call	_wr16	;wreg free
  5141  003BCC  0E02               	movlw	2
  5142  003BCE  ECFA  F033         	call	_cmd_incrementn
  5143  003BD2  504F               	movf	_cmd_offset,w,c
  5144  003BD4  6E1B               	movwf	??_display_rpm& (0+255),c
  5145  003BD6  5050               	movf	_cmd_offset+1,w,c
  5146  003BD8  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5147  003BDA  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5148  003BDC  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5149  003BDE  0E00               	movlw	0
  5150  003BE0  241B               	addwf	??_display_rpm,w,c
  5151  003BE2  6E04               	movwf	wr16@addr,c
  5152  003BE4  0E80               	movlw	128
  5153  003BE6  201C               	addwfc	??_display_rpm+1,w,c
  5154  003BE8  6E05               	movwf	wr16@addr+1,c
  5155  003BEA  0E10               	movlw	16
  5156  003BEC  201D               	addwfc	??_display_rpm+2,w,c
  5157  003BEE  6E06               	movwf	wr16@addr+2,c
  5158  003BF0  0E00               	movlw	0
  5159  003BF2  201E               	addwfc	??_display_rpm+3,w,c
  5160  003BF4  6E07               	movwf	wr16@addr+3,c
  5161  003BF6  0E00               	movlw	0
  5162  003BF8  6E09               	movwf	wr16@value+1,c
  5163  003BFA  0E1F               	movlw	31
  5164  003BFC  6E08               	movwf	wr16@value,c
  5165  003BFE  ECB9  F033         	call	_wr16	;wreg free
  5166  003C02  0E02               	movlw	2
  5167  003C04  ECFA  F033         	call	_cmd_incrementn
  5168  003C08  504F               	movf	_cmd_offset,w,c
  5169  003C0A  6E1B               	movwf	??_display_rpm& (0+255),c
  5170  003C0C  5050               	movf	_cmd_offset+1,w,c
  5171  003C0E  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5172  003C10  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5173  003C12  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5174  003C14  0E00               	movlw	0
  5175  003C16  241B               	addwf	??_display_rpm,w,c
  5176  003C18  6E04               	movwf	wr16@addr,c
  5177  003C1A  0E80               	movlw	128
  5178  003C1C  201C               	addwfc	??_display_rpm+1,w,c
  5179  003C1E  6E05               	movwf	wr16@addr+1,c
  5180  003C20  0E10               	movlw	16
  5181  003C22  201D               	addwfc	??_display_rpm+2,w,c
  5182  003C24  6E06               	movwf	wr16@addr+2,c
  5183  003C26  0E00               	movlw	0
  5184  003C28  201E               	addwfc	??_display_rpm+3,w,c
  5185  003C2A  6E07               	movwf	wr16@addr+3,c
  5186  003C2C  0E00               	movlw	0
  5187  003C2E  6E09               	movwf	wr16@value+1,c
  5188  003C30  0E00               	movlw	0
  5189  003C32  6E08               	movwf	wr16@value,c
  5190  003C34  ECB9  F033         	call	_wr16	;wreg free
  5191  003C38  0E02               	movlw	2
  5192  003C3A  ECFA  F033         	call	_cmd_incrementn
  5193  003C3E  504F               	movf	_cmd_offset,w,c
  5194  003C40  6E1B               	movwf	??_display_rpm& (0+255),c
  5195  003C42  5050               	movf	_cmd_offset+1,w,c
  5196  003C44  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5197  003C46  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5198  003C48  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5199  003C4A  0E00               	movlw	0
  5200  003C4C  241B               	addwf	??_display_rpm,w,c
  5201  003C4E  6E09               	movwf	wr8s@addr,c
  5202  003C50  0E80               	movlw	128
  5203  003C52  201C               	addwfc	??_display_rpm+1,w,c
  5204  003C54  6E0A               	movwf	wr8s@addr+1,c
  5205  003C56  0E10               	movlw	16
  5206  003C58  201D               	addwfc	??_display_rpm+2,w,c
  5207  003C5A  6E0B               	movwf	wr8s@addr+2,c
  5208  003C5C  0E00               	movlw	0
  5209  003C5E  201E               	addwfc	??_display_rpm+3,w,c
  5210  003C60  6E0C               	movwf	wr8s@addr+3,c
  5211  003C62  0E97               	movlw	low STR_21
  5212  003C64  6E0D               	movwf	wr8s@s,c
  5213  003C66  0E0F               	movlw	high STR_21
  5214  003C68  6E0E               	movwf	wr8s@s+1,c
  5215  003C6A  ECD8  F031         	call	_wr8s	;wreg free
  5216  003C6E  ECFA  F033         	call	_cmd_incrementn
  5217                           
  5218                           ;display.c: 381:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 425);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 74);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44UL +cmd_offset, "k"));
  5219  003C72  0E0C               	movlw	12
  5220  003C74  6E11               	movwf	cmd@command,c
  5221  003C76  0EFF               	movlw	255
  5222  003C78  6E12               	movwf	cmd@command+1,c
  5223  003C7A  0EFF               	movlw	255
  5224  003C7C  6E13               	movwf	cmd@command+2,c
  5225  003C7E  0EFF               	movlw	255
  5226  003C80  6E14               	movwf	cmd@command+3,c
  5227  003C82  ECE1  F032         	call	_cmd	;wreg free
  5228  003C86  504F               	movf	_cmd_offset,w,c
  5229  003C88  6E1B               	movwf	??_display_rpm& (0+255),c
  5230  003C8A  5050               	movf	_cmd_offset+1,w,c
  5231  003C8C  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5232  003C8E  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5233  003C90  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5234  003C92  0E00               	movlw	0
  5235  003C94  241B               	addwf	??_display_rpm,w,c
  5236  003C96  6E04               	movwf	wr16@addr,c
  5237  003C98  0E80               	movlw	128
  5238  003C9A  201C               	addwfc	??_display_rpm+1,w,c
  5239  003C9C  6E05               	movwf	wr16@addr+1,c
  5240  003C9E  0E10               	movlw	16
  5241  003CA0  201D               	addwfc	??_display_rpm+2,w,c
  5242  003CA2  6E06               	movwf	wr16@addr+2,c
  5243  003CA4  0E00               	movlw	0
  5244  003CA6  201E               	addwfc	??_display_rpm+3,w,c
  5245  003CA8  6E07               	movwf	wr16@addr+3,c
  5246  003CAA  0E01               	movlw	1
  5247  003CAC  6E09               	movwf	wr16@value+1,c
  5248  003CAE  0EA9               	movlw	169
  5249  003CB0  6E08               	movwf	wr16@value,c
  5250  003CB2  ECB9  F033         	call	_wr16	;wreg free
  5251  003CB6  0E02               	movlw	2
  5252  003CB8  ECFA  F033         	call	_cmd_incrementn
  5253  003CBC  504F               	movf	_cmd_offset,w,c
  5254  003CBE  6E1B               	movwf	??_display_rpm& (0+255),c
  5255  003CC0  5050               	movf	_cmd_offset+1,w,c
  5256  003CC2  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5257  003CC4  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5258  003CC6  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5259  003CC8  0E00               	movlw	0
  5260  003CCA  241B               	addwf	??_display_rpm,w,c
  5261  003CCC  6E04               	movwf	wr16@addr,c
  5262  003CCE  0E80               	movlw	128
  5263  003CD0  201C               	addwfc	??_display_rpm+1,w,c
  5264  003CD2  6E05               	movwf	wr16@addr+1,c
  5265  003CD4  0E10               	movlw	16
  5266  003CD6  201D               	addwfc	??_display_rpm+2,w,c
  5267  003CD8  6E06               	movwf	wr16@addr+2,c
  5268  003CDA  0E00               	movlw	0
  5269  003CDC  201E               	addwfc	??_display_rpm+3,w,c
  5270  003CDE  6E07               	movwf	wr16@addr+3,c
  5271  003CE0  0E00               	movlw	0
  5272  003CE2  6E09               	movwf	wr16@value+1,c
  5273  003CE4  0E4A               	movlw	74
  5274  003CE6  6E08               	movwf	wr16@value,c
  5275  003CE8  ECB9  F033         	call	_wr16	;wreg free
  5276  003CEC  0E02               	movlw	2
  5277  003CEE  ECFA  F033         	call	_cmd_incrementn
  5278  003CF2  504F               	movf	_cmd_offset,w,c
  5279  003CF4  6E1B               	movwf	??_display_rpm& (0+255),c
  5280  003CF6  5050               	movf	_cmd_offset+1,w,c
  5281  003CF8  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5282  003CFA  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5283  003CFC  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5284  003CFE  0E00               	movlw	0
  5285  003D00  241B               	addwf	??_display_rpm,w,c
  5286  003D02  6E04               	movwf	wr16@addr,c
  5287  003D04  0E80               	movlw	128
  5288  003D06  201C               	addwfc	??_display_rpm+1,w,c
  5289  003D08  6E05               	movwf	wr16@addr+1,c
  5290  003D0A  0E10               	movlw	16
  5291  003D0C  201D               	addwfc	??_display_rpm+2,w,c
  5292  003D0E  6E06               	movwf	wr16@addr+2,c
  5293  003D10  0E00               	movlw	0
  5294  003D12  201E               	addwfc	??_display_rpm+3,w,c
  5295  003D14  6E07               	movwf	wr16@addr+3,c
  5296  003D16  0E00               	movlw	0
  5297  003D18  6E09               	movwf	wr16@value+1,c
  5298  003D1A  0E1C               	movlw	28
  5299  003D1C  6E08               	movwf	wr16@value,c
  5300  003D1E  ECB9  F033         	call	_wr16	;wreg free
  5301  003D22  0E02               	movlw	2
  5302  003D24  ECFA  F033         	call	_cmd_incrementn
  5303  003D28  504F               	movf	_cmd_offset,w,c
  5304  003D2A  6E1B               	movwf	??_display_rpm& (0+255),c
  5305  003D2C  5050               	movf	_cmd_offset+1,w,c
  5306  003D2E  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5307  003D30  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5308  003D32  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5309  003D34  0E00               	movlw	0
  5310  003D36  241B               	addwf	??_display_rpm,w,c
  5311  003D38  6E04               	movwf	wr16@addr,c
  5312  003D3A  0E80               	movlw	128
  5313  003D3C  201C               	addwfc	??_display_rpm+1,w,c
  5314  003D3E  6E05               	movwf	wr16@addr+1,c
  5315  003D40  0E10               	movlw	16
  5316  003D42  201D               	addwfc	??_display_rpm+2,w,c
  5317  003D44  6E06               	movwf	wr16@addr+2,c
  5318  003D46  0E00               	movlw	0
  5319  003D48  201E               	addwfc	??_display_rpm+3,w,c
  5320  003D4A  6E07               	movwf	wr16@addr+3,c
  5321  003D4C  0E00               	movlw	0
  5322  003D4E  6E09               	movwf	wr16@value+1,c
  5323  003D50  0E00               	movlw	0
  5324  003D52  6E08               	movwf	wr16@value,c
  5325  003D54  ECB9  F033         	call	_wr16	;wreg free
  5326  003D58  0E02               	movlw	2
  5327  003D5A  ECFA  F033         	call	_cmd_incrementn
  5328  003D5E  504F               	movf	_cmd_offset,w,c
  5329  003D60  6E1B               	movwf	??_display_rpm& (0+255),c
  5330  003D62  5050               	movf	_cmd_offset+1,w,c
  5331  003D64  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5332  003D66  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5333  003D68  6A1E               	clrf	(??_display_rpm+3)& (0+255),c
  5334  003D6A  0E00               	movlw	0
  5335  003D6C  241B               	addwf	??_display_rpm,w,c
  5336  003D6E  6E09               	movwf	wr8s@addr,c
  5337  003D70  0E80               	movlw	128
  5338  003D72  201C               	addwfc	??_display_rpm+1,w,c
  5339  003D74  6E0A               	movwf	wr8s@addr+1,c
  5340  003D76  0E10               	movlw	16
  5341  003D78  201D               	addwfc	??_display_rpm+2,w,c
  5342  003D7A  6E0B               	movwf	wr8s@addr+2,c
  5343  003D7C  0E00               	movlw	0
  5344  003D7E  201E               	addwfc	??_display_rpm+3,w,c
  5345  003D80  6E0C               	movwf	wr8s@addr+3,c
  5346  003D82  0E9B               	movlw	low STR_36
  5347  003D84  6E0D               	movwf	wr8s@s,c
  5348  003D86  0E0F               	movlw	high STR_36
  5349  003D88  6E0E               	movwf	wr8s@s+1,c
  5350  003D8A  ECD8  F031         	call	_wr8s	;wreg free
  5351  003D8E  ECFA  F033         	call	_cmd_incrementn
  5352                           
  5353                           ;display.c: 383:     cmd(((31UL<<24)|(((2UL)&15UL)<<0)));
  5354  003D92  0E02               	movlw	2
  5355  003D94  6E11               	movwf	cmd@command,c
  5356  003D96  0E00               	movlw	0
  5357  003D98  6E12               	movwf	cmd@command+1,c
  5358  003D9A  0E00               	movlw	0
  5359  003D9C  6E13               	movwf	cmd@command+2,c
  5360  003D9E  0E1F               	movlw	31
  5361  003DA0  6E14               	movwf	cmd@command+3,c
  5362  003DA2  ECE1  F032         	call	_cmd	;wreg free
  5363                           
  5364                           ;display.c: 384:     cmd(((13UL<<24)|(((150)&8191UL)<<0)));
  5365  003DA6  0E96               	movlw	150
  5366  003DA8  6E11               	movwf	cmd@command,c
  5367  003DAA  0E00               	movlw	0
  5368  003DAC  6E12               	movwf	cmd@command+1,c
  5369  003DAE  0E00               	movlw	0
  5370  003DB0  6E13               	movwf	cmd@command+2,c
  5371  003DB2  0E0D               	movlw	13
  5372  003DB4  6E14               	movwf	cmd@command+3,c
  5373  003DB6  ECE1  F032         	call	_cmd	;wreg free
  5374                           
  5375                           ;display.c: 385:     cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL)<<0
      +                          )));
  5376  003DBA  0E00               	movlw	0
  5377  003DBC  6E11               	movwf	cmd@command,c
  5378  003DBE  0EFF               	movlw	255
  5379  003DC0  6E12               	movwf	cmd@command+1,c
  5380  003DC2  0E00               	movlw	0
  5381  003DC4  6E13               	movwf	cmd@command+2,c
  5382  003DC6  0E04               	movlw	4
  5383  003DC8  6E14               	movwf	cmd@command+3,c
  5384  003DCA  ECE1  F032         	call	_cmd	;wreg free
  5385                           
  5386                           ;display.c: 386:     for(int i = 0; i<n; i++) {
  5387  003DCE  0E00               	movlw	0
  5388  003DD0  6E2C               	movwf	display_rpm@i+1,c
  5389  003DD2  0E00               	movlw	0
  5390  003DD4  6E2B               	movwf	display_rpm@i,c
  5391  003DD6  D05D               	goto	l731
  5392  003DD8                     
  5393                           ;display.c: 387:         if(i >= 10) cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<
      +                          8)|(((0)&255UL)<<0)));
  5394  003DD8  BE2C               	btfsc	display_rpm@i+1,7,c
  5395  003DDA  D010               	goto	l733
  5396  003DDC  502C               	movf	display_rpm@i+1,w,c
  5397  003DDE  E104               	bnz	u1430
  5398  003DE0  0E0A               	movlw	10
  5399  003DE2  5C2B               	subwf	display_rpm@i,w,c
  5400  003DE4  A0D8               	btfss	status,0,c
  5401  003DE6  D00A               	goto	l733
  5402  003DE8                     u1430:
  5403  003DE8  0E00               	movlw	0
  5404  003DEA  6E11               	movwf	cmd@command,c
  5405  003DEC  0EFF               	movlw	255
  5406  003DEE  6E12               	movwf	cmd@command+1,c
  5407  003DF0  0EFF               	movlw	255
  5408  003DF2  6E13               	movwf	cmd@command+2,c
  5409  003DF4  0E04               	movlw	4
  5410  003DF6  6E14               	movwf	cmd@command+3,c
  5411  003DF8  ECE1  F032         	call	_cmd	;wreg free
  5412  003DFC                     l733:
  5413                           
  5414                           ;display.c: 388:         if(i >= 15) cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)
      +                          |(((0)&255UL)<<0)));
  5415  003DFC  BE2C               	btfsc	display_rpm@i+1,7,c
  5416  003DFE  D010               	goto	l734
  5417  003E00  502C               	movf	display_rpm@i+1,w,c
  5418  003E02  E104               	bnz	u1440
  5419  003E04  0E0F               	movlw	15
  5420  003E06  5C2B               	subwf	display_rpm@i,w,c
  5421  003E08  A0D8               	btfss	status,0,c
  5422  003E0A  D00A               	goto	l734
  5423  003E0C                     u1440:
  5424  003E0C  0E00               	movlw	0
  5425  003E0E  6E11               	movwf	cmd@command,c
  5426  003E10  0E00               	movlw	0
  5427  003E12  6E12               	movwf	cmd@command+1,c
  5428  003E14  0EFF               	movlw	255
  5429  003E16  6E13               	movwf	cmd@command+2,c
  5430  003E18  0E04               	movlw	4
  5431  003E1A  6E14               	movwf	cmd@command+3,c
  5432  003E1C  ECE1  F032         	call	_cmd	;wreg free
  5433  003E20                     l734:
  5434                           
  5435                           ;display.c: 389:         cmd(((2UL<<30)|(((15 + (i * 25))&511UL)<<21)|(((20)&511UL)<<12)
      +                          |(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  5436  003E20  C02B  F003         	movff	display_rpm@i,___wmul@multiplier
  5437  003E24  C02C  F004         	movff	display_rpm@i+1,___wmul@multiplier+1
  5438  003E28  0E00               	movlw	0
  5439  003E2A  6E06               	movwf	___wmul@multiplicand+1,c
  5440  003E2C  0E19               	movlw	25
  5441  003E2E  6E05               	movwf	___wmul@multiplicand,c
  5442  003E30  ECA6  F033         	call	___wmul	;wreg free
  5443  003E34  0E0F               	movlw	15
  5444  003E36  2403               	addwf	?___wmul,w,c
  5445  003E38  6E1B               	movwf	??_display_rpm& (0+255),c
  5446  003E3A  0E00               	movlw	0
  5447  003E3C  2004               	addwfc	?___wmul+1,w,c
  5448  003E3E  6E1C               	movwf	(??_display_rpm+1)& (0+255),c
  5449  003E40  6A1D               	clrf	(??_display_rpm+2)& (0+255),c
  5450  003E42  BE1C               	btfsc	(??_display_rpm+1)& (0+255),7,c
  5451  003E44  061D               	decf	(??_display_rpm+2)& (0+255),f,c
  5452  003E46  501D               	movf	(??_display_rpm+2)& (0+255),w,c
  5453  003E48  6E1E               	movwf	(??_display_rpm+3)& (0+255),c
  5454  003E4A  0EFF               	movlw	255
  5455  003E4C  141B               	andwf	??_display_rpm,w,c
  5456  003E4E  6E1F               	movwf	(??_display_rpm+4)& (0+255),c
  5457  003E50  0E01               	movlw	1
  5458  003E52  141C               	andwf	??_display_rpm+1,w,c
  5459  003E54  6E20               	movwf	(??_display_rpm+5)& (0+255),c
  5460  003E56  0E00               	movlw	0
  5461  003E58  141D               	andwf	??_display_rpm+2,w,c
  5462  003E5A  6E21               	movwf	(??_display_rpm+6)& (0+255),c
  5463  003E5C  0E00               	movlw	0
  5464  003E5E  141E               	andwf	??_display_rpm+3,w,c
  5465  003E60  6E22               	movwf	(??_display_rpm+7)& (0+255),c
  5466  003E62  0E15               	movlw	21
  5467  003E64                     u1455:
  5468  003E64  90D8               	bcf	status,0,c
  5469  003E66  361F               	rlcf	??_display_rpm+4,f,c
  5470  003E68  3620               	rlcf	??_display_rpm+5,f,c
  5471  003E6A  3621               	rlcf	??_display_rpm+6,f,c
  5472  003E6C  3622               	rlcf	??_display_rpm+7,f,c
  5473  003E6E  2EE8               	decfsz	wreg,f,c
  5474  003E70  D7F9               	goto	u1455
  5475  003E72  0E00               	movlw	0
  5476  003E74  101F               	iorwf	??_display_rpm+4,w,c
  5477  003E76  6E11               	movwf	cmd@command,c
  5478  003E78  0E40               	movlw	64
  5479  003E7A  1020               	iorwf	??_display_rpm+5,w,c
  5480  003E7C  6E12               	movwf	cmd@command+1,c
  5481  003E7E  0E01               	movlw	1
  5482  003E80  1021               	iorwf	??_display_rpm+6,w,c
  5483  003E82  6E13               	movwf	cmd@command+2,c
  5484  003E84  0E80               	movlw	128
  5485  003E86  1022               	iorwf	??_display_rpm+7,w,c
  5486  003E88  6E14               	movwf	cmd@command+3,c
  5487  003E8A  ECE1  F032         	call	_cmd	;wreg free
  5488                           
  5489                           ;display.c: 390:     }
  5490  003E8E  4A2B               	infsnz	display_rpm@i,f,c
  5491  003E90  2A2C               	incf	display_rpm@i+1,f,c
  5492  003E92                     l731:
  5493  003E92  5029               	movf	display_rpm@n,w,c
  5494  003E94  5C2B               	subwf	display_rpm@i,w,c
  5495  003E96  502C               	movf	display_rpm@i+1,w,c
  5496  003E98  0A80               	xorlw	128
  5497  003E9A  6E1B               	movwf	??_display_rpm& (0+255),c
  5498  003E9C  502A               	movf	display_rpm@n+1,w,c
  5499  003E9E  0A80               	xorlw	128
  5500  003EA0  581B               	subwfb	??_display_rpm& (0+255),w,c
  5501  003EA2  B0D8               	btfsc	status,0,c
  5502  003EA4  0012               	return	
  5503  003EA6  D798               	goto	l732
  5504  003EA8                     __end_of_display_rpm:
  5505                           	opt stack 0
  5506                           tblptru	equ	0xFF8
  5507                           tblptrh	equ	0xFF7
  5508                           tblptrl	equ	0xFF6
  5509                           tablat	equ	0xFF5
  5510                           intcon	equ	0xFF2
  5511                           postinc0	equ	0xFEE
  5512                           wreg	equ	0xFE8
  5513                           postdec1	equ	0xFE5
  5514                           plusw1	equ	0xFE3
  5515                           fsr1l	equ	0xFE1
  5516                           plusw2	equ	0xFDB
  5517                           status	equ	0xFD8
  5518                           
  5519 ;; *************** function ___wmul *****************
  5520 ;; Defined at:
  5521 ;;		line 15 in file "F:\Microchip\XC8\pic\sources\c99\common\Umul16.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  multiplier      2    2[COMRAM] unsigned int 
  5524 ;;  multiplicand    2    4[COMRAM] unsigned int 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  product         2    6[COMRAM] unsigned int 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  2    2[COMRAM] unsigned int 
  5529 ;; Registers used:
  5530 ;;		wreg, status,2, status,0, prodl, prodh
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5536 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5539 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5540 ;;Total ram usage:        6 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:    4
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		_display_rpm
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text10
  5551  00674C                     __ptext10:
  5552                           	opt stack 0
  5553  00674C                     ___wmul:
  5554                           	opt stack 25
  5555                           
  5556                           ;incstack = 0
  5557  00674C  5003               	movf	___wmul@multiplier,w,c
  5558  00674E  0205               	mulwf	___wmul@multiplicand,c
  5559  006750  CFF3 F007          	movff	prodl,___wmul@product
  5560  006754  CFF4 F008          	movff	prodh,___wmul@product+1
  5561  006758  5003               	movf	___wmul@multiplier,w,c
  5562  00675A  0206               	mulwf	___wmul@multiplicand+1,c
  5563  00675C  50F3               	movf	prodl,w,c
  5564  00675E  2608               	addwf	___wmul@product+1,f,c
  5565  006760  5004               	movf	___wmul@multiplier+1,w,c
  5566  006762  0205               	mulwf	___wmul@multiplicand,c
  5567  006764  50F3               	movf	prodl,w,c
  5568  006766  2608               	addwf	___wmul@product+1,f,c
  5569  006768  C007  F003         	movff	___wmul@product,?___wmul
  5570  00676C  C008  F004         	movff	___wmul@product+1,?___wmul+1
  5571  006770  0012               	return	
  5572  006772                     __end_of___wmul:
  5573                           	opt stack 0
  5574                           tblptru	equ	0xFF8
  5575                           tblptrh	equ	0xFF7
  5576                           tblptrl	equ	0xFF6
  5577                           tablat	equ	0xFF5
  5578                           prodh	equ	0xFF4
  5579                           prodl	equ	0xFF3
  5580                           intcon	equ	0xFF2
  5581                           postinc0	equ	0xFEE
  5582                           wreg	equ	0xFE8
  5583                           postdec1	equ	0xFE5
  5584                           plusw1	equ	0xFE3
  5585                           fsr1l	equ	0xFE1
  5586                           plusw2	equ	0xFDB
  5587                           status	equ	0xFD8
  5588                           
  5589 ;; *************** function _display_oilTemp *****************
  5590 ;; Defined at:
  5591 ;;		line 277 in file "display.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  temp            2   24[COMRAM] int 
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      void 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5607 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5608 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5609 ;;Total ram usage:        6 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    7
  5612 ;; This function calls:
  5613 ;;		_cmd
  5614 ;;		_cmd_incrementn
  5615 ;;		_wr16
  5616 ;; This function is called by:
  5617 ;;		_display
  5618 ;;		_main
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           	psect	text11
  5623  005EE4                     __ptext11:
  5624                           	opt stack 0
  5625  005EE4                     _display_oilTemp:
  5626                           	opt stack 23
  5627                           
  5628                           ;display.c: 279:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 139);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 58);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 31);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd(temp);
  5629                           
  5630                           ;incstack = 0
  5631  005EE4  0E2E               	movlw	46
  5632  005EE6  6E11               	movwf	cmd@command,c
  5633  005EE8  0EFF               	movlw	255
  5634  005EEA  6E12               	movwf	cmd@command+1,c
  5635  005EEC  0EFF               	movlw	255
  5636  005EEE  6E13               	movwf	cmd@command+2,c
  5637  005EF0  0EFF               	movlw	255
  5638  005EF2  6E14               	movwf	cmd@command+3,c
  5639  005EF4  ECE1  F032         	call	_cmd	;wreg free
  5640  005EF8  504F               	movf	_cmd_offset,w,c
  5641  005EFA  6E1B               	movwf	??_display_oilTemp& (0+255),c
  5642  005EFC  5050               	movf	_cmd_offset+1,w,c
  5643  005EFE  6E1C               	movwf	(??_display_oilTemp+1)& (0+255),c
  5644  005F00  6A1D               	clrf	(??_display_oilTemp+2)& (0+255),c
  5645  005F02  6A1E               	clrf	(??_display_oilTemp+3)& (0+255),c
  5646  005F04  0E00               	movlw	0
  5647  005F06  241B               	addwf	??_display_oilTemp,w,c
  5648  005F08  6E04               	movwf	wr16@addr,c
  5649  005F0A  0E80               	movlw	128
  5650  005F0C  201C               	addwfc	??_display_oilTemp+1,w,c
  5651  005F0E  6E05               	movwf	wr16@addr+1,c
  5652  005F10  0E10               	movlw	16
  5653  005F12  201D               	addwfc	??_display_oilTemp+2,w,c
  5654  005F14  6E06               	movwf	wr16@addr+2,c
  5655  005F16  0E00               	movlw	0
  5656  005F18  201E               	addwfc	??_display_oilTemp+3,w,c
  5657  005F1A  6E07               	movwf	wr16@addr+3,c
  5658  005F1C  0E00               	movlw	0
  5659  005F1E  6E09               	movwf	wr16@value+1,c
  5660  005F20  0E8B               	movlw	139
  5661  005F22  6E08               	movwf	wr16@value,c
  5662  005F24  ECB9  F033         	call	_wr16	;wreg free
  5663  005F28  0E02               	movlw	2
  5664  005F2A  ECFA  F033         	call	_cmd_incrementn
  5665  005F2E  504F               	movf	_cmd_offset,w,c
  5666  005F30  6E1B               	movwf	??_display_oilTemp& (0+255),c
  5667  005F32  5050               	movf	_cmd_offset+1,w,c
  5668  005F34  6E1C               	movwf	(??_display_oilTemp+1)& (0+255),c
  5669  005F36  6A1D               	clrf	(??_display_oilTemp+2)& (0+255),c
  5670  005F38  6A1E               	clrf	(??_display_oilTemp+3)& (0+255),c
  5671  005F3A  0E00               	movlw	0
  5672  005F3C  241B               	addwf	??_display_oilTemp,w,c
  5673  005F3E  6E04               	movwf	wr16@addr,c
  5674  005F40  0E80               	movlw	128
  5675  005F42  201C               	addwfc	??_display_oilTemp+1,w,c
  5676  005F44  6E05               	movwf	wr16@addr+1,c
  5677  005F46  0E10               	movlw	16
  5678  005F48  201D               	addwfc	??_display_oilTemp+2,w,c
  5679  005F4A  6E06               	movwf	wr16@addr+2,c
  5680  005F4C  0E00               	movlw	0
  5681  005F4E  201E               	addwfc	??_display_oilTemp+3,w,c
  5682  005F50  6E07               	movwf	wr16@addr+3,c
  5683  005F52  0E00               	movlw	0
  5684  005F54  6E09               	movwf	wr16@value+1,c
  5685  005F56  0E3A               	movlw	58
  5686  005F58  6E08               	movwf	wr16@value,c
  5687  005F5A  ECB9  F033         	call	_wr16	;wreg free
  5688  005F5E  0E02               	movlw	2
  5689  005F60  ECFA  F033         	call	_cmd_incrementn
  5690  005F64  504F               	movf	_cmd_offset,w,c
  5691  005F66  6E1B               	movwf	??_display_oilTemp& (0+255),c
  5692  005F68  5050               	movf	_cmd_offset+1,w,c
  5693  005F6A  6E1C               	movwf	(??_display_oilTemp+1)& (0+255),c
  5694  005F6C  6A1D               	clrf	(??_display_oilTemp+2)& (0+255),c
  5695  005F6E  6A1E               	clrf	(??_display_oilTemp+3)& (0+255),c
  5696  005F70  0E00               	movlw	0
  5697  005F72  241B               	addwf	??_display_oilTemp,w,c
  5698  005F74  6E04               	movwf	wr16@addr,c
  5699  005F76  0E80               	movlw	128
  5700  005F78  201C               	addwfc	??_display_oilTemp+1,w,c
  5701  005F7A  6E05               	movwf	wr16@addr+1,c
  5702  005F7C  0E10               	movlw	16
  5703  005F7E  201D               	addwfc	??_display_oilTemp+2,w,c
  5704  005F80  6E06               	movwf	wr16@addr+2,c
  5705  005F82  0E00               	movlw	0
  5706  005F84  201E               	addwfc	??_display_oilTemp+3,w,c
  5707  005F86  6E07               	movwf	wr16@addr+3,c
  5708  005F88  0E00               	movlw	0
  5709  005F8A  6E09               	movwf	wr16@value+1,c
  5710  005F8C  0E1F               	movlw	31
  5711  005F8E  6E08               	movwf	wr16@value,c
  5712  005F90  ECB9  F033         	call	_wr16	;wreg free
  5713  005F94  0E02               	movlw	2
  5714  005F96  ECFA  F033         	call	_cmd_incrementn
  5715  005F9A  504F               	movf	_cmd_offset,w,c
  5716  005F9C  6E1B               	movwf	??_display_oilTemp& (0+255),c
  5717  005F9E  5050               	movf	_cmd_offset+1,w,c
  5718  005FA0  6E1C               	movwf	(??_display_oilTemp+1)& (0+255),c
  5719  005FA2  6A1D               	clrf	(??_display_oilTemp+2)& (0+255),c
  5720  005FA4  6A1E               	clrf	(??_display_oilTemp+3)& (0+255),c
  5721  005FA6  0E00               	movlw	0
  5722  005FA8  241B               	addwf	??_display_oilTemp,w,c
  5723  005FAA  6E04               	movwf	wr16@addr,c
  5724  005FAC  0E80               	movlw	128
  5725  005FAE  201C               	addwfc	??_display_oilTemp+1,w,c
  5726  005FB0  6E05               	movwf	wr16@addr+1,c
  5727  005FB2  0E10               	movlw	16
  5728  005FB4  201D               	addwfc	??_display_oilTemp+2,w,c
  5729  005FB6  6E06               	movwf	wr16@addr+2,c
  5730  005FB8  0E00               	movlw	0
  5731  005FBA  201E               	addwfc	??_display_oilTemp+3,w,c
  5732  005FBC  6E07               	movwf	wr16@addr+3,c
  5733  005FBE  0E02               	movlw	2
  5734  005FC0  6E09               	movwf	wr16@value+1,c
  5735  005FC2  0E00               	movlw	0
  5736  005FC4  6E08               	movwf	wr16@value,c
  5737  005FC6  ECB9  F033         	call	_wr16	;wreg free
  5738  005FCA  0E02               	movlw	2
  5739  005FCC  ECFA  F033         	call	_cmd_incrementn
  5740  005FD0  C019  F011         	movff	display_oilTemp@temp,cmd@command
  5741  005FD4  C01A  F012         	movff	display_oilTemp@temp+1,cmd@command+1
  5742  005FD8  0E00               	movlw	0
  5743  005FDA  BE12               	btfsc	cmd@command+1,7,c
  5744  005FDC  0EFF               	movlw	-1
  5745  005FDE  6E13               	movwf	cmd@command+2,c
  5746  005FE0  6E14               	movwf	cmd@command+3,c
  5747  005FE2  ECE1  F032         	call	_cmd	;wreg free
  5748  005FE6  0012               	return		;funcret
  5749  005FE8                     __end_of_display_oilTemp:
  5750                           	opt stack 0
  5751                           tblptru	equ	0xFF8
  5752                           tblptrh	equ	0xFF7
  5753                           tblptrl	equ	0xFF6
  5754                           tablat	equ	0xFF5
  5755                           prodh	equ	0xFF4
  5756                           prodl	equ	0xFF3
  5757                           intcon	equ	0xFF2
  5758                           postinc0	equ	0xFEE
  5759                           wreg	equ	0xFE8
  5760                           postdec1	equ	0xFE5
  5761                           plusw1	equ	0xFE3
  5762                           fsr1l	equ	0xFE1
  5763                           plusw2	equ	0xFDB
  5764                           status	equ	0xFD8
  5765                           
  5766 ;; *************** function _display_labels *****************
  5767 ;; Defined at:
  5768 ;;		line 45 in file "display.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;		None
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;		None
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      void 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5784 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5785 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5786 ;;Total ram usage:        4 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    7
  5789 ;; This function calls:
  5790 ;;		_cmd
  5791 ;;		_cmd_incrementn
  5792 ;;		_wr16
  5793 ;;		_wr8s
  5794 ;; This function is called by:
  5795 ;;		_display
  5796 ;;		_main
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           	psect	text12
  5801  000F9E                     __ptext12:
  5802                           	opt stack 0
  5803  000F9E                     _display_labels:
  5804                           	opt stack 23
  5805                           
  5806                           ;display.c: 46:     cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)
      +                          <<0)));
  5807                           
  5808                           ;incstack = 0
  5809  000F9E  0EFF               	movlw	255
  5810  000FA0  6E11               	movwf	cmd@command,c
  5811  000FA2  0EFF               	movlw	255
  5812  000FA4  6E12               	movwf	cmd@command+1,c
  5813  000FA6  0EFF               	movlw	255
  5814  000FA8  6E13               	movwf	cmd@command+2,c
  5815  000FAA  0E04               	movlw	4
  5816  000FAC  6E14               	movwf	cmd@command+3,c
  5817  000FAE  ECE1  F032         	call	_cmd	;wreg free
  5818                           
  5819                           ;display.c: 47:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 418);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 149);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44UL +cmd_offset, "KPH"));
  5820  000FB2  0E0C               	movlw	12
  5821  000FB4  6E11               	movwf	cmd@command,c
  5822  000FB6  0EFF               	movlw	255
  5823  000FB8  6E12               	movwf	cmd@command+1,c
  5824  000FBA  0EFF               	movlw	255
  5825  000FBC  6E13               	movwf	cmd@command+2,c
  5826  000FBE  0EFF               	movlw	255
  5827  000FC0  6E14               	movwf	cmd@command+3,c
  5828  000FC2  ECE1  F032         	call	_cmd	;wreg free
  5829  000FC6  504F               	movf	_cmd_offset,w,c
  5830  000FC8  6E19               	movwf	??_display_labels& (0+255),c
  5831  000FCA  5050               	movf	_cmd_offset+1,w,c
  5832  000FCC  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  5833  000FCE  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  5834  000FD0  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  5835  000FD2  0E00               	movlw	0
  5836  000FD4  2419               	addwf	??_display_labels,w,c
  5837  000FD6  6E04               	movwf	wr16@addr,c
  5838  000FD8  0E80               	movlw	128
  5839  000FDA  201A               	addwfc	??_display_labels+1,w,c
  5840  000FDC  6E05               	movwf	wr16@addr+1,c
  5841  000FDE  0E10               	movlw	16
  5842  000FE0  201B               	addwfc	??_display_labels+2,w,c
  5843  000FE2  6E06               	movwf	wr16@addr+2,c
  5844  000FE4  0E00               	movlw	0
  5845  000FE6  201C               	addwfc	??_display_labels+3,w,c
  5846  000FE8  6E07               	movwf	wr16@addr+3,c
  5847  000FEA  0E01               	movlw	1
  5848  000FEC  6E09               	movwf	wr16@value+1,c
  5849  000FEE  0EA2               	movlw	162
  5850  000FF0  6E08               	movwf	wr16@value,c
  5851  000FF2  ECB9  F033         	call	_wr16	;wreg free
  5852  000FF6  0E02               	movlw	2
  5853  000FF8  ECFA  F033         	call	_cmd_incrementn
  5854  000FFC  504F               	movf	_cmd_offset,w,c
  5855  000FFE  6E19               	movwf	??_display_labels& (0+255),c
  5856  001000  5050               	movf	_cmd_offset+1,w,c
  5857  001002  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  5858  001004  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  5859  001006  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  5860  001008  0E00               	movlw	0
  5861  00100A  2419               	addwf	??_display_labels,w,c
  5862  00100C  6E04               	movwf	wr16@addr,c
  5863  00100E  0E80               	movlw	128
  5864  001010  201A               	addwfc	??_display_labels+1,w,c
  5865  001012  6E05               	movwf	wr16@addr+1,c
  5866  001014  0E10               	movlw	16
  5867  001016  201B               	addwfc	??_display_labels+2,w,c
  5868  001018  6E06               	movwf	wr16@addr+2,c
  5869  00101A  0E00               	movlw	0
  5870  00101C  201C               	addwfc	??_display_labels+3,w,c
  5871  00101E  6E07               	movwf	wr16@addr+3,c
  5872  001020  0E00               	movlw	0
  5873  001022  6E09               	movwf	wr16@value+1,c
  5874  001024  0E95               	movlw	149
  5875  001026  6E08               	movwf	wr16@value,c
  5876  001028  ECB9  F033         	call	_wr16	;wreg free
  5877  00102C  0E02               	movlw	2
  5878  00102E  ECFA  F033         	call	_cmd_incrementn
  5879  001032  504F               	movf	_cmd_offset,w,c
  5880  001034  6E19               	movwf	??_display_labels& (0+255),c
  5881  001036  5050               	movf	_cmd_offset+1,w,c
  5882  001038  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  5883  00103A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  5884  00103C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  5885  00103E  0E00               	movlw	0
  5886  001040  2419               	addwf	??_display_labels,w,c
  5887  001042  6E04               	movwf	wr16@addr,c
  5888  001044  0E80               	movlw	128
  5889  001046  201A               	addwfc	??_display_labels+1,w,c
  5890  001048  6E05               	movwf	wr16@addr+1,c
  5891  00104A  0E10               	movlw	16
  5892  00104C  201B               	addwfc	??_display_labels+2,w,c
  5893  00104E  6E06               	movwf	wr16@addr+2,c
  5894  001050  0E00               	movlw	0
  5895  001052  201C               	addwfc	??_display_labels+3,w,c
  5896  001054  6E07               	movwf	wr16@addr+3,c
  5897  001056  0E00               	movlw	0
  5898  001058  6E09               	movwf	wr16@value+1,c
  5899  00105A  0E1C               	movlw	28
  5900  00105C  6E08               	movwf	wr16@value,c
  5901  00105E  ECB9  F033         	call	_wr16	;wreg free
  5902  001062  0E02               	movlw	2
  5903  001064  ECFA  F033         	call	_cmd_incrementn
  5904  001068  504F               	movf	_cmd_offset,w,c
  5905  00106A  6E19               	movwf	??_display_labels& (0+255),c
  5906  00106C  5050               	movf	_cmd_offset+1,w,c
  5907  00106E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  5908  001070  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  5909  001072  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  5910  001074  0E00               	movlw	0
  5911  001076  2419               	addwf	??_display_labels,w,c
  5912  001078  6E04               	movwf	wr16@addr,c
  5913  00107A  0E80               	movlw	128
  5914  00107C  201A               	addwfc	??_display_labels+1,w,c
  5915  00107E  6E05               	movwf	wr16@addr+1,c
  5916  001080  0E10               	movlw	16
  5917  001082  201B               	addwfc	??_display_labels+2,w,c
  5918  001084  6E06               	movwf	wr16@addr+2,c
  5919  001086  0E00               	movlw	0
  5920  001088  201C               	addwfc	??_display_labels+3,w,c
  5921  00108A  6E07               	movwf	wr16@addr+3,c
  5922  00108C  0E00               	movlw	0
  5923  00108E  6E09               	movwf	wr16@value+1,c
  5924  001090  0E00               	movlw	0
  5925  001092  6E08               	movwf	wr16@value,c
  5926  001094  ECB9  F033         	call	_wr16	;wreg free
  5927  001098  0E02               	movlw	2
  5928  00109A  ECFA  F033         	call	_cmd_incrementn
  5929  00109E  504F               	movf	_cmd_offset,w,c
  5930  0010A0  6E19               	movwf	??_display_labels& (0+255),c
  5931  0010A2  5050               	movf	_cmd_offset+1,w,c
  5932  0010A4  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  5933  0010A6  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  5934  0010A8  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  5935  0010AA  0E00               	movlw	0
  5936  0010AC  2419               	addwf	??_display_labels,w,c
  5937  0010AE  6E09               	movwf	wr8s@addr,c
  5938  0010B0  0E80               	movlw	128
  5939  0010B2  201A               	addwfc	??_display_labels+1,w,c
  5940  0010B4  6E0A               	movwf	wr8s@addr+1,c
  5941  0010B6  0E10               	movlw	16
  5942  0010B8  201B               	addwfc	??_display_labels+2,w,c
  5943  0010BA  6E0B               	movwf	wr8s@addr+2,c
  5944  0010BC  0E00               	movlw	0
  5945  0010BE  201C               	addwfc	??_display_labels+3,w,c
  5946  0010C0  6E0C               	movwf	wr8s@addr+3,c
  5947  0010C2  0E82               	movlw	low STR_1
  5948  0010C4  6E0D               	movwf	wr8s@s,c
  5949  0010C6  0E0F               	movlw	high STR_1
  5950  0010C8  6E0E               	movwf	wr8s@s+1,c
  5951  0010CA  ECD8  F031         	call	_wr8s	;wreg free
  5952  0010CE  ECFA  F033         	call	_cmd_incrementn
  5953                           
  5954                           ;display.c: 48:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 410);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 190);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "Gain/Loss"));
  5955  0010D2  0E0C               	movlw	12
  5956  0010D4  6E11               	movwf	cmd@command,c
  5957  0010D6  0EFF               	movlw	255
  5958  0010D8  6E12               	movwf	cmd@command+1,c
  5959  0010DA  0EFF               	movlw	255
  5960  0010DC  6E13               	movwf	cmd@command+2,c
  5961  0010DE  0EFF               	movlw	255
  5962  0010E0  6E14               	movwf	cmd@command+3,c
  5963  0010E2  ECE1  F032         	call	_cmd	;wreg free
  5964  0010E6  504F               	movf	_cmd_offset,w,c
  5965  0010E8  6E19               	movwf	??_display_labels& (0+255),c
  5966  0010EA  5050               	movf	_cmd_offset+1,w,c
  5967  0010EC  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  5968  0010EE  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  5969  0010F0  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  5970  0010F2  0E00               	movlw	0
  5971  0010F4  2419               	addwf	??_display_labels,w,c
  5972  0010F6  6E04               	movwf	wr16@addr,c
  5973  0010F8  0E80               	movlw	128
  5974  0010FA  201A               	addwfc	??_display_labels+1,w,c
  5975  0010FC  6E05               	movwf	wr16@addr+1,c
  5976  0010FE  0E10               	movlw	16
  5977  001100  201B               	addwfc	??_display_labels+2,w,c
  5978  001102  6E06               	movwf	wr16@addr+2,c
  5979  001104  0E00               	movlw	0
  5980  001106  201C               	addwfc	??_display_labels+3,w,c
  5981  001108  6E07               	movwf	wr16@addr+3,c
  5982  00110A  0E01               	movlw	1
  5983  00110C  6E09               	movwf	wr16@value+1,c
  5984  00110E  0E9A               	movlw	154
  5985  001110  6E08               	movwf	wr16@value,c
  5986  001112  ECB9  F033         	call	_wr16	;wreg free
  5987  001116  0E02               	movlw	2
  5988  001118  ECFA  F033         	call	_cmd_incrementn
  5989  00111C  504F               	movf	_cmd_offset,w,c
  5990  00111E  6E19               	movwf	??_display_labels& (0+255),c
  5991  001120  5050               	movf	_cmd_offset+1,w,c
  5992  001122  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  5993  001124  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  5994  001126  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  5995  001128  0E00               	movlw	0
  5996  00112A  2419               	addwf	??_display_labels,w,c
  5997  00112C  6E04               	movwf	wr16@addr,c
  5998  00112E  0E80               	movlw	128
  5999  001130  201A               	addwfc	??_display_labels+1,w,c
  6000  001132  6E05               	movwf	wr16@addr+1,c
  6001  001134  0E10               	movlw	16
  6002  001136  201B               	addwfc	??_display_labels+2,w,c
  6003  001138  6E06               	movwf	wr16@addr+2,c
  6004  00113A  0E00               	movlw	0
  6005  00113C  201C               	addwfc	??_display_labels+3,w,c
  6006  00113E  6E07               	movwf	wr16@addr+3,c
  6007  001140  0E00               	movlw	0
  6008  001142  6E09               	movwf	wr16@value+1,c
  6009  001144  0EBE               	movlw	190
  6010  001146  6E08               	movwf	wr16@value,c
  6011  001148  ECB9  F033         	call	_wr16	;wreg free
  6012  00114C  0E02               	movlw	2
  6013  00114E  ECFA  F033         	call	_cmd_incrementn
  6014  001152  504F               	movf	_cmd_offset,w,c
  6015  001154  6E19               	movwf	??_display_labels& (0+255),c
  6016  001156  5050               	movf	_cmd_offset+1,w,c
  6017  001158  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6018  00115A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6019  00115C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6020  00115E  0E00               	movlw	0
  6021  001160  2419               	addwf	??_display_labels,w,c
  6022  001162  6E04               	movwf	wr16@addr,c
  6023  001164  0E80               	movlw	128
  6024  001166  201A               	addwfc	??_display_labels+1,w,c
  6025  001168  6E05               	movwf	wr16@addr+1,c
  6026  00116A  0E10               	movlw	16
  6027  00116C  201B               	addwfc	??_display_labels+2,w,c
  6028  00116E  6E06               	movwf	wr16@addr+2,c
  6029  001170  0E00               	movlw	0
  6030  001172  201C               	addwfc	??_display_labels+3,w,c
  6031  001174  6E07               	movwf	wr16@addr+3,c
  6032  001176  0E00               	movlw	0
  6033  001178  6E09               	movwf	wr16@value+1,c
  6034  00117A  0E1B               	movlw	27
  6035  00117C  6E08               	movwf	wr16@value,c
  6036  00117E  ECB9  F033         	call	_wr16	;wreg free
  6037  001182  0E02               	movlw	2
  6038  001184  ECFA  F033         	call	_cmd_incrementn
  6039  001188  504F               	movf	_cmd_offset,w,c
  6040  00118A  6E19               	movwf	??_display_labels& (0+255),c
  6041  00118C  5050               	movf	_cmd_offset+1,w,c
  6042  00118E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6043  001190  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6044  001192  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6045  001194  0E00               	movlw	0
  6046  001196  2419               	addwf	??_display_labels,w,c
  6047  001198  6E04               	movwf	wr16@addr,c
  6048  00119A  0E80               	movlw	128
  6049  00119C  201A               	addwfc	??_display_labels+1,w,c
  6050  00119E  6E05               	movwf	wr16@addr+1,c
  6051  0011A0  0E10               	movlw	16
  6052  0011A2  201B               	addwfc	??_display_labels+2,w,c
  6053  0011A4  6E06               	movwf	wr16@addr+2,c
  6054  0011A6  0E00               	movlw	0
  6055  0011A8  201C               	addwfc	??_display_labels+3,w,c
  6056  0011AA  6E07               	movwf	wr16@addr+3,c
  6057  0011AC  0E06               	movlw	6
  6058  0011AE  6E09               	movwf	wr16@value+1,c
  6059  0011B0  0E00               	movlw	0
  6060  0011B2  6E08               	movwf	wr16@value,c
  6061  0011B4  ECB9  F033         	call	_wr16	;wreg free
  6062  0011B8  0E02               	movlw	2
  6063  0011BA  ECFA  F033         	call	_cmd_incrementn
  6064  0011BE  504F               	movf	_cmd_offset,w,c
  6065  0011C0  6E19               	movwf	??_display_labels& (0+255),c
  6066  0011C2  5050               	movf	_cmd_offset+1,w,c
  6067  0011C4  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6068  0011C6  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6069  0011C8  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6070  0011CA  0E00               	movlw	0
  6071  0011CC  2419               	addwf	??_display_labels,w,c
  6072  0011CE  6E09               	movwf	wr8s@addr,c
  6073  0011D0  0E80               	movlw	128
  6074  0011D2  201A               	addwfc	??_display_labels+1,w,c
  6075  0011D4  6E0A               	movwf	wr8s@addr+1,c
  6076  0011D6  0E10               	movlw	16
  6077  0011D8  201B               	addwfc	??_display_labels+2,w,c
  6078  0011DA  6E0B               	movwf	wr8s@addr+2,c
  6079  0011DC  0E00               	movlw	0
  6080  0011DE  201C               	addwfc	??_display_labels+3,w,c
  6081  0011E0  6E0C               	movwf	wr8s@addr+3,c
  6082  0011E2  0E17               	movlw	low STR_2
  6083  0011E4  6E0D               	movwf	wr8s@s,c
  6084  0011E6  0E0F               	movlw	high STR_2
  6085  0011E8  6E0E               	movwf	wr8s@s+1,c
  6086  0011EA  ECD8  F031         	call	_wr8s	;wreg free
  6087  0011EE  ECFA  F033         	call	_cmd_incrementn
  6088                           
  6089                           ;display.c: 49:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 47);cmd_incrementn(2);
      +                          wr16(1081344UL +cmd_offset, 45);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_in
      +                          crementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(10
      +                          81344UL +cmd_offset, "Water"));
  6090  0011F2  0E0C               	movlw	12
  6091  0011F4  6E11               	movwf	cmd@command,c
  6092  0011F6  0EFF               	movlw	255
  6093  0011F8  6E12               	movwf	cmd@command+1,c
  6094  0011FA  0EFF               	movlw	255
  6095  0011FC  6E13               	movwf	cmd@command+2,c
  6096  0011FE  0EFF               	movlw	255
  6097  001200  6E14               	movwf	cmd@command+3,c
  6098  001202  ECE1  F032         	call	_cmd	;wreg free
  6099  001206  504F               	movf	_cmd_offset,w,c
  6100  001208  6E19               	movwf	??_display_labels& (0+255),c
  6101  00120A  5050               	movf	_cmd_offset+1,w,c
  6102  00120C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6103  00120E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6104  001210  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6105  001212  0E00               	movlw	0
  6106  001214  2419               	addwf	??_display_labels,w,c
  6107  001216  6E04               	movwf	wr16@addr,c
  6108  001218  0E80               	movlw	128
  6109  00121A  201A               	addwfc	??_display_labels+1,w,c
  6110  00121C  6E05               	movwf	wr16@addr+1,c
  6111  00121E  0E10               	movlw	16
  6112  001220  201B               	addwfc	??_display_labels+2,w,c
  6113  001222  6E06               	movwf	wr16@addr+2,c
  6114  001224  0E00               	movlw	0
  6115  001226  201C               	addwfc	??_display_labels+3,w,c
  6116  001228  6E07               	movwf	wr16@addr+3,c
  6117  00122A  0E00               	movlw	0
  6118  00122C  6E09               	movwf	wr16@value+1,c
  6119  00122E  0E2F               	movlw	47
  6120  001230  6E08               	movwf	wr16@value,c
  6121  001232  ECB9  F033         	call	_wr16	;wreg free
  6122  001236  0E02               	movlw	2
  6123  001238  ECFA  F033         	call	_cmd_incrementn
  6124  00123C  504F               	movf	_cmd_offset,w,c
  6125  00123E  6E19               	movwf	??_display_labels& (0+255),c
  6126  001240  5050               	movf	_cmd_offset+1,w,c
  6127  001242  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6128  001244  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6129  001246  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6130  001248  0E00               	movlw	0
  6131  00124A  2419               	addwf	??_display_labels,w,c
  6132  00124C  6E04               	movwf	wr16@addr,c
  6133  00124E  0E80               	movlw	128
  6134  001250  201A               	addwfc	??_display_labels+1,w,c
  6135  001252  6E05               	movwf	wr16@addr+1,c
  6136  001254  0E10               	movlw	16
  6137  001256  201B               	addwfc	??_display_labels+2,w,c
  6138  001258  6E06               	movwf	wr16@addr+2,c
  6139  00125A  0E00               	movlw	0
  6140  00125C  201C               	addwfc	??_display_labels+3,w,c
  6141  00125E  6E07               	movwf	wr16@addr+3,c
  6142  001260  0E00               	movlw	0
  6143  001262  6E09               	movwf	wr16@value+1,c
  6144  001264  0E2D               	movlw	45
  6145  001266  6E08               	movwf	wr16@value,c
  6146  001268  ECB9  F033         	call	_wr16	;wreg free
  6147  00126C  0E02               	movlw	2
  6148  00126E  ECFA  F033         	call	_cmd_incrementn
  6149  001272  504F               	movf	_cmd_offset,w,c
  6150  001274  6E19               	movwf	??_display_labels& (0+255),c
  6151  001276  5050               	movf	_cmd_offset+1,w,c
  6152  001278  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6153  00127A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6154  00127C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6155  00127E  0E00               	movlw	0
  6156  001280  2419               	addwf	??_display_labels,w,c
  6157  001282  6E04               	movwf	wr16@addr,c
  6158  001284  0E80               	movlw	128
  6159  001286  201A               	addwfc	??_display_labels+1,w,c
  6160  001288  6E05               	movwf	wr16@addr+1,c
  6161  00128A  0E10               	movlw	16
  6162  00128C  201B               	addwfc	??_display_labels+2,w,c
  6163  00128E  6E06               	movwf	wr16@addr+2,c
  6164  001290  0E00               	movlw	0
  6165  001292  201C               	addwfc	??_display_labels+3,w,c
  6166  001294  6E07               	movwf	wr16@addr+3,c
  6167  001296  0E00               	movlw	0
  6168  001298  6E09               	movwf	wr16@value+1,c
  6169  00129A  0E1C               	movlw	28
  6170  00129C  6E08               	movwf	wr16@value,c
  6171  00129E  ECB9  F033         	call	_wr16	;wreg free
  6172  0012A2  0E02               	movlw	2
  6173  0012A4  ECFA  F033         	call	_cmd_incrementn
  6174  0012A8  504F               	movf	_cmd_offset,w,c
  6175  0012AA  6E19               	movwf	??_display_labels& (0+255),c
  6176  0012AC  5050               	movf	_cmd_offset+1,w,c
  6177  0012AE  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6178  0012B0  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6179  0012B2  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6180  0012B4  0E00               	movlw	0
  6181  0012B6  2419               	addwf	??_display_labels,w,c
  6182  0012B8  6E04               	movwf	wr16@addr,c
  6183  0012BA  0E80               	movlw	128
  6184  0012BC  201A               	addwfc	??_display_labels+1,w,c
  6185  0012BE  6E05               	movwf	wr16@addr+1,c
  6186  0012C0  0E10               	movlw	16
  6187  0012C2  201B               	addwfc	??_display_labels+2,w,c
  6188  0012C4  6E06               	movwf	wr16@addr+2,c
  6189  0012C6  0E00               	movlw	0
  6190  0012C8  201C               	addwfc	??_display_labels+3,w,c
  6191  0012CA  6E07               	movwf	wr16@addr+3,c
  6192  0012CC  0E06               	movlw	6
  6193  0012CE  6E09               	movwf	wr16@value+1,c
  6194  0012D0  0E00               	movlw	0
  6195  0012D2  6E08               	movwf	wr16@value,c
  6196  0012D4  ECB9  F033         	call	_wr16	;wreg free
  6197  0012D8  0E02               	movlw	2
  6198  0012DA  ECFA  F033         	call	_cmd_incrementn
  6199  0012DE  504F               	movf	_cmd_offset,w,c
  6200  0012E0  6E19               	movwf	??_display_labels& (0+255),c
  6201  0012E2  5050               	movf	_cmd_offset+1,w,c
  6202  0012E4  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6203  0012E6  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6204  0012E8  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6205  0012EA  0E00               	movlw	0
  6206  0012EC  2419               	addwf	??_display_labels,w,c
  6207  0012EE  6E09               	movwf	wr8s@addr,c
  6208  0012F0  0E80               	movlw	128
  6209  0012F2  201A               	addwfc	??_display_labels+1,w,c
  6210  0012F4  6E0A               	movwf	wr8s@addr+1,c
  6211  0012F6  0E10               	movlw	16
  6212  0012F8  201B               	addwfc	??_display_labels+2,w,c
  6213  0012FA  6E0B               	movwf	wr8s@addr+2,c
  6214  0012FC  0E00               	movlw	0
  6215  0012FE  201C               	addwfc	??_display_labels+3,w,c
  6216  001300  6E0C               	movwf	wr8s@addr+3,c
  6217  001302  0E53               	movlw	low STR_3
  6218  001304  6E0D               	movwf	wr8s@s,c
  6219  001306  0E0F               	movlw	high STR_3
  6220  001308  6E0E               	movwf	wr8s@s+1,c
  6221  00130A  ECD8  F031         	call	_wr8s	;wreg free
  6222  00130E  ECFA  F033         	call	_cmd_incrementn
  6223                           
  6224                           ;display.c: 50:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 45);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_i
      +                          ncrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1
      +                          081344UL +cmd_offset, "Oil"));
  6225  001312  0E0C               	movlw	12
  6226  001314  6E11               	movwf	cmd@command,c
  6227  001316  0EFF               	movlw	255
  6228  001318  6E12               	movwf	cmd@command+1,c
  6229  00131A  0EFF               	movlw	255
  6230  00131C  6E13               	movwf	cmd@command+2,c
  6231  00131E  0EFF               	movlw	255
  6232  001320  6E14               	movwf	cmd@command+3,c
  6233  001322  ECE1  F032         	call	_cmd	;wreg free
  6234  001326  504F               	movf	_cmd_offset,w,c
  6235  001328  6E19               	movwf	??_display_labels& (0+255),c
  6236  00132A  5050               	movf	_cmd_offset+1,w,c
  6237  00132C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6238  00132E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6239  001330  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6240  001332  0E00               	movlw	0
  6241  001334  2419               	addwf	??_display_labels,w,c
  6242  001336  6E04               	movwf	wr16@addr,c
  6243  001338  0E80               	movlw	128
  6244  00133A  201A               	addwfc	??_display_labels+1,w,c
  6245  00133C  6E05               	movwf	wr16@addr+1,c
  6246  00133E  0E10               	movlw	16
  6247  001340  201B               	addwfc	??_display_labels+2,w,c
  6248  001342  6E06               	movwf	wr16@addr+2,c
  6249  001344  0E00               	movlw	0
  6250  001346  201C               	addwfc	??_display_labels+3,w,c
  6251  001348  6E07               	movwf	wr16@addr+3,c
  6252  00134A  0E00               	movlw	0
  6253  00134C  6E09               	movwf	wr16@value+1,c
  6254  00134E  0E8B               	movlw	139
  6255  001350  6E08               	movwf	wr16@value,c
  6256  001352  ECB9  F033         	call	_wr16	;wreg free
  6257  001356  0E02               	movlw	2
  6258  001358  ECFA  F033         	call	_cmd_incrementn
  6259  00135C  504F               	movf	_cmd_offset,w,c
  6260  00135E  6E19               	movwf	??_display_labels& (0+255),c
  6261  001360  5050               	movf	_cmd_offset+1,w,c
  6262  001362  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6263  001364  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6264  001366  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6265  001368  0E00               	movlw	0
  6266  00136A  2419               	addwf	??_display_labels,w,c
  6267  00136C  6E04               	movwf	wr16@addr,c
  6268  00136E  0E80               	movlw	128
  6269  001370  201A               	addwfc	??_display_labels+1,w,c
  6270  001372  6E05               	movwf	wr16@addr+1,c
  6271  001374  0E10               	movlw	16
  6272  001376  201B               	addwfc	??_display_labels+2,w,c
  6273  001378  6E06               	movwf	wr16@addr+2,c
  6274  00137A  0E00               	movlw	0
  6275  00137C  201C               	addwfc	??_display_labels+3,w,c
  6276  00137E  6E07               	movwf	wr16@addr+3,c
  6277  001380  0E00               	movlw	0
  6278  001382  6E09               	movwf	wr16@value+1,c
  6279  001384  0E2D               	movlw	45
  6280  001386  6E08               	movwf	wr16@value,c
  6281  001388  ECB9  F033         	call	_wr16	;wreg free
  6282  00138C  0E02               	movlw	2
  6283  00138E  ECFA  F033         	call	_cmd_incrementn
  6284  001392  504F               	movf	_cmd_offset,w,c
  6285  001394  6E19               	movwf	??_display_labels& (0+255),c
  6286  001396  5050               	movf	_cmd_offset+1,w,c
  6287  001398  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6288  00139A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6289  00139C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6290  00139E  0E00               	movlw	0
  6291  0013A0  2419               	addwf	??_display_labels,w,c
  6292  0013A2  6E04               	movwf	wr16@addr,c
  6293  0013A4  0E80               	movlw	128
  6294  0013A6  201A               	addwfc	??_display_labels+1,w,c
  6295  0013A8  6E05               	movwf	wr16@addr+1,c
  6296  0013AA  0E10               	movlw	16
  6297  0013AC  201B               	addwfc	??_display_labels+2,w,c
  6298  0013AE  6E06               	movwf	wr16@addr+2,c
  6299  0013B0  0E00               	movlw	0
  6300  0013B2  201C               	addwfc	??_display_labels+3,w,c
  6301  0013B4  6E07               	movwf	wr16@addr+3,c
  6302  0013B6  0E00               	movlw	0
  6303  0013B8  6E09               	movwf	wr16@value+1,c
  6304  0013BA  0E1C               	movlw	28
  6305  0013BC  6E08               	movwf	wr16@value,c
  6306  0013BE  ECB9  F033         	call	_wr16	;wreg free
  6307  0013C2  0E02               	movlw	2
  6308  0013C4  ECFA  F033         	call	_cmd_incrementn
  6309  0013C8  504F               	movf	_cmd_offset,w,c
  6310  0013CA  6E19               	movwf	??_display_labels& (0+255),c
  6311  0013CC  5050               	movf	_cmd_offset+1,w,c
  6312  0013CE  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6313  0013D0  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6314  0013D2  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6315  0013D4  0E00               	movlw	0
  6316  0013D6  2419               	addwf	??_display_labels,w,c
  6317  0013D8  6E04               	movwf	wr16@addr,c
  6318  0013DA  0E80               	movlw	128
  6319  0013DC  201A               	addwfc	??_display_labels+1,w,c
  6320  0013DE  6E05               	movwf	wr16@addr+1,c
  6321  0013E0  0E10               	movlw	16
  6322  0013E2  201B               	addwfc	??_display_labels+2,w,c
  6323  0013E4  6E06               	movwf	wr16@addr+2,c
  6324  0013E6  0E00               	movlw	0
  6325  0013E8  201C               	addwfc	??_display_labels+3,w,c
  6326  0013EA  6E07               	movwf	wr16@addr+3,c
  6327  0013EC  0E06               	movlw	6
  6328  0013EE  6E09               	movwf	wr16@value+1,c
  6329  0013F0  0E00               	movlw	0
  6330  0013F2  6E08               	movwf	wr16@value,c
  6331  0013F4  ECB9  F033         	call	_wr16	;wreg free
  6332  0013F8  0E02               	movlw	2
  6333  0013FA  ECFA  F033         	call	_cmd_incrementn
  6334  0013FE  504F               	movf	_cmd_offset,w,c
  6335  001400  6E19               	movwf	??_display_labels& (0+255),c
  6336  001402  5050               	movf	_cmd_offset+1,w,c
  6337  001404  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6338  001406  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6339  001408  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6340  00140A  0E00               	movlw	0
  6341  00140C  2419               	addwf	??_display_labels,w,c
  6342  00140E  6E09               	movwf	wr8s@addr,c
  6343  001410  0E80               	movlw	128
  6344  001412  201A               	addwfc	??_display_labels+1,w,c
  6345  001414  6E0A               	movwf	wr8s@addr+1,c
  6346  001416  0E10               	movlw	16
  6347  001418  201B               	addwfc	??_display_labels+2,w,c
  6348  00141A  6E0B               	movwf	wr8s@addr+2,c
  6349  00141C  0E00               	movlw	0
  6350  00141E  201C               	addwfc	??_display_labels+3,w,c
  6351  001420  6E0C               	movwf	wr8s@addr+3,c
  6352  001422  0E8A               	movlw	low STR_4
  6353  001424  6E0D               	movwf	wr8s@s,c
  6354  001426  0E0F               	movlw	high STR_4
  6355  001428  6E0E               	movwf	wr8s@s+1,c
  6356  00142A  ECD8  F031         	call	_wr8s	;wreg free
  6357  00142E  ECFA  F033         	call	_cmd_incrementn
  6358                           
  6359                           ;display.c: 51:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 385);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 45);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_i
      +                          ncrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1
      +                          081344UL +cmd_offset, "RPM"));
  6360  001432  0E0C               	movlw	12
  6361  001434  6E11               	movwf	cmd@command,c
  6362  001436  0EFF               	movlw	255
  6363  001438  6E12               	movwf	cmd@command+1,c
  6364  00143A  0EFF               	movlw	255
  6365  00143C  6E13               	movwf	cmd@command+2,c
  6366  00143E  0EFF               	movlw	255
  6367  001440  6E14               	movwf	cmd@command+3,c
  6368  001442  ECE1  F032         	call	_cmd	;wreg free
  6369  001446  504F               	movf	_cmd_offset,w,c
  6370  001448  6E19               	movwf	??_display_labels& (0+255),c
  6371  00144A  5050               	movf	_cmd_offset+1,w,c
  6372  00144C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6373  00144E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6374  001450  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6375  001452  0E00               	movlw	0
  6376  001454  2419               	addwf	??_display_labels,w,c
  6377  001456  6E04               	movwf	wr16@addr,c
  6378  001458  0E80               	movlw	128
  6379  00145A  201A               	addwfc	??_display_labels+1,w,c
  6380  00145C  6E05               	movwf	wr16@addr+1,c
  6381  00145E  0E10               	movlw	16
  6382  001460  201B               	addwfc	??_display_labels+2,w,c
  6383  001462  6E06               	movwf	wr16@addr+2,c
  6384  001464  0E00               	movlw	0
  6385  001466  201C               	addwfc	??_display_labels+3,w,c
  6386  001468  6E07               	movwf	wr16@addr+3,c
  6387  00146A  0E01               	movlw	1
  6388  00146C  6E09               	movwf	wr16@value+1,c
  6389  00146E  0E81               	movlw	129
  6390  001470  6E08               	movwf	wr16@value,c
  6391  001472  ECB9  F033         	call	_wr16	;wreg free
  6392  001476  0E02               	movlw	2
  6393  001478  ECFA  F033         	call	_cmd_incrementn
  6394  00147C  504F               	movf	_cmd_offset,w,c
  6395  00147E  6E19               	movwf	??_display_labels& (0+255),c
  6396  001480  5050               	movf	_cmd_offset+1,w,c
  6397  001482  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6398  001484  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6399  001486  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6400  001488  0E00               	movlw	0
  6401  00148A  2419               	addwf	??_display_labels,w,c
  6402  00148C  6E04               	movwf	wr16@addr,c
  6403  00148E  0E80               	movlw	128
  6404  001490  201A               	addwfc	??_display_labels+1,w,c
  6405  001492  6E05               	movwf	wr16@addr+1,c
  6406  001494  0E10               	movlw	16
  6407  001496  201B               	addwfc	??_display_labels+2,w,c
  6408  001498  6E06               	movwf	wr16@addr+2,c
  6409  00149A  0E00               	movlw	0
  6410  00149C  201C               	addwfc	??_display_labels+3,w,c
  6411  00149E  6E07               	movwf	wr16@addr+3,c
  6412  0014A0  0E00               	movlw	0
  6413  0014A2  6E09               	movwf	wr16@value+1,c
  6414  0014A4  0E2D               	movlw	45
  6415  0014A6  6E08               	movwf	wr16@value,c
  6416  0014A8  ECB9  F033         	call	_wr16	;wreg free
  6417  0014AC  0E02               	movlw	2
  6418  0014AE  ECFA  F033         	call	_cmd_incrementn
  6419  0014B2  504F               	movf	_cmd_offset,w,c
  6420  0014B4  6E19               	movwf	??_display_labels& (0+255),c
  6421  0014B6  5050               	movf	_cmd_offset+1,w,c
  6422  0014B8  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6423  0014BA  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6424  0014BC  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6425  0014BE  0E00               	movlw	0
  6426  0014C0  2419               	addwf	??_display_labels,w,c
  6427  0014C2  6E04               	movwf	wr16@addr,c
  6428  0014C4  0E80               	movlw	128
  6429  0014C6  201A               	addwfc	??_display_labels+1,w,c
  6430  0014C8  6E05               	movwf	wr16@addr+1,c
  6431  0014CA  0E10               	movlw	16
  6432  0014CC  201B               	addwfc	??_display_labels+2,w,c
  6433  0014CE  6E06               	movwf	wr16@addr+2,c
  6434  0014D0  0E00               	movlw	0
  6435  0014D2  201C               	addwfc	??_display_labels+3,w,c
  6436  0014D4  6E07               	movwf	wr16@addr+3,c
  6437  0014D6  0E00               	movlw	0
  6438  0014D8  6E09               	movwf	wr16@value+1,c
  6439  0014DA  0E1C               	movlw	28
  6440  0014DC  6E08               	movwf	wr16@value,c
  6441  0014DE  ECB9  F033         	call	_wr16	;wreg free
  6442  0014E2  0E02               	movlw	2
  6443  0014E4  ECFA  F033         	call	_cmd_incrementn
  6444  0014E8  504F               	movf	_cmd_offset,w,c
  6445  0014EA  6E19               	movwf	??_display_labels& (0+255),c
  6446  0014EC  5050               	movf	_cmd_offset+1,w,c
  6447  0014EE  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6448  0014F0  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6449  0014F2  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6450  0014F4  0E00               	movlw	0
  6451  0014F6  2419               	addwf	??_display_labels,w,c
  6452  0014F8  6E04               	movwf	wr16@addr,c
  6453  0014FA  0E80               	movlw	128
  6454  0014FC  201A               	addwfc	??_display_labels+1,w,c
  6455  0014FE  6E05               	movwf	wr16@addr+1,c
  6456  001500  0E10               	movlw	16
  6457  001502  201B               	addwfc	??_display_labels+2,w,c
  6458  001504  6E06               	movwf	wr16@addr+2,c
  6459  001506  0E00               	movlw	0
  6460  001508  201C               	addwfc	??_display_labels+3,w,c
  6461  00150A  6E07               	movwf	wr16@addr+3,c
  6462  00150C  0E06               	movlw	6
  6463  00150E  6E09               	movwf	wr16@value+1,c
  6464  001510  0E00               	movlw	0
  6465  001512  6E08               	movwf	wr16@value,c
  6466  001514  ECB9  F033         	call	_wr16	;wreg free
  6467  001518  0E02               	movlw	2
  6468  00151A  ECFA  F033         	call	_cmd_incrementn
  6469  00151E  504F               	movf	_cmd_offset,w,c
  6470  001520  6E19               	movwf	??_display_labels& (0+255),c
  6471  001522  5050               	movf	_cmd_offset+1,w,c
  6472  001524  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6473  001526  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6474  001528  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6475  00152A  0E00               	movlw	0
  6476  00152C  2419               	addwf	??_display_labels,w,c
  6477  00152E  6E09               	movwf	wr8s@addr,c
  6478  001530  0E80               	movlw	128
  6479  001532  201A               	addwfc	??_display_labels+1,w,c
  6480  001534  6E0A               	movwf	wr8s@addr+1,c
  6481  001536  0E10               	movlw	16
  6482  001538  201B               	addwfc	??_display_labels+2,w,c
  6483  00153A  6E0B               	movwf	wr8s@addr+2,c
  6484  00153C  0E00               	movlw	0
  6485  00153E  201C               	addwfc	??_display_labels+3,w,c
  6486  001540  6E0C               	movwf	wr8s@addr+3,c
  6487  001542  0E86               	movlw	low STR_5
  6488  001544  6E0D               	movwf	wr8s@s,c
  6489  001546  0E0F               	movlw	high STR_5
  6490  001548  6E0E               	movwf	wr8s@s+1,c
  6491  00154A  ECD8  F031         	call	_wr8s	;wreg free
  6492  00154E  ECFA  F033         	call	_cmd_incrementn
  6493                           
  6494                           ;display.c: 52:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 385);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 120);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "Speed"));
  6495  001552  0E0C               	movlw	12
  6496  001554  6E11               	movwf	cmd@command,c
  6497  001556  0EFF               	movlw	255
  6498  001558  6E12               	movwf	cmd@command+1,c
  6499  00155A  0EFF               	movlw	255
  6500  00155C  6E13               	movwf	cmd@command+2,c
  6501  00155E  0EFF               	movlw	255
  6502  001560  6E14               	movwf	cmd@command+3,c
  6503  001562  ECE1  F032         	call	_cmd	;wreg free
  6504  001566  504F               	movf	_cmd_offset,w,c
  6505  001568  6E19               	movwf	??_display_labels& (0+255),c
  6506  00156A  5050               	movf	_cmd_offset+1,w,c
  6507  00156C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6508  00156E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6509  001570  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6510  001572  0E00               	movlw	0
  6511  001574  2419               	addwf	??_display_labels,w,c
  6512  001576  6E04               	movwf	wr16@addr,c
  6513  001578  0E80               	movlw	128
  6514  00157A  201A               	addwfc	??_display_labels+1,w,c
  6515  00157C  6E05               	movwf	wr16@addr+1,c
  6516  00157E  0E10               	movlw	16
  6517  001580  201B               	addwfc	??_display_labels+2,w,c
  6518  001582  6E06               	movwf	wr16@addr+2,c
  6519  001584  0E00               	movlw	0
  6520  001586  201C               	addwfc	??_display_labels+3,w,c
  6521  001588  6E07               	movwf	wr16@addr+3,c
  6522  00158A  0E01               	movlw	1
  6523  00158C  6E09               	movwf	wr16@value+1,c
  6524  00158E  0E81               	movlw	129
  6525  001590  6E08               	movwf	wr16@value,c
  6526  001592  ECB9  F033         	call	_wr16	;wreg free
  6527  001596  0E02               	movlw	2
  6528  001598  ECFA  F033         	call	_cmd_incrementn
  6529  00159C  504F               	movf	_cmd_offset,w,c
  6530  00159E  6E19               	movwf	??_display_labels& (0+255),c
  6531  0015A0  5050               	movf	_cmd_offset+1,w,c
  6532  0015A2  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6533  0015A4  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6534  0015A6  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6535  0015A8  0E00               	movlw	0
  6536  0015AA  2419               	addwf	??_display_labels,w,c
  6537  0015AC  6E04               	movwf	wr16@addr,c
  6538  0015AE  0E80               	movlw	128
  6539  0015B0  201A               	addwfc	??_display_labels+1,w,c
  6540  0015B2  6E05               	movwf	wr16@addr+1,c
  6541  0015B4  0E10               	movlw	16
  6542  0015B6  201B               	addwfc	??_display_labels+2,w,c
  6543  0015B8  6E06               	movwf	wr16@addr+2,c
  6544  0015BA  0E00               	movlw	0
  6545  0015BC  201C               	addwfc	??_display_labels+3,w,c
  6546  0015BE  6E07               	movwf	wr16@addr+3,c
  6547  0015C0  0E00               	movlw	0
  6548  0015C2  6E09               	movwf	wr16@value+1,c
  6549  0015C4  0E78               	movlw	120
  6550  0015C6  6E08               	movwf	wr16@value,c
  6551  0015C8  ECB9  F033         	call	_wr16	;wreg free
  6552  0015CC  0E02               	movlw	2
  6553  0015CE  ECFA  F033         	call	_cmd_incrementn
  6554  0015D2  504F               	movf	_cmd_offset,w,c
  6555  0015D4  6E19               	movwf	??_display_labels& (0+255),c
  6556  0015D6  5050               	movf	_cmd_offset+1,w,c
  6557  0015D8  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6558  0015DA  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6559  0015DC  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6560  0015DE  0E00               	movlw	0
  6561  0015E0  2419               	addwf	??_display_labels,w,c
  6562  0015E2  6E04               	movwf	wr16@addr,c
  6563  0015E4  0E80               	movlw	128
  6564  0015E6  201A               	addwfc	??_display_labels+1,w,c
  6565  0015E8  6E05               	movwf	wr16@addr+1,c
  6566  0015EA  0E10               	movlw	16
  6567  0015EC  201B               	addwfc	??_display_labels+2,w,c
  6568  0015EE  6E06               	movwf	wr16@addr+2,c
  6569  0015F0  0E00               	movlw	0
  6570  0015F2  201C               	addwfc	??_display_labels+3,w,c
  6571  0015F4  6E07               	movwf	wr16@addr+3,c
  6572  0015F6  0E00               	movlw	0
  6573  0015F8  6E09               	movwf	wr16@value+1,c
  6574  0015FA  0E1C               	movlw	28
  6575  0015FC  6E08               	movwf	wr16@value,c
  6576  0015FE  ECB9  F033         	call	_wr16	;wreg free
  6577  001602  0E02               	movlw	2
  6578  001604  ECFA  F033         	call	_cmd_incrementn
  6579  001608  504F               	movf	_cmd_offset,w,c
  6580  00160A  6E19               	movwf	??_display_labels& (0+255),c
  6581  00160C  5050               	movf	_cmd_offset+1,w,c
  6582  00160E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6583  001610  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6584  001612  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6585  001614  0E00               	movlw	0
  6586  001616  2419               	addwf	??_display_labels,w,c
  6587  001618  6E04               	movwf	wr16@addr,c
  6588  00161A  0E80               	movlw	128
  6589  00161C  201A               	addwfc	??_display_labels+1,w,c
  6590  00161E  6E05               	movwf	wr16@addr+1,c
  6591  001620  0E10               	movlw	16
  6592  001622  201B               	addwfc	??_display_labels+2,w,c
  6593  001624  6E06               	movwf	wr16@addr+2,c
  6594  001626  0E00               	movlw	0
  6595  001628  201C               	addwfc	??_display_labels+3,w,c
  6596  00162A  6E07               	movwf	wr16@addr+3,c
  6597  00162C  0E06               	movlw	6
  6598  00162E  6E09               	movwf	wr16@value+1,c
  6599  001630  0E00               	movlw	0
  6600  001632  6E08               	movwf	wr16@value,c
  6601  001634  ECB9  F033         	call	_wr16	;wreg free
  6602  001638  0E02               	movlw	2
  6603  00163A  ECFA  F033         	call	_cmd_incrementn
  6604  00163E  504F               	movf	_cmd_offset,w,c
  6605  001640  6E19               	movwf	??_display_labels& (0+255),c
  6606  001642  5050               	movf	_cmd_offset+1,w,c
  6607  001644  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6608  001646  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6609  001648  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6610  00164A  0E00               	movlw	0
  6611  00164C  2419               	addwf	??_display_labels,w,c
  6612  00164E  6E09               	movwf	wr8s@addr,c
  6613  001650  0E80               	movlw	128
  6614  001652  201A               	addwfc	??_display_labels+1,w,c
  6615  001654  6E0A               	movwf	wr8s@addr+1,c
  6616  001656  0E10               	movlw	16
  6617  001658  201B               	addwfc	??_display_labels+2,w,c
  6618  00165A  6E0B               	movwf	wr8s@addr+2,c
  6619  00165C  0E00               	movlw	0
  6620  00165E  201C               	addwfc	??_display_labels+3,w,c
  6621  001660  6E0C               	movwf	wr8s@addr+3,c
  6622  001662  0E47               	movlw	low STR_6
  6623  001664  6E0D               	movwf	wr8s@s,c
  6624  001666  0E0F               	movlw	high STR_6
  6625  001668  6E0E               	movwf	wr8s@s+1,c
  6626  00166A  ECD8  F031         	call	_wr8s	;wreg free
  6627  00166E  ECFA  F033         	call	_cmd_incrementn
  6628                           
  6629                           ;display.c: 53:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 65);cmd_incrementn(2);
      +                          wr16(1081344UL +cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_i
      +                          ncrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(108134
      +                          4UL +cmd_offset, "Bias"));
  6630  001672  0E0C               	movlw	12
  6631  001674  6E11               	movwf	cmd@command,c
  6632  001676  0EFF               	movlw	255
  6633  001678  6E12               	movwf	cmd@command+1,c
  6634  00167A  0EFF               	movlw	255
  6635  00167C  6E13               	movwf	cmd@command+2,c
  6636  00167E  0EFF               	movlw	255
  6637  001680  6E14               	movwf	cmd@command+3,c
  6638  001682  ECE1  F032         	call	_cmd	;wreg free
  6639  001686  504F               	movf	_cmd_offset,w,c
  6640  001688  6E19               	movwf	??_display_labels& (0+255),c
  6641  00168A  5050               	movf	_cmd_offset+1,w,c
  6642  00168C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6643  00168E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6644  001690  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6645  001692  0E00               	movlw	0
  6646  001694  2419               	addwf	??_display_labels,w,c
  6647  001696  6E04               	movwf	wr16@addr,c
  6648  001698  0E80               	movlw	128
  6649  00169A  201A               	addwfc	??_display_labels+1,w,c
  6650  00169C  6E05               	movwf	wr16@addr+1,c
  6651  00169E  0E10               	movlw	16
  6652  0016A0  201B               	addwfc	??_display_labels+2,w,c
  6653  0016A2  6E06               	movwf	wr16@addr+2,c
  6654  0016A4  0E00               	movlw	0
  6655  0016A6  201C               	addwfc	??_display_labels+3,w,c
  6656  0016A8  6E07               	movwf	wr16@addr+3,c
  6657  0016AA  0E00               	movlw	0
  6658  0016AC  6E09               	movwf	wr16@value+1,c
  6659  0016AE  0E41               	movlw	65
  6660  0016B0  6E08               	movwf	wr16@value,c
  6661  0016B2  ECB9  F033         	call	_wr16	;wreg free
  6662  0016B6  0E02               	movlw	2
  6663  0016B8  ECFA  F033         	call	_cmd_incrementn
  6664  0016BC  504F               	movf	_cmd_offset,w,c
  6665  0016BE  6E19               	movwf	??_display_labels& (0+255),c
  6666  0016C0  5050               	movf	_cmd_offset+1,w,c
  6667  0016C2  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6668  0016C4  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6669  0016C6  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6670  0016C8  0E00               	movlw	0
  6671  0016CA  2419               	addwf	??_display_labels,w,c
  6672  0016CC  6E04               	movwf	wr16@addr,c
  6673  0016CE  0E80               	movlw	128
  6674  0016D0  201A               	addwfc	??_display_labels+1,w,c
  6675  0016D2  6E05               	movwf	wr16@addr+1,c
  6676  0016D4  0E10               	movlw	16
  6677  0016D6  201B               	addwfc	??_display_labels+2,w,c
  6678  0016D8  6E06               	movwf	wr16@addr+2,c
  6679  0016DA  0E00               	movlw	0
  6680  0016DC  201C               	addwfc	??_display_labels+3,w,c
  6681  0016DE  6E07               	movwf	wr16@addr+3,c
  6682  0016E0  0E00               	movlw	0
  6683  0016E2  6E09               	movwf	wr16@value+1,c
  6684  0016E4  0EF5               	movlw	245
  6685  0016E6  6E08               	movwf	wr16@value,c
  6686  0016E8  ECB9  F033         	call	_wr16	;wreg free
  6687  0016EC  0E02               	movlw	2
  6688  0016EE  ECFA  F033         	call	_cmd_incrementn
  6689  0016F2  504F               	movf	_cmd_offset,w,c
  6690  0016F4  6E19               	movwf	??_display_labels& (0+255),c
  6691  0016F6  5050               	movf	_cmd_offset+1,w,c
  6692  0016F8  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6693  0016FA  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6694  0016FC  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6695  0016FE  0E00               	movlw	0
  6696  001700  2419               	addwf	??_display_labels,w,c
  6697  001702  6E04               	movwf	wr16@addr,c
  6698  001704  0E80               	movlw	128
  6699  001706  201A               	addwfc	??_display_labels+1,w,c
  6700  001708  6E05               	movwf	wr16@addr+1,c
  6701  00170A  0E10               	movlw	16
  6702  00170C  201B               	addwfc	??_display_labels+2,w,c
  6703  00170E  6E06               	movwf	wr16@addr+2,c
  6704  001710  0E00               	movlw	0
  6705  001712  201C               	addwfc	??_display_labels+3,w,c
  6706  001714  6E07               	movwf	wr16@addr+3,c
  6707  001716  0E00               	movlw	0
  6708  001718  6E09               	movwf	wr16@value+1,c
  6709  00171A  0E1C               	movlw	28
  6710  00171C  6E08               	movwf	wr16@value,c
  6711  00171E  ECB9  F033         	call	_wr16	;wreg free
  6712  001722  0E02               	movlw	2
  6713  001724  ECFA  F033         	call	_cmd_incrementn
  6714  001728  504F               	movf	_cmd_offset,w,c
  6715  00172A  6E19               	movwf	??_display_labels& (0+255),c
  6716  00172C  5050               	movf	_cmd_offset+1,w,c
  6717  00172E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6718  001730  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6719  001732  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6720  001734  0E00               	movlw	0
  6721  001736  2419               	addwf	??_display_labels,w,c
  6722  001738  6E04               	movwf	wr16@addr,c
  6723  00173A  0E80               	movlw	128
  6724  00173C  201A               	addwfc	??_display_labels+1,w,c
  6725  00173E  6E05               	movwf	wr16@addr+1,c
  6726  001740  0E10               	movlw	16
  6727  001742  201B               	addwfc	??_display_labels+2,w,c
  6728  001744  6E06               	movwf	wr16@addr+2,c
  6729  001746  0E00               	movlw	0
  6730  001748  201C               	addwfc	??_display_labels+3,w,c
  6731  00174A  6E07               	movwf	wr16@addr+3,c
  6732  00174C  0E00               	movlw	0
  6733  00174E  6E09               	movwf	wr16@value+1,c
  6734  001750  0E00               	movlw	0
  6735  001752  6E08               	movwf	wr16@value,c
  6736  001754  ECB9  F033         	call	_wr16	;wreg free
  6737  001758  0E02               	movlw	2
  6738  00175A  ECFA  F033         	call	_cmd_incrementn
  6739  00175E  504F               	movf	_cmd_offset,w,c
  6740  001760  6E19               	movwf	??_display_labels& (0+255),c
  6741  001762  5050               	movf	_cmd_offset+1,w,c
  6742  001764  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6743  001766  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6744  001768  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6745  00176A  0E00               	movlw	0
  6746  00176C  2419               	addwf	??_display_labels,w,c
  6747  00176E  6E09               	movwf	wr8s@addr,c
  6748  001770  0E80               	movlw	128
  6749  001772  201A               	addwfc	??_display_labels+1,w,c
  6750  001774  6E0A               	movwf	wr8s@addr+1,c
  6751  001776  0E10               	movlw	16
  6752  001778  201B               	addwfc	??_display_labels+2,w,c
  6753  00177A  6E0B               	movwf	wr8s@addr+2,c
  6754  00177C  0E00               	movlw	0
  6755  00177E  201C               	addwfc	??_display_labels+3,w,c
  6756  001780  6E0C               	movwf	wr8s@addr+3,c
  6757  001782  0E74               	movlw	low STR_7
  6758  001784  6E0D               	movwf	wr8s@s,c
  6759  001786  0E0F               	movlw	high STR_7
  6760  001788  6E0E               	movwf	wr8s@s+1,c
  6761  00178A  ECD8  F031         	call	_wr8s	;wreg free
  6762  00178E  ECFA  F033         	call	_cmd_incrementn
  6763                           
  6764                           ;display.c: 54:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 45);cmd_incrementn(2);
      +                          wr16(1081344UL +cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_i
      +                          ncrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(108134
      +                          4UL +cmd_offset, "%"));
  6765  001792  0E0C               	movlw	12
  6766  001794  6E11               	movwf	cmd@command,c
  6767  001796  0EFF               	movlw	255
  6768  001798  6E12               	movwf	cmd@command+1,c
  6769  00179A  0EFF               	movlw	255
  6770  00179C  6E13               	movwf	cmd@command+2,c
  6771  00179E  0EFF               	movlw	255
  6772  0017A0  6E14               	movwf	cmd@command+3,c
  6773  0017A2  ECE1  F032         	call	_cmd	;wreg free
  6774  0017A6  504F               	movf	_cmd_offset,w,c
  6775  0017A8  6E19               	movwf	??_display_labels& (0+255),c
  6776  0017AA  5050               	movf	_cmd_offset+1,w,c
  6777  0017AC  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6778  0017AE  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6779  0017B0  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6780  0017B2  0E00               	movlw	0
  6781  0017B4  2419               	addwf	??_display_labels,w,c
  6782  0017B6  6E04               	movwf	wr16@addr,c
  6783  0017B8  0E80               	movlw	128
  6784  0017BA  201A               	addwfc	??_display_labels+1,w,c
  6785  0017BC  6E05               	movwf	wr16@addr+1,c
  6786  0017BE  0E10               	movlw	16
  6787  0017C0  201B               	addwfc	??_display_labels+2,w,c
  6788  0017C2  6E06               	movwf	wr16@addr+2,c
  6789  0017C4  0E00               	movlw	0
  6790  0017C6  201C               	addwfc	??_display_labels+3,w,c
  6791  0017C8  6E07               	movwf	wr16@addr+3,c
  6792  0017CA  0E00               	movlw	0
  6793  0017CC  6E09               	movwf	wr16@value+1,c
  6794  0017CE  0E2D               	movlw	45
  6795  0017D0  6E08               	movwf	wr16@value,c
  6796  0017D2  ECB9  F033         	call	_wr16	;wreg free
  6797  0017D6  0E02               	movlw	2
  6798  0017D8  ECFA  F033         	call	_cmd_incrementn
  6799  0017DC  504F               	movf	_cmd_offset,w,c
  6800  0017DE  6E19               	movwf	??_display_labels& (0+255),c
  6801  0017E0  5050               	movf	_cmd_offset+1,w,c
  6802  0017E2  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6803  0017E4  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6804  0017E6  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6805  0017E8  0E00               	movlw	0
  6806  0017EA  2419               	addwf	??_display_labels,w,c
  6807  0017EC  6E04               	movwf	wr16@addr,c
  6808  0017EE  0E80               	movlw	128
  6809  0017F0  201A               	addwfc	??_display_labels+1,w,c
  6810  0017F2  6E05               	movwf	wr16@addr+1,c
  6811  0017F4  0E10               	movlw	16
  6812  0017F6  201B               	addwfc	??_display_labels+2,w,c
  6813  0017F8  6E06               	movwf	wr16@addr+2,c
  6814  0017FA  0E00               	movlw	0
  6815  0017FC  201C               	addwfc	??_display_labels+3,w,c
  6816  0017FE  6E07               	movwf	wr16@addr+3,c
  6817  001800  0E00               	movlw	0
  6818  001802  6E09               	movwf	wr16@value+1,c
  6819  001804  0EF5               	movlw	245
  6820  001806  6E08               	movwf	wr16@value,c
  6821  001808  ECB9  F033         	call	_wr16	;wreg free
  6822  00180C  0E02               	movlw	2
  6823  00180E  ECFA  F033         	call	_cmd_incrementn
  6824  001812  504F               	movf	_cmd_offset,w,c
  6825  001814  6E19               	movwf	??_display_labels& (0+255),c
  6826  001816  5050               	movf	_cmd_offset+1,w,c
  6827  001818  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6828  00181A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6829  00181C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6830  00181E  0E00               	movlw	0
  6831  001820  2419               	addwf	??_display_labels,w,c
  6832  001822  6E04               	movwf	wr16@addr,c
  6833  001824  0E80               	movlw	128
  6834  001826  201A               	addwfc	??_display_labels+1,w,c
  6835  001828  6E05               	movwf	wr16@addr+1,c
  6836  00182A  0E10               	movlw	16
  6837  00182C  201B               	addwfc	??_display_labels+2,w,c
  6838  00182E  6E06               	movwf	wr16@addr+2,c
  6839  001830  0E00               	movlw	0
  6840  001832  201C               	addwfc	??_display_labels+3,w,c
  6841  001834  6E07               	movwf	wr16@addr+3,c
  6842  001836  0E00               	movlw	0
  6843  001838  6E09               	movwf	wr16@value+1,c
  6844  00183A  0E1C               	movlw	28
  6845  00183C  6E08               	movwf	wr16@value,c
  6846  00183E  ECB9  F033         	call	_wr16	;wreg free
  6847  001842  0E02               	movlw	2
  6848  001844  ECFA  F033         	call	_cmd_incrementn
  6849  001848  504F               	movf	_cmd_offset,w,c
  6850  00184A  6E19               	movwf	??_display_labels& (0+255),c
  6851  00184C  5050               	movf	_cmd_offset+1,w,c
  6852  00184E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6853  001850  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6854  001852  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6855  001854  0E00               	movlw	0
  6856  001856  2419               	addwf	??_display_labels,w,c
  6857  001858  6E04               	movwf	wr16@addr,c
  6858  00185A  0E80               	movlw	128
  6859  00185C  201A               	addwfc	??_display_labels+1,w,c
  6860  00185E  6E05               	movwf	wr16@addr+1,c
  6861  001860  0E10               	movlw	16
  6862  001862  201B               	addwfc	??_display_labels+2,w,c
  6863  001864  6E06               	movwf	wr16@addr+2,c
  6864  001866  0E00               	movlw	0
  6865  001868  201C               	addwfc	??_display_labels+3,w,c
  6866  00186A  6E07               	movwf	wr16@addr+3,c
  6867  00186C  0E00               	movlw	0
  6868  00186E  6E09               	movwf	wr16@value+1,c
  6869  001870  0E00               	movlw	0
  6870  001872  6E08               	movwf	wr16@value,c
  6871  001874  ECB9  F033         	call	_wr16	;wreg free
  6872  001878  0E02               	movlw	2
  6873  00187A  ECFA  F033         	call	_cmd_incrementn
  6874  00187E  504F               	movf	_cmd_offset,w,c
  6875  001880  6E19               	movwf	??_display_labels& (0+255),c
  6876  001882  5050               	movf	_cmd_offset+1,w,c
  6877  001884  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6878  001886  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6879  001888  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6880  00188A  0E00               	movlw	0
  6881  00188C  2419               	addwf	??_display_labels,w,c
  6882  00188E  6E09               	movwf	wr8s@addr,c
  6883  001890  0E80               	movlw	128
  6884  001892  201A               	addwfc	??_display_labels+1,w,c
  6885  001894  6E0A               	movwf	wr8s@addr+1,c
  6886  001896  0E10               	movlw	16
  6887  001898  201B               	addwfc	??_display_labels+2,w,c
  6888  00189A  6E0B               	movwf	wr8s@addr+2,c
  6889  00189C  0E00               	movlw	0
  6890  00189E  201C               	addwfc	??_display_labels+3,w,c
  6891  0018A0  6E0C               	movwf	wr8s@addr+3,c
  6892  0018A2  0E91               	movlw	low STR_8
  6893  0018A4  6E0D               	movwf	wr8s@s,c
  6894  0018A6  0E0F               	movlw	high STR_8
  6895  0018A8  6E0E               	movwf	wr8s@s+1,c
  6896  0018AA  ECD8  F031         	call	_wr8s	;wreg free
  6897  0018AE  ECFA  F033         	call	_cmd_incrementn
  6898                           
  6899                           ;display.c: 55:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 370);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44UL +cmd_offset, "TP"));
  6900  0018B2  0E0C               	movlw	12
  6901  0018B4  6E11               	movwf	cmd@command,c
  6902  0018B6  0EFF               	movlw	255
  6903  0018B8  6E12               	movwf	cmd@command+1,c
  6904  0018BA  0EFF               	movlw	255
  6905  0018BC  6E13               	movwf	cmd@command+2,c
  6906  0018BE  0EFF               	movlw	255
  6907  0018C0  6E14               	movwf	cmd@command+3,c
  6908  0018C2  ECE1  F032         	call	_cmd	;wreg free
  6909  0018C6  504F               	movf	_cmd_offset,w,c
  6910  0018C8  6E19               	movwf	??_display_labels& (0+255),c
  6911  0018CA  5050               	movf	_cmd_offset+1,w,c
  6912  0018CC  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6913  0018CE  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6914  0018D0  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6915  0018D2  0E00               	movlw	0
  6916  0018D4  2419               	addwf	??_display_labels,w,c
  6917  0018D6  6E04               	movwf	wr16@addr,c
  6918  0018D8  0E80               	movlw	128
  6919  0018DA  201A               	addwfc	??_display_labels+1,w,c
  6920  0018DC  6E05               	movwf	wr16@addr+1,c
  6921  0018DE  0E10               	movlw	16
  6922  0018E0  201B               	addwfc	??_display_labels+2,w,c
  6923  0018E2  6E06               	movwf	wr16@addr+2,c
  6924  0018E4  0E00               	movlw	0
  6925  0018E6  201C               	addwfc	??_display_labels+3,w,c
  6926  0018E8  6E07               	movwf	wr16@addr+3,c
  6927  0018EA  0E01               	movlw	1
  6928  0018EC  6E09               	movwf	wr16@value+1,c
  6929  0018EE  0E72               	movlw	114
  6930  0018F0  6E08               	movwf	wr16@value,c
  6931  0018F2  ECB9  F033         	call	_wr16	;wreg free
  6932  0018F6  0E02               	movlw	2
  6933  0018F8  ECFA  F033         	call	_cmd_incrementn
  6934  0018FC  504F               	movf	_cmd_offset,w,c
  6935  0018FE  6E19               	movwf	??_display_labels& (0+255),c
  6936  001900  5050               	movf	_cmd_offset+1,w,c
  6937  001902  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6938  001904  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6939  001906  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6940  001908  0E00               	movlw	0
  6941  00190A  2419               	addwf	??_display_labels,w,c
  6942  00190C  6E04               	movwf	wr16@addr,c
  6943  00190E  0E80               	movlw	128
  6944  001910  201A               	addwfc	??_display_labels+1,w,c
  6945  001912  6E05               	movwf	wr16@addr+1,c
  6946  001914  0E10               	movlw	16
  6947  001916  201B               	addwfc	??_display_labels+2,w,c
  6948  001918  6E06               	movwf	wr16@addr+2,c
  6949  00191A  0E00               	movlw	0
  6950  00191C  201C               	addwfc	??_display_labels+3,w,c
  6951  00191E  6E07               	movwf	wr16@addr+3,c
  6952  001920  0E00               	movlw	0
  6953  001922  6E09               	movwf	wr16@value+1,c
  6954  001924  0EF5               	movlw	245
  6955  001926  6E08               	movwf	wr16@value,c
  6956  001928  ECB9  F033         	call	_wr16	;wreg free
  6957  00192C  0E02               	movlw	2
  6958  00192E  ECFA  F033         	call	_cmd_incrementn
  6959  001932  504F               	movf	_cmd_offset,w,c
  6960  001934  6E19               	movwf	??_display_labels& (0+255),c
  6961  001936  5050               	movf	_cmd_offset+1,w,c
  6962  001938  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6963  00193A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6964  00193C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6965  00193E  0E00               	movlw	0
  6966  001940  2419               	addwf	??_display_labels,w,c
  6967  001942  6E04               	movwf	wr16@addr,c
  6968  001944  0E80               	movlw	128
  6969  001946  201A               	addwfc	??_display_labels+1,w,c
  6970  001948  6E05               	movwf	wr16@addr+1,c
  6971  00194A  0E10               	movlw	16
  6972  00194C  201B               	addwfc	??_display_labels+2,w,c
  6973  00194E  6E06               	movwf	wr16@addr+2,c
  6974  001950  0E00               	movlw	0
  6975  001952  201C               	addwfc	??_display_labels+3,w,c
  6976  001954  6E07               	movwf	wr16@addr+3,c
  6977  001956  0E00               	movlw	0
  6978  001958  6E09               	movwf	wr16@value+1,c
  6979  00195A  0E1C               	movlw	28
  6980  00195C  6E08               	movwf	wr16@value,c
  6981  00195E  ECB9  F033         	call	_wr16	;wreg free
  6982  001962  0E02               	movlw	2
  6983  001964  ECFA  F033         	call	_cmd_incrementn
  6984  001968  504F               	movf	_cmd_offset,w,c
  6985  00196A  6E19               	movwf	??_display_labels& (0+255),c
  6986  00196C  5050               	movf	_cmd_offset+1,w,c
  6987  00196E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  6988  001970  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  6989  001972  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  6990  001974  0E00               	movlw	0
  6991  001976  2419               	addwf	??_display_labels,w,c
  6992  001978  6E04               	movwf	wr16@addr,c
  6993  00197A  0E80               	movlw	128
  6994  00197C  201A               	addwfc	??_display_labels+1,w,c
  6995  00197E  6E05               	movwf	wr16@addr+1,c
  6996  001980  0E10               	movlw	16
  6997  001982  201B               	addwfc	??_display_labels+2,w,c
  6998  001984  6E06               	movwf	wr16@addr+2,c
  6999  001986  0E00               	movlw	0
  7000  001988  201C               	addwfc	??_display_labels+3,w,c
  7001  00198A  6E07               	movwf	wr16@addr+3,c
  7002  00198C  0E00               	movlw	0
  7003  00198E  6E09               	movwf	wr16@value+1,c
  7004  001990  0E00               	movlw	0
  7005  001992  6E08               	movwf	wr16@value,c
  7006  001994  ECB9  F033         	call	_wr16	;wreg free
  7007  001998  0E02               	movlw	2
  7008  00199A  ECFA  F033         	call	_cmd_incrementn
  7009  00199E  504F               	movf	_cmd_offset,w,c
  7010  0019A0  6E19               	movwf	??_display_labels& (0+255),c
  7011  0019A2  5050               	movf	_cmd_offset+1,w,c
  7012  0019A4  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7013  0019A6  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7014  0019A8  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7015  0019AA  0E00               	movlw	0
  7016  0019AC  2419               	addwf	??_display_labels,w,c
  7017  0019AE  6E09               	movwf	wr8s@addr,c
  7018  0019B0  0E80               	movlw	128
  7019  0019B2  201A               	addwfc	??_display_labels+1,w,c
  7020  0019B4  6E0A               	movwf	wr8s@addr+1,c
  7021  0019B6  0E10               	movlw	16
  7022  0019B8  201B               	addwfc	??_display_labels+2,w,c
  7023  0019BA  6E0B               	movwf	wr8s@addr+2,c
  7024  0019BC  0E00               	movlw	0
  7025  0019BE  201C               	addwfc	??_display_labels+3,w,c
  7026  0019C0  6E0C               	movwf	wr8s@addr+3,c
  7027  0019C2  0E8E               	movlw	low STR_9
  7028  0019C4  6E0D               	movwf	wr8s@s,c
  7029  0019C6  0E0F               	movlw	high STR_9
  7030  0019C8  6E0E               	movwf	wr8s@s+1,c
  7031  0019CA  ECD8  F031         	call	_wr8s	;wreg free
  7032  0019CE  ECFA  F033         	call	_cmd_incrementn
  7033                           
  7034                           ;display.c: 56:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 459);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44UL +cmd_offset, "%"));
  7035  0019D2  0E0C               	movlw	12
  7036  0019D4  6E11               	movwf	cmd@command,c
  7037  0019D6  0EFF               	movlw	255
  7038  0019D8  6E12               	movwf	cmd@command+1,c
  7039  0019DA  0EFF               	movlw	255
  7040  0019DC  6E13               	movwf	cmd@command+2,c
  7041  0019DE  0EFF               	movlw	255
  7042  0019E0  6E14               	movwf	cmd@command+3,c
  7043  0019E2  ECE1  F032         	call	_cmd	;wreg free
  7044  0019E6  504F               	movf	_cmd_offset,w,c
  7045  0019E8  6E19               	movwf	??_display_labels& (0+255),c
  7046  0019EA  5050               	movf	_cmd_offset+1,w,c
  7047  0019EC  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7048  0019EE  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7049  0019F0  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7050  0019F2  0E00               	movlw	0
  7051  0019F4  2419               	addwf	??_display_labels,w,c
  7052  0019F6  6E04               	movwf	wr16@addr,c
  7053  0019F8  0E80               	movlw	128
  7054  0019FA  201A               	addwfc	??_display_labels+1,w,c
  7055  0019FC  6E05               	movwf	wr16@addr+1,c
  7056  0019FE  0E10               	movlw	16
  7057  001A00  201B               	addwfc	??_display_labels+2,w,c
  7058  001A02  6E06               	movwf	wr16@addr+2,c
  7059  001A04  0E00               	movlw	0
  7060  001A06  201C               	addwfc	??_display_labels+3,w,c
  7061  001A08  6E07               	movwf	wr16@addr+3,c
  7062  001A0A  0E01               	movlw	1
  7063  001A0C  6E09               	movwf	wr16@value+1,c
  7064  001A0E  0ECB               	movlw	203
  7065  001A10  6E08               	movwf	wr16@value,c
  7066  001A12  ECB9  F033         	call	_wr16	;wreg free
  7067  001A16  0E02               	movlw	2
  7068  001A18  ECFA  F033         	call	_cmd_incrementn
  7069  001A1C  504F               	movf	_cmd_offset,w,c
  7070  001A1E  6E19               	movwf	??_display_labels& (0+255),c
  7071  001A20  5050               	movf	_cmd_offset+1,w,c
  7072  001A22  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7073  001A24  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7074  001A26  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7075  001A28  0E00               	movlw	0
  7076  001A2A  2419               	addwf	??_display_labels,w,c
  7077  001A2C  6E04               	movwf	wr16@addr,c
  7078  001A2E  0E80               	movlw	128
  7079  001A30  201A               	addwfc	??_display_labels+1,w,c
  7080  001A32  6E05               	movwf	wr16@addr+1,c
  7081  001A34  0E10               	movlw	16
  7082  001A36  201B               	addwfc	??_display_labels+2,w,c
  7083  001A38  6E06               	movwf	wr16@addr+2,c
  7084  001A3A  0E00               	movlw	0
  7085  001A3C  201C               	addwfc	??_display_labels+3,w,c
  7086  001A3E  6E07               	movwf	wr16@addr+3,c
  7087  001A40  0E00               	movlw	0
  7088  001A42  6E09               	movwf	wr16@value+1,c
  7089  001A44  0EF5               	movlw	245
  7090  001A46  6E08               	movwf	wr16@value,c
  7091  001A48  ECB9  F033         	call	_wr16	;wreg free
  7092  001A4C  0E02               	movlw	2
  7093  001A4E  ECFA  F033         	call	_cmd_incrementn
  7094  001A52  504F               	movf	_cmd_offset,w,c
  7095  001A54  6E19               	movwf	??_display_labels& (0+255),c
  7096  001A56  5050               	movf	_cmd_offset+1,w,c
  7097  001A58  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7098  001A5A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7099  001A5C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7100  001A5E  0E00               	movlw	0
  7101  001A60  2419               	addwf	??_display_labels,w,c
  7102  001A62  6E04               	movwf	wr16@addr,c
  7103  001A64  0E80               	movlw	128
  7104  001A66  201A               	addwfc	??_display_labels+1,w,c
  7105  001A68  6E05               	movwf	wr16@addr+1,c
  7106  001A6A  0E10               	movlw	16
  7107  001A6C  201B               	addwfc	??_display_labels+2,w,c
  7108  001A6E  6E06               	movwf	wr16@addr+2,c
  7109  001A70  0E00               	movlw	0
  7110  001A72  201C               	addwfc	??_display_labels+3,w,c
  7111  001A74  6E07               	movwf	wr16@addr+3,c
  7112  001A76  0E00               	movlw	0
  7113  001A78  6E09               	movwf	wr16@value+1,c
  7114  001A7A  0E1C               	movlw	28
  7115  001A7C  6E08               	movwf	wr16@value,c
  7116  001A7E  ECB9  F033         	call	_wr16	;wreg free
  7117  001A82  0E02               	movlw	2
  7118  001A84  ECFA  F033         	call	_cmd_incrementn
  7119  001A88  504F               	movf	_cmd_offset,w,c
  7120  001A8A  6E19               	movwf	??_display_labels& (0+255),c
  7121  001A8C  5050               	movf	_cmd_offset+1,w,c
  7122  001A8E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7123  001A90  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7124  001A92  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7125  001A94  0E00               	movlw	0
  7126  001A96  2419               	addwf	??_display_labels,w,c
  7127  001A98  6E04               	movwf	wr16@addr,c
  7128  001A9A  0E80               	movlw	128
  7129  001A9C  201A               	addwfc	??_display_labels+1,w,c
  7130  001A9E  6E05               	movwf	wr16@addr+1,c
  7131  001AA0  0E10               	movlw	16
  7132  001AA2  201B               	addwfc	??_display_labels+2,w,c
  7133  001AA4  6E06               	movwf	wr16@addr+2,c
  7134  001AA6  0E00               	movlw	0
  7135  001AA8  201C               	addwfc	??_display_labels+3,w,c
  7136  001AAA  6E07               	movwf	wr16@addr+3,c
  7137  001AAC  0E00               	movlw	0
  7138  001AAE  6E09               	movwf	wr16@value+1,c
  7139  001AB0  0E00               	movlw	0
  7140  001AB2  6E08               	movwf	wr16@value,c
  7141  001AB4  ECB9  F033         	call	_wr16	;wreg free
  7142  001AB8  0E02               	movlw	2
  7143  001ABA  ECFA  F033         	call	_cmd_incrementn
  7144  001ABE  504F               	movf	_cmd_offset,w,c
  7145  001AC0  6E19               	movwf	??_display_labels& (0+255),c
  7146  001AC2  5050               	movf	_cmd_offset+1,w,c
  7147  001AC4  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7148  001AC6  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7149  001AC8  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7150  001ACA  0E00               	movlw	0
  7151  001ACC  2419               	addwf	??_display_labels,w,c
  7152  001ACE  6E09               	movwf	wr8s@addr,c
  7153  001AD0  0E80               	movlw	128
  7154  001AD2  201A               	addwfc	??_display_labels+1,w,c
  7155  001AD4  6E0A               	movwf	wr8s@addr+1,c
  7156  001AD6  0E10               	movlw	16
  7157  001AD8  201B               	addwfc	??_display_labels+2,w,c
  7158  001ADA  6E0B               	movwf	wr8s@addr+2,c
  7159  001ADC  0E00               	movlw	0
  7160  001ADE  201C               	addwfc	??_display_labels+3,w,c
  7161  001AE0  6E0C               	movwf	wr8s@addr+3,c
  7162  001AE2  0E91               	movlw	low STR_8
  7163  001AE4  6E0D               	movwf	wr8s@s,c
  7164  001AE6  0E0F               	movlw	high STR_8
  7165  001AE8  6E0E               	movwf	wr8s@s+1,c
  7166  001AEA  ECD8  F031         	call	_wr8s	;wreg free
  7167  001AEE  ECFA  F033         	call	_cmd_incrementn
  7168                           
  7169                           ;display.c: 57:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 125);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "ETC"));
  7170  001AF2  0E0C               	movlw	12
  7171  001AF4  6E11               	movwf	cmd@command,c
  7172  001AF6  0EFF               	movlw	255
  7173  001AF8  6E12               	movwf	cmd@command+1,c
  7174  001AFA  0EFF               	movlw	255
  7175  001AFC  6E13               	movwf	cmd@command+2,c
  7176  001AFE  0EFF               	movlw	255
  7177  001B00  6E14               	movwf	cmd@command+3,c
  7178  001B02  ECE1  F032         	call	_cmd	;wreg free
  7179  001B06  504F               	movf	_cmd_offset,w,c
  7180  001B08  6E19               	movwf	??_display_labels& (0+255),c
  7181  001B0A  5050               	movf	_cmd_offset+1,w,c
  7182  001B0C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7183  001B0E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7184  001B10  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7185  001B12  0E00               	movlw	0
  7186  001B14  2419               	addwf	??_display_labels,w,c
  7187  001B16  6E04               	movwf	wr16@addr,c
  7188  001B18  0E80               	movlw	128
  7189  001B1A  201A               	addwfc	??_display_labels+1,w,c
  7190  001B1C  6E05               	movwf	wr16@addr+1,c
  7191  001B1E  0E10               	movlw	16
  7192  001B20  201B               	addwfc	??_display_labels+2,w,c
  7193  001B22  6E06               	movwf	wr16@addr+2,c
  7194  001B24  0E00               	movlw	0
  7195  001B26  201C               	addwfc	??_display_labels+3,w,c
  7196  001B28  6E07               	movwf	wr16@addr+3,c
  7197  001B2A  0E00               	movlw	0
  7198  001B2C  6E09               	movwf	wr16@value+1,c
  7199  001B2E  0E8B               	movlw	139
  7200  001B30  6E08               	movwf	wr16@value,c
  7201  001B32  ECB9  F033         	call	_wr16	;wreg free
  7202  001B36  0E02               	movlw	2
  7203  001B38  ECFA  F033         	call	_cmd_incrementn
  7204  001B3C  504F               	movf	_cmd_offset,w,c
  7205  001B3E  6E19               	movwf	??_display_labels& (0+255),c
  7206  001B40  5050               	movf	_cmd_offset+1,w,c
  7207  001B42  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7208  001B44  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7209  001B46  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7210  001B48  0E00               	movlw	0
  7211  001B4A  2419               	addwf	??_display_labels,w,c
  7212  001B4C  6E04               	movwf	wr16@addr,c
  7213  001B4E  0E80               	movlw	128
  7214  001B50  201A               	addwfc	??_display_labels+1,w,c
  7215  001B52  6E05               	movwf	wr16@addr+1,c
  7216  001B54  0E10               	movlw	16
  7217  001B56  201B               	addwfc	??_display_labels+2,w,c
  7218  001B58  6E06               	movwf	wr16@addr+2,c
  7219  001B5A  0E00               	movlw	0
  7220  001B5C  201C               	addwfc	??_display_labels+3,w,c
  7221  001B5E  6E07               	movwf	wr16@addr+3,c
  7222  001B60  0E00               	movlw	0
  7223  001B62  6E09               	movwf	wr16@value+1,c
  7224  001B64  0E7D               	movlw	125
  7225  001B66  6E08               	movwf	wr16@value,c
  7226  001B68  ECB9  F033         	call	_wr16	;wreg free
  7227  001B6C  0E02               	movlw	2
  7228  001B6E  ECFA  F033         	call	_cmd_incrementn
  7229  001B72  504F               	movf	_cmd_offset,w,c
  7230  001B74  6E19               	movwf	??_display_labels& (0+255),c
  7231  001B76  5050               	movf	_cmd_offset+1,w,c
  7232  001B78  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7233  001B7A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7234  001B7C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7235  001B7E  0E00               	movlw	0
  7236  001B80  2419               	addwf	??_display_labels,w,c
  7237  001B82  6E04               	movwf	wr16@addr,c
  7238  001B84  0E80               	movlw	128
  7239  001B86  201A               	addwfc	??_display_labels+1,w,c
  7240  001B88  6E05               	movwf	wr16@addr+1,c
  7241  001B8A  0E10               	movlw	16
  7242  001B8C  201B               	addwfc	??_display_labels+2,w,c
  7243  001B8E  6E06               	movwf	wr16@addr+2,c
  7244  001B90  0E00               	movlw	0
  7245  001B92  201C               	addwfc	??_display_labels+3,w,c
  7246  001B94  6E07               	movwf	wr16@addr+3,c
  7247  001B96  0E00               	movlw	0
  7248  001B98  6E09               	movwf	wr16@value+1,c
  7249  001B9A  0E1B               	movlw	27
  7250  001B9C  6E08               	movwf	wr16@value,c
  7251  001B9E  ECB9  F033         	call	_wr16	;wreg free
  7252  001BA2  0E02               	movlw	2
  7253  001BA4  ECFA  F033         	call	_cmd_incrementn
  7254  001BA8  504F               	movf	_cmd_offset,w,c
  7255  001BAA  6E19               	movwf	??_display_labels& (0+255),c
  7256  001BAC  5050               	movf	_cmd_offset+1,w,c
  7257  001BAE  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7258  001BB0  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7259  001BB2  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7260  001BB4  0E00               	movlw	0
  7261  001BB6  2419               	addwf	??_display_labels,w,c
  7262  001BB8  6E04               	movwf	wr16@addr,c
  7263  001BBA  0E80               	movlw	128
  7264  001BBC  201A               	addwfc	??_display_labels+1,w,c
  7265  001BBE  6E05               	movwf	wr16@addr+1,c
  7266  001BC0  0E10               	movlw	16
  7267  001BC2  201B               	addwfc	??_display_labels+2,w,c
  7268  001BC4  6E06               	movwf	wr16@addr+2,c
  7269  001BC6  0E00               	movlw	0
  7270  001BC8  201C               	addwfc	??_display_labels+3,w,c
  7271  001BCA  6E07               	movwf	wr16@addr+3,c
  7272  001BCC  0E06               	movlw	6
  7273  001BCE  6E09               	movwf	wr16@value+1,c
  7274  001BD0  0E00               	movlw	0
  7275  001BD2  6E08               	movwf	wr16@value,c
  7276  001BD4  ECB9  F033         	call	_wr16	;wreg free
  7277  001BD8  0E02               	movlw	2
  7278  001BDA  ECFA  F033         	call	_cmd_incrementn
  7279  001BDE  504F               	movf	_cmd_offset,w,c
  7280  001BE0  6E19               	movwf	??_display_labels& (0+255),c
  7281  001BE2  5050               	movf	_cmd_offset+1,w,c
  7282  001BE4  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7283  001BE6  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7284  001BE8  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7285  001BEA  0E00               	movlw	0
  7286  001BEC  2419               	addwf	??_display_labels,w,c
  7287  001BEE  6E09               	movwf	wr8s@addr,c
  7288  001BF0  0E80               	movlw	128
  7289  001BF2  201A               	addwfc	??_display_labels+1,w,c
  7290  001BF4  6E0A               	movwf	wr8s@addr+1,c
  7291  001BF6  0E10               	movlw	16
  7292  001BF8  201B               	addwfc	??_display_labels+2,w,c
  7293  001BFA  6E0B               	movwf	wr8s@addr+2,c
  7294  001BFC  0E00               	movlw	0
  7295  001BFE  201C               	addwfc	??_display_labels+3,w,c
  7296  001C00  6E0C               	movwf	wr8s@addr+3,c
  7297  001C02  0E7E               	movlw	low STR_11
  7298  001C04  6E0D               	movwf	wr8s@s,c
  7299  001C06  0E0F               	movlw	high STR_11
  7300  001C08  6E0E               	movwf	wr8s@s+1,c
  7301  001C0A  ECD8  F031         	call	_wr8s	;wreg free
  7302  001C0E  ECFA  F033         	call	_cmd_incrementn
  7303                           
  7304                           ;display.c: 58:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 270);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44UL +cmd_offset, "V"));
  7305  001C12  0E0C               	movlw	12
  7306  001C14  6E11               	movwf	cmd@command,c
  7307  001C16  0EFF               	movlw	255
  7308  001C18  6E12               	movwf	cmd@command+1,c
  7309  001C1A  0EFF               	movlw	255
  7310  001C1C  6E13               	movwf	cmd@command+2,c
  7311  001C1E  0EFF               	movlw	255
  7312  001C20  6E14               	movwf	cmd@command+3,c
  7313  001C22  ECE1  F032         	call	_cmd	;wreg free
  7314  001C26  504F               	movf	_cmd_offset,w,c
  7315  001C28  6E19               	movwf	??_display_labels& (0+255),c
  7316  001C2A  5050               	movf	_cmd_offset+1,w,c
  7317  001C2C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7318  001C2E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7319  001C30  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7320  001C32  0E00               	movlw	0
  7321  001C34  2419               	addwf	??_display_labels,w,c
  7322  001C36  6E04               	movwf	wr16@addr,c
  7323  001C38  0E80               	movlw	128
  7324  001C3A  201A               	addwfc	??_display_labels+1,w,c
  7325  001C3C  6E05               	movwf	wr16@addr+1,c
  7326  001C3E  0E10               	movlw	16
  7327  001C40  201B               	addwfc	??_display_labels+2,w,c
  7328  001C42  6E06               	movwf	wr16@addr+2,c
  7329  001C44  0E00               	movlw	0
  7330  001C46  201C               	addwfc	??_display_labels+3,w,c
  7331  001C48  6E07               	movwf	wr16@addr+3,c
  7332  001C4A  0E01               	movlw	1
  7333  001C4C  6E09               	movwf	wr16@value+1,c
  7334  001C4E  0E0E               	movlw	14
  7335  001C50  6E08               	movwf	wr16@value,c
  7336  001C52  ECB9  F033         	call	_wr16	;wreg free
  7337  001C56  0E02               	movlw	2
  7338  001C58  ECFA  F033         	call	_cmd_incrementn
  7339  001C5C  504F               	movf	_cmd_offset,w,c
  7340  001C5E  6E19               	movwf	??_display_labels& (0+255),c
  7341  001C60  5050               	movf	_cmd_offset+1,w,c
  7342  001C62  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7343  001C64  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7344  001C66  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7345  001C68  0E00               	movlw	0
  7346  001C6A  2419               	addwf	??_display_labels,w,c
  7347  001C6C  6E04               	movwf	wr16@addr,c
  7348  001C6E  0E80               	movlw	128
  7349  001C70  201A               	addwfc	??_display_labels+1,w,c
  7350  001C72  6E05               	movwf	wr16@addr+1,c
  7351  001C74  0E10               	movlw	16
  7352  001C76  201B               	addwfc	??_display_labels+2,w,c
  7353  001C78  6E06               	movwf	wr16@addr+2,c
  7354  001C7A  0E00               	movlw	0
  7355  001C7C  201C               	addwfc	??_display_labels+3,w,c
  7356  001C7E  6E07               	movwf	wr16@addr+3,c
  7357  001C80  0E00               	movlw	0
  7358  001C82  6E09               	movwf	wr16@value+1,c
  7359  001C84  0EF5               	movlw	245
  7360  001C86  6E08               	movwf	wr16@value,c
  7361  001C88  ECB9  F033         	call	_wr16	;wreg free
  7362  001C8C  0E02               	movlw	2
  7363  001C8E  ECFA  F033         	call	_cmd_incrementn
  7364  001C92  504F               	movf	_cmd_offset,w,c
  7365  001C94  6E19               	movwf	??_display_labels& (0+255),c
  7366  001C96  5050               	movf	_cmd_offset+1,w,c
  7367  001C98  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7368  001C9A  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7369  001C9C  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7370  001C9E  0E00               	movlw	0
  7371  001CA0  2419               	addwf	??_display_labels,w,c
  7372  001CA2  6E04               	movwf	wr16@addr,c
  7373  001CA4  0E80               	movlw	128
  7374  001CA6  201A               	addwfc	??_display_labels+1,w,c
  7375  001CA8  6E05               	movwf	wr16@addr+1,c
  7376  001CAA  0E10               	movlw	16
  7377  001CAC  201B               	addwfc	??_display_labels+2,w,c
  7378  001CAE  6E06               	movwf	wr16@addr+2,c
  7379  001CB0  0E00               	movlw	0
  7380  001CB2  201C               	addwfc	??_display_labels+3,w,c
  7381  001CB4  6E07               	movwf	wr16@addr+3,c
  7382  001CB6  0E00               	movlw	0
  7383  001CB8  6E09               	movwf	wr16@value+1,c
  7384  001CBA  0E1C               	movlw	28
  7385  001CBC  6E08               	movwf	wr16@value,c
  7386  001CBE  ECB9  F033         	call	_wr16	;wreg free
  7387  001CC2  0E02               	movlw	2
  7388  001CC4  ECFA  F033         	call	_cmd_incrementn
  7389  001CC8  504F               	movf	_cmd_offset,w,c
  7390  001CCA  6E19               	movwf	??_display_labels& (0+255),c
  7391  001CCC  5050               	movf	_cmd_offset+1,w,c
  7392  001CCE  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7393  001CD0  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7394  001CD2  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7395  001CD4  0E00               	movlw	0
  7396  001CD6  2419               	addwf	??_display_labels,w,c
  7397  001CD8  6E04               	movwf	wr16@addr,c
  7398  001CDA  0E80               	movlw	128
  7399  001CDC  201A               	addwfc	??_display_labels+1,w,c
  7400  001CDE  6E05               	movwf	wr16@addr+1,c
  7401  001CE0  0E10               	movlw	16
  7402  001CE2  201B               	addwfc	??_display_labels+2,w,c
  7403  001CE4  6E06               	movwf	wr16@addr+2,c
  7404  001CE6  0E00               	movlw	0
  7405  001CE8  201C               	addwfc	??_display_labels+3,w,c
  7406  001CEA  6E07               	movwf	wr16@addr+3,c
  7407  001CEC  0E00               	movlw	0
  7408  001CEE  6E09               	movwf	wr16@value+1,c
  7409  001CF0  0E00               	movlw	0
  7410  001CF2  6E08               	movwf	wr16@value,c
  7411  001CF4  ECB9  F033         	call	_wr16	;wreg free
  7412  001CF8  0E02               	movlw	2
  7413  001CFA  ECFA  F033         	call	_cmd_incrementn
  7414  001CFE  504F               	movf	_cmd_offset,w,c
  7415  001D00  6E19               	movwf	??_display_labels& (0+255),c
  7416  001D02  5050               	movf	_cmd_offset+1,w,c
  7417  001D04  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7418  001D06  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7419  001D08  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7420  001D0A  0E00               	movlw	0
  7421  001D0C  2419               	addwf	??_display_labels,w,c
  7422  001D0E  6E09               	movwf	wr8s@addr,c
  7423  001D10  0E80               	movlw	128
  7424  001D12  201A               	addwfc	??_display_labels+1,w,c
  7425  001D14  6E0A               	movwf	wr8s@addr+1,c
  7426  001D16  0E10               	movlw	16
  7427  001D18  201B               	addwfc	??_display_labels+2,w,c
  7428  001D1A  6E0B               	movwf	wr8s@addr+2,c
  7429  001D1C  0E00               	movlw	0
  7430  001D1E  201C               	addwfc	??_display_labels+3,w,c
  7431  001D20  6E0C               	movwf	wr8s@addr+3,c
  7432  001D22  0E99               	movlw	low STR_12
  7433  001D24  6E0D               	movwf	wr8s@s,c
  7434  001D26  0E0F               	movlw	high STR_12
  7435  001D28  6E0E               	movwf	wr8s@s+1,c
  7436  001D2A  ECD8  F031         	call	_wr8s	;wreg free
  7437  001D2E  ECFA  F033         	call	_cmd_incrementn
  7438                           
  7439                           ;display.c: 59:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 47);cmd_incrementn(2);
      +                          wr16(1081344UL +cmd_offset, 125);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);cmd_i
      +                          ncrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1
      +                          081344UL +cmd_offset, "Fuel"));
  7440  001D32  0E0C               	movlw	12
  7441  001D34  6E11               	movwf	cmd@command,c
  7442  001D36  0EFF               	movlw	255
  7443  001D38  6E12               	movwf	cmd@command+1,c
  7444  001D3A  0EFF               	movlw	255
  7445  001D3C  6E13               	movwf	cmd@command+2,c
  7446  001D3E  0EFF               	movlw	255
  7447  001D40  6E14               	movwf	cmd@command+3,c
  7448  001D42  ECE1  F032         	call	_cmd	;wreg free
  7449  001D46  504F               	movf	_cmd_offset,w,c
  7450  001D48  6E19               	movwf	??_display_labels& (0+255),c
  7451  001D4A  5050               	movf	_cmd_offset+1,w,c
  7452  001D4C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7453  001D4E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7454  001D50  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7455  001D52  0E00               	movlw	0
  7456  001D54  2419               	addwf	??_display_labels,w,c
  7457  001D56  6E04               	movwf	wr16@addr,c
  7458  001D58  0E80               	movlw	128
  7459  001D5A  201A               	addwfc	??_display_labels+1,w,c
  7460  001D5C  6E05               	movwf	wr16@addr+1,c
  7461  001D5E  0E10               	movlw	16
  7462  001D60  201B               	addwfc	??_display_labels+2,w,c
  7463  001D62  6E06               	movwf	wr16@addr+2,c
  7464  001D64  0E00               	movlw	0
  7465  001D66  201C               	addwfc	??_display_labels+3,w,c
  7466  001D68  6E07               	movwf	wr16@addr+3,c
  7467  001D6A  0E00               	movlw	0
  7468  001D6C  6E09               	movwf	wr16@value+1,c
  7469  001D6E  0E2F               	movlw	47
  7470  001D70  6E08               	movwf	wr16@value,c
  7471  001D72  ECB9  F033         	call	_wr16	;wreg free
  7472  001D76  0E02               	movlw	2
  7473  001D78  ECFA  F033         	call	_cmd_incrementn
  7474  001D7C  504F               	movf	_cmd_offset,w,c
  7475  001D7E  6E19               	movwf	??_display_labels& (0+255),c
  7476  001D80  5050               	movf	_cmd_offset+1,w,c
  7477  001D82  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7478  001D84  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7479  001D86  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7480  001D88  0E00               	movlw	0
  7481  001D8A  2419               	addwf	??_display_labels,w,c
  7482  001D8C  6E04               	movwf	wr16@addr,c
  7483  001D8E  0E80               	movlw	128
  7484  001D90  201A               	addwfc	??_display_labels+1,w,c
  7485  001D92  6E05               	movwf	wr16@addr+1,c
  7486  001D94  0E10               	movlw	16
  7487  001D96  201B               	addwfc	??_display_labels+2,w,c
  7488  001D98  6E06               	movwf	wr16@addr+2,c
  7489  001D9A  0E00               	movlw	0
  7490  001D9C  201C               	addwfc	??_display_labels+3,w,c
  7491  001D9E  6E07               	movwf	wr16@addr+3,c
  7492  001DA0  0E00               	movlw	0
  7493  001DA2  6E09               	movwf	wr16@value+1,c
  7494  001DA4  0E7D               	movlw	125
  7495  001DA6  6E08               	movwf	wr16@value,c
  7496  001DA8  ECB9  F033         	call	_wr16	;wreg free
  7497  001DAC  0E02               	movlw	2
  7498  001DAE  ECFA  F033         	call	_cmd_incrementn
  7499  001DB2  504F               	movf	_cmd_offset,w,c
  7500  001DB4  6E19               	movwf	??_display_labels& (0+255),c
  7501  001DB6  5050               	movf	_cmd_offset+1,w,c
  7502  001DB8  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7503  001DBA  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7504  001DBC  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7505  001DBE  0E00               	movlw	0
  7506  001DC0  2419               	addwf	??_display_labels,w,c
  7507  001DC2  6E04               	movwf	wr16@addr,c
  7508  001DC4  0E80               	movlw	128
  7509  001DC6  201A               	addwfc	??_display_labels+1,w,c
  7510  001DC8  6E05               	movwf	wr16@addr+1,c
  7511  001DCA  0E10               	movlw	16
  7512  001DCC  201B               	addwfc	??_display_labels+2,w,c
  7513  001DCE  6E06               	movwf	wr16@addr+2,c
  7514  001DD0  0E00               	movlw	0
  7515  001DD2  201C               	addwfc	??_display_labels+3,w,c
  7516  001DD4  6E07               	movwf	wr16@addr+3,c
  7517  001DD6  0E00               	movlw	0
  7518  001DD8  6E09               	movwf	wr16@value+1,c
  7519  001DDA  0E1C               	movlw	28
  7520  001DDC  6E08               	movwf	wr16@value,c
  7521  001DDE  ECB9  F033         	call	_wr16	;wreg free
  7522  001DE2  0E02               	movlw	2
  7523  001DE4  ECFA  F033         	call	_cmd_incrementn
  7524  001DE8  504F               	movf	_cmd_offset,w,c
  7525  001DEA  6E19               	movwf	??_display_labels& (0+255),c
  7526  001DEC  5050               	movf	_cmd_offset+1,w,c
  7527  001DEE  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7528  001DF0  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7529  001DF2  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7530  001DF4  0E00               	movlw	0
  7531  001DF6  2419               	addwf	??_display_labels,w,c
  7532  001DF8  6E04               	movwf	wr16@addr,c
  7533  001DFA  0E80               	movlw	128
  7534  001DFC  201A               	addwfc	??_display_labels+1,w,c
  7535  001DFE  6E05               	movwf	wr16@addr+1,c
  7536  001E00  0E10               	movlw	16
  7537  001E02  201B               	addwfc	??_display_labels+2,w,c
  7538  001E04  6E06               	movwf	wr16@addr+2,c
  7539  001E06  0E00               	movlw	0
  7540  001E08  201C               	addwfc	??_display_labels+3,w,c
  7541  001E0A  6E07               	movwf	wr16@addr+3,c
  7542  001E0C  0E06               	movlw	6
  7543  001E0E  6E09               	movwf	wr16@value+1,c
  7544  001E10  0E00               	movlw	0
  7545  001E12  6E08               	movwf	wr16@value,c
  7546  001E14  ECB9  F033         	call	_wr16	;wreg free
  7547  001E18  0E02               	movlw	2
  7548  001E1A  ECFA  F033         	call	_cmd_incrementn
  7549  001E1E  504F               	movf	_cmd_offset,w,c
  7550  001E20  6E19               	movwf	??_display_labels& (0+255),c
  7551  001E22  5050               	movf	_cmd_offset+1,w,c
  7552  001E24  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7553  001E26  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7554  001E28  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7555  001E2A  0E00               	movlw	0
  7556  001E2C  2419               	addwf	??_display_labels,w,c
  7557  001E2E  6E09               	movwf	wr8s@addr,c
  7558  001E30  0E80               	movlw	128
  7559  001E32  201A               	addwfc	??_display_labels+1,w,c
  7560  001E34  6E0A               	movwf	wr8s@addr+1,c
  7561  001E36  0E10               	movlw	16
  7562  001E38  201B               	addwfc	??_display_labels+2,w,c
  7563  001E3A  6E0B               	movwf	wr8s@addr+2,c
  7564  001E3C  0E00               	movlw	0
  7565  001E3E  201C               	addwfc	??_display_labels+3,w,c
  7566  001E40  6E0C               	movwf	wr8s@addr+3,c
  7567  001E42  0E6A               	movlw	low STR_13
  7568  001E44  6E0D               	movwf	wr8s@s,c
  7569  001E46  0E0F               	movlw	high STR_13
  7570  001E48  6E0E               	movwf	wr8s@s+1,c
  7571  001E4A  ECD8  F031         	call	_wr8s	;wreg free
  7572  001E4E  ECFA  F033         	call	_cmd_incrementn
  7573                           
  7574                           ;display.c: 61:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 268);cmd_incrementn(2)
      +                          ;wr16(1081344UL +cmd_offset, 190);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27);cmd_
      +                          incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(
      +                          1081344UL +cmd_offset, "BSPD State"));
  7575  001E52  0E0C               	movlw	12
  7576  001E54  6E11               	movwf	cmd@command,c
  7577  001E56  0EFF               	movlw	255
  7578  001E58  6E12               	movwf	cmd@command+1,c
  7579  001E5A  0EFF               	movlw	255
  7580  001E5C  6E13               	movwf	cmd@command+2,c
  7581  001E5E  0EFF               	movlw	255
  7582  001E60  6E14               	movwf	cmd@command+3,c
  7583  001E62  ECE1  F032         	call	_cmd	;wreg free
  7584  001E66  504F               	movf	_cmd_offset,w,c
  7585  001E68  6E19               	movwf	??_display_labels& (0+255),c
  7586  001E6A  5050               	movf	_cmd_offset+1,w,c
  7587  001E6C  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7588  001E6E  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7589  001E70  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7590  001E72  0E00               	movlw	0
  7591  001E74  2419               	addwf	??_display_labels,w,c
  7592  001E76  6E04               	movwf	wr16@addr,c
  7593  001E78  0E80               	movlw	128
  7594  001E7A  201A               	addwfc	??_display_labels+1,w,c
  7595  001E7C  6E05               	movwf	wr16@addr+1,c
  7596  001E7E  0E10               	movlw	16
  7597  001E80  201B               	addwfc	??_display_labels+2,w,c
  7598  001E82  6E06               	movwf	wr16@addr+2,c
  7599  001E84  0E00               	movlw	0
  7600  001E86  201C               	addwfc	??_display_labels+3,w,c
  7601  001E88  6E07               	movwf	wr16@addr+3,c
  7602  001E8A  0E01               	movlw	1
  7603  001E8C  6E09               	movwf	wr16@value+1,c
  7604  001E8E  0E0C               	movlw	12
  7605  001E90  6E08               	movwf	wr16@value,c
  7606  001E92  ECB9  F033         	call	_wr16	;wreg free
  7607  001E96  0E02               	movlw	2
  7608  001E98  ECFA  F033         	call	_cmd_incrementn
  7609  001E9C  504F               	movf	_cmd_offset,w,c
  7610  001E9E  6E19               	movwf	??_display_labels& (0+255),c
  7611  001EA0  5050               	movf	_cmd_offset+1,w,c
  7612  001EA2  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7613  001EA4  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7614  001EA6  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7615  001EA8  0E00               	movlw	0
  7616  001EAA  2419               	addwf	??_display_labels,w,c
  7617  001EAC  6E04               	movwf	wr16@addr,c
  7618  001EAE  0E80               	movlw	128
  7619  001EB0  201A               	addwfc	??_display_labels+1,w,c
  7620  001EB2  6E05               	movwf	wr16@addr+1,c
  7621  001EB4  0E10               	movlw	16
  7622  001EB6  201B               	addwfc	??_display_labels+2,w,c
  7623  001EB8  6E06               	movwf	wr16@addr+2,c
  7624  001EBA  0E00               	movlw	0
  7625  001EBC  201C               	addwfc	??_display_labels+3,w,c
  7626  001EBE  6E07               	movwf	wr16@addr+3,c
  7627  001EC0  0E00               	movlw	0
  7628  001EC2  6E09               	movwf	wr16@value+1,c
  7629  001EC4  0EBE               	movlw	190
  7630  001EC6  6E08               	movwf	wr16@value,c
  7631  001EC8  ECB9  F033         	call	_wr16	;wreg free
  7632  001ECC  0E02               	movlw	2
  7633  001ECE  ECFA  F033         	call	_cmd_incrementn
  7634  001ED2  504F               	movf	_cmd_offset,w,c
  7635  001ED4  6E19               	movwf	??_display_labels& (0+255),c
  7636  001ED6  5050               	movf	_cmd_offset+1,w,c
  7637  001ED8  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7638  001EDA  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7639  001EDC  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7640  001EDE  0E00               	movlw	0
  7641  001EE0  2419               	addwf	??_display_labels,w,c
  7642  001EE2  6E04               	movwf	wr16@addr,c
  7643  001EE4  0E80               	movlw	128
  7644  001EE6  201A               	addwfc	??_display_labels+1,w,c
  7645  001EE8  6E05               	movwf	wr16@addr+1,c
  7646  001EEA  0E10               	movlw	16
  7647  001EEC  201B               	addwfc	??_display_labels+2,w,c
  7648  001EEE  6E06               	movwf	wr16@addr+2,c
  7649  001EF0  0E00               	movlw	0
  7650  001EF2  201C               	addwfc	??_display_labels+3,w,c
  7651  001EF4  6E07               	movwf	wr16@addr+3,c
  7652  001EF6  0E00               	movlw	0
  7653  001EF8  6E09               	movwf	wr16@value+1,c
  7654  001EFA  0E1B               	movlw	27
  7655  001EFC  6E08               	movwf	wr16@value,c
  7656  001EFE  ECB9  F033         	call	_wr16	;wreg free
  7657  001F02  0E02               	movlw	2
  7658  001F04  ECFA  F033         	call	_cmd_incrementn
  7659  001F08  504F               	movf	_cmd_offset,w,c
  7660  001F0A  6E19               	movwf	??_display_labels& (0+255),c
  7661  001F0C  5050               	movf	_cmd_offset+1,w,c
  7662  001F0E  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7663  001F10  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7664  001F12  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7665  001F14  0E00               	movlw	0
  7666  001F16  2419               	addwf	??_display_labels,w,c
  7667  001F18  6E04               	movwf	wr16@addr,c
  7668  001F1A  0E80               	movlw	128
  7669  001F1C  201A               	addwfc	??_display_labels+1,w,c
  7670  001F1E  6E05               	movwf	wr16@addr+1,c
  7671  001F20  0E10               	movlw	16
  7672  001F22  201B               	addwfc	??_display_labels+2,w,c
  7673  001F24  6E06               	movwf	wr16@addr+2,c
  7674  001F26  0E00               	movlw	0
  7675  001F28  201C               	addwfc	??_display_labels+3,w,c
  7676  001F2A  6E07               	movwf	wr16@addr+3,c
  7677  001F2C  0E06               	movlw	6
  7678  001F2E  6E09               	movwf	wr16@value+1,c
  7679  001F30  0E00               	movlw	0
  7680  001F32  6E08               	movwf	wr16@value,c
  7681  001F34  ECB9  F033         	call	_wr16	;wreg free
  7682  001F38  0E02               	movlw	2
  7683  001F3A  ECFA  F033         	call	_cmd_incrementn
  7684  001F3E  504F               	movf	_cmd_offset,w,c
  7685  001F40  6E19               	movwf	??_display_labels& (0+255),c
  7686  001F42  5050               	movf	_cmd_offset+1,w,c
  7687  001F44  6E1A               	movwf	(??_display_labels+1)& (0+255),c
  7688  001F46  6A1B               	clrf	(??_display_labels+2)& (0+255),c
  7689  001F48  6A1C               	clrf	(??_display_labels+3)& (0+255),c
  7690  001F4A  0E00               	movlw	0
  7691  001F4C  2419               	addwf	??_display_labels,w,c
  7692  001F4E  6E09               	movwf	wr8s@addr,c
  7693  001F50  0E80               	movlw	128
  7694  001F52  201A               	addwfc	??_display_labels+1,w,c
  7695  001F54  6E0A               	movwf	wr8s@addr+1,c
  7696  001F56  0E10               	movlw	16
  7697  001F58  201B               	addwfc	??_display_labels+2,w,c
  7698  001F5A  6E0B               	movwf	wr8s@addr+2,c
  7699  001F5C  0E00               	movlw	0
  7700  001F5E  201C               	addwfc	??_display_labels+3,w,c
  7701  001F60  6E0C               	movwf	wr8s@addr+3,c
  7702  001F62  0E01               	movlw	low STR_14
  7703  001F64  6E0D               	movwf	wr8s@s,c
  7704  001F66  0E0F               	movlw	high STR_14
  7705  001F68  6E0E               	movwf	wr8s@s+1,c
  7706  001F6A  ECD8  F031         	call	_wr8s	;wreg free
  7707  001F6E  ECFA  F033         	call	_cmd_incrementn
  7708  001F72  0012               	return		;funcret
  7709  001F74                     __end_of_display_labels:
  7710                           	opt stack 0
  7711                           tblptru	equ	0xFF8
  7712                           tblptrh	equ	0xFF7
  7713                           tblptrl	equ	0xFF6
  7714                           tablat	equ	0xFF5
  7715                           prodh	equ	0xFF4
  7716                           prodl	equ	0xFF3
  7717                           intcon	equ	0xFF2
  7718                           postinc0	equ	0xFEE
  7719                           wreg	equ	0xFE8
  7720                           postdec1	equ	0xFE5
  7721                           plusw1	equ	0xFE3
  7722                           fsr1l	equ	0xFE1
  7723                           plusw2	equ	0xFDB
  7724                           status	equ	0xFD8
  7725                           
  7726 ;; *************** function _display_grids *****************
  7727 ;; Defined at:
  7728 ;;		line 64 in file "display.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;		None
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;		None
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      void 
  7735 ;; Registers used:
  7736 ;;		wreg, status,2, status,0, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7746 ;;Total ram usage:        0 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:    7
  7749 ;; This function calls:
  7750 ;;		_cmd
  7751 ;; This function is called by:
  7752 ;;		_display
  7753 ;;		_main
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text13
  7758  003EA8                     __ptext13:
  7759                           	opt stack 0
  7760  003EA8                     _display_grids:
  7761                           	opt stack 23
  7762                           
  7763                           ;display.c: 67:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  7764                           
  7765                           ;incstack = 0
  7766  003EA8  0E04               	movlw	4
  7767  003EAA  6E11               	movwf	cmd@command,c
  7768  003EAC  0E00               	movlw	0
  7769  003EAE  6E12               	movwf	cmd@command+1,c
  7770  003EB0  0E00               	movlw	0
  7771  003EB2  6E13               	movwf	cmd@command+2,c
  7772  003EB4  0E1F               	movlw	31
  7773  003EB6  6E14               	movwf	cmd@command+3,c
  7774  003EB8  ECE1  F032         	call	_cmd	;wreg free
  7775                           
  7776                           ;display.c: 68:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  7777  003EBC  0E0A               	movlw	10
  7778  003EBE  6E11               	movwf	cmd@command,c
  7779  003EC0  0E00               	movlw	0
  7780  003EC2  6E12               	movwf	cmd@command+1,c
  7781  003EC4  0E00               	movlw	0
  7782  003EC6  6E13               	movwf	cmd@command+2,c
  7783  003EC8  0E0E               	movlw	14
  7784  003ECA  6E14               	movwf	cmd@command+3,c
  7785  003ECC  ECE1  F032         	call	_cmd	;wreg free
  7786                           
  7787                           ;display.c: 69:     cmd(((2UL<<30)|(((15)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  7788  003ED0  0E00               	movlw	0
  7789  003ED2  6E11               	movwf	cmd@command,c
  7790  003ED4  0ED0               	movlw	208
  7791  003ED6  6E12               	movwf	cmd@command+1,c
  7792  003ED8  0EE2               	movlw	226
  7793  003EDA  6E13               	movwf	cmd@command+2,c
  7794  003EDC  0E81               	movlw	129
  7795  003EDE  6E14               	movwf	cmd@command+3,c
  7796  003EE0  ECE1  F032         	call	_cmd	;wreg free
  7797                           
  7798                           ;display.c: 70:     cmd(((2UL<<30)|(((5)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  7799  003EE4  0E00               	movlw	0
  7800  003EE6  6E11               	movwf	cmd@command,c
  7801  003EE8  0ED0               	movlw	208
  7802  003EEA  6E12               	movwf	cmd@command+1,c
  7803  003EEC  0EA2               	movlw	162
  7804  003EEE  6E13               	movwf	cmd@command+2,c
  7805  003EF0  0E80               	movlw	128
  7806  003EF2  6E14               	movwf	cmd@command+3,c
  7807  003EF4  ECE1  F032         	call	_cmd	;wreg free
  7808                           
  7809                           ;display.c: 71:     cmd(((2UL<<30)|(((5)&511UL)<<21)|(((110)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  7810  003EF8  0E00               	movlw	0
  7811  003EFA  6E11               	movwf	cmd@command,c
  7812  003EFC  0EE0               	movlw	224
  7813  003EFE  6E12               	movwf	cmd@command+1,c
  7814  003F00  0EA6               	movlw	166
  7815  003F02  6E13               	movwf	cmd@command+2,c
  7816  003F04  0E80               	movlw	128
  7817  003F06  6E14               	movwf	cmd@command+3,c
  7818  003F08  ECE1  F032         	call	_cmd	;wreg free
  7819                           
  7820                           ;display.c: 72:     cmd(((2UL<<30)|(((90)&511UL)<<21)|(((110)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  7821  003F0C  0E00               	movlw	0
  7822  003F0E  6E11               	movwf	cmd@command,c
  7823  003F10  0EE0               	movlw	224
  7824  003F12  6E12               	movwf	cmd@command+1,c
  7825  003F14  0E46               	movlw	70
  7826  003F16  6E13               	movwf	cmd@command+2,c
  7827  003F18  0E8B               	movlw	139
  7828  003F1A  6E14               	movwf	cmd@command+3,c
  7829  003F1C  ECE1  F032         	call	_cmd	;wreg free
  7830                           
  7831                           ;display.c: 73:     cmd(((2UL<<30)|(((90)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  7832  003F20  0E00               	movlw	0
  7833  003F22  6E11               	movwf	cmd@command,c
  7834  003F24  0ED0               	movlw	208
  7835  003F26  6E12               	movwf	cmd@command+1,c
  7836  003F28  0E42               	movlw	66
  7837  003F2A  6E13               	movwf	cmd@command+2,c
  7838  003F2C  0E8B               	movlw	139
  7839  003F2E  6E14               	movwf	cmd@command+3,c
  7840  003F30  ECE1  F032         	call	_cmd	;wreg free
  7841                           
  7842                           ;display.c: 74:     cmd(((2UL<<30)|(((80)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  7843  003F34  0E00               	movlw	0
  7844  003F36  6E11               	movwf	cmd@command,c
  7845  003F38  0ED0               	movlw	208
  7846  003F3A  6E12               	movwf	cmd@command+1,c
  7847  003F3C  0E02               	movlw	2
  7848  003F3E  6E13               	movwf	cmd@command+2,c
  7849  003F40  0E8A               	movlw	138
  7850  003F42  6E14               	movwf	cmd@command+3,c
  7851  003F44  ECE1  F032         	call	_cmd	;wreg free
  7852                           
  7853                           ;display.c: 75:     cmd(((33UL<<24)));
  7854  003F48  0E00               	movlw	0
  7855  003F4A  6E11               	movwf	cmd@command,c
  7856  003F4C  0E00               	movlw	0
  7857  003F4E  6E12               	movwf	cmd@command+1,c
  7858  003F50  0E00               	movlw	0
  7859  003F52  6E13               	movwf	cmd@command+2,c
  7860  003F54  0E21               	movlw	33
  7861  003F56  6E14               	movwf	cmd@command+3,c
  7862  003F58  ECE1  F032         	call	_cmd	;wreg free
  7863                           
  7864                           ;display.c: 78:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  7865  003F5C  0E04               	movlw	4
  7866  003F5E  6E11               	movwf	cmd@command,c
  7867  003F60  0E00               	movlw	0
  7868  003F62  6E12               	movwf	cmd@command+1,c
  7869  003F64  0E00               	movlw	0
  7870  003F66  6E13               	movwf	cmd@command+2,c
  7871  003F68  0E1F               	movlw	31
  7872  003F6A  6E14               	movwf	cmd@command+3,c
  7873  003F6C  ECE1  F032         	call	_cmd	;wreg free
  7874                           
  7875                           ;display.c: 79:     cmd(((2UL<<30)|(((123)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  7876  003F70  0E00               	movlw	0
  7877  003F72  6E11               	movwf	cmd@command,c
  7878  003F74  0ED0               	movlw	208
  7879  003F76  6E12               	movwf	cmd@command+1,c
  7880  003F78  0E62               	movlw	98
  7881  003F7A  6E13               	movwf	cmd@command+2,c
  7882  003F7C  0E8F               	movlw	143
  7883  003F7E  6E14               	movwf	cmd@command+3,c
  7884  003F80  ECE1  F032         	call	_cmd	;wreg free
  7885                           
  7886                           ;display.c: 80:     cmd(((2UL<<30)|(((98)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  7887  003F84  0E00               	movlw	0
  7888  003F86  6E11               	movwf	cmd@command,c
  7889  003F88  0ED0               	movlw	208
  7890  003F8A  6E12               	movwf	cmd@command+1,c
  7891  003F8C  0E42               	movlw	66
  7892  003F8E  6E13               	movwf	cmd@command+2,c
  7893  003F90  0E8C               	movlw	140
  7894  003F92  6E14               	movwf	cmd@command+3,c
  7895  003F94  ECE1  F032         	call	_cmd	;wreg free
  7896                           
  7897                           ;display.c: 81:     cmd(((2UL<<30)|(((98)&511UL)<<21)|(((110)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  7898  003F98  0E00               	movlw	0
  7899  003F9A  6E11               	movwf	cmd@command,c
  7900  003F9C  0EE0               	movlw	224
  7901  003F9E  6E12               	movwf	cmd@command+1,c
  7902  003FA0  0E46               	movlw	70
  7903  003FA2  6E13               	movwf	cmd@command+2,c
  7904  003FA4  0E8C               	movlw	140
  7905  003FA6  6E14               	movwf	cmd@command+3,c
  7906  003FA8  ECE1  F032         	call	_cmd	;wreg free
  7907                           
  7908                           ;display.c: 82:     cmd(((2UL<<30)|(((180)&511UL)<<21)|(((110)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  7909  003FAC  0E00               	movlw	0
  7910  003FAE  6E11               	movwf	cmd@command,c
  7911  003FB0  0EE0               	movlw	224
  7912  003FB2  6E12               	movwf	cmd@command+1,c
  7913  003FB4  0E86               	movlw	134
  7914  003FB6  6E13               	movwf	cmd@command+2,c
  7915  003FB8  0E96               	movlw	150
  7916  003FBA  6E14               	movwf	cmd@command+3,c
  7917  003FBC  ECE1  F032         	call	_cmd	;wreg free
  7918                           
  7919                           ;display.c: 83:     cmd(((2UL<<30)|(((180)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  7920  003FC0  0E00               	movlw	0
  7921  003FC2  6E11               	movwf	cmd@command,c
  7922  003FC4  0ED0               	movlw	208
  7923  003FC6  6E12               	movwf	cmd@command+1,c
  7924  003FC8  0E82               	movlw	130
  7925  003FCA  6E13               	movwf	cmd@command+2,c
  7926  003FCC  0E96               	movlw	150
  7927  003FCE  6E14               	movwf	cmd@command+3,c
  7928  003FD0  ECE1  F032         	call	_cmd	;wreg free
  7929                           
  7930                           ;display.c: 84:     cmd(((2UL<<30)|(((155)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  7931  003FD4  0E00               	movlw	0
  7932  003FD6  6E11               	movwf	cmd@command,c
  7933  003FD8  0ED0               	movlw	208
  7934  003FDA  6E12               	movwf	cmd@command+1,c
  7935  003FDC  0E62               	movlw	98
  7936  003FDE  6E13               	movwf	cmd@command+2,c
  7937  003FE0  0E93               	movlw	147
  7938  003FE2  6E14               	movwf	cmd@command+3,c
  7939  003FE4  ECE1  F032         	call	_cmd	;wreg free
  7940                           
  7941                           ;display.c: 85:     cmd(((33UL<<24)));
  7942  003FE8  0E00               	movlw	0
  7943  003FEA  6E11               	movwf	cmd@command,c
  7944  003FEC  0E00               	movlw	0
  7945  003FEE  6E12               	movwf	cmd@command+1,c
  7946  003FF0  0E00               	movlw	0
  7947  003FF2  6E13               	movwf	cmd@command+2,c
  7948  003FF4  0E21               	movlw	33
  7949  003FF6  6E14               	movwf	cmd@command+3,c
  7950  003FF8  ECE1  F032         	call	_cmd	;wreg free
  7951                           
  7952                           ;display.c: 88:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  7953  003FFC  0E04               	movlw	4
  7954  003FFE  6E11               	movwf	cmd@command,c
  7955  004000  0E00               	movlw	0
  7956  004002  6E12               	movwf	cmd@command+1,c
  7957  004004  0E00               	movlw	0
  7958  004006  6E13               	movwf	cmd@command+2,c
  7959  004008  0E1F               	movlw	31
  7960  00400A  6E14               	movwf	cmd@command+3,c
  7961  00400C  ECE1  F032         	call	_cmd	;wreg free
  7962                           
  7963                           ;display.c: 89:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  7964  004010  0E0A               	movlw	10
  7965  004012  6E11               	movwf	cmd@command,c
  7966  004014  0E00               	movlw	0
  7967  004016  6E12               	movwf	cmd@command+1,c
  7968  004018  0E00               	movlw	0
  7969  00401A  6E13               	movwf	cmd@command+2,c
  7970  00401C  0E0E               	movlw	14
  7971  00401E  6E14               	movwf	cmd@command+3,c
  7972  004020  ECE1  F032         	call	_cmd	;wreg free
  7973                           
  7974                           ;display.c: 90:     cmd(((2UL<<30)|(((20)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  7975  004024  0E00               	movlw	0
  7976  004026  6E11               	movwf	cmd@command,c
  7977  004028  0ED0               	movlw	208
  7978  00402A  6E12               	movwf	cmd@command+1,c
  7979  00402C  0E87               	movlw	135
  7980  00402E  6E13               	movwf	cmd@command+2,c
  7981  004030  0E82               	movlw	130
  7982  004032  6E14               	movwf	cmd@command+3,c
  7983  004034  ECE1  F032         	call	_cmd	;wreg free
  7984                           
  7985                           ;display.c: 91:     cmd(((2UL<<30)|(((5)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  7986  004038  0E00               	movlw	0
  7987  00403A  6E11               	movwf	cmd@command,c
  7988  00403C  0ED0               	movlw	208
  7989  00403E  6E12               	movwf	cmd@command+1,c
  7990  004040  0EA7               	movlw	167
  7991  004042  6E13               	movwf	cmd@command+2,c
  7992  004044  0E80               	movlw	128
  7993  004046  6E14               	movwf	cmd@command+3,c
  7994  004048  ECE1  F032         	call	_cmd	;wreg free
  7995                           
  7996                           ;display.c: 92:     cmd(((2UL<<30)|(((5)&511UL)<<21)|(((180)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  7997  00404C  0E00               	movlw	0
  7998  00404E  6E11               	movwf	cmd@command,c
  7999  004050  0E40               	movlw	64
  8000  004052  6E12               	movwf	cmd@command+1,c
  8001  004054  0EAB               	movlw	171
  8002  004056  6E13               	movwf	cmd@command+2,c
  8003  004058  0E80               	movlw	128
  8004  00405A  6E14               	movwf	cmd@command+3,c
  8005  00405C  ECE1  F032         	call	_cmd	;wreg free
  8006                           
  8007                           ;display.c: 93:     cmd(((2UL<<30)|(((90)&511UL)<<21)|(((180)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  8008  004060  0E00               	movlw	0
  8009  004062  6E11               	movwf	cmd@command,c
  8010  004064  0E40               	movlw	64
  8011  004066  6E12               	movwf	cmd@command+1,c
  8012  004068  0E4B               	movlw	75
  8013  00406A  6E13               	movwf	cmd@command+2,c
  8014  00406C  0E8B               	movlw	139
  8015  00406E  6E14               	movwf	cmd@command+3,c
  8016  004070  ECE1  F032         	call	_cmd	;wreg free
  8017                           
  8018                           ;display.c: 94:     cmd(((2UL<<30)|(((90)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  8019  004074  0E00               	movlw	0
  8020  004076  6E11               	movwf	cmd@command,c
  8021  004078  0ED0               	movlw	208
  8022  00407A  6E12               	movwf	cmd@command+1,c
  8023  00407C  0E47               	movlw	71
  8024  00407E  6E13               	movwf	cmd@command+2,c
  8025  004080  0E8B               	movlw	139
  8026  004082  6E14               	movwf	cmd@command+3,c
  8027  004084  ECE1  F032         	call	_cmd	;wreg free
  8028                           
  8029                           ;display.c: 95:     cmd(((2UL<<30)|(((80)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  8030  004088  0E00               	movlw	0
  8031  00408A  6E11               	movwf	cmd@command,c
  8032  00408C  0ED0               	movlw	208
  8033  00408E  6E12               	movwf	cmd@command+1,c
  8034  004090  0E07               	movlw	7
  8035  004092  6E13               	movwf	cmd@command+2,c
  8036  004094  0E8A               	movlw	138
  8037  004096  6E14               	movwf	cmd@command+3,c
  8038  004098  ECE1  F032         	call	_cmd	;wreg free
  8039                           
  8040                           ;display.c: 96:     cmd(((33UL<<24)));
  8041  00409C  0E00               	movlw	0
  8042  00409E  6E11               	movwf	cmd@command,c
  8043  0040A0  0E00               	movlw	0
  8044  0040A2  6E12               	movwf	cmd@command+1,c
  8045  0040A4  0E00               	movlw	0
  8046  0040A6  6E13               	movwf	cmd@command+2,c
  8047  0040A8  0E21               	movlw	33
  8048  0040AA  6E14               	movwf	cmd@command+3,c
  8049  0040AC  ECE1  F032         	call	_cmd	;wreg free
  8050                           
  8051                           ;display.c: 99:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  8052  0040B0  0E04               	movlw	4
  8053  0040B2  6E11               	movwf	cmd@command,c
  8054  0040B4  0E00               	movlw	0
  8055  0040B6  6E12               	movwf	cmd@command+1,c
  8056  0040B8  0E00               	movlw	0
  8057  0040BA  6E13               	movwf	cmd@command+2,c
  8058  0040BC  0E1F               	movlw	31
  8059  0040BE  6E14               	movwf	cmd@command+3,c
  8060  0040C0  ECE1  F032         	call	_cmd	;wreg free
  8061                           
  8062                           ;display.c: 100:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  8063  0040C4  0E0A               	movlw	10
  8064  0040C6  6E11               	movwf	cmd@command,c
  8065  0040C8  0E00               	movlw	0
  8066  0040CA  6E12               	movwf	cmd@command+1,c
  8067  0040CC  0E00               	movlw	0
  8068  0040CE  6E13               	movwf	cmd@command+2,c
  8069  0040D0  0E0E               	movlw	14
  8070  0040D2  6E14               	movwf	cmd@command+3,c
  8071  0040D4  ECE1  F032         	call	_cmd	;wreg free
  8072                           
  8073                           ;display.c: 101:     cmd(((2UL<<30)|(((120)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8074  0040D8  0E00               	movlw	0
  8075  0040DA  6E11               	movwf	cmd@command,c
  8076  0040DC  0ED0               	movlw	208
  8077  0040DE  6E12               	movwf	cmd@command+1,c
  8078  0040E0  0E07               	movlw	7
  8079  0040E2  6E13               	movwf	cmd@command+2,c
  8080  0040E4  0E8F               	movlw	143
  8081  0040E6  6E14               	movwf	cmd@command+3,c
  8082  0040E8  ECE1  F032         	call	_cmd	;wreg free
  8083                           
  8084                           ;display.c: 102:     cmd(((2UL<<30)|(((98)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  8085  0040EC  0E00               	movlw	0
  8086  0040EE  6E11               	movwf	cmd@command,c
  8087  0040F0  0ED0               	movlw	208
  8088  0040F2  6E12               	movwf	cmd@command+1,c
  8089  0040F4  0E47               	movlw	71
  8090  0040F6  6E13               	movwf	cmd@command+2,c
  8091  0040F8  0E8C               	movlw	140
  8092  0040FA  6E14               	movwf	cmd@command+3,c
  8093  0040FC  ECE1  F032         	call	_cmd	;wreg free
  8094                           
  8095                           ;display.c: 103:     cmd(((2UL<<30)|(((98)&511UL)<<21)|(((180)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  8096  004100  0E00               	movlw	0
  8097  004102  6E11               	movwf	cmd@command,c
  8098  004104  0E40               	movlw	64
  8099  004106  6E12               	movwf	cmd@command+1,c
  8100  004108  0E4B               	movlw	75
  8101  00410A  6E13               	movwf	cmd@command+2,c
  8102  00410C  0E8C               	movlw	140
  8103  00410E  6E14               	movwf	cmd@command+3,c
  8104  004110  ECE1  F032         	call	_cmd	;wreg free
  8105                           
  8106                           ;display.c: 104:     cmd(((2UL<<30)|(((180)&511UL)<<21)|(((180)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8107  004114  0E00               	movlw	0
  8108  004116  6E11               	movwf	cmd@command,c
  8109  004118  0E40               	movlw	64
  8110  00411A  6E12               	movwf	cmd@command+1,c
  8111  00411C  0E8B               	movlw	139
  8112  00411E  6E13               	movwf	cmd@command+2,c
  8113  004120  0E96               	movlw	150
  8114  004122  6E14               	movwf	cmd@command+3,c
  8115  004124  ECE1  F032         	call	_cmd	;wreg free
  8116                           
  8117                           ;display.c: 105:     cmd(((2UL<<30)|(((180)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8118  004128  0E00               	movlw	0
  8119  00412A  6E11               	movwf	cmd@command,c
  8120  00412C  0ED0               	movlw	208
  8121  00412E  6E12               	movwf	cmd@command+1,c
  8122  004130  0E87               	movlw	135
  8123  004132  6E13               	movwf	cmd@command+2,c
  8124  004134  0E96               	movlw	150
  8125  004136  6E14               	movwf	cmd@command+3,c
  8126  004138  ECE1  F032         	call	_cmd	;wreg free
  8127                           
  8128                           ;display.c: 106:     cmd(((2UL<<30)|(((158)&511UL)<<21)|(((125)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8129  00413C  0E00               	movlw	0
  8130  00413E  6E11               	movwf	cmd@command,c
  8131  004140  0ED0               	movlw	208
  8132  004142  6E12               	movwf	cmd@command+1,c
  8133  004144  0EC7               	movlw	199
  8134  004146  6E13               	movwf	cmd@command+2,c
  8135  004148  0E93               	movlw	147
  8136  00414A  6E14               	movwf	cmd@command+3,c
  8137  00414C  ECE1  F032         	call	_cmd	;wreg free
  8138                           
  8139                           ;display.c: 107:     cmd(((33UL<<24)));
  8140  004150  0E00               	movlw	0
  8141  004152  6E11               	movwf	cmd@command,c
  8142  004154  0E00               	movlw	0
  8143  004156  6E12               	movwf	cmd@command+1,c
  8144  004158  0E00               	movlw	0
  8145  00415A  6E13               	movwf	cmd@command+2,c
  8146  00415C  0E21               	movlw	33
  8147  00415E  6E14               	movwf	cmd@command+3,c
  8148  004160  ECE1  F032         	call	_cmd	;wreg free
  8149                           
  8150                           ;display.c: 110:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  8151  004164  0E04               	movlw	4
  8152  004166  6E11               	movwf	cmd@command,c
  8153  004168  0E00               	movlw	0
  8154  00416A  6E12               	movwf	cmd@command+1,c
  8155  00416C  0E00               	movlw	0
  8156  00416E  6E13               	movwf	cmd@command+2,c
  8157  004170  0E1F               	movlw	31
  8158  004172  6E14               	movwf	cmd@command+3,c
  8159  004174  ECE1  F032         	call	_cmd	;wreg free
  8160                           
  8161                           ;display.c: 111:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  8162  004178  0E0A               	movlw	10
  8163  00417A  6E11               	movwf	cmd@command,c
  8164  00417C  0E00               	movlw	0
  8165  00417E  6E12               	movwf	cmd@command+1,c
  8166  004180  0E00               	movlw	0
  8167  004182  6E13               	movwf	cmd@command+2,c
  8168  004184  0E0E               	movlw	14
  8169  004186  6E14               	movwf	cmd@command+3,c
  8170  004188  ECE1  F032         	call	_cmd	;wreg free
  8171                           
  8172                           ;display.c: 112:     cmd(((2UL<<30)|(((360)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  8173  00418C  0E00               	movlw	0
  8174  00418E  6E11               	movwf	cmd@command,c
  8175  004190  0ED0               	movlw	208
  8176  004192  6E12               	movwf	cmd@command+1,c
  8177  004194  0E02               	movlw	2
  8178  004196  6E13               	movwf	cmd@command+2,c
  8179  004198  0EAD               	movlw	173
  8180  00419A  6E14               	movwf	cmd@command+3,c
  8181  00419C  ECE1  F032         	call	_cmd	;wreg free
  8182                           
  8183                           ;display.c: 113:     cmd(((2UL<<30)|(((300)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  8184  0041A0  0E00               	movlw	0
  8185  0041A2  6E11               	movwf	cmd@command,c
  8186  0041A4  0ED0               	movlw	208
  8187  0041A6  6E12               	movwf	cmd@command+1,c
  8188  0041A8  0E82               	movlw	130
  8189  0041AA  6E13               	movwf	cmd@command+2,c
  8190  0041AC  0EA5               	movlw	165
  8191  0041AE  6E14               	movwf	cmd@command+3,c
  8192  0041B0  ECE1  F032         	call	_cmd	;wreg free
  8193                           
  8194                           ;display.c: 114:     cmd(((2UL<<30)|(((300)&511UL)<<21)|(((105)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8195  0041B4  0E00               	movlw	0
  8196  0041B6  6E11               	movwf	cmd@command,c
  8197  0041B8  0E90               	movlw	144
  8198  0041BA  6E12               	movwf	cmd@command+1,c
  8199  0041BC  0E86               	movlw	134
  8200  0041BE  6E13               	movwf	cmd@command+2,c
  8201  0041C0  0EA5               	movlw	165
  8202  0041C2  6E14               	movwf	cmd@command+3,c
  8203  0041C4  ECE1  F032         	call	_cmd	;wreg free
  8204                           
  8205                           ;display.c: 115:     cmd(((2UL<<30)|(((470)&511UL)<<21)|(((105)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8206  0041C8  0E00               	movlw	0
  8207  0041CA  6E11               	movwf	cmd@command,c
  8208  0041CC  0E90               	movlw	144
  8209  0041CE  6E12               	movwf	cmd@command+1,c
  8210  0041D0  0EC6               	movlw	198
  8211  0041D2  6E13               	movwf	cmd@command+2,c
  8212  0041D4  0EBA               	movlw	186
  8213  0041D6  6E14               	movwf	cmd@command+3,c
  8214  0041D8  ECE1  F032         	call	_cmd	;wreg free
  8215                           
  8216                           ;display.c: 116:     cmd(((2UL<<30)|(((470)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  8217  0041DC  0E00               	movlw	0
  8218  0041DE  6E11               	movwf	cmd@command,c
  8219  0041E0  0ED0               	movlw	208
  8220  0041E2  6E12               	movwf	cmd@command+1,c
  8221  0041E4  0EC2               	movlw	194
  8222  0041E6  6E13               	movwf	cmd@command+2,c
  8223  0041E8  0EBA               	movlw	186
  8224  0041EA  6E14               	movwf	cmd@command+3,c
  8225  0041EC  ECE1  F032         	call	_cmd	;wreg free
  8226                           
  8227                           ;display.c: 117:     cmd(((2UL<<30)|(((410)&511UL)<<21)|(((45)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  8228  0041F0  0E00               	movlw	0
  8229  0041F2  6E11               	movwf	cmd@command,c
  8230  0041F4  0ED0               	movlw	208
  8231  0041F6  6E12               	movwf	cmd@command+1,c
  8232  0041F8  0E42               	movlw	66
  8233  0041FA  6E13               	movwf	cmd@command+2,c
  8234  0041FC  0EB3               	movlw	179
  8235  0041FE  6E14               	movwf	cmd@command+3,c
  8236  004200  ECE1  F032         	call	_cmd	;wreg free
  8237                           
  8238                           ;display.c: 118:     cmd(((33UL<<24)));
  8239  004204  0E00               	movlw	0
  8240  004206  6E11               	movwf	cmd@command,c
  8241  004208  0E00               	movlw	0
  8242  00420A  6E12               	movwf	cmd@command+1,c
  8243  00420C  0E00               	movlw	0
  8244  00420E  6E13               	movwf	cmd@command+2,c
  8245  004210  0E21               	movlw	33
  8246  004212  6E14               	movwf	cmd@command+3,c
  8247  004214  ECE1  F032         	call	_cmd	;wreg free
  8248                           
  8249                           ;display.c: 121:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  8250  004218  0E04               	movlw	4
  8251  00421A  6E11               	movwf	cmd@command,c
  8252  00421C  0E00               	movlw	0
  8253  00421E  6E12               	movwf	cmd@command+1,c
  8254  004220  0E00               	movlw	0
  8255  004222  6E13               	movwf	cmd@command+2,c
  8256  004224  0E1F               	movlw	31
  8257  004226  6E14               	movwf	cmd@command+3,c
  8258  004228  ECE1  F032         	call	_cmd	;wreg free
  8259                           
  8260                           ;display.c: 122:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  8261  00422C  0E0A               	movlw	10
  8262  00422E  6E11               	movwf	cmd@command,c
  8263  004230  0E00               	movlw	0
  8264  004232  6E12               	movwf	cmd@command+1,c
  8265  004234  0E00               	movlw	0
  8266  004236  6E13               	movwf	cmd@command+2,c
  8267  004238  0E0E               	movlw	14
  8268  00423A  6E14               	movwf	cmd@command+3,c
  8269  00423C  ECE1  F032         	call	_cmd	;wreg free
  8270                           
  8271                           ;display.c: 123:     cmd(((2UL<<30)|(((350)&511UL)<<21)|(((120)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8272  004240  0E00               	movlw	0
  8273  004242  6E11               	movwf	cmd@command,c
  8274  004244  0E80               	movlw	128
  8275  004246  6E12               	movwf	cmd@command+1,c
  8276  004248  0EC7               	movlw	199
  8277  00424A  6E13               	movwf	cmd@command+2,c
  8278  00424C  0EAB               	movlw	171
  8279  00424E  6E14               	movwf	cmd@command+3,c
  8280  004250  ECE1  F032         	call	_cmd	;wreg free
  8281                           
  8282                           ;display.c: 124:     cmd(((2UL<<30)|(((300)&511UL)<<21)|(((120)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8283  004254  0E00               	movlw	0
  8284  004256  6E11               	movwf	cmd@command,c
  8285  004258  0E80               	movlw	128
  8286  00425A  6E12               	movwf	cmd@command+1,c
  8287  00425C  0E87               	movlw	135
  8288  00425E  6E13               	movwf	cmd@command+2,c
  8289  004260  0EA5               	movlw	165
  8290  004262  6E14               	movwf	cmd@command+3,c
  8291  004264  ECE1  F032         	call	_cmd	;wreg free
  8292                           
  8293                           ;display.c: 125:     cmd(((2UL<<30)|(((300)&511UL)<<21)|(((180)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8294  004268  0E00               	movlw	0
  8295  00426A  6E11               	movwf	cmd@command,c
  8296  00426C  0E40               	movlw	64
  8297  00426E  6E12               	movwf	cmd@command+1,c
  8298  004270  0E8B               	movlw	139
  8299  004272  6E13               	movwf	cmd@command+2,c
  8300  004274  0EA5               	movlw	165
  8301  004276  6E14               	movwf	cmd@command+3,c
  8302  004278  ECE1  F032         	call	_cmd	;wreg free
  8303                           
  8304                           ;display.c: 126:     cmd(((2UL<<30)|(((470)&511UL)<<21)|(((180)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8305  00427C  0E00               	movlw	0
  8306  00427E  6E11               	movwf	cmd@command,c
  8307  004280  0E40               	movlw	64
  8308  004282  6E12               	movwf	cmd@command+1,c
  8309  004284  0ECB               	movlw	203
  8310  004286  6E13               	movwf	cmd@command+2,c
  8311  004288  0EBA               	movlw	186
  8312  00428A  6E14               	movwf	cmd@command+3,c
  8313  00428C  ECE1  F032         	call	_cmd	;wreg free
  8314                           
  8315                           ;display.c: 127:     cmd(((2UL<<30)|(((470)&511UL)<<21)|(((120)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8316  004290  0E00               	movlw	0
  8317  004292  6E11               	movwf	cmd@command,c
  8318  004294  0E80               	movlw	128
  8319  004296  6E12               	movwf	cmd@command+1,c
  8320  004298  0EC7               	movlw	199
  8321  00429A  6E13               	movwf	cmd@command+2,c
  8322  00429C  0EBA               	movlw	186
  8323  00429E  6E14               	movwf	cmd@command+3,c
  8324  0042A0  ECE1  F032         	call	_cmd	;wreg free
  8325                           
  8326                           ;display.c: 128:     cmd(((2UL<<30)|(((420)&511UL)<<21)|(((120)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8327  0042A4  0E00               	movlw	0
  8328  0042A6  6E11               	movwf	cmd@command,c
  8329  0042A8  0E80               	movlw	128
  8330  0042AA  6E12               	movwf	cmd@command+1,c
  8331  0042AC  0E87               	movlw	135
  8332  0042AE  6E13               	movwf	cmd@command+2,c
  8333  0042B0  0EB4               	movlw	180
  8334  0042B2  6E14               	movwf	cmd@command+3,c
  8335  0042B4  ECE1  F032         	call	_cmd	;wreg free
  8336                           
  8337                           ;display.c: 129:     cmd(((33UL<<24)));
  8338  0042B8  0E00               	movlw	0
  8339  0042BA  6E11               	movwf	cmd@command,c
  8340  0042BC  0E00               	movlw	0
  8341  0042BE  6E12               	movwf	cmd@command+1,c
  8342  0042C0  0E00               	movlw	0
  8343  0042C2  6E13               	movwf	cmd@command+2,c
  8344  0042C4  0E21               	movlw	33
  8345  0042C6  6E14               	movwf	cmd@command+3,c
  8346  0042C8  ECE1  F032         	call	_cmd	;wreg free
  8347                           
  8348                           ;display.c: 143:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  8349  0042CC  0E04               	movlw	4
  8350  0042CE  6E11               	movwf	cmd@command,c
  8351  0042D0  0E00               	movlw	0
  8352  0042D2  6E12               	movwf	cmd@command+1,c
  8353  0042D4  0E00               	movlw	0
  8354  0042D6  6E13               	movwf	cmd@command+2,c
  8355  0042D8  0E1F               	movlw	31
  8356  0042DA  6E14               	movwf	cmd@command+3,c
  8357  0042DC  ECE1  F032         	call	_cmd	;wreg free
  8358                           
  8359                           ;display.c: 144:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  8360  0042E0  0E0A               	movlw	10
  8361  0042E2  6E11               	movwf	cmd@command,c
  8362  0042E4  0E00               	movlw	0
  8363  0042E6  6E12               	movwf	cmd@command+1,c
  8364  0042E8  0E00               	movlw	0
  8365  0042EA  6E13               	movwf	cmd@command+2,c
  8366  0042EC  0E0E               	movlw	14
  8367  0042EE  6E14               	movwf	cmd@command+3,c
  8368  0042F0  ECE1  F032         	call	_cmd	;wreg free
  8369                           
  8370                           ;display.c: 145:     cmd(((2UL<<30)|(((220)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8371  0042F4  0E00               	movlw	0
  8372  0042F6  6E11               	movwf	cmd@command,c
  8373  0042F8  0EE0               	movlw	224
  8374  0042FA  6E12               	movwf	cmd@command+1,c
  8375  0042FC  0E8B               	movlw	139
  8376  0042FE  6E13               	movwf	cmd@command+2,c
  8377  004300  0E9B               	movlw	155
  8378  004302  6E14               	movwf	cmd@command+3,c
  8379  004304  ECE1  F032         	call	_cmd	;wreg free
  8380                           
  8381                           ;display.c: 146:     cmd(((2UL<<30)|(((190)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8382  004308  0E00               	movlw	0
  8383  00430A  6E11               	movwf	cmd@command,c
  8384  00430C  0EE0               	movlw	224
  8385  00430E  6E12               	movwf	cmd@command+1,c
  8386  004310  0ECB               	movlw	203
  8387  004312  6E13               	movwf	cmd@command+2,c
  8388  004314  0E97               	movlw	151
  8389  004316  6E14               	movwf	cmd@command+3,c
  8390  004318  ECE1  F032         	call	_cmd	;wreg free
  8391                           
  8392                           ;display.c: 147:     cmd(((2UL<<30)|(((190)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8393  00431C  0E00               	movlw	0
  8394  00431E  6E11               	movwf	cmd@command,c
  8395  004320  0E60               	movlw	96
  8396  004322  6E12               	movwf	cmd@command+1,c
  8397  004324  0ECE               	movlw	206
  8398  004326  6E13               	movwf	cmd@command+2,c
  8399  004328  0E97               	movlw	151
  8400  00432A  6E14               	movwf	cmd@command+3,c
  8401  00432C  ECE1  F032         	call	_cmd	;wreg free
  8402                           
  8403                           ;display.c: 148:     cmd(((2UL<<30)|(((345)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8404  004330  0E00               	movlw	0
  8405  004332  6E11               	movwf	cmd@command,c
  8406  004334  0E60               	movlw	96
  8407  004336  6E12               	movwf	cmd@command+1,c
  8408  004338  0E2E               	movlw	46
  8409  00433A  6E13               	movwf	cmd@command+2,c
  8410  00433C  0EAB               	movlw	171
  8411  00433E  6E14               	movwf	cmd@command+3,c
  8412  004340  ECE1  F032         	call	_cmd	;wreg free
  8413                           
  8414                           ;display.c: 149:     cmd(((2UL<<30)|(((345)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8415  004344  0E00               	movlw	0
  8416  004346  6E11               	movwf	cmd@command,c
  8417  004348  0EE0               	movlw	224
  8418  00434A  6E12               	movwf	cmd@command+1,c
  8419  00434C  0E2B               	movlw	43
  8420  00434E  6E13               	movwf	cmd@command+2,c
  8421  004350  0EAB               	movlw	171
  8422  004352  6E14               	movwf	cmd@command+3,c
  8423  004354  ECE1  F032         	call	_cmd	;wreg free
  8424                           
  8425                           ;display.c: 150:     cmd(((2UL<<30)|(((315)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8426  004358  0E00               	movlw	0
  8427  00435A  6E11               	movwf	cmd@command,c
  8428  00435C  0EE0               	movlw	224
  8429  00435E  6E12               	movwf	cmd@command+1,c
  8430  004360  0E6B               	movlw	107
  8431  004362  6E13               	movwf	cmd@command+2,c
  8432  004364  0EA7               	movlw	167
  8433  004366  6E14               	movwf	cmd@command+3,c
  8434  004368  ECE1  F032         	call	_cmd	;wreg free
  8435                           
  8436                           ;display.c: 151:     cmd(((33UL<<24)));
  8437  00436C  0E00               	movlw	0
  8438  00436E  6E11               	movwf	cmd@command,c
  8439  004370  0E00               	movlw	0
  8440  004372  6E12               	movwf	cmd@command+1,c
  8441  004374  0E00               	movlw	0
  8442  004376  6E13               	movwf	cmd@command+2,c
  8443  004378  0E21               	movlw	33
  8444  00437A  6E14               	movwf	cmd@command+3,c
  8445  00437C  ECE1  F032         	call	_cmd	;wreg free
  8446                           
  8447                           ;display.c: 154:     cmd(((31UL<<24)|(((4UL)&15UL)<<0)));
  8448  004380  0E04               	movlw	4
  8449  004382  6E11               	movwf	cmd@command,c
  8450  004384  0E00               	movlw	0
  8451  004386  6E12               	movwf	cmd@command+1,c
  8452  004388  0E00               	movlw	0
  8453  00438A  6E13               	movwf	cmd@command+2,c
  8454  00438C  0E1F               	movlw	31
  8455  00438E  6E14               	movwf	cmd@command+3,c
  8456  004390  ECE1  F032         	call	_cmd	;wreg free
  8457                           
  8458                           ;display.c: 155:     cmd(((14UL<<24)|(((10)&4095UL)<<0)));
  8459  004394  0E0A               	movlw	10
  8460  004396  6E11               	movwf	cmd@command,c
  8461  004398  0E00               	movlw	0
  8462  00439A  6E12               	movwf	cmd@command+1,c
  8463  00439C  0E00               	movlw	0
  8464  00439E  6E13               	movwf	cmd@command+2,c
  8465  0043A0  0E0E               	movlw	14
  8466  0043A2  6E14               	movwf	cmd@command+3,c
  8467  0043A4  ECE1  F032         	call	_cmd	;wreg free
  8468                           
  8469                           ;display.c: 156:     cmd(((2UL<<30)|(((365)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8470  0043A8  0E00               	movlw	0
  8471  0043AA  6E11               	movwf	cmd@command,c
  8472  0043AC  0EE0               	movlw	224
  8473  0043AE  6E12               	movwf	cmd@command+1,c
  8474  0043B0  0EAB               	movlw	171
  8475  0043B2  6E13               	movwf	cmd@command+2,c
  8476  0043B4  0EAD               	movlw	173
  8477  0043B6  6E14               	movwf	cmd@command+3,c
  8478  0043B8  ECE1  F032         	call	_cmd	;wreg free
  8479                           
  8480                           ;display.c: 157:     cmd(((2UL<<30)|(((355)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8481  0043BC  0E00               	movlw	0
  8482  0043BE  6E11               	movwf	cmd@command,c
  8483  0043C0  0EE0               	movlw	224
  8484  0043C2  6E12               	movwf	cmd@command+1,c
  8485  0043C4  0E6B               	movlw	107
  8486  0043C6  6E13               	movwf	cmd@command+2,c
  8487  0043C8  0EAC               	movlw	172
  8488  0043CA  6E14               	movwf	cmd@command+3,c
  8489  0043CC  ECE1  F032         	call	_cmd	;wreg free
  8490                           
  8491                           ;display.c: 158:     cmd(((2UL<<30)|(((355)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8492  0043D0  0E00               	movlw	0
  8493  0043D2  6E11               	movwf	cmd@command,c
  8494  0043D4  0E60               	movlw	96
  8495  0043D6  6E12               	movwf	cmd@command+1,c
  8496  0043D8  0E6E               	movlw	110
  8497  0043DA  6E13               	movwf	cmd@command+2,c
  8498  0043DC  0EAC               	movlw	172
  8499  0043DE  6E14               	movwf	cmd@command+3,c
  8500  0043E0  ECE1  F032         	call	_cmd	;wreg free
  8501                           
  8502                           ;display.c: 159:     cmd(((2UL<<30)|(((465)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8503  0043E4  0E00               	movlw	0
  8504  0043E6  6E11               	movwf	cmd@command,c
  8505  0043E8  0E60               	movlw	96
  8506  0043EA  6E12               	movwf	cmd@command+1,c
  8507  0043EC  0E2E               	movlw	46
  8508  0043EE  6E13               	movwf	cmd@command+2,c
  8509  0043F0  0EBA               	movlw	186
  8510  0043F2  6E14               	movwf	cmd@command+3,c
  8511  0043F4  ECE1  F032         	call	_cmd	;wreg free
  8512                           
  8513                           ;display.c: 160:     cmd(((2UL<<30)|(((465)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8514  0043F8  0E00               	movlw	0
  8515  0043FA  6E11               	movwf	cmd@command,c
  8516  0043FC  0EE0               	movlw	224
  8517  0043FE  6E12               	movwf	cmd@command+1,c
  8518  004400  0E2B               	movlw	43
  8519  004402  6E13               	movwf	cmd@command+2,c
  8520  004404  0EBA               	movlw	186
  8521  004406  6E14               	movwf	cmd@command+3,c
  8522  004408  ECE1  F032         	call	_cmd	;wreg free
  8523                           
  8524                           ;display.c: 161:     cmd(((2UL<<30)|(((455)&511UL)<<21)|(((190)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  8525  00440C  0E00               	movlw	0
  8526  00440E  6E11               	movwf	cmd@command,c
  8527  004410  0EE0               	movlw	224
  8528  004412  6E12               	movwf	cmd@command+1,c
  8529  004414  0EEB               	movlw	235
  8530  004416  6E13               	movwf	cmd@command+2,c
  8531  004418  0EB8               	movlw	184
  8532  00441A  6E14               	movwf	cmd@command+3,c
  8533  00441C  ECE1  F032         	call	_cmd	;wreg free
  8534                           
  8535                           ;display.c: 162:     cmd(((33UL<<24)));
  8536  004420  0E00               	movlw	0
  8537  004422  6E11               	movwf	cmd@command,c
  8538  004424  0E00               	movlw	0
  8539  004426  6E12               	movwf	cmd@command+1,c
  8540  004428  0E00               	movlw	0
  8541  00442A  6E13               	movwf	cmd@command+2,c
  8542  00442C  0E21               	movlw	33
  8543  00442E  6E14               	movwf	cmd@command+3,c
  8544  004430  ECE1  F032         	call	_cmd	;wreg free
  8545  004434  0012               	return		;funcret
  8546  004436                     __end_of_display_grids:
  8547                           	opt stack 0
  8548                           tblptru	equ	0xFF8
  8549                           tblptrh	equ	0xFF7
  8550                           tblptrl	equ	0xFF6
  8551                           tablat	equ	0xFF5
  8552                           prodh	equ	0xFF4
  8553                           prodl	equ	0xFF3
  8554                           intcon	equ	0xFF2
  8555                           postinc0	equ	0xFEE
  8556                           wreg	equ	0xFE8
  8557                           postdec1	equ	0xFE5
  8558                           plusw1	equ	0xFE3
  8559                           fsr1l	equ	0xFE1
  8560                           plusw2	equ	0xFDB
  8561                           status	equ	0xFD8
  8562                           
  8563 ;; *************** function _display_gear *****************
  8564 ;; Defined at:
  8565 ;;		line 393 in file "display.c"
  8566 ;; Parameters:    Size  Location     Type
  8567 ;;  gear            2   24[COMRAM] int 
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;		None
  8570 ;; Return value:  Size  Location     Type
  8571 ;;                  1    wreg      void 
  8572 ;; Registers used:
  8573 ;;		wreg, status,2, status,0, cstack
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8581 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8582 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8583 ;;Total ram usage:        4 bytes
  8584 ;; Hardware stack levels used:    1
  8585 ;; Hardware stack levels required when called:    7
  8586 ;; This function calls:
  8587 ;;		_cmd
  8588 ;; This function is called by:
  8589 ;;		_display
  8590 ;;		_main
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           	psect	text14
  8595  004436                     __ptext14:
  8596                           	opt stack 0
  8597  004436                     _display_gear:
  8598                           	opt stack 23
  8599                           
  8600                           ;display.c: 394:     cmd(((14UL<<24)|(((96)&4095UL)<<0)));
  8601                           
  8602                           ;incstack = 0
  8603  004436  0E60               	movlw	96
  8604  004438  6E11               	movwf	cmd@command,c
  8605  00443A  0E00               	movlw	0
  8606  00443C  6E12               	movwf	cmd@command+1,c
  8607  00443E  0E00               	movlw	0
  8608  004440  6E13               	movwf	cmd@command+2,c
  8609  004442  0E0E               	movlw	14
  8610  004444  6E14               	movwf	cmd@command+3,c
  8611  004446  ECE1  F032         	call	_cmd	;wreg free
  8612                           
  8613                           ;display.c: 395:     cmd(((4UL<<24)|(((202)&255UL)<<16)|(((125)&255UL)<<8)|(((0)&255UL)<
      +                          <0)));
  8614  00444A  0E00               	movlw	0
  8615  00444C  6E11               	movwf	cmd@command,c
  8616  00444E  0E7D               	movlw	125
  8617  004450  6E12               	movwf	cmd@command+1,c
  8618  004452  0ECA               	movlw	202
  8619  004454  6E13               	movwf	cmd@command+2,c
  8620  004456  0E04               	movlw	4
  8621  004458  6E14               	movwf	cmd@command+3,c
  8622  00445A  ECE1  F032         	call	_cmd	;wreg free
  8623                           
  8624                           ;display.c: 396:     cmd(((31UL<<24)|(((3UL)&15UL)<<0)));
  8625  00445E  0E03               	movlw	3
  8626  004460  6E11               	movwf	cmd@command,c
  8627  004462  0E00               	movlw	0
  8628  004464  6E12               	movwf	cmd@command+1,c
  8629  004466  0E00               	movlw	0
  8630  004468  6E13               	movwf	cmd@command+2,c
  8631  00446A  0E1F               	movlw	31
  8632  00446C  6E14               	movwf	cmd@command+3,c
  8633  00446E  ECE1  F032         	call	_cmd	;wreg free
  8634                           
  8635                           ;display.c: 397:     switch (gear) {
  8636  004472  D237               	goto	l739
  8637  004474                     
  8638                           ;display.c: 399:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45)&511UL)<<12)|(((0)
      +                          &31UL)<<7)|(((0)&127UL)<<0)));
  8639  004474  0E00               	movlw	0
  8640  004476  6E11               	movwf	cmd@command,c
  8641  004478  0ED0               	movlw	208
  8642  00447A  6E12               	movwf	cmd@command+1,c
  8643  00447C  0E02               	movlw	2
  8644  00447E  6E13               	movwf	cmd@command+2,c
  8645  004480  0E99               	movlw	153
  8646  004482  6E14               	movwf	cmd@command+3,c
  8647  004484  ECE1  F032         	call	_cmd	;wreg free
  8648                           
  8649                           ;display.c: 400:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +120)&511UL)<<12)|
      +                          (((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8650  004488  0E00               	movlw	0
  8651  00448A  6E11               	movwf	cmd@command,c
  8652  00448C  0E50               	movlw	80
  8653  00448E  6E12               	movwf	cmd@command+1,c
  8654  004490  0E0A               	movlw	10
  8655  004492  6E13               	movwf	cmd@command+2,c
  8656  004494  0E99               	movlw	153
  8657  004496  6E14               	movwf	cmd@command+3,c
  8658  004498  ECE1  F032         	call	_cmd	;wreg free
  8659                           
  8660                           ;display.c: 401:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45)&511UL)<<12)|(((0)
      +                          &31UL)<<7)|(((0)&127UL)<<0)));
  8661  00449C  0E00               	movlw	0
  8662  00449E  6E11               	movwf	cmd@command,c
  8663  0044A0  0ED0               	movlw	208
  8664  0044A2  6E12               	movwf	cmd@command+1,c
  8665  0044A4  0E02               	movlw	2
  8666  0044A6  6E13               	movwf	cmd@command+2,c
  8667  0044A8  0E99               	movlw	153
  8668  0044AA  6E14               	movwf	cmd@command+3,c
  8669  0044AC  ECE1  F032         	call	_cmd	;wreg free
  8670                           
  8671                           ;display.c: 402:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8672  0044B0  0E00               	movlw	0
  8673  0044B2  6E11               	movwf	cmd@command,c
  8674  0044B4  0E50               	movlw	80
  8675  0044B6  6E12               	movwf	cmd@command+1,c
  8676  0044B8  0E0A               	movlw	10
  8677  0044BA  6E13               	movwf	cmd@command+2,c
  8678  0044BC  0EA3               	movlw	163
  8679  0044BE  6E14               	movwf	cmd@command+3,c
  8680  0044C0  ECE1  F032         	call	_cmd	;wreg free
  8681                           
  8682                           ;display.c: 403:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8683  0044C4  0E00               	movlw	0
  8684  0044C6  6E11               	movwf	cmd@command,c
  8685  0044C8  0E50               	movlw	80
  8686  0044CA  6E12               	movwf	cmd@command+1,c
  8687  0044CC  0E0A               	movlw	10
  8688  0044CE  6E13               	movwf	cmd@command+2,c
  8689  0044D0  0EA3               	movlw	163
  8690  0044D2  6E14               	movwf	cmd@command+3,c
  8691  0044D4  ECE1  F032         	call	_cmd	;wreg free
  8692                           
  8693                           ;display.c: 404:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8694  0044D8  0E00               	movlw	0
  8695  0044DA  6E11               	movwf	cmd@command,c
  8696  0044DC  0ED0               	movlw	208
  8697  0044DE  6E12               	movwf	cmd@command+1,c
  8698  0044E0  0E02               	movlw	2
  8699  0044E2  6E13               	movwf	cmd@command+2,c
  8700  0044E4  0EA3               	movlw	163
  8701  0044E6  6E14               	movwf	cmd@command+3,c
  8702  0044E8  ECE1  F032         	call	_cmd	;wreg free
  8703                           
  8704                           ;display.c: 405:             break;
  8705  0044EC  0012               	return	
  8706  0044EE                     
  8707                           ;display.c: 407:             cmd(((2UL<<30)|(((200 +40)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8708  0044EE  0E00               	movlw	0
  8709  0044F0  6E11               	movwf	cmd@command,c
  8710  0044F2  0ED0               	movlw	208
  8711  0044F4  6E12               	movwf	cmd@command+1,c
  8712  0044F6  0E02               	movlw	2
  8713  0044F8  6E13               	movwf	cmd@command+2,c
  8714  0044FA  0E9E               	movlw	158
  8715  0044FC  6E14               	movwf	cmd@command+3,c
  8716  0044FE  ECE1  F032         	call	_cmd	;wreg free
  8717                           
  8718                           ;display.c: 408:             cmd(((2UL<<30)|(((200 +40)&511UL)<<21)|(((45 +119)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8719  004502  0E00               	movlw	0
  8720  004504  6E11               	movwf	cmd@command,c
  8721  004506  0E40               	movlw	64
  8722  004508  6E12               	movwf	cmd@command+1,c
  8723  00450A  0E0A               	movlw	10
  8724  00450C  6E13               	movwf	cmd@command+2,c
  8725  00450E  0E9E               	movlw	158
  8726  004510  6E14               	movwf	cmd@command+3,c
  8727  004512  ECE1  F032         	call	_cmd	;wreg free
  8728                           
  8729                           ;display.c: 409:             cmd(((2UL<<30)|(((200 +39)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8730  004516  0E00               	movlw	0
  8731  004518  6E11               	movwf	cmd@command,c
  8732  00451A  0ED0               	movlw	208
  8733  00451C  6E12               	movwf	cmd@command+1,c
  8734  00451E  0EE2               	movlw	226
  8735  004520  6E13               	movwf	cmd@command+2,c
  8736  004522  0E9D               	movlw	157
  8737  004524  6E14               	movwf	cmd@command+3,c
  8738  004526  ECE1  F032         	call	_cmd	;wreg free
  8739                           
  8740                           ;display.c: 410:             cmd(((2UL<<30)|(((200 +20)&511UL)<<21)|(((45 +10)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8741  00452A  0E00               	movlw	0
  8742  00452C  6E11               	movwf	cmd@command,c
  8743  00452E  0E70               	movlw	112
  8744  004530  6E12               	movwf	cmd@command+1,c
  8745  004532  0E83               	movlw	131
  8746  004534  6E13               	movwf	cmd@command+2,c
  8747  004536  0E9B               	movlw	155
  8748  004538  6E14               	movwf	cmd@command+3,c
  8749  00453A  ECE1  F032         	call	_cmd	;wreg free
  8750                           
  8751                           ;display.c: 411:             cmd(((2UL<<30)|(((200 +20)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8752  00453E  0E00               	movlw	0
  8753  004540  6E11               	movwf	cmd@command,c
  8754  004542  0E50               	movlw	80
  8755  004544  6E12               	movwf	cmd@command+1,c
  8756  004546  0E8A               	movlw	138
  8757  004548  6E13               	movwf	cmd@command+2,c
  8758  00454A  0E9B               	movlw	155
  8759  00454C  6E14               	movwf	cmd@command+3,c
  8760  00454E  ECE1  F032         	call	_cmd	;wreg free
  8761                           
  8762                           ;display.c: 412:             cmd(((2UL<<30)|(((200 +60)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8763  004552  0E00               	movlw	0
  8764  004554  6E11               	movwf	cmd@command,c
  8765  004556  0E50               	movlw	80
  8766  004558  6E12               	movwf	cmd@command+1,c
  8767  00455A  0E8A               	movlw	138
  8768  00455C  6E13               	movwf	cmd@command+2,c
  8769  00455E  0EA0               	movlw	160
  8770  004560  6E14               	movwf	cmd@command+3,c
  8771  004562  ECE1  F032         	call	_cmd	;wreg free
  8772                           
  8773                           ;display.c: 413:             break;
  8774  004566  0012               	return	
  8775  004568                     
  8776                           ;display.c: 415:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45)&511UL)<<12)|(((0)
      +                          &31UL)<<7)|(((0)&127UL)<<0)));
  8777  004568  0E00               	movlw	0
  8778  00456A  6E11               	movwf	cmd@command,c
  8779  00456C  0ED0               	movlw	208
  8780  00456E  6E12               	movwf	cmd@command+1,c
  8781  004570  0E02               	movlw	2
  8782  004572  6E13               	movwf	cmd@command+2,c
  8783  004574  0E99               	movlw	153
  8784  004576  6E14               	movwf	cmd@command+3,c
  8785  004578  ECE1  F032         	call	_cmd	;wreg free
  8786                           
  8787                           ;display.c: 416:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8788  00457C  0E00               	movlw	0
  8789  00457E  6E11               	movwf	cmd@command,c
  8790  004580  0ED0               	movlw	208
  8791  004582  6E12               	movwf	cmd@command+1,c
  8792  004584  0E02               	movlw	2
  8793  004586  6E13               	movwf	cmd@command+2,c
  8794  004588  0EA3               	movlw	163
  8795  00458A  6E14               	movwf	cmd@command+3,c
  8796  00458C  ECE1  F032         	call	_cmd	;wreg free
  8797                           
  8798                           ;display.c: 417:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +1)&511UL)<<12
      +                          )|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8799  004590  0E00               	movlw	0
  8800  004592  6E11               	movwf	cmd@command,c
  8801  004594  0EE0               	movlw	224
  8802  004596  6E12               	movwf	cmd@command+1,c
  8803  004598  0E02               	movlw	2
  8804  00459A  6E13               	movwf	cmd@command+2,c
  8805  00459C  0EA3               	movlw	163
  8806  00459E  6E14               	movwf	cmd@command+3,c
  8807  0045A0  ECE1  F032         	call	_cmd	;wreg free
  8808                           
  8809                           ;display.c: 418:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +59)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8810  0045A4  0E00               	movlw	0
  8811  0045A6  6E11               	movwf	cmd@command,c
  8812  0045A8  0E80               	movlw	128
  8813  0045AA  6E12               	movwf	cmd@command+1,c
  8814  0045AC  0E06               	movlw	6
  8815  0045AE  6E13               	movwf	cmd@command+2,c
  8816  0045B0  0EA3               	movlw	163
  8817  0045B2  6E14               	movwf	cmd@command+3,c
  8818  0045B4  ECE1  F032         	call	_cmd	;wreg free
  8819                           
  8820                           ;display.c: 419:             cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45 +60)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8821  0045B8  0E00               	movlw	0
  8822  0045BA  6E11               	movwf	cmd@command,c
  8823  0045BC  0E90               	movlw	144
  8824  0045BE  6E12               	movwf	cmd@command+1,c
  8825  0045C0  0EE6               	movlw	230
  8826  0045C2  6E13               	movwf	cmd@command+2,c
  8827  0045C4  0EA2               	movlw	162
  8828  0045C6  6E14               	movwf	cmd@command+3,c
  8829  0045C8  ECE1  F032         	call	_cmd	;wreg free
  8830                           
  8831                           ;display.c: 420:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +60)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8832  0045CC  0E00               	movlw	0
  8833  0045CE  6E11               	movwf	cmd@command,c
  8834  0045D0  0E90               	movlw	144
  8835  0045D2  6E12               	movwf	cmd@command+1,c
  8836  0045D4  0E06               	movlw	6
  8837  0045D6  6E13               	movwf	cmd@command+2,c
  8838  0045D8  0E99               	movlw	153
  8839  0045DA  6E14               	movwf	cmd@command+3,c
  8840  0045DC  ECE1  F032         	call	_cmd	;wreg free
  8841                           
  8842                           ;display.c: 421:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +61)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8843  0045E0  0E00               	movlw	0
  8844  0045E2  6E11               	movwf	cmd@command,c
  8845  0045E4  0EA0               	movlw	160
  8846  0045E6  6E12               	movwf	cmd@command+1,c
  8847  0045E8  0E06               	movlw	6
  8848  0045EA  6E13               	movwf	cmd@command+2,c
  8849  0045EC  0E99               	movlw	153
  8850  0045EE  6E14               	movwf	cmd@command+3,c
  8851  0045F0  ECE1  F032         	call	_cmd	;wreg free
  8852                           
  8853                           ;display.c: 422:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +120)&511UL)<<12)|
      +                          (((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8854  0045F4  0E00               	movlw	0
  8855  0045F6  6E11               	movwf	cmd@command,c
  8856  0045F8  0E50               	movlw	80
  8857  0045FA  6E12               	movwf	cmd@command+1,c
  8858  0045FC  0E0A               	movlw	10
  8859  0045FE  6E13               	movwf	cmd@command+2,c
  8860  004600  0E99               	movlw	153
  8861  004602  6E14               	movwf	cmd@command+3,c
  8862  004604  ECE1  F032         	call	_cmd	;wreg free
  8863                           
  8864                           ;display.c: 423:             cmd(((2UL<<30)|(((200 +1)&511UL)<<21)|(((45 +120)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8865  004608  0E00               	movlw	0
  8866  00460A  6E11               	movwf	cmd@command,c
  8867  00460C  0E50               	movlw	80
  8868  00460E  6E12               	movwf	cmd@command+1,c
  8869  004610  0E2A               	movlw	42
  8870  004612  6E13               	movwf	cmd@command+2,c
  8871  004614  0E99               	movlw	153
  8872  004616  6E14               	movwf	cmd@command+3,c
  8873  004618  ECE1  F032         	call	_cmd	;wreg free
  8874                           
  8875                           ;display.c: 424:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8876  00461C  0E00               	movlw	0
  8877  00461E  6E11               	movwf	cmd@command,c
  8878  004620  0E50               	movlw	80
  8879  004622  6E12               	movwf	cmd@command+1,c
  8880  004624  0E0A               	movlw	10
  8881  004626  6E13               	movwf	cmd@command+2,c
  8882  004628  0EA3               	movlw	163
  8883  00462A  6E14               	movwf	cmd@command+3,c
  8884  00462C  ECE1  F032         	call	_cmd	;wreg free
  8885                           
  8886                           ;display.c: 425:             break;
  8887  004630  0012               	return	
  8888  004632                     
  8889                           ;display.c: 427:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45)&511UL)<<12)|(((0)
      +                          &31UL)<<7)|(((0)&127UL)<<0)));
  8890  004632  0E00               	movlw	0
  8891  004634  6E11               	movwf	cmd@command,c
  8892  004636  0ED0               	movlw	208
  8893  004638  6E12               	movwf	cmd@command+1,c
  8894  00463A  0E02               	movlw	2
  8895  00463C  6E13               	movwf	cmd@command+2,c
  8896  00463E  0E99               	movlw	153
  8897  004640  6E14               	movwf	cmd@command+3,c
  8898  004642  ECE1  F032         	call	_cmd	;wreg free
  8899                           
  8900                           ;display.c: 428:             cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8901  004646  0E00               	movlw	0
  8902  004648  6E11               	movwf	cmd@command,c
  8903  00464A  0ED0               	movlw	208
  8904  00464C  6E12               	movwf	cmd@command+1,c
  8905  00464E  0EE2               	movlw	226
  8906  004650  6E13               	movwf	cmd@command+2,c
  8907  004652  0EA2               	movlw	162
  8908  004654  6E14               	movwf	cmd@command+3,c
  8909  004656  ECE1  F032         	call	_cmd	;wreg free
  8910                           
  8911                           ;display.c: 429:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8912  00465A  0E00               	movlw	0
  8913  00465C  6E11               	movwf	cmd@command,c
  8914  00465E  0ED0               	movlw	208
  8915  004660  6E12               	movwf	cmd@command+1,c
  8916  004662  0E02               	movlw	2
  8917  004664  6E13               	movwf	cmd@command+2,c
  8918  004666  0EA3               	movlw	163
  8919  004668  6E14               	movwf	cmd@command+3,c
  8920  00466A  ECE1  F032         	call	_cmd	;wreg free
  8921                           
  8922                           ;display.c: 430:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8923  00466E  0E00               	movlw	0
  8924  004670  6E11               	movwf	cmd@command,c
  8925  004672  0E50               	movlw	80
  8926  004674  6E12               	movwf	cmd@command+1,c
  8927  004676  0E0A               	movlw	10
  8928  004678  6E13               	movwf	cmd@command+2,c
  8929  00467A  0EA3               	movlw	163
  8930  00467C  6E14               	movwf	cmd@command+3,c
  8931  00467E  ECE1  F032         	call	_cmd	;wreg free
  8932                           
  8933                           ;display.c: 431:             cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45 +60)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8934  004682  0E00               	movlw	0
  8935  004684  6E11               	movwf	cmd@command,c
  8936  004686  0E90               	movlw	144
  8937  004688  6E12               	movwf	cmd@command+1,c
  8938  00468A  0EE6               	movlw	230
  8939  00468C  6E13               	movwf	cmd@command+2,c
  8940  00468E  0EA2               	movlw	162
  8941  004690  6E14               	movwf	cmd@command+3,c
  8942  004692  ECE1  F032         	call	_cmd	;wreg free
  8943                           
  8944                           ;display.c: 432:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +60)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8945  004696  0E00               	movlw	0
  8946  004698  6E11               	movwf	cmd@command,c
  8947  00469A  0E90               	movlw	144
  8948  00469C  6E12               	movwf	cmd@command+1,c
  8949  00469E  0E06               	movlw	6
  8950  0046A0  6E13               	movwf	cmd@command+2,c
  8951  0046A2  0E99               	movlw	153
  8952  0046A4  6E14               	movwf	cmd@command+3,c
  8953  0046A6  ECE1  F032         	call	_cmd	;wreg free
  8954                           
  8955                           ;display.c: 433:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +120)&511UL)<<12)|
      +                          (((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8956  0046AA  0E00               	movlw	0
  8957  0046AC  6E11               	movwf	cmd@command,c
  8958  0046AE  0E50               	movlw	80
  8959  0046B0  6E12               	movwf	cmd@command+1,c
  8960  0046B2  0E0A               	movlw	10
  8961  0046B4  6E13               	movwf	cmd@command+2,c
  8962  0046B6  0E99               	movlw	153
  8963  0046B8  6E14               	movwf	cmd@command+3,c
  8964  0046BA  ECE1  F032         	call	_cmd	;wreg free
  8965                           
  8966                           ;display.c: 434:             cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8967  0046BE  0E00               	movlw	0
  8968  0046C0  6E11               	movwf	cmd@command,c
  8969  0046C2  0E50               	movlw	80
  8970  0046C4  6E12               	movwf	cmd@command+1,c
  8971  0046C6  0EEA               	movlw	234
  8972  0046C8  6E13               	movwf	cmd@command+2,c
  8973  0046CA  0EA2               	movlw	162
  8974  0046CC  6E14               	movwf	cmd@command+3,c
  8975  0046CE  ECE1  F032         	call	_cmd	;wreg free
  8976                           
  8977                           ;display.c: 435:             break;
  8978  0046D2  0012               	return	
  8979  0046D4                     
  8980                           ;display.c: 437:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45)&511UL)<<12)|(((0)
      +                          &31UL)<<7)|(((0)&127UL)<<0)));
  8981  0046D4  0E00               	movlw	0
  8982  0046D6  6E11               	movwf	cmd@command,c
  8983  0046D8  0ED0               	movlw	208
  8984  0046DA  6E12               	movwf	cmd@command+1,c
  8985  0046DC  0E02               	movlw	2
  8986  0046DE  6E13               	movwf	cmd@command+2,c
  8987  0046E0  0E99               	movlw	153
  8988  0046E2  6E14               	movwf	cmd@command+3,c
  8989  0046E4  ECE1  F032         	call	_cmd	;wreg free
  8990                           
  8991                           ;display.c: 438:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +59)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  8992  0046E8  0E00               	movlw	0
  8993  0046EA  6E11               	movwf	cmd@command,c
  8994  0046EC  0E80               	movlw	128
  8995  0046EE  6E12               	movwf	cmd@command+1,c
  8996  0046F0  0E06               	movlw	6
  8997  0046F2  6E13               	movwf	cmd@command+2,c
  8998  0046F4  0E99               	movlw	153
  8999  0046F6  6E14               	movwf	cmd@command+3,c
  9000  0046F8  ECE1  F032         	call	_cmd	;wreg free
  9001                           
  9002                           ;display.c: 439:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9003  0046FC  0E00               	movlw	0
  9004  0046FE  6E11               	movwf	cmd@command,c
  9005  004700  0ED0               	movlw	208
  9006  004702  6E12               	movwf	cmd@command+1,c
  9007  004704  0E02               	movlw	2
  9008  004706  6E13               	movwf	cmd@command+2,c
  9009  004708  0EA3               	movlw	163
  9010  00470A  6E14               	movwf	cmd@command+3,c
  9011  00470C  ECE1  F032         	call	_cmd	;wreg free
  9012                           
  9013                           ;display.c: 440:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9014  004710  0E00               	movlw	0
  9015  004712  6E11               	movwf	cmd@command,c
  9016  004714  0E50               	movlw	80
  9017  004716  6E12               	movwf	cmd@command+1,c
  9018  004718  0E0A               	movlw	10
  9019  00471A  6E13               	movwf	cmd@command+2,c
  9020  00471C  0EA3               	movlw	163
  9021  00471E  6E14               	movwf	cmd@command+3,c
  9022  004720  ECE1  F032         	call	_cmd	;wreg free
  9023                           
  9024                           ;display.c: 441:             cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45 +60)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9025  004724  0E00               	movlw	0
  9026  004726  6E11               	movwf	cmd@command,c
  9027  004728  0E90               	movlw	144
  9028  00472A  6E12               	movwf	cmd@command+1,c
  9029  00472C  0EE6               	movlw	230
  9030  00472E  6E13               	movwf	cmd@command+2,c
  9031  004730  0EA2               	movlw	162
  9032  004732  6E14               	movwf	cmd@command+3,c
  9033  004734  ECE1  F032         	call	_cmd	;wreg free
  9034                           
  9035                           ;display.c: 442:             cmd(((2UL<<30)|(((200 +1)&511UL)<<21)|(((45 +60)&511UL)<<12
      +                          )|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9036  004738  0E00               	movlw	0
  9037  00473A  6E11               	movwf	cmd@command,c
  9038  00473C  0E90               	movlw	144
  9039  00473E  6E12               	movwf	cmd@command+1,c
  9040  004740  0E26               	movlw	38
  9041  004742  6E13               	movwf	cmd@command+2,c
  9042  004744  0E99               	movlw	153
  9043  004746  6E14               	movwf	cmd@command+3,c
  9044  004748  ECE1  F032         	call	_cmd	;wreg free
  9045                           
  9046                           ;display.c: 443:             break;
  9047  00474C  0012               	return	
  9048  00474E                     
  9049                           ;display.c: 445:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45)&511UL)<<12)|(((0)
      +                          &31UL)<<7)|(((0)&127UL)<<0)));
  9050  00474E  0E00               	movlw	0
  9051  004750  6E11               	movwf	cmd@command,c
  9052  004752  0ED0               	movlw	208
  9053  004754  6E12               	movwf	cmd@command+1,c
  9054  004756  0E02               	movlw	2
  9055  004758  6E13               	movwf	cmd@command+2,c
  9056  00475A  0E99               	movlw	153
  9057  00475C  6E14               	movwf	cmd@command+3,c
  9058  00475E  ECE1  F032         	call	_cmd	;wreg free
  9059                           
  9060                           ;display.c: 446:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9061  004762  0E00               	movlw	0
  9062  004764  6E11               	movwf	cmd@command,c
  9063  004766  0ED0               	movlw	208
  9064  004768  6E12               	movwf	cmd@command+1,c
  9065  00476A  0E02               	movlw	2
  9066  00476C  6E13               	movwf	cmd@command+2,c
  9067  00476E  0EA3               	movlw	163
  9068  004770  6E14               	movwf	cmd@command+3,c
  9069  004772  ECE1  F032         	call	_cmd	;wreg free
  9070                           
  9071                           ;display.c: 447:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +1)&511UL)<<12)|((
      +                          (0)&31UL)<<7)|(((0)&127UL)<<0)));
  9072  004776  0E00               	movlw	0
  9073  004778  6E11               	movwf	cmd@command,c
  9074  00477A  0EE0               	movlw	224
  9075  00477C  6E12               	movwf	cmd@command+1,c
  9076  00477E  0E02               	movlw	2
  9077  004780  6E13               	movwf	cmd@command+2,c
  9078  004782  0E99               	movlw	153
  9079  004784  6E14               	movwf	cmd@command+3,c
  9080  004786  ECE1  F032         	call	_cmd	;wreg free
  9081                           
  9082                           ;display.c: 448:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +59)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9083  00478A  0E00               	movlw	0
  9084  00478C  6E11               	movwf	cmd@command,c
  9085  00478E  0E80               	movlw	128
  9086  004790  6E12               	movwf	cmd@command+1,c
  9087  004792  0E06               	movlw	6
  9088  004794  6E13               	movwf	cmd@command+2,c
  9089  004796  0E99               	movlw	153
  9090  004798  6E14               	movwf	cmd@command+3,c
  9091  00479A  ECE1  F032         	call	_cmd	;wreg free
  9092                           
  9093                           ;display.c: 449:             cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45 +60)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9094  00479E  0E00               	movlw	0
  9095  0047A0  6E11               	movwf	cmd@command,c
  9096  0047A2  0E90               	movlw	144
  9097  0047A4  6E12               	movwf	cmd@command+1,c
  9098  0047A6  0EE6               	movlw	230
  9099  0047A8  6E13               	movwf	cmd@command+2,c
  9100  0047AA  0EA2               	movlw	162
  9101  0047AC  6E14               	movwf	cmd@command+3,c
  9102  0047AE  ECE1  F032         	call	_cmd	;wreg free
  9103                           
  9104                           ;display.c: 450:             cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +60)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9105  0047B2  0E00               	movlw	0
  9106  0047B4  6E11               	movwf	cmd@command,c
  9107  0047B6  0E90               	movlw	144
  9108  0047B8  6E12               	movwf	cmd@command+1,c
  9109  0047BA  0E06               	movlw	6
  9110  0047BC  6E13               	movwf	cmd@command+2,c
  9111  0047BE  0E99               	movlw	153
  9112  0047C0  6E14               	movwf	cmd@command+3,c
  9113  0047C2  ECE1  F032         	call	_cmd	;wreg free
  9114                           
  9115                           ;display.c: 451:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +61)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9116  0047C6  0E00               	movlw	0
  9117  0047C8  6E11               	movwf	cmd@command,c
  9118  0047CA  0EA0               	movlw	160
  9119  0047CC  6E12               	movwf	cmd@command+1,c
  9120  0047CE  0E06               	movlw	6
  9121  0047D0  6E13               	movwf	cmd@command+2,c
  9122  0047D2  0EA3               	movlw	163
  9123  0047D4  6E14               	movwf	cmd@command+3,c
  9124  0047D6  ECE1  F032         	call	_cmd	;wreg free
  9125                           
  9126                           ;display.c: 452:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +119)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9127  0047DA  0E00               	movlw	0
  9128  0047DC  6E11               	movwf	cmd@command,c
  9129  0047DE  0E40               	movlw	64
  9130  0047E0  6E12               	movwf	cmd@command+1,c
  9131  0047E2  0E0A               	movlw	10
  9132  0047E4  6E13               	movwf	cmd@command+2,c
  9133  0047E6  0EA3               	movlw	163
  9134  0047E8  6E14               	movwf	cmd@command+3,c
  9135  0047EA  ECE1  F032         	call	_cmd	;wreg free
  9136                           
  9137                           ;display.c: 453:             cmd(((2UL<<30)|(((200 +1)&511UL)<<21)|(((45 +120)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9138  0047EE  0E00               	movlw	0
  9139  0047F0  6E11               	movwf	cmd@command,c
  9140  0047F2  0E50               	movlw	80
  9141  0047F4  6E12               	movwf	cmd@command+1,c
  9142  0047F6  0E2A               	movlw	42
  9143  0047F8  6E13               	movwf	cmd@command+2,c
  9144  0047FA  0E99               	movlw	153
  9145  0047FC  6E14               	movwf	cmd@command+3,c
  9146  0047FE  ECE1  F032         	call	_cmd	;wreg free
  9147                           
  9148                           ;display.c: 454:             cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +120)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9149  004802  0E00               	movlw	0
  9150  004804  6E11               	movwf	cmd@command,c
  9151  004806  0E50               	movlw	80
  9152  004808  6E12               	movwf	cmd@command+1,c
  9153  00480A  0E0A               	movlw	10
  9154  00480C  6E13               	movwf	cmd@command+2,c
  9155  00480E  0EA3               	movlw	163
  9156  004810  6E14               	movwf	cmd@command+3,c
  9157  004812  ECE1  F032         	call	_cmd	;wreg free
  9158                           
  9159                           ;display.c: 455:             break;
  9160  004816  0012               	return	
  9161  004818                     
  9162                           ;display.c: 457:              cmd(((2UL<<30)|(((200 +1)&511UL)<<21)|(((45)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9163  004818  0E00               	movlw	0
  9164  00481A  6E11               	movwf	cmd@command,c
  9165  00481C  0ED0               	movlw	208
  9166  00481E  6E12               	movwf	cmd@command+1,c
  9167  004820  0E22               	movlw	34
  9168  004822  6E13               	movwf	cmd@command+2,c
  9169  004824  0E99               	movlw	153
  9170  004826  6E14               	movwf	cmd@command+3,c
  9171  004828  ECE1  F032         	call	_cmd	;wreg free
  9172                           
  9173                           ;display.c: 458:              cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45)&511UL)<<12)|
      +                          (((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9174  00482C  0E00               	movlw	0
  9175  00482E  6E11               	movwf	cmd@command,c
  9176  004830  0ED0               	movlw	208
  9177  004832  6E12               	movwf	cmd@command+1,c
  9178  004834  0E02               	movlw	2
  9179  004836  6E13               	movwf	cmd@command+2,c
  9180  004838  0EA3               	movlw	163
  9181  00483A  6E14               	movwf	cmd@command+3,c
  9182  00483C  ECE1  F032         	call	_cmd	;wreg free
  9183                           
  9184                           ;display.c: 459:              cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +1)&511UL)<<12)|(
      +                          ((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9185  004840  0E00               	movlw	0
  9186  004842  6E11               	movwf	cmd@command,c
  9187  004844  0EE0               	movlw	224
  9188  004846  6E12               	movwf	cmd@command+1,c
  9189  004848  0E02               	movlw	2
  9190  00484A  6E13               	movwf	cmd@command+2,c
  9191  00484C  0E99               	movlw	153
  9192  00484E  6E14               	movwf	cmd@command+3,c
  9193  004850  ECE1  F032         	call	_cmd	;wreg free
  9194                           
  9195                           ;display.c: 460:              cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +119)&511UL)<<12)
      +                          |(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9196  004854  0E00               	movlw	0
  9197  004856  6E11               	movwf	cmd@command,c
  9198  004858  0E40               	movlw	64
  9199  00485A  6E12               	movwf	cmd@command+1,c
  9200  00485C  0E0A               	movlw	10
  9201  00485E  6E13               	movwf	cmd@command+2,c
  9202  004860  0E99               	movlw	153
  9203  004862  6E14               	movwf	cmd@command+3,c
  9204  004864  ECE1  F032         	call	_cmd	;wreg free
  9205                           
  9206                           ;display.c: 461:              cmd(((2UL<<30)|(((200 +1)&511UL)<<21)|(((45 +60)&511UL)<<1
      +                          2)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9207  004868  0E00               	movlw	0
  9208  00486A  6E11               	movwf	cmd@command,c
  9209  00486C  0E90               	movlw	144
  9210  00486E  6E12               	movwf	cmd@command+1,c
  9211  004870  0E26               	movlw	38
  9212  004872  6E13               	movwf	cmd@command+2,c
  9213  004874  0E99               	movlw	153
  9214  004876  6E14               	movwf	cmd@command+3,c
  9215  004878  ECE1  F032         	call	_cmd	;wreg free
  9216                           
  9217                           ;display.c: 462:              cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +60)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9218  00487C  0E00               	movlw	0
  9219  00487E  6E11               	movwf	cmd@command,c
  9220  004880  0E90               	movlw	144
  9221  004882  6E12               	movwf	cmd@command+1,c
  9222  004884  0E06               	movlw	6
  9223  004886  6E13               	movwf	cmd@command+2,c
  9224  004888  0EA3               	movlw	163
  9225  00488A  6E14               	movwf	cmd@command+3,c
  9226  00488C  ECE1  F032         	call	_cmd	;wreg free
  9227                           
  9228                           ;display.c: 463:              cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +61)&511UL)<<
      +                          12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9229  004890  0E00               	movlw	0
  9230  004892  6E11               	movwf	cmd@command,c
  9231  004894  0EA0               	movlw	160
  9232  004896  6E12               	movwf	cmd@command+1,c
  9233  004898  0E06               	movlw	6
  9234  00489A  6E13               	movwf	cmd@command+2,c
  9235  00489C  0EA3               	movlw	163
  9236  00489E  6E14               	movwf	cmd@command+3,c
  9237  0048A0  ECE1  F032         	call	_cmd	;wreg free
  9238                           
  9239                           ;display.c: 464:              cmd(((2UL<<30)|(((200 +80)&511UL)<<21)|(((45 +119)&511UL)<
      +                          <12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9240  0048A4  0E00               	movlw	0
  9241  0048A6  6E11               	movwf	cmd@command,c
  9242  0048A8  0E40               	movlw	64
  9243  0048AA  6E12               	movwf	cmd@command+1,c
  9244  0048AC  0E0A               	movlw	10
  9245  0048AE  6E13               	movwf	cmd@command+2,c
  9246  0048B0  0EA3               	movlw	163
  9247  0048B2  6E14               	movwf	cmd@command+3,c
  9248  0048B4  ECE1  F032         	call	_cmd	;wreg free
  9249                           
  9250                           ;display.c: 465:              cmd(((2UL<<30)|(((200)&511UL)<<21)|(((45 +120)&511UL)<<12)
      +                          |(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9251  0048B8  0E00               	movlw	0
  9252  0048BA  6E11               	movwf	cmd@command,c
  9253  0048BC  0E50               	movlw	80
  9254  0048BE  6E12               	movwf	cmd@command+1,c
  9255  0048C0  0E0A               	movlw	10
  9256  0048C2  6E13               	movwf	cmd@command+2,c
  9257  0048C4  0E99               	movlw	153
  9258  0048C6  6E14               	movwf	cmd@command+3,c
  9259  0048C8  ECE1  F032         	call	_cmd	;wreg free
  9260                           
  9261                           ;display.c: 466:              cmd(((2UL<<30)|(((200 +79)&511UL)<<21)|(((45 +120)&511UL)<
      +                          <12)|(((0)&31UL)<<7)|(((0)&127UL)<<0)));
  9262  0048CC  0E00               	movlw	0
  9263  0048CE  6E11               	movwf	cmd@command,c
  9264  0048D0  0E50               	movlw	80
  9265  0048D2  6E12               	movwf	cmd@command+1,c
  9266  0048D4  0EEA               	movlw	234
  9267  0048D6  6E13               	movwf	cmd@command+2,c
  9268  0048D8  0EA2               	movlw	162
  9269  0048DA  6E14               	movwf	cmd@command+3,c
  9270  0048DC  ECE1  F032         	call	_cmd	;wreg free
  9271                           
  9272                           ;display.c: 471:     }
  9273                           
  9274                           ;display.c: 470:             break;
  9275                           
  9276                           ;display.c: 468:         default:
  9277                           
  9278                           ;display.c: 467:             break;
  9279  0048E0  0012               	return	
  9280  0048E2                     l739:
  9281  0048E2  C019  F01B         	movff	display_gear@gear,??_display_gear
  9282  0048E6  C01A  F01C         	movff	display_gear@gear+1,??_display_gear+1
  9283                           
  9284                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9285                           ; Switch size 1, requested type "space"
  9286                           ; Number of cases is 1, Range of values is 0 to 0
  9287                           ; switch strategies available:
  9288                           ; Name         Instructions Cycles
  9289                           ; simple_byte            4     3 (average)
  9290                           ;	Chosen strategy is simple_byte
  9291  0048EA  501C               	movf	??_display_gear+1,w,c
  9292  0048EC  0A00               	xorlw	0	; case 0
  9293  0048EE  A4D8               	btfss	status,2,c
  9294  0048F0  0012               	return	
  9295                           
  9296                           ; Switch size 1, requested type "space"
  9297                           ; Number of cases is 7, Range of values is 0 to 6
  9298                           ; switch strategies available:
  9299                           ; Name         Instructions Cycles
  9300                           ; simple_byte           22    12 (average)
  9301                           ;	Chosen strategy is simple_byte
  9302  0048F2  501B               	movf	??_display_gear,w,c
  9303  0048F4  0A00               	xorlw	0	; case 0
  9304  0048F6  B4D8               	btfsc	status,2,c
  9305  0048F8  D5BD               	goto	l740
  9306  0048FA  0A01               	xorlw	1	; case 1
  9307  0048FC  B4D8               	btfsc	status,2,c
  9308  0048FE  D5F7               	goto	l742
  9309  004900  0A03               	xorlw	3	; case 2
  9310  004902  B4D8               	btfsc	status,2,c
  9311  004904  D631               	goto	l743
  9312  004906  0A01               	xorlw	1	; case 3
  9313  004908  B4D8               	btfsc	status,2,c
  9314  00490A  D693               	goto	l744
  9315  00490C  0A07               	xorlw	7	; case 4
  9316  00490E  B4D8               	btfsc	status,2,c
  9317  004910  D6E1               	goto	l745
  9318  004912  0A01               	xorlw	1	; case 5
  9319  004914  B4D8               	btfsc	status,2,c
  9320  004916  D71B               	goto	l746
  9321  004918  0A03               	xorlw	3	; case 6
  9322  00491A  A4D8               	btfss	status,2,c
  9323  00491C  0012               	return	
  9324  00491E  D77C               	goto	l747
  9325  004920                     __end_of_display_gear:
  9326                           	opt stack 0
  9327                           tblptru	equ	0xFF8
  9328                           tblptrh	equ	0xFF7
  9329                           tblptrl	equ	0xFF6
  9330                           tablat	equ	0xFF5
  9331                           prodh	equ	0xFF4
  9332                           prodl	equ	0xFF3
  9333                           intcon	equ	0xFF2
  9334                           postinc0	equ	0xFEE
  9335                           wreg	equ	0xFE8
  9336                           postdec1	equ	0xFE5
  9337                           plusw1	equ	0xFE3
  9338                           fsr1l	equ	0xFE1
  9339                           plusw2	equ	0xFDB
  9340                           status	equ	0xFD8
  9341                           
  9342 ;; *************** function _display_fuel_level *****************
  9343 ;; Defined at:
  9344 ;;		line 316 in file "display.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  fuel            2   24[COMRAM] int 
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;		None
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  1    wreg      void 
  9351 ;; Registers used:
  9352 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9360 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9361 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9362 ;;Total ram usage:        6 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; Hardware stack levels required when called:    7
  9365 ;; This function calls:
  9366 ;;		_cmd
  9367 ;;		_cmd_incrementn
  9368 ;;		_wr16
  9369 ;;		_wr8s
  9370 ;; This function is called by:
  9371 ;;		_display
  9372 ;;		_main
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376                           	psect	text15
  9377  00534A                     __ptext15:
  9378                           	opt stack 0
  9379  00534A                     _display_fuel_level:
  9380                           	opt stack 23
  9381                           
  9382                           ;display.c: 317:     if(fuel == 1) {
  9383                           
  9384                           ;incstack = 0
  9385  00534A  0419               	decf	display_fuel_level@fuel,w,c
  9386  00534C  101A               	iorwf	display_fuel_level@fuel+1,w,c
  9387  00534E  A4D8               	btfss	status,2,c
  9388  005350  D09B               	goto	l702
  9389                           
  9390                           ;display.c: 318:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&2
      +                          55UL)<<0)));
  9391  005352  0EFF               	movlw	255
  9392  005354  6E11               	movwf	cmd@command,c
  9393  005356  0EFF               	movlw	255
  9394  005358  6E12               	movwf	cmd@command+1,c
  9395  00535A  0EFF               	movlw	255
  9396  00535C  6E13               	movwf	cmd@command+2,c
  9397  00535E  0E04               	movlw	4
  9398  005360  6E14               	movwf	cmd@command+3,c
  9399  005362  ECE1  F032         	call	_cmd	;wreg free
  9400                           
  9401                           ;display.c: 319:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 47);cmd_increment
      +                          n(2);wr16(1081344UL +cmd_offset, 142);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);
      +                          cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(wr
      +                          8s(1081344UL +cmd_offset, "Normal"));
  9402  005366  0E0C               	movlw	12
  9403  005368  6E11               	movwf	cmd@command,c
  9404  00536A  0EFF               	movlw	255
  9405  00536C  6E12               	movwf	cmd@command+1,c
  9406  00536E  0EFF               	movlw	255
  9407  005370  6E13               	movwf	cmd@command+2,c
  9408  005372  0EFF               	movlw	255
  9409  005374  6E14               	movwf	cmd@command+3,c
  9410  005376  ECE1  F032         	call	_cmd	;wreg free
  9411  00537A  504F               	movf	_cmd_offset,w,c
  9412  00537C  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9413  00537E  5050               	movf	_cmd_offset+1,w,c
  9414  005380  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9415  005382  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9416  005384  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9417  005386  0E00               	movlw	0
  9418  005388  241B               	addwf	??_display_fuel_level,w,c
  9419  00538A  6E04               	movwf	wr16@addr,c
  9420  00538C  0E80               	movlw	128
  9421  00538E  201C               	addwfc	??_display_fuel_level+1,w,c
  9422  005390  6E05               	movwf	wr16@addr+1,c
  9423  005392  0E10               	movlw	16
  9424  005394  201D               	addwfc	??_display_fuel_level+2,w,c
  9425  005396  6E06               	movwf	wr16@addr+2,c
  9426  005398  0E00               	movlw	0
  9427  00539A  201E               	addwfc	??_display_fuel_level+3,w,c
  9428  00539C  6E07               	movwf	wr16@addr+3,c
  9429  00539E  0E00               	movlw	0
  9430  0053A0  6E09               	movwf	wr16@value+1,c
  9431  0053A2  0E2F               	movlw	47
  9432  0053A4  6E08               	movwf	wr16@value,c
  9433  0053A6  ECB9  F033         	call	_wr16	;wreg free
  9434  0053AA  0E02               	movlw	2
  9435  0053AC  ECFA  F033         	call	_cmd_incrementn
  9436  0053B0  504F               	movf	_cmd_offset,w,c
  9437  0053B2  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9438  0053B4  5050               	movf	_cmd_offset+1,w,c
  9439  0053B6  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9440  0053B8  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9441  0053BA  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9442  0053BC  0E00               	movlw	0
  9443  0053BE  241B               	addwf	??_display_fuel_level,w,c
  9444  0053C0  6E04               	movwf	wr16@addr,c
  9445  0053C2  0E80               	movlw	128
  9446  0053C4  201C               	addwfc	??_display_fuel_level+1,w,c
  9447  0053C6  6E05               	movwf	wr16@addr+1,c
  9448  0053C8  0E10               	movlw	16
  9449  0053CA  201D               	addwfc	??_display_fuel_level+2,w,c
  9450  0053CC  6E06               	movwf	wr16@addr+2,c
  9451  0053CE  0E00               	movlw	0
  9452  0053D0  201E               	addwfc	??_display_fuel_level+3,w,c
  9453  0053D2  6E07               	movwf	wr16@addr+3,c
  9454  0053D4  0E00               	movlw	0
  9455  0053D6  6E09               	movwf	wr16@value+1,c
  9456  0053D8  0E8E               	movlw	142
  9457  0053DA  6E08               	movwf	wr16@value,c
  9458  0053DC  ECB9  F033         	call	_wr16	;wreg free
  9459  0053E0  0E02               	movlw	2
  9460  0053E2  ECFA  F033         	call	_cmd_incrementn
  9461  0053E6  504F               	movf	_cmd_offset,w,c
  9462  0053E8  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9463  0053EA  5050               	movf	_cmd_offset+1,w,c
  9464  0053EC  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9465  0053EE  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9466  0053F0  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9467  0053F2  0E00               	movlw	0
  9468  0053F4  241B               	addwf	??_display_fuel_level,w,c
  9469  0053F6  6E04               	movwf	wr16@addr,c
  9470  0053F8  0E80               	movlw	128
  9471  0053FA  201C               	addwfc	??_display_fuel_level+1,w,c
  9472  0053FC  6E05               	movwf	wr16@addr+1,c
  9473  0053FE  0E10               	movlw	16
  9474  005400  201D               	addwfc	??_display_fuel_level+2,w,c
  9475  005402  6E06               	movwf	wr16@addr+2,c
  9476  005404  0E00               	movlw	0
  9477  005406  201E               	addwfc	??_display_fuel_level+3,w,c
  9478  005408  6E07               	movwf	wr16@addr+3,c
  9479  00540A  0E00               	movlw	0
  9480  00540C  6E09               	movwf	wr16@value+1,c
  9481  00540E  0E1C               	movlw	28
  9482  005410  6E08               	movwf	wr16@value,c
  9483  005412  ECB9  F033         	call	_wr16	;wreg free
  9484  005416  0E02               	movlw	2
  9485  005418  ECFA  F033         	call	_cmd_incrementn
  9486  00541C  504F               	movf	_cmd_offset,w,c
  9487  00541E  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9488  005420  5050               	movf	_cmd_offset+1,w,c
  9489  005422  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9490  005424  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9491  005426  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9492  005428  0E00               	movlw	0
  9493  00542A  241B               	addwf	??_display_fuel_level,w,c
  9494  00542C  6E04               	movwf	wr16@addr,c
  9495  00542E  0E80               	movlw	128
  9496  005430  201C               	addwfc	??_display_fuel_level+1,w,c
  9497  005432  6E05               	movwf	wr16@addr+1,c
  9498  005434  0E10               	movlw	16
  9499  005436  201D               	addwfc	??_display_fuel_level+2,w,c
  9500  005438  6E06               	movwf	wr16@addr+2,c
  9501  00543A  0E00               	movlw	0
  9502  00543C  201E               	addwfc	??_display_fuel_level+3,w,c
  9503  00543E  6E07               	movwf	wr16@addr+3,c
  9504  005440  0E02               	movlw	2
  9505  005442  6E09               	movwf	wr16@value+1,c
  9506  005444  0E00               	movlw	0
  9507  005446  6E08               	movwf	wr16@value,c
  9508  005448  ECB9  F033         	call	_wr16	;wreg free
  9509  00544C  0E02               	movlw	2
  9510  00544E  ECFA  F033         	call	_cmd_incrementn
  9511  005452  504F               	movf	_cmd_offset,w,c
  9512  005454  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9513  005456  5050               	movf	_cmd_offset+1,w,c
  9514  005458  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9515  00545A  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9516  00545C  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9517  00545E  0E00               	movlw	0
  9518  005460  241B               	addwf	??_display_fuel_level,w,c
  9519  005462  6E09               	movwf	wr8s@addr,c
  9520  005464  0E80               	movlw	128
  9521  005466  201C               	addwfc	??_display_fuel_level+1,w,c
  9522  005468  6E0A               	movwf	wr8s@addr+1,c
  9523  00546A  0E10               	movlw	16
  9524  00546C  201D               	addwfc	??_display_fuel_level+2,w,c
  9525  00546E  6E0B               	movwf	wr8s@addr+2,c
  9526  005470  0E00               	movlw	0
  9527  005472  201E               	addwfc	??_display_fuel_level+3,w,c
  9528  005474  6E0C               	movwf	wr8s@addr+3,c
  9529  005476  0E40               	movlw	low STR_22
  9530  005478  6E0D               	movwf	wr8s@s,c
  9531  00547A  0E0F               	movlw	high STR_22
  9532  00547C  6E0E               	movwf	wr8s@s+1,c
  9533  00547E  ECD8  F031         	call	_wr8s	;wreg free
  9534  005482  ECFA  F033         	call	_cmd_incrementn
  9535                           
  9536                           ;display.c: 320:     }
  9537  005486  0012               	return	
  9538  005488                     l702:
  9539                           
  9540                           ;display.c: 322:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
  9541  005488  0E00               	movlw	0
  9542  00548A  6E11               	movwf	cmd@command,c
  9543  00548C  0E00               	movlw	0
  9544  00548E  6E12               	movwf	cmd@command+1,c
  9545  005490  0EFF               	movlw	255
  9546  005492  6E13               	movwf	cmd@command+2,c
  9547  005494  0E04               	movlw	4
  9548  005496  6E14               	movwf	cmd@command+3,c
  9549  005498  ECE1  F032         	call	_cmd	;wreg free
  9550                           
  9551                           ;display.c: 323:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 47);cmd_increment
      +                          n(2);wr16(1081344UL +cmd_offset, 142);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28);
      +                          cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(wr
      +                          8s(1081344UL +cmd_offset, "Warning"));
  9552  00549C  0E0C               	movlw	12
  9553  00549E  6E11               	movwf	cmd@command,c
  9554  0054A0  0EFF               	movlw	255
  9555  0054A2  6E12               	movwf	cmd@command+1,c
  9556  0054A4  0EFF               	movlw	255
  9557  0054A6  6E13               	movwf	cmd@command+2,c
  9558  0054A8  0EFF               	movlw	255
  9559  0054AA  6E14               	movwf	cmd@command+3,c
  9560  0054AC  ECE1  F032         	call	_cmd	;wreg free
  9561  0054B0  504F               	movf	_cmd_offset,w,c
  9562  0054B2  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9563  0054B4  5050               	movf	_cmd_offset+1,w,c
  9564  0054B6  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9565  0054B8  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9566  0054BA  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9567  0054BC  0E00               	movlw	0
  9568  0054BE  241B               	addwf	??_display_fuel_level,w,c
  9569  0054C0  6E04               	movwf	wr16@addr,c
  9570  0054C2  0E80               	movlw	128
  9571  0054C4  201C               	addwfc	??_display_fuel_level+1,w,c
  9572  0054C6  6E05               	movwf	wr16@addr+1,c
  9573  0054C8  0E10               	movlw	16
  9574  0054CA  201D               	addwfc	??_display_fuel_level+2,w,c
  9575  0054CC  6E06               	movwf	wr16@addr+2,c
  9576  0054CE  0E00               	movlw	0
  9577  0054D0  201E               	addwfc	??_display_fuel_level+3,w,c
  9578  0054D2  6E07               	movwf	wr16@addr+3,c
  9579  0054D4  0E00               	movlw	0
  9580  0054D6  6E09               	movwf	wr16@value+1,c
  9581  0054D8  0E2F               	movlw	47
  9582  0054DA  6E08               	movwf	wr16@value,c
  9583  0054DC  ECB9  F033         	call	_wr16	;wreg free
  9584  0054E0  0E02               	movlw	2
  9585  0054E2  ECFA  F033         	call	_cmd_incrementn
  9586  0054E6  504F               	movf	_cmd_offset,w,c
  9587  0054E8  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9588  0054EA  5050               	movf	_cmd_offset+1,w,c
  9589  0054EC  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9590  0054EE  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9591  0054F0  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9592  0054F2  0E00               	movlw	0
  9593  0054F4  241B               	addwf	??_display_fuel_level,w,c
  9594  0054F6  6E04               	movwf	wr16@addr,c
  9595  0054F8  0E80               	movlw	128
  9596  0054FA  201C               	addwfc	??_display_fuel_level+1,w,c
  9597  0054FC  6E05               	movwf	wr16@addr+1,c
  9598  0054FE  0E10               	movlw	16
  9599  005500  201D               	addwfc	??_display_fuel_level+2,w,c
  9600  005502  6E06               	movwf	wr16@addr+2,c
  9601  005504  0E00               	movlw	0
  9602  005506  201E               	addwfc	??_display_fuel_level+3,w,c
  9603  005508  6E07               	movwf	wr16@addr+3,c
  9604  00550A  0E00               	movlw	0
  9605  00550C  6E09               	movwf	wr16@value+1,c
  9606  00550E  0E8E               	movlw	142
  9607  005510  6E08               	movwf	wr16@value,c
  9608  005512  ECB9  F033         	call	_wr16	;wreg free
  9609  005516  0E02               	movlw	2
  9610  005518  ECFA  F033         	call	_cmd_incrementn
  9611  00551C  504F               	movf	_cmd_offset,w,c
  9612  00551E  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9613  005520  5050               	movf	_cmd_offset+1,w,c
  9614  005522  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9615  005524  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9616  005526  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9617  005528  0E00               	movlw	0
  9618  00552A  241B               	addwf	??_display_fuel_level,w,c
  9619  00552C  6E04               	movwf	wr16@addr,c
  9620  00552E  0E80               	movlw	128
  9621  005530  201C               	addwfc	??_display_fuel_level+1,w,c
  9622  005532  6E05               	movwf	wr16@addr+1,c
  9623  005534  0E10               	movlw	16
  9624  005536  201D               	addwfc	??_display_fuel_level+2,w,c
  9625  005538  6E06               	movwf	wr16@addr+2,c
  9626  00553A  0E00               	movlw	0
  9627  00553C  201E               	addwfc	??_display_fuel_level+3,w,c
  9628  00553E  6E07               	movwf	wr16@addr+3,c
  9629  005540  0E00               	movlw	0
  9630  005542  6E09               	movwf	wr16@value+1,c
  9631  005544  0E1C               	movlw	28
  9632  005546  6E08               	movwf	wr16@value,c
  9633  005548  ECB9  F033         	call	_wr16	;wreg free
  9634  00554C  0E02               	movlw	2
  9635  00554E  ECFA  F033         	call	_cmd_incrementn
  9636  005552  504F               	movf	_cmd_offset,w,c
  9637  005554  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9638  005556  5050               	movf	_cmd_offset+1,w,c
  9639  005558  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9640  00555A  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9641  00555C  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9642  00555E  0E00               	movlw	0
  9643  005560  241B               	addwf	??_display_fuel_level,w,c
  9644  005562  6E04               	movwf	wr16@addr,c
  9645  005564  0E80               	movlw	128
  9646  005566  201C               	addwfc	??_display_fuel_level+1,w,c
  9647  005568  6E05               	movwf	wr16@addr+1,c
  9648  00556A  0E10               	movlw	16
  9649  00556C  201D               	addwfc	??_display_fuel_level+2,w,c
  9650  00556E  6E06               	movwf	wr16@addr+2,c
  9651  005570  0E00               	movlw	0
  9652  005572  201E               	addwfc	??_display_fuel_level+3,w,c
  9653  005574  6E07               	movwf	wr16@addr+3,c
  9654  005576  0E02               	movlw	2
  9655  005578  6E09               	movwf	wr16@value+1,c
  9656  00557A  0E00               	movlw	0
  9657  00557C  6E08               	movwf	wr16@value,c
  9658  00557E  ECB9  F033         	call	_wr16	;wreg free
  9659  005582  0E02               	movlw	2
  9660  005584  ECFA  F033         	call	_cmd_incrementn
  9661  005588  504F               	movf	_cmd_offset,w,c
  9662  00558A  6E1B               	movwf	??_display_fuel_level& (0+255),c
  9663  00558C  5050               	movf	_cmd_offset+1,w,c
  9664  00558E  6E1C               	movwf	(??_display_fuel_level+1)& (0+255),c
  9665  005590  6A1D               	clrf	(??_display_fuel_level+2)& (0+255),c
  9666  005592  6A1E               	clrf	(??_display_fuel_level+3)& (0+255),c
  9667  005594  0E00               	movlw	0
  9668  005596  241B               	addwf	??_display_fuel_level,w,c
  9669  005598  6E09               	movwf	wr8s@addr,c
  9670  00559A  0E80               	movlw	128
  9671  00559C  201C               	addwfc	??_display_fuel_level+1,w,c
  9672  00559E  6E0A               	movwf	wr8s@addr+1,c
  9673  0055A0  0E10               	movlw	16
  9674  0055A2  201D               	addwfc	??_display_fuel_level+2,w,c
  9675  0055A4  6E0B               	movwf	wr8s@addr+2,c
  9676  0055A6  0E00               	movlw	0
  9677  0055A8  201E               	addwfc	??_display_fuel_level+3,w,c
  9678  0055AA  6E0C               	movwf	wr8s@addr+3,c
  9679  0055AC  0E2A               	movlw	low STR_23
  9680  0055AE  6E0D               	movwf	wr8s@s,c
  9681  0055B0  0E0F               	movlw	high STR_23
  9682  0055B2  6E0E               	movwf	wr8s@s+1,c
  9683  0055B4  ECD8  F031         	call	_wr8s	;wreg free
  9684  0055B8  ECFA  F033         	call	_cmd_incrementn
  9685  0055BC  0012               	return	
  9686  0055BE                     __end_of_display_fuel_level:
  9687                           	opt stack 0
  9688                           tblptru	equ	0xFF8
  9689                           tblptrh	equ	0xFF7
  9690                           tblptrl	equ	0xFF6
  9691                           tablat	equ	0xFF5
  9692                           prodh	equ	0xFF4
  9693                           prodl	equ	0xFF3
  9694                           intcon	equ	0xFF2
  9695                           postinc0	equ	0xFEE
  9696                           wreg	equ	0xFE8
  9697                           postdec1	equ	0xFE5
  9698                           plusw1	equ	0xFE3
  9699                           fsr1l	equ	0xFE1
  9700                           plusw2	equ	0xFDB
  9701                           status	equ	0xFD8
  9702                           
  9703 ;; *************** function _display_etc *****************
  9704 ;; Defined at:
  9705 ;;		line 338 in file "display.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;  etc             2   24[COMRAM] int 
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;		None
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  1    wreg      void 
  9712 ;; Registers used:
  9713 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9721 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9722 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9723 ;;Total ram usage:        6 bytes
  9724 ;; Hardware stack levels used:    1
  9725 ;; Hardware stack levels required when called:    7
  9726 ;; This function calls:
  9727 ;;		_cmd
  9728 ;;		_cmd_incrementn
  9729 ;;		_wr16
  9730 ;;		_wr8s
  9731 ;; This function is called by:
  9732 ;;		_display
  9733 ;;		_main
  9734 ;; This function uses a non-reentrant model
  9735 ;;
  9736                           
  9737                           	psect	text16
  9738  001F74                     __ptext16:
  9739                           	opt stack 0
  9740  001F74                     _display_etc:
  9741                           	opt stack 23
  9742                           
  9743                           ;display.c: 339:     switch(etc) {
  9744                           
  9745                           ;incstack = 0
  9746  001F74  D366               	goto	l713
  9747  001F76                     
  9748                           ;display.c: 341:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 146);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(w
      +                          r8s(1081344UL +cmd_offset, "Idle"));
  9749  001F76  0E0C               	movlw	12
  9750  001F78  6E11               	movwf	cmd@command,c
  9751  001F7A  0EFF               	movlw	255
  9752  001F7C  6E12               	movwf	cmd@command+1,c
  9753  001F7E  0EFF               	movlw	255
  9754  001F80  6E13               	movwf	cmd@command+2,c
  9755  001F82  0EFF               	movlw	255
  9756  001F84  6E14               	movwf	cmd@command+3,c
  9757  001F86  ECE1  F032         	call	_cmd	;wreg free
  9758  001F8A  504F               	movf	_cmd_offset,w,c
  9759  001F8C  6E1B               	movwf	??_display_etc& (0+255),c
  9760  001F8E  5050               	movf	_cmd_offset+1,w,c
  9761  001F90  6E1C               	movwf	(??_display_etc+1)& (0+255),c
  9762  001F92  6A1D               	clrf	(??_display_etc+2)& (0+255),c
  9763  001F94  6A1E               	clrf	(??_display_etc+3)& (0+255),c
  9764  001F96  0E00               	movlw	0
  9765  001F98  241B               	addwf	??_display_etc,w,c
  9766  001F9A  6E04               	movwf	wr16@addr,c
  9767  001F9C  0E80               	movlw	128
  9768  001F9E  201C               	addwfc	??_display_etc+1,w,c
  9769  001FA0  6E05               	movwf	wr16@addr+1,c
  9770  001FA2  0E10               	movlw	16
  9771  001FA4  201D               	addwfc	??_display_etc+2,w,c
  9772  001FA6  6E06               	movwf	wr16@addr+2,c
  9773  001FA8  0E00               	movlw	0
  9774  001FAA  201E               	addwfc	??_display_etc+3,w,c
  9775  001FAC  6E07               	movwf	wr16@addr+3,c
  9776  001FAE  0E00               	movlw	0
  9777  001FB0  6E09               	movwf	wr16@value+1,c
  9778  001FB2  0E8B               	movlw	139
  9779  001FB4  6E08               	movwf	wr16@value,c
  9780  001FB6  ECB9  F033         	call	_wr16	;wreg free
  9781  001FBA  0E02               	movlw	2
  9782  001FBC  ECFA  F033         	call	_cmd_incrementn
  9783  001FC0  504F               	movf	_cmd_offset,w,c
  9784  001FC2  6E1B               	movwf	??_display_etc& (0+255),c
  9785  001FC4  5050               	movf	_cmd_offset+1,w,c
  9786  001FC6  6E1C               	movwf	(??_display_etc+1)& (0+255),c
  9787  001FC8  6A1D               	clrf	(??_display_etc+2)& (0+255),c
  9788  001FCA  6A1E               	clrf	(??_display_etc+3)& (0+255),c
  9789  001FCC  0E00               	movlw	0
  9790  001FCE  241B               	addwf	??_display_etc,w,c
  9791  001FD0  6E04               	movwf	wr16@addr,c
  9792  001FD2  0E80               	movlw	128
  9793  001FD4  201C               	addwfc	??_display_etc+1,w,c
  9794  001FD6  6E05               	movwf	wr16@addr+1,c
  9795  001FD8  0E10               	movlw	16
  9796  001FDA  201D               	addwfc	??_display_etc+2,w,c
  9797  001FDC  6E06               	movwf	wr16@addr+2,c
  9798  001FDE  0E00               	movlw	0
  9799  001FE0  201E               	addwfc	??_display_etc+3,w,c
  9800  001FE2  6E07               	movwf	wr16@addr+3,c
  9801  001FE4  0E00               	movlw	0
  9802  001FE6  6E09               	movwf	wr16@value+1,c
  9803  001FE8  0E92               	movlw	146
  9804  001FEA  6E08               	movwf	wr16@value,c
  9805  001FEC  ECB9  F033         	call	_wr16	;wreg free
  9806  001FF0  0E02               	movlw	2
  9807  001FF2  ECFA  F033         	call	_cmd_incrementn
  9808  001FF6  504F               	movf	_cmd_offset,w,c
  9809  001FF8  6E1B               	movwf	??_display_etc& (0+255),c
  9810  001FFA  5050               	movf	_cmd_offset+1,w,c
  9811  001FFC  6E1C               	movwf	(??_display_etc+1)& (0+255),c
  9812  001FFE  6A1D               	clrf	(??_display_etc+2)& (0+255),c
  9813  002000  6A1E               	clrf	(??_display_etc+3)& (0+255),c
  9814  002002  0E00               	movlw	0
  9815  002004  241B               	addwf	??_display_etc,w,c
  9816  002006  6E04               	movwf	wr16@addr,c
  9817  002008  0E80               	movlw	128
  9818  00200A  201C               	addwfc	??_display_etc+1,w,c
  9819  00200C  6E05               	movwf	wr16@addr+1,c
  9820  00200E  0E10               	movlw	16
  9821  002010  201D               	addwfc	??_display_etc+2,w,c
  9822  002012  6E06               	movwf	wr16@addr+2,c
  9823  002014  0E00               	movlw	0
  9824  002016  201E               	addwfc	??_display_etc+3,w,c
  9825  002018  6E07               	movwf	wr16@addr+3,c
  9826  00201A  0E00               	movlw	0
  9827  00201C  6E09               	movwf	wr16@value+1,c
  9828  00201E  0E1B               	movlw	27
  9829  002020  6E08               	movwf	wr16@value,c
  9830  002022  ECB9  F033         	call	_wr16	;wreg free
  9831  002026  0E02               	movlw	2
  9832  002028  ECFA  F033         	call	_cmd_incrementn
  9833  00202C  504F               	movf	_cmd_offset,w,c
  9834  00202E  6E1B               	movwf	??_display_etc& (0+255),c
  9835  002030  5050               	movf	_cmd_offset+1,w,c
  9836  002032  6E1C               	movwf	(??_display_etc+1)& (0+255),c
  9837  002034  6A1D               	clrf	(??_display_etc+2)& (0+255),c
  9838  002036  6A1E               	clrf	(??_display_etc+3)& (0+255),c
  9839  002038  0E00               	movlw	0
  9840  00203A  241B               	addwf	??_display_etc,w,c
  9841  00203C  6E04               	movwf	wr16@addr,c
  9842  00203E  0E80               	movlw	128
  9843  002040  201C               	addwfc	??_display_etc+1,w,c
  9844  002042  6E05               	movwf	wr16@addr+1,c
  9845  002044  0E10               	movlw	16
  9846  002046  201D               	addwfc	??_display_etc+2,w,c
  9847  002048  6E06               	movwf	wr16@addr+2,c
  9848  00204A  0E00               	movlw	0
  9849  00204C  201E               	addwfc	??_display_etc+3,w,c
  9850  00204E  6E07               	movwf	wr16@addr+3,c
  9851  002050  0E02               	movlw	2
  9852  002052  6E09               	movwf	wr16@value+1,c
  9853  002054  0E00               	movlw	0
  9854  002056  6E08               	movwf	wr16@value,c
  9855  002058  ECB9  F033         	call	_wr16	;wreg free
  9856  00205C  0E02               	movlw	2
  9857  00205E  ECFA  F033         	call	_cmd_incrementn
  9858  002062  504F               	movf	_cmd_offset,w,c
  9859  002064  6E1B               	movwf	??_display_etc& (0+255),c
  9860  002066  5050               	movf	_cmd_offset+1,w,c
  9861  002068  6E1C               	movwf	(??_display_etc+1)& (0+255),c
  9862  00206A  6A1D               	clrf	(??_display_etc+2)& (0+255),c
  9863  00206C  6A1E               	clrf	(??_display_etc+3)& (0+255),c
  9864  00206E  0E00               	movlw	0
  9865  002070  241B               	addwf	??_display_etc,w,c
  9866  002072  6E09               	movwf	wr8s@addr,c
  9867  002074  0E80               	movlw	128
  9868  002076  201C               	addwfc	??_display_etc+1,w,c
  9869  002078  6E0A               	movwf	wr8s@addr+1,c
  9870  00207A  0E10               	movlw	16
  9871  00207C  201D               	addwfc	??_display_etc+2,w,c
  9872  00207E  6E0B               	movwf	wr8s@addr+2,c
  9873  002080  0E00               	movlw	0
  9874  002082  201E               	addwfc	??_display_etc+3,w,c
  9875  002084  6E0C               	movwf	wr8s@addr+3,c
  9876  002086  0E65               	movlw	low STR_29
  9877  002088  6E0D               	movwf	wr8s@s,c
  9878  00208A  0E0F               	movlw	high STR_29
  9879  00208C  6E0E               	movwf	wr8s@s+1,c
  9880  00208E  ECD8  F031         	call	_wr8s	;wreg free
  9881  002092  ECFA  F033         	call	_cmd_incrementn
  9882                           
  9883                           ;display.c: 342:         break;
  9884  002096  0012               	return	
  9885  002098                     
  9886                           ;display.c: 344:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 146);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(w
      +                          r8s(1081344UL +cmd_offset, "Anti Lag"));
  9887  002098  0E0C               	movlw	12
  9888  00209A  6E11               	movwf	cmd@command,c
  9889  00209C  0EFF               	movlw	255
  9890  00209E  6E12               	movwf	cmd@command+1,c
  9891  0020A0  0EFF               	movlw	255
  9892  0020A2  6E13               	movwf	cmd@command+2,c
  9893  0020A4  0EFF               	movlw	255
  9894  0020A6  6E14               	movwf	cmd@command+3,c
  9895  0020A8  ECE1  F032         	call	_cmd	;wreg free
  9896  0020AC  504F               	movf	_cmd_offset,w,c
  9897  0020AE  6E1B               	movwf	??_display_etc& (0+255),c
  9898  0020B0  5050               	movf	_cmd_offset+1,w,c
  9899  0020B2  6E1C               	movwf	(??_display_etc+1)& (0+255),c
  9900  0020B4  6A1D               	clrf	(??_display_etc+2)& (0+255),c
  9901  0020B6  6A1E               	clrf	(??_display_etc+3)& (0+255),c
  9902  0020B8  0E00               	movlw	0
  9903  0020BA  241B               	addwf	??_display_etc,w,c
  9904  0020BC  6E04               	movwf	wr16@addr,c
  9905  0020BE  0E80               	movlw	128
  9906  0020C0  201C               	addwfc	??_display_etc+1,w,c
  9907  0020C2  6E05               	movwf	wr16@addr+1,c
  9908  0020C4  0E10               	movlw	16
  9909  0020C6  201D               	addwfc	??_display_etc+2,w,c
  9910  0020C8  6E06               	movwf	wr16@addr+2,c
  9911  0020CA  0E00               	movlw	0
  9912  0020CC  201E               	addwfc	??_display_etc+3,w,c
  9913  0020CE  6E07               	movwf	wr16@addr+3,c
  9914  0020D0  0E00               	movlw	0
  9915  0020D2  6E09               	movwf	wr16@value+1,c
  9916  0020D4  0E8B               	movlw	139
  9917  0020D6  6E08               	movwf	wr16@value,c
  9918  0020D8  ECB9  F033         	call	_wr16	;wreg free
  9919  0020DC  0E02               	movlw	2
  9920  0020DE  ECFA  F033         	call	_cmd_incrementn
  9921  0020E2  504F               	movf	_cmd_offset,w,c
  9922  0020E4  6E1B               	movwf	??_display_etc& (0+255),c
  9923  0020E6  5050               	movf	_cmd_offset+1,w,c
  9924  0020E8  6E1C               	movwf	(??_display_etc+1)& (0+255),c
  9925  0020EA  6A1D               	clrf	(??_display_etc+2)& (0+255),c
  9926  0020EC  6A1E               	clrf	(??_display_etc+3)& (0+255),c
  9927  0020EE  0E00               	movlw	0
  9928  0020F0  241B               	addwf	??_display_etc,w,c
  9929  0020F2  6E04               	movwf	wr16@addr,c
  9930  0020F4  0E80               	movlw	128
  9931  0020F6  201C               	addwfc	??_display_etc+1,w,c
  9932  0020F8  6E05               	movwf	wr16@addr+1,c
  9933  0020FA  0E10               	movlw	16
  9934  0020FC  201D               	addwfc	??_display_etc+2,w,c
  9935  0020FE  6E06               	movwf	wr16@addr+2,c
  9936  002100  0E00               	movlw	0
  9937  002102  201E               	addwfc	??_display_etc+3,w,c
  9938  002104  6E07               	movwf	wr16@addr+3,c
  9939  002106  0E00               	movlw	0
  9940  002108  6E09               	movwf	wr16@value+1,c
  9941  00210A  0E92               	movlw	146
  9942  00210C  6E08               	movwf	wr16@value,c
  9943  00210E  ECB9  F033         	call	_wr16	;wreg free
  9944  002112  0E02               	movlw	2
  9945  002114  ECFA  F033         	call	_cmd_incrementn
  9946  002118  504F               	movf	_cmd_offset,w,c
  9947  00211A  6E1B               	movwf	??_display_etc& (0+255),c
  9948  00211C  5050               	movf	_cmd_offset+1,w,c
  9949  00211E  6E1C               	movwf	(??_display_etc+1)& (0+255),c
  9950  002120  6A1D               	clrf	(??_display_etc+2)& (0+255),c
  9951  002122  6A1E               	clrf	(??_display_etc+3)& (0+255),c
  9952  002124  0E00               	movlw	0
  9953  002126  241B               	addwf	??_display_etc,w,c
  9954  002128  6E04               	movwf	wr16@addr,c
  9955  00212A  0E80               	movlw	128
  9956  00212C  201C               	addwfc	??_display_etc+1,w,c
  9957  00212E  6E05               	movwf	wr16@addr+1,c
  9958  002130  0E10               	movlw	16
  9959  002132  201D               	addwfc	??_display_etc+2,w,c
  9960  002134  6E06               	movwf	wr16@addr+2,c
  9961  002136  0E00               	movlw	0
  9962  002138  201E               	addwfc	??_display_etc+3,w,c
  9963  00213A  6E07               	movwf	wr16@addr+3,c
  9964  00213C  0E00               	movlw	0
  9965  00213E  6E09               	movwf	wr16@value+1,c
  9966  002140  0E1B               	movlw	27
  9967  002142  6E08               	movwf	wr16@value,c
  9968  002144  ECB9  F033         	call	_wr16	;wreg free
  9969  002148  0E02               	movlw	2
  9970  00214A  ECFA  F033         	call	_cmd_incrementn
  9971  00214E  504F               	movf	_cmd_offset,w,c
  9972  002150  6E1B               	movwf	??_display_etc& (0+255),c
  9973  002152  5050               	movf	_cmd_offset+1,w,c
  9974  002154  6E1C               	movwf	(??_display_etc+1)& (0+255),c
  9975  002156  6A1D               	clrf	(??_display_etc+2)& (0+255),c
  9976  002158  6A1E               	clrf	(??_display_etc+3)& (0+255),c
  9977  00215A  0E00               	movlw	0
  9978  00215C  241B               	addwf	??_display_etc,w,c
  9979  00215E  6E04               	movwf	wr16@addr,c
  9980  002160  0E80               	movlw	128
  9981  002162  201C               	addwfc	??_display_etc+1,w,c
  9982  002164  6E05               	movwf	wr16@addr+1,c
  9983  002166  0E10               	movlw	16
  9984  002168  201D               	addwfc	??_display_etc+2,w,c
  9985  00216A  6E06               	movwf	wr16@addr+2,c
  9986  00216C  0E00               	movlw	0
  9987  00216E  201E               	addwfc	??_display_etc+3,w,c
  9988  002170  6E07               	movwf	wr16@addr+3,c
  9989  002172  0E02               	movlw	2
  9990  002174  6E09               	movwf	wr16@value+1,c
  9991  002176  0E00               	movlw	0
  9992  002178  6E08               	movwf	wr16@value,c
  9993  00217A  ECB9  F033         	call	_wr16	;wreg free
  9994  00217E  0E02               	movlw	2
  9995  002180  ECFA  F033         	call	_cmd_incrementn
  9996  002184  504F               	movf	_cmd_offset,w,c
  9997  002186  6E1B               	movwf	??_display_etc& (0+255),c
  9998  002188  5050               	movf	_cmd_offset+1,w,c
  9999  00218A  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10000  00218C  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10001  00218E  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10002  002190  0E00               	movlw	0
 10003  002192  241B               	addwf	??_display_etc,w,c
 10004  002194  6E09               	movwf	wr8s@addr,c
 10005  002196  0E80               	movlw	128
 10006  002198  201C               	addwfc	??_display_etc+1,w,c
 10007  00219A  6E0A               	movwf	wr8s@addr+1,c
 10008  00219C  0E10               	movlw	16
 10009  00219E  201D               	addwfc	??_display_etc+2,w,c
 10010  0021A0  6E0B               	movwf	wr8s@addr+2,c
 10011  0021A2  0E00               	movlw	0
 10012  0021A4  201E               	addwfc	??_display_etc+3,w,c
 10013  0021A6  6E0C               	movwf	wr8s@addr+3,c
 10014  0021A8  0E21               	movlw	low STR_30
 10015  0021AA  6E0D               	movwf	wr8s@s,c
 10016  0021AC  0E0F               	movlw	high STR_30
 10017  0021AE  6E0E               	movwf	wr8s@s+1,c
 10018  0021B0  ECD8  F031         	call	_wr8s	;wreg free
 10019  0021B4  ECFA  F033         	call	_cmd_incrementn
 10020                           
 10021                           ;display.c: 345:         break;
 10022  0021B8  0012               	return	
 10023  0021BA                     
 10024                           ;display.c: 347:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 146);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(w
      +                          r8s(1081344UL +cmd_offset, "Limit"));
 10025  0021BA  0E0C               	movlw	12
 10026  0021BC  6E11               	movwf	cmd@command,c
 10027  0021BE  0EFF               	movlw	255
 10028  0021C0  6E12               	movwf	cmd@command+1,c
 10029  0021C2  0EFF               	movlw	255
 10030  0021C4  6E13               	movwf	cmd@command+2,c
 10031  0021C6  0EFF               	movlw	255
 10032  0021C8  6E14               	movwf	cmd@command+3,c
 10033  0021CA  ECE1  F032         	call	_cmd	;wreg free
 10034  0021CE  504F               	movf	_cmd_offset,w,c
 10035  0021D0  6E1B               	movwf	??_display_etc& (0+255),c
 10036  0021D2  5050               	movf	_cmd_offset+1,w,c
 10037  0021D4  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10038  0021D6  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10039  0021D8  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10040  0021DA  0E00               	movlw	0
 10041  0021DC  241B               	addwf	??_display_etc,w,c
 10042  0021DE  6E04               	movwf	wr16@addr,c
 10043  0021E0  0E80               	movlw	128
 10044  0021E2  201C               	addwfc	??_display_etc+1,w,c
 10045  0021E4  6E05               	movwf	wr16@addr+1,c
 10046  0021E6  0E10               	movlw	16
 10047  0021E8  201D               	addwfc	??_display_etc+2,w,c
 10048  0021EA  6E06               	movwf	wr16@addr+2,c
 10049  0021EC  0E00               	movlw	0
 10050  0021EE  201E               	addwfc	??_display_etc+3,w,c
 10051  0021F0  6E07               	movwf	wr16@addr+3,c
 10052  0021F2  0E00               	movlw	0
 10053  0021F4  6E09               	movwf	wr16@value+1,c
 10054  0021F6  0E8B               	movlw	139
 10055  0021F8  6E08               	movwf	wr16@value,c
 10056  0021FA  ECB9  F033         	call	_wr16	;wreg free
 10057  0021FE  0E02               	movlw	2
 10058  002200  ECFA  F033         	call	_cmd_incrementn
 10059  002204  504F               	movf	_cmd_offset,w,c
 10060  002206  6E1B               	movwf	??_display_etc& (0+255),c
 10061  002208  5050               	movf	_cmd_offset+1,w,c
 10062  00220A  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10063  00220C  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10064  00220E  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10065  002210  0E00               	movlw	0
 10066  002212  241B               	addwf	??_display_etc,w,c
 10067  002214  6E04               	movwf	wr16@addr,c
 10068  002216  0E80               	movlw	128
 10069  002218  201C               	addwfc	??_display_etc+1,w,c
 10070  00221A  6E05               	movwf	wr16@addr+1,c
 10071  00221C  0E10               	movlw	16
 10072  00221E  201D               	addwfc	??_display_etc+2,w,c
 10073  002220  6E06               	movwf	wr16@addr+2,c
 10074  002222  0E00               	movlw	0
 10075  002224  201E               	addwfc	??_display_etc+3,w,c
 10076  002226  6E07               	movwf	wr16@addr+3,c
 10077  002228  0E00               	movlw	0
 10078  00222A  6E09               	movwf	wr16@value+1,c
 10079  00222C  0E92               	movlw	146
 10080  00222E  6E08               	movwf	wr16@value,c
 10081  002230  ECB9  F033         	call	_wr16	;wreg free
 10082  002234  0E02               	movlw	2
 10083  002236  ECFA  F033         	call	_cmd_incrementn
 10084  00223A  504F               	movf	_cmd_offset,w,c
 10085  00223C  6E1B               	movwf	??_display_etc& (0+255),c
 10086  00223E  5050               	movf	_cmd_offset+1,w,c
 10087  002240  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10088  002242  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10089  002244  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10090  002246  0E00               	movlw	0
 10091  002248  241B               	addwf	??_display_etc,w,c
 10092  00224A  6E04               	movwf	wr16@addr,c
 10093  00224C  0E80               	movlw	128
 10094  00224E  201C               	addwfc	??_display_etc+1,w,c
 10095  002250  6E05               	movwf	wr16@addr+1,c
 10096  002252  0E10               	movlw	16
 10097  002254  201D               	addwfc	??_display_etc+2,w,c
 10098  002256  6E06               	movwf	wr16@addr+2,c
 10099  002258  0E00               	movlw	0
 10100  00225A  201E               	addwfc	??_display_etc+3,w,c
 10101  00225C  6E07               	movwf	wr16@addr+3,c
 10102  00225E  0E00               	movlw	0
 10103  002260  6E09               	movwf	wr16@value+1,c
 10104  002262  0E1B               	movlw	27
 10105  002264  6E08               	movwf	wr16@value,c
 10106  002266  ECB9  F033         	call	_wr16	;wreg free
 10107  00226A  0E02               	movlw	2
 10108  00226C  ECFA  F033         	call	_cmd_incrementn
 10109  002270  504F               	movf	_cmd_offset,w,c
 10110  002272  6E1B               	movwf	??_display_etc& (0+255),c
 10111  002274  5050               	movf	_cmd_offset+1,w,c
 10112  002276  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10113  002278  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10114  00227A  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10115  00227C  0E00               	movlw	0
 10116  00227E  241B               	addwf	??_display_etc,w,c
 10117  002280  6E04               	movwf	wr16@addr,c
 10118  002282  0E80               	movlw	128
 10119  002284  201C               	addwfc	??_display_etc+1,w,c
 10120  002286  6E05               	movwf	wr16@addr+1,c
 10121  002288  0E10               	movlw	16
 10122  00228A  201D               	addwfc	??_display_etc+2,w,c
 10123  00228C  6E06               	movwf	wr16@addr+2,c
 10124  00228E  0E00               	movlw	0
 10125  002290  201E               	addwfc	??_display_etc+3,w,c
 10126  002292  6E07               	movwf	wr16@addr+3,c
 10127  002294  0E02               	movlw	2
 10128  002296  6E09               	movwf	wr16@value+1,c
 10129  002298  0E00               	movlw	0
 10130  00229A  6E08               	movwf	wr16@value,c
 10131  00229C  ECB9  F033         	call	_wr16	;wreg free
 10132  0022A0  0E02               	movlw	2
 10133  0022A2  ECFA  F033         	call	_cmd_incrementn
 10134  0022A6  504F               	movf	_cmd_offset,w,c
 10135  0022A8  6E1B               	movwf	??_display_etc& (0+255),c
 10136  0022AA  5050               	movf	_cmd_offset+1,w,c
 10137  0022AC  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10138  0022AE  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10139  0022B0  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10140  0022B2  0E00               	movlw	0
 10141  0022B4  241B               	addwf	??_display_etc,w,c
 10142  0022B6  6E09               	movwf	wr8s@addr,c
 10143  0022B8  0E80               	movlw	128
 10144  0022BA  201C               	addwfc	??_display_etc+1,w,c
 10145  0022BC  6E0A               	movwf	wr8s@addr+1,c
 10146  0022BE  0E10               	movlw	16
 10147  0022C0  201D               	addwfc	??_display_etc+2,w,c
 10148  0022C2  6E0B               	movwf	wr8s@addr+2,c
 10149  0022C4  0E00               	movlw	0
 10150  0022C6  201E               	addwfc	??_display_etc+3,w,c
 10151  0022C8  6E0C               	movwf	wr8s@addr+3,c
 10152  0022CA  0E5F               	movlw	low STR_31
 10153  0022CC  6E0D               	movwf	wr8s@s,c
 10154  0022CE  0E0F               	movlw	high STR_31
 10155  0022D0  6E0E               	movwf	wr8s@s+1,c
 10156  0022D2  ECD8  F031         	call	_wr8s	;wreg free
 10157  0022D6  ECFA  F033         	call	_cmd_incrementn
 10158                           
 10159                           ;display.c: 348:         break;
 10160  0022DA  0012               	return	
 10161  0022DC                     
 10162                           ;display.c: 350:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 146);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(w
      +                          r8s(1081344UL +cmd_offset, "Gear Shift"));
 10163  0022DC  0E0C               	movlw	12
 10164  0022DE  6E11               	movwf	cmd@command,c
 10165  0022E0  0EFF               	movlw	255
 10166  0022E2  6E12               	movwf	cmd@command+1,c
 10167  0022E4  0EFF               	movlw	255
 10168  0022E6  6E13               	movwf	cmd@command+2,c
 10169  0022E8  0EFF               	movlw	255
 10170  0022EA  6E14               	movwf	cmd@command+3,c
 10171  0022EC  ECE1  F032         	call	_cmd	;wreg free
 10172  0022F0  504F               	movf	_cmd_offset,w,c
 10173  0022F2  6E1B               	movwf	??_display_etc& (0+255),c
 10174  0022F4  5050               	movf	_cmd_offset+1,w,c
 10175  0022F6  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10176  0022F8  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10177  0022FA  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10178  0022FC  0E00               	movlw	0
 10179  0022FE  241B               	addwf	??_display_etc,w,c
 10180  002300  6E04               	movwf	wr16@addr,c
 10181  002302  0E80               	movlw	128
 10182  002304  201C               	addwfc	??_display_etc+1,w,c
 10183  002306  6E05               	movwf	wr16@addr+1,c
 10184  002308  0E10               	movlw	16
 10185  00230A  201D               	addwfc	??_display_etc+2,w,c
 10186  00230C  6E06               	movwf	wr16@addr+2,c
 10187  00230E  0E00               	movlw	0
 10188  002310  201E               	addwfc	??_display_etc+3,w,c
 10189  002312  6E07               	movwf	wr16@addr+3,c
 10190  002314  0E00               	movlw	0
 10191  002316  6E09               	movwf	wr16@value+1,c
 10192  002318  0E8B               	movlw	139
 10193  00231A  6E08               	movwf	wr16@value,c
 10194  00231C  ECB9  F033         	call	_wr16	;wreg free
 10195  002320  0E02               	movlw	2
 10196  002322  ECFA  F033         	call	_cmd_incrementn
 10197  002326  504F               	movf	_cmd_offset,w,c
 10198  002328  6E1B               	movwf	??_display_etc& (0+255),c
 10199  00232A  5050               	movf	_cmd_offset+1,w,c
 10200  00232C  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10201  00232E  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10202  002330  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10203  002332  0E00               	movlw	0
 10204  002334  241B               	addwf	??_display_etc,w,c
 10205  002336  6E04               	movwf	wr16@addr,c
 10206  002338  0E80               	movlw	128
 10207  00233A  201C               	addwfc	??_display_etc+1,w,c
 10208  00233C  6E05               	movwf	wr16@addr+1,c
 10209  00233E  0E10               	movlw	16
 10210  002340  201D               	addwfc	??_display_etc+2,w,c
 10211  002342  6E06               	movwf	wr16@addr+2,c
 10212  002344  0E00               	movlw	0
 10213  002346  201E               	addwfc	??_display_etc+3,w,c
 10214  002348  6E07               	movwf	wr16@addr+3,c
 10215  00234A  0E00               	movlw	0
 10216  00234C  6E09               	movwf	wr16@value+1,c
 10217  00234E  0E92               	movlw	146
 10218  002350  6E08               	movwf	wr16@value,c
 10219  002352  ECB9  F033         	call	_wr16	;wreg free
 10220  002356  0E02               	movlw	2
 10221  002358  ECFA  F033         	call	_cmd_incrementn
 10222  00235C  504F               	movf	_cmd_offset,w,c
 10223  00235E  6E1B               	movwf	??_display_etc& (0+255),c
 10224  002360  5050               	movf	_cmd_offset+1,w,c
 10225  002362  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10226  002364  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10227  002366  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10228  002368  0E00               	movlw	0
 10229  00236A  241B               	addwf	??_display_etc,w,c
 10230  00236C  6E04               	movwf	wr16@addr,c
 10231  00236E  0E80               	movlw	128
 10232  002370  201C               	addwfc	??_display_etc+1,w,c
 10233  002372  6E05               	movwf	wr16@addr+1,c
 10234  002374  0E10               	movlw	16
 10235  002376  201D               	addwfc	??_display_etc+2,w,c
 10236  002378  6E06               	movwf	wr16@addr+2,c
 10237  00237A  0E00               	movlw	0
 10238  00237C  201E               	addwfc	??_display_etc+3,w,c
 10239  00237E  6E07               	movwf	wr16@addr+3,c
 10240  002380  0E00               	movlw	0
 10241  002382  6E09               	movwf	wr16@value+1,c
 10242  002384  0E1B               	movlw	27
 10243  002386  6E08               	movwf	wr16@value,c
 10244  002388  ECB9  F033         	call	_wr16	;wreg free
 10245  00238C  0E02               	movlw	2
 10246  00238E  ECFA  F033         	call	_cmd_incrementn
 10247  002392  504F               	movf	_cmd_offset,w,c
 10248  002394  6E1B               	movwf	??_display_etc& (0+255),c
 10249  002396  5050               	movf	_cmd_offset+1,w,c
 10250  002398  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10251  00239A  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10252  00239C  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10253  00239E  0E00               	movlw	0
 10254  0023A0  241B               	addwf	??_display_etc,w,c
 10255  0023A2  6E04               	movwf	wr16@addr,c
 10256  0023A4  0E80               	movlw	128
 10257  0023A6  201C               	addwfc	??_display_etc+1,w,c
 10258  0023A8  6E05               	movwf	wr16@addr+1,c
 10259  0023AA  0E10               	movlw	16
 10260  0023AC  201D               	addwfc	??_display_etc+2,w,c
 10261  0023AE  6E06               	movwf	wr16@addr+2,c
 10262  0023B0  0E00               	movlw	0
 10263  0023B2  201E               	addwfc	??_display_etc+3,w,c
 10264  0023B4  6E07               	movwf	wr16@addr+3,c
 10265  0023B6  0E02               	movlw	2
 10266  0023B8  6E09               	movwf	wr16@value+1,c
 10267  0023BA  0E00               	movlw	0
 10268  0023BC  6E08               	movwf	wr16@value,c
 10269  0023BE  ECB9  F033         	call	_wr16	;wreg free
 10270  0023C2  0E02               	movlw	2
 10271  0023C4  ECFA  F033         	call	_cmd_incrementn
 10272  0023C8  504F               	movf	_cmd_offset,w,c
 10273  0023CA  6E1B               	movwf	??_display_etc& (0+255),c
 10274  0023CC  5050               	movf	_cmd_offset+1,w,c
 10275  0023CE  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10276  0023D0  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10277  0023D2  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10278  0023D4  0E00               	movlw	0
 10279  0023D6  241B               	addwf	??_display_etc,w,c
 10280  0023D8  6E09               	movwf	wr8s@addr,c
 10281  0023DA  0E80               	movlw	128
 10282  0023DC  201C               	addwfc	??_display_etc+1,w,c
 10283  0023DE  6E0A               	movwf	wr8s@addr+1,c
 10284  0023E0  0E10               	movlw	16
 10285  0023E2  201D               	addwfc	??_display_etc+2,w,c
 10286  0023E4  6E0B               	movwf	wr8s@addr+2,c
 10287  0023E6  0E00               	movlw	0
 10288  0023E8  201E               	addwfc	??_display_etc+3,w,c
 10289  0023EA  6E0C               	movwf	wr8s@addr+3,c
 10290  0023EC  0E0C               	movlw	low STR_32
 10291  0023EE  6E0D               	movwf	wr8s@s,c
 10292  0023F0  0E0F               	movlw	high STR_32
 10293  0023F2  6E0E               	movwf	wr8s@s+1,c
 10294  0023F4  ECD8  F031         	call	_wr8s	;wreg free
 10295  0023F8  ECFA  F033         	call	_cmd_incrementn
 10296                           
 10297                           ;display.c: 351:         break;
 10298  0023FC  0012               	return	
 10299  0023FE                     
 10300                           ;display.c: 353:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 146);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(w
      +                          r8s(1081344UL +cmd_offset, "Test"));
 10301  0023FE  0E0C               	movlw	12
 10302  002400  6E11               	movwf	cmd@command,c
 10303  002402  0EFF               	movlw	255
 10304  002404  6E12               	movwf	cmd@command+1,c
 10305  002406  0EFF               	movlw	255
 10306  002408  6E13               	movwf	cmd@command+2,c
 10307  00240A  0EFF               	movlw	255
 10308  00240C  6E14               	movwf	cmd@command+3,c
 10309  00240E  ECE1  F032         	call	_cmd	;wreg free
 10310  002412  504F               	movf	_cmd_offset,w,c
 10311  002414  6E1B               	movwf	??_display_etc& (0+255),c
 10312  002416  5050               	movf	_cmd_offset+1,w,c
 10313  002418  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10314  00241A  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10315  00241C  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10316  00241E  0E00               	movlw	0
 10317  002420  241B               	addwf	??_display_etc,w,c
 10318  002422  6E04               	movwf	wr16@addr,c
 10319  002424  0E80               	movlw	128
 10320  002426  201C               	addwfc	??_display_etc+1,w,c
 10321  002428  6E05               	movwf	wr16@addr+1,c
 10322  00242A  0E10               	movlw	16
 10323  00242C  201D               	addwfc	??_display_etc+2,w,c
 10324  00242E  6E06               	movwf	wr16@addr+2,c
 10325  002430  0E00               	movlw	0
 10326  002432  201E               	addwfc	??_display_etc+3,w,c
 10327  002434  6E07               	movwf	wr16@addr+3,c
 10328  002436  0E00               	movlw	0
 10329  002438  6E09               	movwf	wr16@value+1,c
 10330  00243A  0E8B               	movlw	139
 10331  00243C  6E08               	movwf	wr16@value,c
 10332  00243E  ECB9  F033         	call	_wr16	;wreg free
 10333  002442  0E02               	movlw	2
 10334  002444  ECFA  F033         	call	_cmd_incrementn
 10335  002448  504F               	movf	_cmd_offset,w,c
 10336  00244A  6E1B               	movwf	??_display_etc& (0+255),c
 10337  00244C  5050               	movf	_cmd_offset+1,w,c
 10338  00244E  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10339  002450  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10340  002452  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10341  002454  0E00               	movlw	0
 10342  002456  241B               	addwf	??_display_etc,w,c
 10343  002458  6E04               	movwf	wr16@addr,c
 10344  00245A  0E80               	movlw	128
 10345  00245C  201C               	addwfc	??_display_etc+1,w,c
 10346  00245E  6E05               	movwf	wr16@addr+1,c
 10347  002460  0E10               	movlw	16
 10348  002462  201D               	addwfc	??_display_etc+2,w,c
 10349  002464  6E06               	movwf	wr16@addr+2,c
 10350  002466  0E00               	movlw	0
 10351  002468  201E               	addwfc	??_display_etc+3,w,c
 10352  00246A  6E07               	movwf	wr16@addr+3,c
 10353  00246C  0E00               	movlw	0
 10354  00246E  6E09               	movwf	wr16@value+1,c
 10355  002470  0E92               	movlw	146
 10356  002472  6E08               	movwf	wr16@value,c
 10357  002474  ECB9  F033         	call	_wr16	;wreg free
 10358  002478  0E02               	movlw	2
 10359  00247A  ECFA  F033         	call	_cmd_incrementn
 10360  00247E  504F               	movf	_cmd_offset,w,c
 10361  002480  6E1B               	movwf	??_display_etc& (0+255),c
 10362  002482  5050               	movf	_cmd_offset+1,w,c
 10363  002484  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10364  002486  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10365  002488  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10366  00248A  0E00               	movlw	0
 10367  00248C  241B               	addwf	??_display_etc,w,c
 10368  00248E  6E04               	movwf	wr16@addr,c
 10369  002490  0E80               	movlw	128
 10370  002492  201C               	addwfc	??_display_etc+1,w,c
 10371  002494  6E05               	movwf	wr16@addr+1,c
 10372  002496  0E10               	movlw	16
 10373  002498  201D               	addwfc	??_display_etc+2,w,c
 10374  00249A  6E06               	movwf	wr16@addr+2,c
 10375  00249C  0E00               	movlw	0
 10376  00249E  201E               	addwfc	??_display_etc+3,w,c
 10377  0024A0  6E07               	movwf	wr16@addr+3,c
 10378  0024A2  0E00               	movlw	0
 10379  0024A4  6E09               	movwf	wr16@value+1,c
 10380  0024A6  0E1B               	movlw	27
 10381  0024A8  6E08               	movwf	wr16@value,c
 10382  0024AA  ECB9  F033         	call	_wr16	;wreg free
 10383  0024AE  0E02               	movlw	2
 10384  0024B0  ECFA  F033         	call	_cmd_incrementn
 10385  0024B4  504F               	movf	_cmd_offset,w,c
 10386  0024B6  6E1B               	movwf	??_display_etc& (0+255),c
 10387  0024B8  5050               	movf	_cmd_offset+1,w,c
 10388  0024BA  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10389  0024BC  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10390  0024BE  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10391  0024C0  0E00               	movlw	0
 10392  0024C2  241B               	addwf	??_display_etc,w,c
 10393  0024C4  6E04               	movwf	wr16@addr,c
 10394  0024C6  0E80               	movlw	128
 10395  0024C8  201C               	addwfc	??_display_etc+1,w,c
 10396  0024CA  6E05               	movwf	wr16@addr+1,c
 10397  0024CC  0E10               	movlw	16
 10398  0024CE  201D               	addwfc	??_display_etc+2,w,c
 10399  0024D0  6E06               	movwf	wr16@addr+2,c
 10400  0024D2  0E00               	movlw	0
 10401  0024D4  201E               	addwfc	??_display_etc+3,w,c
 10402  0024D6  6E07               	movwf	wr16@addr+3,c
 10403  0024D8  0E02               	movlw	2
 10404  0024DA  6E09               	movwf	wr16@value+1,c
 10405  0024DC  0E00               	movlw	0
 10406  0024DE  6E08               	movwf	wr16@value,c
 10407  0024E0  ECB9  F033         	call	_wr16	;wreg free
 10408  0024E4  0E02               	movlw	2
 10409  0024E6  ECFA  F033         	call	_cmd_incrementn
 10410  0024EA  504F               	movf	_cmd_offset,w,c
 10411  0024EC  6E1B               	movwf	??_display_etc& (0+255),c
 10412  0024EE  5050               	movf	_cmd_offset+1,w,c
 10413  0024F0  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10414  0024F2  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10415  0024F4  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10416  0024F6  0E00               	movlw	0
 10417  0024F8  241B               	addwf	??_display_etc,w,c
 10418  0024FA  6E09               	movwf	wr8s@addr,c
 10419  0024FC  0E80               	movlw	128
 10420  0024FE  201C               	addwfc	??_display_etc+1,w,c
 10421  002500  6E0A               	movwf	wr8s@addr+1,c
 10422  002502  0E10               	movlw	16
 10423  002504  201D               	addwfc	??_display_etc+2,w,c
 10424  002506  6E0B               	movwf	wr8s@addr+2,c
 10425  002508  0E00               	movlw	0
 10426  00250A  201E               	addwfc	??_display_etc+3,w,c
 10427  00250C  6E0C               	movwf	wr8s@addr+3,c
 10428  00250E  0E79               	movlw	low STR_33
 10429  002510  6E0D               	movwf	wr8s@s,c
 10430  002512  0E0F               	movlw	high STR_33
 10431  002514  6E0E               	movwf	wr8s@s+1,c
 10432  002516  ECD8  F031         	call	_wr8s	;wreg free
 10433  00251A  ECFA  F033         	call	_cmd_incrementn
 10434                           
 10435                           ;display.c: 354:         break;
 10436  00251E  0012               	return	
 10437  002520                     
 10438                           ;display.c: 356:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 139);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 146);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 27)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 512UL);cmd_incrementn(2);cmd_incrementn(w
      +                          r8s(1081344UL +cmd_offset, "Normal"));
 10439  002520  0E0C               	movlw	12
 10440  002522  6E11               	movwf	cmd@command,c
 10441  002524  0EFF               	movlw	255
 10442  002526  6E12               	movwf	cmd@command+1,c
 10443  002528  0EFF               	movlw	255
 10444  00252A  6E13               	movwf	cmd@command+2,c
 10445  00252C  0EFF               	movlw	255
 10446  00252E  6E14               	movwf	cmd@command+3,c
 10447  002530  ECE1  F032         	call	_cmd	;wreg free
 10448  002534  504F               	movf	_cmd_offset,w,c
 10449  002536  6E1B               	movwf	??_display_etc& (0+255),c
 10450  002538  5050               	movf	_cmd_offset+1,w,c
 10451  00253A  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10452  00253C  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10453  00253E  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10454  002540  0E00               	movlw	0
 10455  002542  241B               	addwf	??_display_etc,w,c
 10456  002544  6E04               	movwf	wr16@addr,c
 10457  002546  0E80               	movlw	128
 10458  002548  201C               	addwfc	??_display_etc+1,w,c
 10459  00254A  6E05               	movwf	wr16@addr+1,c
 10460  00254C  0E10               	movlw	16
 10461  00254E  201D               	addwfc	??_display_etc+2,w,c
 10462  002550  6E06               	movwf	wr16@addr+2,c
 10463  002552  0E00               	movlw	0
 10464  002554  201E               	addwfc	??_display_etc+3,w,c
 10465  002556  6E07               	movwf	wr16@addr+3,c
 10466  002558  0E00               	movlw	0
 10467  00255A  6E09               	movwf	wr16@value+1,c
 10468  00255C  0E8B               	movlw	139
 10469  00255E  6E08               	movwf	wr16@value,c
 10470  002560  ECB9  F033         	call	_wr16	;wreg free
 10471  002564  0E02               	movlw	2
 10472  002566  ECFA  F033         	call	_cmd_incrementn
 10473  00256A  504F               	movf	_cmd_offset,w,c
 10474  00256C  6E1B               	movwf	??_display_etc& (0+255),c
 10475  00256E  5050               	movf	_cmd_offset+1,w,c
 10476  002570  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10477  002572  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10478  002574  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10479  002576  0E00               	movlw	0
 10480  002578  241B               	addwf	??_display_etc,w,c
 10481  00257A  6E04               	movwf	wr16@addr,c
 10482  00257C  0E80               	movlw	128
 10483  00257E  201C               	addwfc	??_display_etc+1,w,c
 10484  002580  6E05               	movwf	wr16@addr+1,c
 10485  002582  0E10               	movlw	16
 10486  002584  201D               	addwfc	??_display_etc+2,w,c
 10487  002586  6E06               	movwf	wr16@addr+2,c
 10488  002588  0E00               	movlw	0
 10489  00258A  201E               	addwfc	??_display_etc+3,w,c
 10490  00258C  6E07               	movwf	wr16@addr+3,c
 10491  00258E  0E00               	movlw	0
 10492  002590  6E09               	movwf	wr16@value+1,c
 10493  002592  0E92               	movlw	146
 10494  002594  6E08               	movwf	wr16@value,c
 10495  002596  ECB9  F033         	call	_wr16	;wreg free
 10496  00259A  0E02               	movlw	2
 10497  00259C  ECFA  F033         	call	_cmd_incrementn
 10498  0025A0  504F               	movf	_cmd_offset,w,c
 10499  0025A2  6E1B               	movwf	??_display_etc& (0+255),c
 10500  0025A4  5050               	movf	_cmd_offset+1,w,c
 10501  0025A6  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10502  0025A8  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10503  0025AA  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10504  0025AC  0E00               	movlw	0
 10505  0025AE  241B               	addwf	??_display_etc,w,c
 10506  0025B0  6E04               	movwf	wr16@addr,c
 10507  0025B2  0E80               	movlw	128
 10508  0025B4  201C               	addwfc	??_display_etc+1,w,c
 10509  0025B6  6E05               	movwf	wr16@addr+1,c
 10510  0025B8  0E10               	movlw	16
 10511  0025BA  201D               	addwfc	??_display_etc+2,w,c
 10512  0025BC  6E06               	movwf	wr16@addr+2,c
 10513  0025BE  0E00               	movlw	0
 10514  0025C0  201E               	addwfc	??_display_etc+3,w,c
 10515  0025C2  6E07               	movwf	wr16@addr+3,c
 10516  0025C4  0E00               	movlw	0
 10517  0025C6  6E09               	movwf	wr16@value+1,c
 10518  0025C8  0E1B               	movlw	27
 10519  0025CA  6E08               	movwf	wr16@value,c
 10520  0025CC  ECB9  F033         	call	_wr16	;wreg free
 10521  0025D0  0E02               	movlw	2
 10522  0025D2  ECFA  F033         	call	_cmd_incrementn
 10523  0025D6  504F               	movf	_cmd_offset,w,c
 10524  0025D8  6E1B               	movwf	??_display_etc& (0+255),c
 10525  0025DA  5050               	movf	_cmd_offset+1,w,c
 10526  0025DC  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10527  0025DE  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10528  0025E0  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10529  0025E2  0E00               	movlw	0
 10530  0025E4  241B               	addwf	??_display_etc,w,c
 10531  0025E6  6E04               	movwf	wr16@addr,c
 10532  0025E8  0E80               	movlw	128
 10533  0025EA  201C               	addwfc	??_display_etc+1,w,c
 10534  0025EC  6E05               	movwf	wr16@addr+1,c
 10535  0025EE  0E10               	movlw	16
 10536  0025F0  201D               	addwfc	??_display_etc+2,w,c
 10537  0025F2  6E06               	movwf	wr16@addr+2,c
 10538  0025F4  0E00               	movlw	0
 10539  0025F6  201E               	addwfc	??_display_etc+3,w,c
 10540  0025F8  6E07               	movwf	wr16@addr+3,c
 10541  0025FA  0E02               	movlw	2
 10542  0025FC  6E09               	movwf	wr16@value+1,c
 10543  0025FE  0E00               	movlw	0
 10544  002600  6E08               	movwf	wr16@value,c
 10545  002602  ECB9  F033         	call	_wr16	;wreg free
 10546  002606  0E02               	movlw	2
 10547  002608  ECFA  F033         	call	_cmd_incrementn
 10548  00260C  504F               	movf	_cmd_offset,w,c
 10549  00260E  6E1B               	movwf	??_display_etc& (0+255),c
 10550  002610  5050               	movf	_cmd_offset+1,w,c
 10551  002612  6E1C               	movwf	(??_display_etc+1)& (0+255),c
 10552  002614  6A1D               	clrf	(??_display_etc+2)& (0+255),c
 10553  002616  6A1E               	clrf	(??_display_etc+3)& (0+255),c
 10554  002618  0E00               	movlw	0
 10555  00261A  241B               	addwf	??_display_etc,w,c
 10556  00261C  6E09               	movwf	wr8s@addr,c
 10557  00261E  0E80               	movlw	128
 10558  002620  201C               	addwfc	??_display_etc+1,w,c
 10559  002622  6E0A               	movwf	wr8s@addr+1,c
 10560  002624  0E10               	movlw	16
 10561  002626  201D               	addwfc	??_display_etc+2,w,c
 10562  002628  6E0B               	movwf	wr8s@addr+2,c
 10563  00262A  0E00               	movlw	0
 10564  00262C  201E               	addwfc	??_display_etc+3,w,c
 10565  00262E  6E0C               	movwf	wr8s@addr+3,c
 10566  002630  0E40               	movlw	low STR_22
 10567  002632  6E0D               	movwf	wr8s@s,c
 10568  002634  0E0F               	movlw	high STR_22
 10569  002636  6E0E               	movwf	wr8s@s+1,c
 10570  002638  ECD8  F031         	call	_wr8s	;wreg free
 10571  00263C  ECFA  F033         	call	_cmd_incrementn
 10572                           
 10573                           ;display.c: 358:     }
 10574                           
 10575                           ;display.c: 357:         break;
 10576  002640  0012               	return	
 10577  002642                     l713:
 10578  002642  C019  F01B         	movff	display_etc@etc,??_display_etc
 10579  002646  C01A  F01C         	movff	display_etc@etc+1,??_display_etc+1
 10580                           
 10581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10582                           ; Switch size 1, requested type "space"
 10583                           ; Number of cases is 1, Range of values is 0 to 0
 10584                           ; switch strategies available:
 10585                           ; Name         Instructions Cycles
 10586                           ; simple_byte            4     3 (average)
 10587                           ;	Chosen strategy is simple_byte
 10588  00264A  501C               	movf	??_display_etc+1,w,c
 10589  00264C  0A00               	xorlw	0	; case 0
 10590  00264E  A4D8               	btfss	status,2,c
 10591  002650  D767               	goto	l720
 10592                           
 10593                           ; Switch size 1, requested type "space"
 10594                           ; Number of cases is 5, Range of values is 1 to 5
 10595                           ; switch strategies available:
 10596                           ; Name         Instructions Cycles
 10597                           ; simple_byte           16     9 (average)
 10598                           ;	Chosen strategy is simple_byte
 10599  002652  501B               	movf	??_display_etc,w,c
 10600  002654  0A01               	xorlw	1	; case 1
 10601  002656  B4D8               	btfsc	status,2,c
 10602  002658  D48E               	goto	l714
 10603  00265A  0A03               	xorlw	3	; case 2
 10604  00265C  B4D8               	btfsc	status,2,c
 10605  00265E  D51C               	goto	l716
 10606  002660  0A01               	xorlw	1	; case 3
 10607  002662  B4D8               	btfsc	status,2,c
 10608  002664  D5AA               	goto	l717
 10609  002666  0A07               	xorlw	7	; case 4
 10610  002668  B4D8               	btfsc	status,2,c
 10611  00266A  D638               	goto	l718
 10612  00266C  0A01               	xorlw	1	; case 5
 10613  00266E  B4D8               	btfsc	status,2,c
 10614  002670  D6C6               	goto	l719
 10615  002672  D756               	goto	l720
 10616  002674                     __end_of_display_etc:
 10617                           	opt stack 0
 10618                           tblptru	equ	0xFF8
 10619                           tblptrh	equ	0xFF7
 10620                           tblptrl	equ	0xFF6
 10621                           tablat	equ	0xFF5
 10622                           prodh	equ	0xFF4
 10623                           prodl	equ	0xFF3
 10624                           intcon	equ	0xFF2
 10625                           postinc0	equ	0xFEE
 10626                           wreg	equ	0xFE8
 10627                           postdec1	equ	0xFE5
 10628                           plusw1	equ	0xFE3
 10629                           fsr1l	equ	0xFE1
 10630                           plusw2	equ	0xFDB
 10631                           status	equ	0xFD8
 10632                           
 10633 ;; *************** function _display_end *****************
 10634 ;; Defined at:
 10635 ;;		line 27 in file "display.c"
 10636 ;; Parameters:    Size  Location     Type
 10637 ;;		None
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;		None
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      void 
 10642 ;; Registers used:
 10643 ;;		wreg, status,2, status,0, cstack
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10653 ;;Total ram usage:        0 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:    7
 10656 ;; This function calls:
 10657 ;;		_cmd
 10658 ;;		_wr16
 10659 ;; This function is called by:
 10660 ;;		_display
 10661 ;;		_main
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           	psect	text17
 10666  0064FA                     __ptext17:
 10667                           	opt stack 0
 10668  0064FA                     _display_end:
 10669                           	opt stack 23
 10670                           
 10671                           ;display.c: 28:     cmd(((0UL<<24)));
 10672                           
 10673                           ;incstack = 0
 10674  0064FA  0E00               	movlw	0
 10675  0064FC  6E11               	movwf	cmd@command,c
 10676  0064FE  0E00               	movlw	0
 10677  006500  6E12               	movwf	cmd@command+1,c
 10678  006502  0E00               	movlw	0
 10679  006504  6E13               	movwf	cmd@command+2,c
 10680  006506  0E00               	movlw	0
 10681  006508  6E14               	movwf	cmd@command+3,c
 10682  00650A  ECE1  F032         	call	_cmd	;wreg free
 10683                           
 10684                           ;display.c: 29:     cmd(4294967041UL);
 10685  00650E  0E01               	movlw	1
 10686  006510  6E11               	movwf	cmd@command,c
 10687  006512  0EFF               	movlw	255
 10688  006514  6E12               	movwf	cmd@command+1,c
 10689  006516  0EFF               	movlw	255
 10690  006518  6E13               	movwf	cmd@command+2,c
 10691  00651A  0EFF               	movlw	255
 10692  00651C  6E14               	movwf	cmd@command+3,c
 10693  00651E  ECE1  F032         	call	_cmd	;wreg free
 10694                           
 10695                           ;display.c: 30:     wr16(1058024UL, cmd_offset);
 10696  006522  0EE8               	movlw	232
 10697  006524  6E04               	movwf	wr16@addr,c
 10698  006526  0E24               	movlw	36
 10699  006528  6E05               	movwf	wr16@addr+1,c
 10700  00652A  0E10               	movlw	16
 10701  00652C  6E06               	movwf	wr16@addr+2,c
 10702  00652E  0E00               	movlw	0
 10703  006530  6E07               	movwf	wr16@addr+3,c
 10704  006532  C04F  F008         	movff	_cmd_offset,wr16@value
 10705  006536  C050  F009         	movff	_cmd_offset+1,wr16@value+1
 10706  00653A  ECB9  F033         	call	_wr16	;wreg free
 10707  00653E  0012               	return		;funcret
 10708  006540                     __end_of_display_end:
 10709                           	opt stack 0
 10710                           tblptru	equ	0xFF8
 10711                           tblptrh	equ	0xFF7
 10712                           tblptrl	equ	0xFF6
 10713                           tablat	equ	0xFF5
 10714                           prodh	equ	0xFF4
 10715                           prodl	equ	0xFF3
 10716                           intcon	equ	0xFF2
 10717                           postinc0	equ	0xFEE
 10718                           wreg	equ	0xFE8
 10719                           postdec1	equ	0xFE5
 10720                           plusw1	equ	0xFE3
 10721                           fsr1l	equ	0xFE1
 10722                           plusw2	equ	0xFDB
 10723                           status	equ	0xFD8
 10724                           
 10725 ;; *************** function _display_bspd *****************
 10726 ;; Defined at:
 10727 ;;		line 286 in file "display.c"
 10728 ;; Parameters:    Size  Location     Type
 10729 ;;  bspd            2   24[COMRAM] int 
 10730 ;; Auto vars:     Size  Location     Type
 10731 ;;		None
 10732 ;; Return value:  Size  Location     Type
 10733 ;;                  1    wreg      void 
 10734 ;; Registers used:
 10735 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10736 ;; Tracked objects:
 10737 ;;		On entry : 0/0
 10738 ;;		On exit  : 0/0
 10739 ;;		Unchanged: 0/0
 10740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10743 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10744 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10745 ;;Total ram usage:        6 bytes
 10746 ;; Hardware stack levels used:    1
 10747 ;; Hardware stack levels required when called:    7
 10748 ;; This function calls:
 10749 ;;		_cmd
 10750 ;;		_cmd_incrementn
 10751 ;;		_wr16
 10752 ;;		_wr8s
 10753 ;; This function is called by:
 10754 ;;		_display
 10755 ;;		_main
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text18
 10760  004920                     __ptext18:
 10761                           	opt stack 0
 10762  004920                     _display_bspd:
 10763                           	opt stack 23
 10764                           
 10765                           ;display.c: 287:     switch (bspd) {
 10766                           
 10767                           ;incstack = 0
 10768  004920  D1D1               	goto	l690
 10769  004922                     
 10770                           ;display.c: 289:         cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
 10771  004922  0E00               	movlw	0
 10772  004924  6E11               	movwf	cmd@command,c
 10773  004926  0EFF               	movlw	255
 10774  004928  6E12               	movwf	cmd@command+1,c
 10775  00492A  0E00               	movlw	0
 10776  00492C  6E13               	movwf	cmd@command+2,c
 10777  00492E  0E04               	movlw	4
 10778  004930  6E14               	movwf	cmd@command+3,c
 10779  004932  ECE1  F032         	call	_cmd	;wreg free
 10780                           
 10781                           ;display.c: 290:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 268);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 212);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(
      +                          wr8s(1081344UL +cmd_offset, "Normal"));
 10782  004936  0E0C               	movlw	12
 10783  004938  6E11               	movwf	cmd@command,c
 10784  00493A  0EFF               	movlw	255
 10785  00493C  6E12               	movwf	cmd@command+1,c
 10786  00493E  0EFF               	movlw	255
 10787  004940  6E13               	movwf	cmd@command+2,c
 10788  004942  0EFF               	movlw	255
 10789  004944  6E14               	movwf	cmd@command+3,c
 10790  004946  ECE1  F032         	call	_cmd	;wreg free
 10791  00494A  504F               	movf	_cmd_offset,w,c
 10792  00494C  6E1B               	movwf	??_display_bspd& (0+255),c
 10793  00494E  5050               	movf	_cmd_offset+1,w,c
 10794  004950  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 10795  004952  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 10796  004954  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 10797  004956  0E00               	movlw	0
 10798  004958  241B               	addwf	??_display_bspd,w,c
 10799  00495A  6E04               	movwf	wr16@addr,c
 10800  00495C  0E80               	movlw	128
 10801  00495E  201C               	addwfc	??_display_bspd+1,w,c
 10802  004960  6E05               	movwf	wr16@addr+1,c
 10803  004962  0E10               	movlw	16
 10804  004964  201D               	addwfc	??_display_bspd+2,w,c
 10805  004966  6E06               	movwf	wr16@addr+2,c
 10806  004968  0E00               	movlw	0
 10807  00496A  201E               	addwfc	??_display_bspd+3,w,c
 10808  00496C  6E07               	movwf	wr16@addr+3,c
 10809  00496E  0E01               	movlw	1
 10810  004970  6E09               	movwf	wr16@value+1,c
 10811  004972  0E0C               	movlw	12
 10812  004974  6E08               	movwf	wr16@value,c
 10813  004976  ECB9  F033         	call	_wr16	;wreg free
 10814  00497A  0E02               	movlw	2
 10815  00497C  ECFA  F033         	call	_cmd_incrementn
 10816  004980  504F               	movf	_cmd_offset,w,c
 10817  004982  6E1B               	movwf	??_display_bspd& (0+255),c
 10818  004984  5050               	movf	_cmd_offset+1,w,c
 10819  004986  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 10820  004988  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 10821  00498A  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 10822  00498C  0E00               	movlw	0
 10823  00498E  241B               	addwf	??_display_bspd,w,c
 10824  004990  6E04               	movwf	wr16@addr,c
 10825  004992  0E80               	movlw	128
 10826  004994  201C               	addwfc	??_display_bspd+1,w,c
 10827  004996  6E05               	movwf	wr16@addr+1,c
 10828  004998  0E10               	movlw	16
 10829  00499A  201D               	addwfc	??_display_bspd+2,w,c
 10830  00499C  6E06               	movwf	wr16@addr+2,c
 10831  00499E  0E00               	movlw	0
 10832  0049A0  201E               	addwfc	??_display_bspd+3,w,c
 10833  0049A2  6E07               	movwf	wr16@addr+3,c
 10834  0049A4  0E00               	movlw	0
 10835  0049A6  6E09               	movwf	wr16@value+1,c
 10836  0049A8  0ED4               	movlw	212
 10837  0049AA  6E08               	movwf	wr16@value,c
 10838  0049AC  ECB9  F033         	call	_wr16	;wreg free
 10839  0049B0  0E02               	movlw	2
 10840  0049B2  ECFA  F033         	call	_cmd_incrementn
 10841  0049B6  504F               	movf	_cmd_offset,w,c
 10842  0049B8  6E1B               	movwf	??_display_bspd& (0+255),c
 10843  0049BA  5050               	movf	_cmd_offset+1,w,c
 10844  0049BC  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 10845  0049BE  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 10846  0049C0  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 10847  0049C2  0E00               	movlw	0
 10848  0049C4  241B               	addwf	??_display_bspd,w,c
 10849  0049C6  6E04               	movwf	wr16@addr,c
 10850  0049C8  0E80               	movlw	128
 10851  0049CA  201C               	addwfc	??_display_bspd+1,w,c
 10852  0049CC  6E05               	movwf	wr16@addr+1,c
 10853  0049CE  0E10               	movlw	16
 10854  0049D0  201D               	addwfc	??_display_bspd+2,w,c
 10855  0049D2  6E06               	movwf	wr16@addr+2,c
 10856  0049D4  0E00               	movlw	0
 10857  0049D6  201E               	addwfc	??_display_bspd+3,w,c
 10858  0049D8  6E07               	movwf	wr16@addr+3,c
 10859  0049DA  0E00               	movlw	0
 10860  0049DC  6E09               	movwf	wr16@value+1,c
 10861  0049DE  0E1C               	movlw	28
 10862  0049E0  6E08               	movwf	wr16@value,c
 10863  0049E2  ECB9  F033         	call	_wr16	;wreg free
 10864  0049E6  0E02               	movlw	2
 10865  0049E8  ECFA  F033         	call	_cmd_incrementn
 10866  0049EC  504F               	movf	_cmd_offset,w,c
 10867  0049EE  6E1B               	movwf	??_display_bspd& (0+255),c
 10868  0049F0  5050               	movf	_cmd_offset+1,w,c
 10869  0049F2  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 10870  0049F4  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 10871  0049F6  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 10872  0049F8  0E00               	movlw	0
 10873  0049FA  241B               	addwf	??_display_bspd,w,c
 10874  0049FC  6E04               	movwf	wr16@addr,c
 10875  0049FE  0E80               	movlw	128
 10876  004A00  201C               	addwfc	??_display_bspd+1,w,c
 10877  004A02  6E05               	movwf	wr16@addr+1,c
 10878  004A04  0E10               	movlw	16
 10879  004A06  201D               	addwfc	??_display_bspd+2,w,c
 10880  004A08  6E06               	movwf	wr16@addr+2,c
 10881  004A0A  0E00               	movlw	0
 10882  004A0C  201E               	addwfc	??_display_bspd+3,w,c
 10883  004A0E  6E07               	movwf	wr16@addr+3,c
 10884  004A10  0E06               	movlw	6
 10885  004A12  6E09               	movwf	wr16@value+1,c
 10886  004A14  0E00               	movlw	0
 10887  004A16  6E08               	movwf	wr16@value,c
 10888  004A18  ECB9  F033         	call	_wr16	;wreg free
 10889  004A1C  0E02               	movlw	2
 10890  004A1E  ECFA  F033         	call	_cmd_incrementn
 10891  004A22  504F               	movf	_cmd_offset,w,c
 10892  004A24  6E1B               	movwf	??_display_bspd& (0+255),c
 10893  004A26  5050               	movf	_cmd_offset+1,w,c
 10894  004A28  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 10895  004A2A  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 10896  004A2C  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 10897  004A2E  0E00               	movlw	0
 10898  004A30  241B               	addwf	??_display_bspd,w,c
 10899  004A32  6E09               	movwf	wr8s@addr,c
 10900  004A34  0E80               	movlw	128
 10901  004A36  201C               	addwfc	??_display_bspd+1,w,c
 10902  004A38  6E0A               	movwf	wr8s@addr+1,c
 10903  004A3A  0E10               	movlw	16
 10904  004A3C  201D               	addwfc	??_display_bspd+2,w,c
 10905  004A3E  6E0B               	movwf	wr8s@addr+2,c
 10906  004A40  0E00               	movlw	0
 10907  004A42  201E               	addwfc	??_display_bspd+3,w,c
 10908  004A44  6E0C               	movwf	wr8s@addr+3,c
 10909  004A46  0E40               	movlw	low STR_22
 10910  004A48  6E0D               	movwf	wr8s@s,c
 10911  004A4A  0E0F               	movlw	high STR_22
 10912  004A4C  6E0E               	movwf	wr8s@s+1,c
 10913  004A4E  ECD8  F031         	call	_wr8s	;wreg free
 10914  004A52  ECFA  F033         	call	_cmd_incrementn
 10915                           
 10916                           ;display.c: 291:         break;
 10917  004A56  0012               	return	
 10918  004A58                     
 10919                           ;display.c: 293:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255
      +                          UL)<<0)));
 10920  004A58  0E00               	movlw	0
 10921  004A5A  6E11               	movwf	cmd@command,c
 10922  004A5C  0EFF               	movlw	255
 10923  004A5E  6E12               	movwf	cmd@command+1,c
 10924  004A60  0EFF               	movlw	255
 10925  004A62  6E13               	movwf	cmd@command+2,c
 10926  004A64  0E04               	movlw	4
 10927  004A66  6E14               	movwf	cmd@command+3,c
 10928  004A68  ECE1  F032         	call	_cmd	;wreg free
 10929                           
 10930                           ;display.c: 294:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 268);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 212);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(
      +                          wr8s(1081344UL +cmd_offset, "Warning"));
 10931  004A6C  0E0C               	movlw	12
 10932  004A6E  6E11               	movwf	cmd@command,c
 10933  004A70  0EFF               	movlw	255
 10934  004A72  6E12               	movwf	cmd@command+1,c
 10935  004A74  0EFF               	movlw	255
 10936  004A76  6E13               	movwf	cmd@command+2,c
 10937  004A78  0EFF               	movlw	255
 10938  004A7A  6E14               	movwf	cmd@command+3,c
 10939  004A7C  ECE1  F032         	call	_cmd	;wreg free
 10940  004A80  504F               	movf	_cmd_offset,w,c
 10941  004A82  6E1B               	movwf	??_display_bspd& (0+255),c
 10942  004A84  5050               	movf	_cmd_offset+1,w,c
 10943  004A86  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 10944  004A88  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 10945  004A8A  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 10946  004A8C  0E00               	movlw	0
 10947  004A8E  241B               	addwf	??_display_bspd,w,c
 10948  004A90  6E04               	movwf	wr16@addr,c
 10949  004A92  0E80               	movlw	128
 10950  004A94  201C               	addwfc	??_display_bspd+1,w,c
 10951  004A96  6E05               	movwf	wr16@addr+1,c
 10952  004A98  0E10               	movlw	16
 10953  004A9A  201D               	addwfc	??_display_bspd+2,w,c
 10954  004A9C  6E06               	movwf	wr16@addr+2,c
 10955  004A9E  0E00               	movlw	0
 10956  004AA0  201E               	addwfc	??_display_bspd+3,w,c
 10957  004AA2  6E07               	movwf	wr16@addr+3,c
 10958  004AA4  0E01               	movlw	1
 10959  004AA6  6E09               	movwf	wr16@value+1,c
 10960  004AA8  0E0C               	movlw	12
 10961  004AAA  6E08               	movwf	wr16@value,c
 10962  004AAC  ECB9  F033         	call	_wr16	;wreg free
 10963  004AB0  0E02               	movlw	2
 10964  004AB2  ECFA  F033         	call	_cmd_incrementn
 10965  004AB6  504F               	movf	_cmd_offset,w,c
 10966  004AB8  6E1B               	movwf	??_display_bspd& (0+255),c
 10967  004ABA  5050               	movf	_cmd_offset+1,w,c
 10968  004ABC  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 10969  004ABE  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 10970  004AC0  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 10971  004AC2  0E00               	movlw	0
 10972  004AC4  241B               	addwf	??_display_bspd,w,c
 10973  004AC6  6E04               	movwf	wr16@addr,c
 10974  004AC8  0E80               	movlw	128
 10975  004ACA  201C               	addwfc	??_display_bspd+1,w,c
 10976  004ACC  6E05               	movwf	wr16@addr+1,c
 10977  004ACE  0E10               	movlw	16
 10978  004AD0  201D               	addwfc	??_display_bspd+2,w,c
 10979  004AD2  6E06               	movwf	wr16@addr+2,c
 10980  004AD4  0E00               	movlw	0
 10981  004AD6  201E               	addwfc	??_display_bspd+3,w,c
 10982  004AD8  6E07               	movwf	wr16@addr+3,c
 10983  004ADA  0E00               	movlw	0
 10984  004ADC  6E09               	movwf	wr16@value+1,c
 10985  004ADE  0ED4               	movlw	212
 10986  004AE0  6E08               	movwf	wr16@value,c
 10987  004AE2  ECB9  F033         	call	_wr16	;wreg free
 10988  004AE6  0E02               	movlw	2
 10989  004AE8  ECFA  F033         	call	_cmd_incrementn
 10990  004AEC  504F               	movf	_cmd_offset,w,c
 10991  004AEE  6E1B               	movwf	??_display_bspd& (0+255),c
 10992  004AF0  5050               	movf	_cmd_offset+1,w,c
 10993  004AF2  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 10994  004AF4  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 10995  004AF6  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 10996  004AF8  0E00               	movlw	0
 10997  004AFA  241B               	addwf	??_display_bspd,w,c
 10998  004AFC  6E04               	movwf	wr16@addr,c
 10999  004AFE  0E80               	movlw	128
 11000  004B00  201C               	addwfc	??_display_bspd+1,w,c
 11001  004B02  6E05               	movwf	wr16@addr+1,c
 11002  004B04  0E10               	movlw	16
 11003  004B06  201D               	addwfc	??_display_bspd+2,w,c
 11004  004B08  6E06               	movwf	wr16@addr+2,c
 11005  004B0A  0E00               	movlw	0
 11006  004B0C  201E               	addwfc	??_display_bspd+3,w,c
 11007  004B0E  6E07               	movwf	wr16@addr+3,c
 11008  004B10  0E00               	movlw	0
 11009  004B12  6E09               	movwf	wr16@value+1,c
 11010  004B14  0E1C               	movlw	28
 11011  004B16  6E08               	movwf	wr16@value,c
 11012  004B18  ECB9  F033         	call	_wr16	;wreg free
 11013  004B1C  0E02               	movlw	2
 11014  004B1E  ECFA  F033         	call	_cmd_incrementn
 11015  004B22  504F               	movf	_cmd_offset,w,c
 11016  004B24  6E1B               	movwf	??_display_bspd& (0+255),c
 11017  004B26  5050               	movf	_cmd_offset+1,w,c
 11018  004B28  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11019  004B2A  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11020  004B2C  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11021  004B2E  0E00               	movlw	0
 11022  004B30  241B               	addwf	??_display_bspd,w,c
 11023  004B32  6E04               	movwf	wr16@addr,c
 11024  004B34  0E80               	movlw	128
 11025  004B36  201C               	addwfc	??_display_bspd+1,w,c
 11026  004B38  6E05               	movwf	wr16@addr+1,c
 11027  004B3A  0E10               	movlw	16
 11028  004B3C  201D               	addwfc	??_display_bspd+2,w,c
 11029  004B3E  6E06               	movwf	wr16@addr+2,c
 11030  004B40  0E00               	movlw	0
 11031  004B42  201E               	addwfc	??_display_bspd+3,w,c
 11032  004B44  6E07               	movwf	wr16@addr+3,c
 11033  004B46  0E06               	movlw	6
 11034  004B48  6E09               	movwf	wr16@value+1,c
 11035  004B4A  0E00               	movlw	0
 11036  004B4C  6E08               	movwf	wr16@value,c
 11037  004B4E  ECB9  F033         	call	_wr16	;wreg free
 11038  004B52  0E02               	movlw	2
 11039  004B54  ECFA  F033         	call	_cmd_incrementn
 11040  004B58  504F               	movf	_cmd_offset,w,c
 11041  004B5A  6E1B               	movwf	??_display_bspd& (0+255),c
 11042  004B5C  5050               	movf	_cmd_offset+1,w,c
 11043  004B5E  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11044  004B60  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11045  004B62  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11046  004B64  0E00               	movlw	0
 11047  004B66  241B               	addwf	??_display_bspd,w,c
 11048  004B68  6E09               	movwf	wr8s@addr,c
 11049  004B6A  0E80               	movlw	128
 11050  004B6C  201C               	addwfc	??_display_bspd+1,w,c
 11051  004B6E  6E0A               	movwf	wr8s@addr+1,c
 11052  004B70  0E10               	movlw	16
 11053  004B72  201D               	addwfc	??_display_bspd+2,w,c
 11054  004B74  6E0B               	movwf	wr8s@addr+2,c
 11055  004B76  0E00               	movlw	0
 11056  004B78  201E               	addwfc	??_display_bspd+3,w,c
 11057  004B7A  6E0C               	movwf	wr8s@addr+3,c
 11058  004B7C  0E2A               	movlw	low STR_23
 11059  004B7E  6E0D               	movwf	wr8s@s,c
 11060  004B80  0E0F               	movlw	high STR_23
 11061  004B82  6E0E               	movwf	wr8s@s+1,c
 11062  004B84  ECD8  F031         	call	_wr8s	;wreg free
 11063  004B88  ECFA  F033         	call	_cmd_incrementn
 11064                           
 11065                           ;display.c: 295:         break;
 11066  004B8C  0012               	return	
 11067  004B8E                     
 11068                           ;display.c: 297:         cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL
      +                          )<<0)));
 11069  004B8E  0E00               	movlw	0
 11070  004B90  6E11               	movwf	cmd@command,c
 11071  004B92  0E00               	movlw	0
 11072  004B94  6E12               	movwf	cmd@command+1,c
 11073  004B96  0EFF               	movlw	255
 11074  004B98  6E13               	movwf	cmd@command+2,c
 11075  004B9A  0E04               	movlw	4
 11076  004B9C  6E14               	movwf	cmd@command+3,c
 11077  004B9E  ECE1  F032         	call	_cmd	;wreg free
 11078                           
 11079                           ;display.c: 298:         cmd(4294967052UL);wr16(1081344UL +cmd_offset, 268);cmd_incremen
      +                          tn(2);wr16(1081344UL +cmd_offset, 212);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 28)
      +                          ;cmd_incrementn(2);wr16(1081344UL +cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(
      +                          wr8s(1081344UL +cmd_offset, "Error"));
 11080  004BA2  0E0C               	movlw	12
 11081  004BA4  6E11               	movwf	cmd@command,c
 11082  004BA6  0EFF               	movlw	255
 11083  004BA8  6E12               	movwf	cmd@command+1,c
 11084  004BAA  0EFF               	movlw	255
 11085  004BAC  6E13               	movwf	cmd@command+2,c
 11086  004BAE  0EFF               	movlw	255
 11087  004BB0  6E14               	movwf	cmd@command+3,c
 11088  004BB2  ECE1  F032         	call	_cmd	;wreg free
 11089  004BB6  504F               	movf	_cmd_offset,w,c
 11090  004BB8  6E1B               	movwf	??_display_bspd& (0+255),c
 11091  004BBA  5050               	movf	_cmd_offset+1,w,c
 11092  004BBC  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11093  004BBE  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11094  004BC0  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11095  004BC2  0E00               	movlw	0
 11096  004BC4  241B               	addwf	??_display_bspd,w,c
 11097  004BC6  6E04               	movwf	wr16@addr,c
 11098  004BC8  0E80               	movlw	128
 11099  004BCA  201C               	addwfc	??_display_bspd+1,w,c
 11100  004BCC  6E05               	movwf	wr16@addr+1,c
 11101  004BCE  0E10               	movlw	16
 11102  004BD0  201D               	addwfc	??_display_bspd+2,w,c
 11103  004BD2  6E06               	movwf	wr16@addr+2,c
 11104  004BD4  0E00               	movlw	0
 11105  004BD6  201E               	addwfc	??_display_bspd+3,w,c
 11106  004BD8  6E07               	movwf	wr16@addr+3,c
 11107  004BDA  0E01               	movlw	1
 11108  004BDC  6E09               	movwf	wr16@value+1,c
 11109  004BDE  0E0C               	movlw	12
 11110  004BE0  6E08               	movwf	wr16@value,c
 11111  004BE2  ECB9  F033         	call	_wr16	;wreg free
 11112  004BE6  0E02               	movlw	2
 11113  004BE8  ECFA  F033         	call	_cmd_incrementn
 11114  004BEC  504F               	movf	_cmd_offset,w,c
 11115  004BEE  6E1B               	movwf	??_display_bspd& (0+255),c
 11116  004BF0  5050               	movf	_cmd_offset+1,w,c
 11117  004BF2  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11118  004BF4  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11119  004BF6  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11120  004BF8  0E00               	movlw	0
 11121  004BFA  241B               	addwf	??_display_bspd,w,c
 11122  004BFC  6E04               	movwf	wr16@addr,c
 11123  004BFE  0E80               	movlw	128
 11124  004C00  201C               	addwfc	??_display_bspd+1,w,c
 11125  004C02  6E05               	movwf	wr16@addr+1,c
 11126  004C04  0E10               	movlw	16
 11127  004C06  201D               	addwfc	??_display_bspd+2,w,c
 11128  004C08  6E06               	movwf	wr16@addr+2,c
 11129  004C0A  0E00               	movlw	0
 11130  004C0C  201E               	addwfc	??_display_bspd+3,w,c
 11131  004C0E  6E07               	movwf	wr16@addr+3,c
 11132  004C10  0E00               	movlw	0
 11133  004C12  6E09               	movwf	wr16@value+1,c
 11134  004C14  0ED4               	movlw	212
 11135  004C16  6E08               	movwf	wr16@value,c
 11136  004C18  ECB9  F033         	call	_wr16	;wreg free
 11137  004C1C  0E02               	movlw	2
 11138  004C1E  ECFA  F033         	call	_cmd_incrementn
 11139  004C22  504F               	movf	_cmd_offset,w,c
 11140  004C24  6E1B               	movwf	??_display_bspd& (0+255),c
 11141  004C26  5050               	movf	_cmd_offset+1,w,c
 11142  004C28  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11143  004C2A  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11144  004C2C  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11145  004C2E  0E00               	movlw	0
 11146  004C30  241B               	addwf	??_display_bspd,w,c
 11147  004C32  6E04               	movwf	wr16@addr,c
 11148  004C34  0E80               	movlw	128
 11149  004C36  201C               	addwfc	??_display_bspd+1,w,c
 11150  004C38  6E05               	movwf	wr16@addr+1,c
 11151  004C3A  0E10               	movlw	16
 11152  004C3C  201D               	addwfc	??_display_bspd+2,w,c
 11153  004C3E  6E06               	movwf	wr16@addr+2,c
 11154  004C40  0E00               	movlw	0
 11155  004C42  201E               	addwfc	??_display_bspd+3,w,c
 11156  004C44  6E07               	movwf	wr16@addr+3,c
 11157  004C46  0E00               	movlw	0
 11158  004C48  6E09               	movwf	wr16@value+1,c
 11159  004C4A  0E1C               	movlw	28
 11160  004C4C  6E08               	movwf	wr16@value,c
 11161  004C4E  ECB9  F033         	call	_wr16	;wreg free
 11162  004C52  0E02               	movlw	2
 11163  004C54  ECFA  F033         	call	_cmd_incrementn
 11164  004C58  504F               	movf	_cmd_offset,w,c
 11165  004C5A  6E1B               	movwf	??_display_bspd& (0+255),c
 11166  004C5C  5050               	movf	_cmd_offset+1,w,c
 11167  004C5E  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11168  004C60  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11169  004C62  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11170  004C64  0E00               	movlw	0
 11171  004C66  241B               	addwf	??_display_bspd,w,c
 11172  004C68  6E04               	movwf	wr16@addr,c
 11173  004C6A  0E80               	movlw	128
 11174  004C6C  201C               	addwfc	??_display_bspd+1,w,c
 11175  004C6E  6E05               	movwf	wr16@addr+1,c
 11176  004C70  0E10               	movlw	16
 11177  004C72  201D               	addwfc	??_display_bspd+2,w,c
 11178  004C74  6E06               	movwf	wr16@addr+2,c
 11179  004C76  0E00               	movlw	0
 11180  004C78  201E               	addwfc	??_display_bspd+3,w,c
 11181  004C7A  6E07               	movwf	wr16@addr+3,c
 11182  004C7C  0E06               	movlw	6
 11183  004C7E  6E09               	movwf	wr16@value+1,c
 11184  004C80  0E00               	movlw	0
 11185  004C82  6E08               	movwf	wr16@value,c
 11186  004C84  ECB9  F033         	call	_wr16	;wreg free
 11187  004C88  0E02               	movlw	2
 11188  004C8A  ECFA  F033         	call	_cmd_incrementn
 11189  004C8E  504F               	movf	_cmd_offset,w,c
 11190  004C90  6E1B               	movwf	??_display_bspd& (0+255),c
 11191  004C92  5050               	movf	_cmd_offset+1,w,c
 11192  004C94  6E1C               	movwf	(??_display_bspd+1)& (0+255),c
 11193  004C96  6A1D               	clrf	(??_display_bspd+2)& (0+255),c
 11194  004C98  6A1E               	clrf	(??_display_bspd+3)& (0+255),c
 11195  004C9A  0E00               	movlw	0
 11196  004C9C  241B               	addwf	??_display_bspd,w,c
 11197  004C9E  6E09               	movwf	wr8s@addr,c
 11198  004CA0  0E80               	movlw	128
 11199  004CA2  201C               	addwfc	??_display_bspd+1,w,c
 11200  004CA4  6E0A               	movwf	wr8s@addr+1,c
 11201  004CA6  0E10               	movlw	16
 11202  004CA8  201D               	addwfc	??_display_bspd+2,w,c
 11203  004CAA  6E0B               	movwf	wr8s@addr+2,c
 11204  004CAC  0E00               	movlw	0
 11205  004CAE  201E               	addwfc	??_display_bspd+3,w,c
 11206  004CB0  6E0C               	movwf	wr8s@addr+3,c
 11207  004CB2  0E59               	movlw	low STR_24
 11208  004CB4  6E0D               	movwf	wr8s@s,c
 11209  004CB6  0E0F               	movlw	high STR_24
 11210  004CB8  6E0E               	movwf	wr8s@s+1,c
 11211  004CBA  ECD8  F031         	call	_wr8s	;wreg free
 11212  004CBE  ECFA  F033         	call	_cmd_incrementn
 11213                           
 11214                           ;display.c: 302:     }
 11215                           
 11216                           ;display.c: 301:         break;
 11217                           
 11218                           ;display.c: 300:         default:
 11219                           
 11220                           ;display.c: 299:         break;
 11221  004CC2  0012               	return	
 11222  004CC4                     l690:
 11223  004CC4  C019  F01B         	movff	display_bspd@bspd,??_display_bspd
 11224  004CC8  C01A  F01C         	movff	display_bspd@bspd+1,??_display_bspd+1
 11225                           
 11226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11227                           ; Switch size 1, requested type "space"
 11228                           ; Number of cases is 1, Range of values is 0 to 0
 11229                           ; switch strategies available:
 11230                           ; Name         Instructions Cycles
 11231                           ; simple_byte            4     3 (average)
 11232                           ;	Chosen strategy is simple_byte
 11233  004CCC  501C               	movf	??_display_bspd+1,w,c
 11234  004CCE  0A00               	xorlw	0	; case 0
 11235  004CD0  A4D8               	btfss	status,2,c
 11236  004CD2  0012               	return	
 11237                           
 11238                           ; Switch size 1, requested type "space"
 11239                           ; Number of cases is 3, Range of values is 0 to 2
 11240                           ; switch strategies available:
 11241                           ; Name         Instructions Cycles
 11242                           ; simple_byte           10     6 (average)
 11243                           ;	Chosen strategy is simple_byte
 11244  004CD4  501B               	movf	??_display_bspd,w,c
 11245  004CD6  0A00               	xorlw	0	; case 0
 11246  004CD8  B4D8               	btfsc	status,2,c
 11247  004CDA  D623               	goto	l691
 11248  004CDC  0A01               	xorlw	1	; case 1
 11249  004CDE  B4D8               	btfsc	status,2,c
 11250  004CE0  D6BB               	goto	l693
 11251  004CE2  0A03               	xorlw	3	; case 2
 11252  004CE4  A4D8               	btfss	status,2,c
 11253  004CE6  0012               	return	
 11254  004CE8  D752               	goto	l694
 11255  004CEA                     __end_of_display_bspd:
 11256                           	opt stack 0
 11257                           tblptru	equ	0xFF8
 11258                           tblptrh	equ	0xFF7
 11259                           tblptrl	equ	0xFF6
 11260                           tablat	equ	0xFF5
 11261                           prodh	equ	0xFF4
 11262                           prodl	equ	0xFF3
 11263                           intcon	equ	0xFF2
 11264                           postinc0	equ	0xFEE
 11265                           wreg	equ	0xFE8
 11266                           postdec1	equ	0xFE5
 11267                           plusw1	equ	0xFE3
 11268                           fsr1l	equ	0xFE1
 11269                           plusw2	equ	0xFDB
 11270                           status	equ	0xFD8
 11271                           
 11272 ;; *************** function _display_bottom_section *****************
 11273 ;; Defined at:
 11274 ;;		line 33 in file "display.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;  volts           2   30[COMRAM] int 
 11277 ;;  tp              2   32[COMRAM] int 
 11278 ;; Auto vars:     Size  Location     Type
 11279 ;;		None
 11280 ;; Return value:  Size  Location     Type
 11281 ;;                  1    wreg      void 
 11282 ;; Registers used:
 11283 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11284 ;; Tracked objects:
 11285 ;;		On entry : 0/0
 11286 ;;		On exit  : 0/0
 11287 ;;		Unchanged: 0/0
 11288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11292 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11293 ;;Total ram usage:        4 bytes
 11294 ;; Hardware stack levels used:    1
 11295 ;; Hardware stack levels required when called:    8
 11296 ;; This function calls:
 11297 ;;		_cmd
 11298 ;;		_display_battery
 11299 ;;		_display_tp
 11300 ;; This function is called by:
 11301 ;;		_display
 11302 ;;		_main
 11303 ;; This function uses a non-reentrant model
 11304 ;;
 11305                           
 11306                           	psect	text19
 11307  00618E                     __ptext19:
 11308                           	opt stack 0
 11309  00618E                     _display_bottom_section:
 11310                           	opt stack 22
 11311                           
 11312                           ;display.c: 34:     cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)
      +                          ));
 11313                           
 11314                           ;incstack = 0
 11315  00618E  0E00               	movlw	0
 11316  006190  6E11               	movwf	cmd@command,c
 11317  006192  0E00               	movlw	0
 11318  006194  6E12               	movwf	cmd@command+1,c
 11319  006196  0EFF               	movlw	255
 11320  006198  6E13               	movwf	cmd@command+2,c
 11321  00619A  0E04               	movlw	4
 11322  00619C  6E14               	movwf	cmd@command+3,c
 11323  00619E  ECE1  F032         	call	_cmd	;wreg free
 11324                           
 11325                           ;display.c: 35:     cmd(((31UL<<24)|(((3UL)&15UL)<<0)));
 11326  0061A2  0E03               	movlw	3
 11327  0061A4  6E11               	movwf	cmd@command,c
 11328  0061A6  0E00               	movlw	0
 11329  0061A8  6E12               	movwf	cmd@command+1,c
 11330  0061AA  0E00               	movlw	0
 11331  0061AC  6E13               	movwf	cmd@command+2,c
 11332  0061AE  0E1F               	movlw	31
 11333  0061B0  6E14               	movwf	cmd@command+3,c
 11334  0061B2  ECE1  F032         	call	_cmd	;wreg free
 11335                           
 11336                           ;display.c: 36:     cmd(((14UL<<24)|(((30)&4095UL)<<0)));
 11337  0061B6  0E1E               	movlw	30
 11338  0061B8  6E11               	movwf	cmd@command,c
 11339  0061BA  0E00               	movlw	0
 11340  0061BC  6E12               	movwf	cmd@command+1,c
 11341  0061BE  0E00               	movlw	0
 11342  0061C0  6E13               	movwf	cmd@command+2,c
 11343  0061C2  0E0E               	movlw	14
 11344  0061C4  6E14               	movwf	cmd@command+3,c
 11345  0061C6  ECE1  F032         	call	_cmd	;wreg free
 11346                           
 11347                           ;display.c: 37:     cmd(((2UL<<30)|(((0)&511UL)<<21)|(((237)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
 11348  0061CA  0E00               	movlw	0
 11349  0061CC  6E11               	movwf	cmd@command,c
 11350  0061CE  0ED0               	movlw	208
 11351  0061D0  6E12               	movwf	cmd@command+1,c
 11352  0061D2  0E0E               	movlw	14
 11353  0061D4  6E13               	movwf	cmd@command+2,c
 11354  0061D6  0E80               	movlw	128
 11355  0061D8  6E14               	movwf	cmd@command+3,c
 11356  0061DA  ECE1  F032         	call	_cmd	;wreg free
 11357                           
 11358                           ;display.c: 38:     cmd(((2UL<<30)|(((480)&511UL)<<21)|(((237)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
 11359  0061DE  0E00               	movlw	0
 11360  0061E0  6E11               	movwf	cmd@command,c
 11361  0061E2  0ED0               	movlw	208
 11362  0061E4  6E12               	movwf	cmd@command+1,c
 11363  0061E6  0E0E               	movlw	14
 11364  0061E8  6E13               	movwf	cmd@command+2,c
 11365  0061EA  0EBC               	movlw	188
 11366  0061EC  6E14               	movwf	cmd@command+3,c
 11367  0061EE  ECE1  F032         	call	_cmd	;wreg free
 11368                           
 11369                           ;display.c: 39:     cmd(((33UL<<24)));
 11370  0061F2  0E00               	movlw	0
 11371  0061F4  6E11               	movwf	cmd@command,c
 11372  0061F6  0E00               	movlw	0
 11373  0061F8  6E12               	movwf	cmd@command+1,c
 11374  0061FA  0E00               	movlw	0
 11375  0061FC  6E13               	movwf	cmd@command+2,c
 11376  0061FE  0E21               	movlw	33
 11377  006200  6E14               	movwf	cmd@command+3,c
 11378  006202  ECE1  F032         	call	_cmd	;wreg free
 11379                           
 11380                           ;display.c: 41:     display_battery(volts);
 11381  006206  C01F  F019         	movff	display_bottom_section@volts,display_battery@volts
 11382  00620A  C020  F01A         	movff	display_bottom_section@volts+1,display_battery@volts+1
 11383  00620E  EC75  F026         	call	_display_battery	;wreg free
 11384                           
 11385                           ;display.c: 42:     display_tp(tp);
 11386  006212  C021  F019         	movff	display_bottom_section@tp,display_tp@tp
 11387  006216  C022  F01A         	movff	display_bottom_section@tp+1,display_tp@tp+1
 11388  00621A  ECF4  F02F         	call	_display_tp	;wreg free
 11389  00621E  0012               	return		;funcret
 11390  006220                     __end_of_display_bottom_section:
 11391                           	opt stack 0
 11392                           tblptru	equ	0xFF8
 11393                           tblptrh	equ	0xFF7
 11394                           tblptrl	equ	0xFF6
 11395                           tablat	equ	0xFF5
 11396                           prodh	equ	0xFF4
 11397                           prodl	equ	0xFF3
 11398                           intcon	equ	0xFF2
 11399                           postinc0	equ	0xFEE
 11400                           wreg	equ	0xFE8
 11401                           postdec1	equ	0xFE5
 11402                           plusw1	equ	0xFE3
 11403                           fsr1l	equ	0xFE1
 11404                           plusw2	equ	0xFDB
 11405                           status	equ	0xFD8
 11406                           
 11407 ;; *************** function _display_tp *****************
 11408 ;; Defined at:
 11409 ;;		line 333 in file "display.c"
 11410 ;; Parameters:    Size  Location     Type
 11411 ;;  tp              2   24[COMRAM] int 
 11412 ;; Auto vars:     Size  Location     Type
 11413 ;;		None
 11414 ;; Return value:  Size  Location     Type
 11415 ;;                  1    wreg      void 
 11416 ;; Registers used:
 11417 ;;		wreg, status,2, status,0, cstack
 11418 ;; Tracked objects:
 11419 ;;		On entry : 0/0
 11420 ;;		On exit  : 0/0
 11421 ;;		Unchanged: 0/0
 11422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11425 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11426 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11427 ;;Total ram usage:        6 bytes
 11428 ;; Hardware stack levels used:    1
 11429 ;; Hardware stack levels required when called:    7
 11430 ;; This function calls:
 11431 ;;		_cmd
 11432 ;;		_cmd_incrementn
 11433 ;;		_wr16
 11434 ;; This function is called by:
 11435 ;;		_display_bottom_section
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439                           	psect	text20
 11440  005FE8                     __ptext20:
 11441                           	opt stack 0
 11442  005FE8                     _display_tp:
 11443                           	opt stack 22
 11444                           
 11445                           ;display.c: 335:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 455);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 2048UL);cmd_incrementn(2);cmd(tp);
 11446                           
 11447                           ;incstack = 0
 11448  005FE8  0E2E               	movlw	46
 11449  005FEA  6E11               	movwf	cmd@command,c
 11450  005FEC  0EFF               	movlw	255
 11451  005FEE  6E12               	movwf	cmd@command+1,c
 11452  005FF0  0EFF               	movlw	255
 11453  005FF2  6E13               	movwf	cmd@command+2,c
 11454  005FF4  0EFF               	movlw	255
 11455  005FF6  6E14               	movwf	cmd@command+3,c
 11456  005FF8  ECE1  F032         	call	_cmd	;wreg free
 11457  005FFC  504F               	movf	_cmd_offset,w,c
 11458  005FFE  6E1B               	movwf	??_display_tp& (0+255),c
 11459  006000  5050               	movf	_cmd_offset+1,w,c
 11460  006002  6E1C               	movwf	(??_display_tp+1)& (0+255),c
 11461  006004  6A1D               	clrf	(??_display_tp+2)& (0+255),c
 11462  006006  6A1E               	clrf	(??_display_tp+3)& (0+255),c
 11463  006008  0E00               	movlw	0
 11464  00600A  241B               	addwf	??_display_tp,w,c
 11465  00600C  6E04               	movwf	wr16@addr,c
 11466  00600E  0E80               	movlw	128
 11467  006010  201C               	addwfc	??_display_tp+1,w,c
 11468  006012  6E05               	movwf	wr16@addr+1,c
 11469  006014  0E10               	movlw	16
 11470  006016  201D               	addwfc	??_display_tp+2,w,c
 11471  006018  6E06               	movwf	wr16@addr+2,c
 11472  00601A  0E00               	movlw	0
 11473  00601C  201E               	addwfc	??_display_tp+3,w,c
 11474  00601E  6E07               	movwf	wr16@addr+3,c
 11475  006020  0E01               	movlw	1
 11476  006022  6E09               	movwf	wr16@value+1,c
 11477  006024  0EC7               	movlw	199
 11478  006026  6E08               	movwf	wr16@value,c
 11479  006028  ECB9  F033         	call	_wr16	;wreg free
 11480  00602C  0E02               	movlw	2
 11481  00602E  ECFA  F033         	call	_cmd_incrementn
 11482  006032  504F               	movf	_cmd_offset,w,c
 11483  006034  6E1B               	movwf	??_display_tp& (0+255),c
 11484  006036  5050               	movf	_cmd_offset+1,w,c
 11485  006038  6E1C               	movwf	(??_display_tp+1)& (0+255),c
 11486  00603A  6A1D               	clrf	(??_display_tp+2)& (0+255),c
 11487  00603C  6A1E               	clrf	(??_display_tp+3)& (0+255),c
 11488  00603E  0E00               	movlw	0
 11489  006040  241B               	addwf	??_display_tp,w,c
 11490  006042  6E04               	movwf	wr16@addr,c
 11491  006044  0E80               	movlw	128
 11492  006046  201C               	addwfc	??_display_tp+1,w,c
 11493  006048  6E05               	movwf	wr16@addr+1,c
 11494  00604A  0E10               	movlw	16
 11495  00604C  201D               	addwfc	??_display_tp+2,w,c
 11496  00604E  6E06               	movwf	wr16@addr+2,c
 11497  006050  0E00               	movlw	0
 11498  006052  201E               	addwfc	??_display_tp+3,w,c
 11499  006054  6E07               	movwf	wr16@addr+3,c
 11500  006056  0E00               	movlw	0
 11501  006058  6E09               	movwf	wr16@value+1,c
 11502  00605A  0EEC               	movlw	236
 11503  00605C  6E08               	movwf	wr16@value,c
 11504  00605E  ECB9  F033         	call	_wr16	;wreg free
 11505  006062  0E02               	movlw	2
 11506  006064  ECFA  F033         	call	_cmd_incrementn
 11507  006068  504F               	movf	_cmd_offset,w,c
 11508  00606A  6E1B               	movwf	??_display_tp& (0+255),c
 11509  00606C  5050               	movf	_cmd_offset+1,w,c
 11510  00606E  6E1C               	movwf	(??_display_tp+1)& (0+255),c
 11511  006070  6A1D               	clrf	(??_display_tp+2)& (0+255),c
 11512  006072  6A1E               	clrf	(??_display_tp+3)& (0+255),c
 11513  006074  0E00               	movlw	0
 11514  006076  241B               	addwf	??_display_tp,w,c
 11515  006078  6E04               	movwf	wr16@addr,c
 11516  00607A  0E80               	movlw	128
 11517  00607C  201C               	addwfc	??_display_tp+1,w,c
 11518  00607E  6E05               	movwf	wr16@addr+1,c
 11519  006080  0E10               	movlw	16
 11520  006082  201D               	addwfc	??_display_tp+2,w,c
 11521  006084  6E06               	movwf	wr16@addr+2,c
 11522  006086  0E00               	movlw	0
 11523  006088  201E               	addwfc	??_display_tp+3,w,c
 11524  00608A  6E07               	movwf	wr16@addr+3,c
 11525  00608C  0E00               	movlw	0
 11526  00608E  6E09               	movwf	wr16@value+1,c
 11527  006090  0E1E               	movlw	30
 11528  006092  6E08               	movwf	wr16@value,c
 11529  006094  ECB9  F033         	call	_wr16	;wreg free
 11530  006098  0E02               	movlw	2
 11531  00609A  ECFA  F033         	call	_cmd_incrementn
 11532  00609E  504F               	movf	_cmd_offset,w,c
 11533  0060A0  6E1B               	movwf	??_display_tp& (0+255),c
 11534  0060A2  5050               	movf	_cmd_offset+1,w,c
 11535  0060A4  6E1C               	movwf	(??_display_tp+1)& (0+255),c
 11536  0060A6  6A1D               	clrf	(??_display_tp+2)& (0+255),c
 11537  0060A8  6A1E               	clrf	(??_display_tp+3)& (0+255),c
 11538  0060AA  0E00               	movlw	0
 11539  0060AC  241B               	addwf	??_display_tp,w,c
 11540  0060AE  6E04               	movwf	wr16@addr,c
 11541  0060B0  0E80               	movlw	128
 11542  0060B2  201C               	addwfc	??_display_tp+1,w,c
 11543  0060B4  6E05               	movwf	wr16@addr+1,c
 11544  0060B6  0E10               	movlw	16
 11545  0060B8  201D               	addwfc	??_display_tp+2,w,c
 11546  0060BA  6E06               	movwf	wr16@addr+2,c
 11547  0060BC  0E00               	movlw	0
 11548  0060BE  201E               	addwfc	??_display_tp+3,w,c
 11549  0060C0  6E07               	movwf	wr16@addr+3,c
 11550  0060C2  0E08               	movlw	8
 11551  0060C4  6E09               	movwf	wr16@value+1,c
 11552  0060C6  0E00               	movlw	0
 11553  0060C8  6E08               	movwf	wr16@value,c
 11554  0060CA  ECB9  F033         	call	_wr16	;wreg free
 11555  0060CE  0E02               	movlw	2
 11556  0060D0  ECFA  F033         	call	_cmd_incrementn
 11557  0060D4  C019  F011         	movff	display_tp@tp,cmd@command
 11558  0060D8  C01A  F012         	movff	display_tp@tp+1,cmd@command+1
 11559  0060DC  0E00               	movlw	0
 11560  0060DE  BE12               	btfsc	cmd@command+1,7,c
 11561  0060E0  0EFF               	movlw	-1
 11562  0060E2  6E13               	movwf	cmd@command+2,c
 11563  0060E4  6E14               	movwf	cmd@command+3,c
 11564  0060E6  ECE1  F032         	call	_cmd	;wreg free
 11565  0060EA  0012               	return		;funcret
 11566  0060EC                     __end_of_display_tp:
 11567                           	opt stack 0
 11568                           tblptru	equ	0xFF8
 11569                           tblptrh	equ	0xFF7
 11570                           tblptrl	equ	0xFF6
 11571                           tablat	equ	0xFF5
 11572                           prodh	equ	0xFF4
 11573                           prodl	equ	0xFF3
 11574                           intcon	equ	0xFF2
 11575                           postinc0	equ	0xFEE
 11576                           wreg	equ	0xFE8
 11577                           postdec1	equ	0xFE5
 11578                           plusw1	equ	0xFE3
 11579                           fsr1l	equ	0xFE1
 11580                           plusw2	equ	0xFDB
 11581                           status	equ	0xFD8
 11582                           
 11583 ;; *************** function _display_battery *****************
 11584 ;; Defined at:
 11585 ;;		line 305 in file "display.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;  volts           2   24[COMRAM] int 
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;		None
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  1    wreg      void 
 11592 ;; Registers used:
 11593 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11601 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11602 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11603 ;;Total ram usage:        6 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; Hardware stack levels required when called:    7
 11606 ;; This function calls:
 11607 ;;		___awdiv
 11608 ;;		___awmod
 11609 ;;		_cmd
 11610 ;;		_cmd_incrementn
 11611 ;;		_wr16
 11612 ;;		_wr8s
 11613 ;; This function is called by:
 11614 ;;		_display_bottom_section
 11615 ;; This function uses a non-reentrant model
 11616 ;;
 11617                           
 11618                           	psect	text21
 11619  004CEA                     __ptext21:
 11620                           	opt stack 0
 11621  004CEA                     _display_battery:
 11622                           	opt stack 22
 11623                           
 11624                           ;display.c: 306:     cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL
      +                          )<<0)));
 11625                           
 11626                           ;incstack = 0
 11627  004CEA  0EFF               	movlw	255
 11628  004CEC  6E11               	movwf	cmd@command,c
 11629  004CEE  0EFF               	movlw	255
 11630  004CF0  6E12               	movwf	cmd@command+1,c
 11631  004CF2  0EFF               	movlw	255
 11632  004CF4  6E13               	movwf	cmd@command+2,c
 11633  004CF6  0E04               	movlw	4
 11634  004CF8  6E14               	movwf	cmd@command+3,c
 11635  004CFA  ECE1  F032         	call	_cmd	;wreg free
 11636                           
 11637                           ;display.c: 307:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 240);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 2048UL);cmd_incrementn(2);cmd(volts/10);
 11638  004CFE  0E2E               	movlw	46
 11639  004D00  6E11               	movwf	cmd@command,c
 11640  004D02  0EFF               	movlw	255
 11641  004D04  6E12               	movwf	cmd@command+1,c
 11642  004D06  0EFF               	movlw	255
 11643  004D08  6E13               	movwf	cmd@command+2,c
 11644  004D0A  0EFF               	movlw	255
 11645  004D0C  6E14               	movwf	cmd@command+3,c
 11646  004D0E  ECE1  F032         	call	_cmd	;wreg free
 11647  004D12  504F               	movf	_cmd_offset,w,c
 11648  004D14  6E1B               	movwf	??_display_battery& (0+255),c
 11649  004D16  5050               	movf	_cmd_offset+1,w,c
 11650  004D18  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 11651  004D1A  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 11652  004D1C  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 11653  004D1E  0E00               	movlw	0
 11654  004D20  241B               	addwf	??_display_battery,w,c
 11655  004D22  6E04               	movwf	wr16@addr,c
 11656  004D24  0E80               	movlw	128
 11657  004D26  201C               	addwfc	??_display_battery+1,w,c
 11658  004D28  6E05               	movwf	wr16@addr+1,c
 11659  004D2A  0E10               	movlw	16
 11660  004D2C  201D               	addwfc	??_display_battery+2,w,c
 11661  004D2E  6E06               	movwf	wr16@addr+2,c
 11662  004D30  0E00               	movlw	0
 11663  004D32  201E               	addwfc	??_display_battery+3,w,c
 11664  004D34  6E07               	movwf	wr16@addr+3,c
 11665  004D36  0E00               	movlw	0
 11666  004D38  6E09               	movwf	wr16@value+1,c
 11667  004D3A  0EF0               	movlw	240
 11668  004D3C  6E08               	movwf	wr16@value,c
 11669  004D3E  ECB9  F033         	call	_wr16	;wreg free
 11670  004D42  0E02               	movlw	2
 11671  004D44  ECFA  F033         	call	_cmd_incrementn
 11672  004D48  504F               	movf	_cmd_offset,w,c
 11673  004D4A  6E1B               	movwf	??_display_battery& (0+255),c
 11674  004D4C  5050               	movf	_cmd_offset+1,w,c
 11675  004D4E  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 11676  004D50  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 11677  004D52  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 11678  004D54  0E00               	movlw	0
 11679  004D56  241B               	addwf	??_display_battery,w,c
 11680  004D58  6E04               	movwf	wr16@addr,c
 11681  004D5A  0E80               	movlw	128
 11682  004D5C  201C               	addwfc	??_display_battery+1,w,c
 11683  004D5E  6E05               	movwf	wr16@addr+1,c
 11684  004D60  0E10               	movlw	16
 11685  004D62  201D               	addwfc	??_display_battery+2,w,c
 11686  004D64  6E06               	movwf	wr16@addr+2,c
 11687  004D66  0E00               	movlw	0
 11688  004D68  201E               	addwfc	??_display_battery+3,w,c
 11689  004D6A  6E07               	movwf	wr16@addr+3,c
 11690  004D6C  0E00               	movlw	0
 11691  004D6E  6E09               	movwf	wr16@value+1,c
 11692  004D70  0EEC               	movlw	236
 11693  004D72  6E08               	movwf	wr16@value,c
 11694  004D74  ECB9  F033         	call	_wr16	;wreg free
 11695  004D78  0E02               	movlw	2
 11696  004D7A  ECFA  F033         	call	_cmd_incrementn
 11697  004D7E  504F               	movf	_cmd_offset,w,c
 11698  004D80  6E1B               	movwf	??_display_battery& (0+255),c
 11699  004D82  5050               	movf	_cmd_offset+1,w,c
 11700  004D84  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 11701  004D86  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 11702  004D88  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 11703  004D8A  0E00               	movlw	0
 11704  004D8C  241B               	addwf	??_display_battery,w,c
 11705  004D8E  6E04               	movwf	wr16@addr,c
 11706  004D90  0E80               	movlw	128
 11707  004D92  201C               	addwfc	??_display_battery+1,w,c
 11708  004D94  6E05               	movwf	wr16@addr+1,c
 11709  004D96  0E10               	movlw	16
 11710  004D98  201D               	addwfc	??_display_battery+2,w,c
 11711  004D9A  6E06               	movwf	wr16@addr+2,c
 11712  004D9C  0E00               	movlw	0
 11713  004D9E  201E               	addwfc	??_display_battery+3,w,c
 11714  004DA0  6E07               	movwf	wr16@addr+3,c
 11715  004DA2  0E00               	movlw	0
 11716  004DA4  6E09               	movwf	wr16@value+1,c
 11717  004DA6  0E1E               	movlw	30
 11718  004DA8  6E08               	movwf	wr16@value,c
 11719  004DAA  ECB9  F033         	call	_wr16	;wreg free
 11720  004DAE  0E02               	movlw	2
 11721  004DB0  ECFA  F033         	call	_cmd_incrementn
 11722  004DB4  504F               	movf	_cmd_offset,w,c
 11723  004DB6  6E1B               	movwf	??_display_battery& (0+255),c
 11724  004DB8  5050               	movf	_cmd_offset+1,w,c
 11725  004DBA  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 11726  004DBC  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 11727  004DBE  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 11728  004DC0  0E00               	movlw	0
 11729  004DC2  241B               	addwf	??_display_battery,w,c
 11730  004DC4  6E04               	movwf	wr16@addr,c
 11731  004DC6  0E80               	movlw	128
 11732  004DC8  201C               	addwfc	??_display_battery+1,w,c
 11733  004DCA  6E05               	movwf	wr16@addr+1,c
 11734  004DCC  0E10               	movlw	16
 11735  004DCE  201D               	addwfc	??_display_battery+2,w,c
 11736  004DD0  6E06               	movwf	wr16@addr+2,c
 11737  004DD2  0E00               	movlw	0
 11738  004DD4  201E               	addwfc	??_display_battery+3,w,c
 11739  004DD6  6E07               	movwf	wr16@addr+3,c
 11740  004DD8  0E08               	movlw	8
 11741  004DDA  6E09               	movwf	wr16@value+1,c
 11742  004DDC  0E00               	movlw	0
 11743  004DDE  6E08               	movwf	wr16@value,c
 11744  004DE0  ECB9  F033         	call	_wr16	;wreg free
 11745  004DE4  0E02               	movlw	2
 11746  004DE6  ECFA  F033         	call	_cmd_incrementn
 11747  004DEA  C019  F003         	movff	display_battery@volts,___awdiv@dividend
 11748  004DEE  C01A  F004         	movff	display_battery@volts+1,___awdiv@dividend+1
 11749  004DF2  0E00               	movlw	0
 11750  004DF4  6E06               	movwf	___awdiv@divisor+1,c
 11751  004DF6  0E0A               	movlw	10
 11752  004DF8  6E05               	movwf	___awdiv@divisor,c
 11753  004DFA  EC96  F031         	call	___awdiv	;wreg free
 11754  004DFE  C003  F011         	movff	?___awdiv,cmd@command
 11755  004E02  C004  F012         	movff	?___awdiv+1,cmd@command+1
 11756  004E06  0E00               	movlw	0
 11757  004E08  BE12               	btfsc	cmd@command+1,7,c
 11758  004E0A  0EFF               	movlw	-1
 11759  004E0C  6E13               	movwf	cmd@command+2,c
 11760  004E0E  6E14               	movwf	cmd@command+3,c
 11761  004E10  ECE1  F032         	call	_cmd	;wreg free
 11762                           
 11763                           ;display.c: 308:     cmd(4294967052UL);wr16(1081344UL +cmd_offset, 240);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081
      +                          344UL +cmd_offset, "."));
 11764  004E14  0E0C               	movlw	12
 11765  004E16  6E11               	movwf	cmd@command,c
 11766  004E18  0EFF               	movlw	255
 11767  004E1A  6E12               	movwf	cmd@command+1,c
 11768  004E1C  0EFF               	movlw	255
 11769  004E1E  6E13               	movwf	cmd@command+2,c
 11770  004E20  0EFF               	movlw	255
 11771  004E22  6E14               	movwf	cmd@command+3,c
 11772  004E24  ECE1  F032         	call	_cmd	;wreg free
 11773  004E28  504F               	movf	_cmd_offset,w,c
 11774  004E2A  6E1B               	movwf	??_display_battery& (0+255),c
 11775  004E2C  5050               	movf	_cmd_offset+1,w,c
 11776  004E2E  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 11777  004E30  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 11778  004E32  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 11779  004E34  0E00               	movlw	0
 11780  004E36  241B               	addwf	??_display_battery,w,c
 11781  004E38  6E04               	movwf	wr16@addr,c
 11782  004E3A  0E80               	movlw	128
 11783  004E3C  201C               	addwfc	??_display_battery+1,w,c
 11784  004E3E  6E05               	movwf	wr16@addr+1,c
 11785  004E40  0E10               	movlw	16
 11786  004E42  201D               	addwfc	??_display_battery+2,w,c
 11787  004E44  6E06               	movwf	wr16@addr+2,c
 11788  004E46  0E00               	movlw	0
 11789  004E48  201E               	addwfc	??_display_battery+3,w,c
 11790  004E4A  6E07               	movwf	wr16@addr+3,c
 11791  004E4C  0E00               	movlw	0
 11792  004E4E  6E09               	movwf	wr16@value+1,c
 11793  004E50  0EF0               	movlw	240
 11794  004E52  6E08               	movwf	wr16@value,c
 11795  004E54  ECB9  F033         	call	_wr16	;wreg free
 11796  004E58  0E02               	movlw	2
 11797  004E5A  ECFA  F033         	call	_cmd_incrementn
 11798  004E5E  504F               	movf	_cmd_offset,w,c
 11799  004E60  6E1B               	movwf	??_display_battery& (0+255),c
 11800  004E62  5050               	movf	_cmd_offset+1,w,c
 11801  004E64  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 11802  004E66  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 11803  004E68  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 11804  004E6A  0E00               	movlw	0
 11805  004E6C  241B               	addwf	??_display_battery,w,c
 11806  004E6E  6E04               	movwf	wr16@addr,c
 11807  004E70  0E80               	movlw	128
 11808  004E72  201C               	addwfc	??_display_battery+1,w,c
 11809  004E74  6E05               	movwf	wr16@addr+1,c
 11810  004E76  0E10               	movlw	16
 11811  004E78  201D               	addwfc	??_display_battery+2,w,c
 11812  004E7A  6E06               	movwf	wr16@addr+2,c
 11813  004E7C  0E00               	movlw	0
 11814  004E7E  201E               	addwfc	??_display_battery+3,w,c
 11815  004E80  6E07               	movwf	wr16@addr+3,c
 11816  004E82  0E00               	movlw	0
 11817  004E84  6E09               	movwf	wr16@value+1,c
 11818  004E86  0EEC               	movlw	236
 11819  004E88  6E08               	movwf	wr16@value,c
 11820  004E8A  ECB9  F033         	call	_wr16	;wreg free
 11821  004E8E  0E02               	movlw	2
 11822  004E90  ECFA  F033         	call	_cmd_incrementn
 11823  004E94  504F               	movf	_cmd_offset,w,c
 11824  004E96  6E1B               	movwf	??_display_battery& (0+255),c
 11825  004E98  5050               	movf	_cmd_offset+1,w,c
 11826  004E9A  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 11827  004E9C  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 11828  004E9E  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 11829  004EA0  0E00               	movlw	0
 11830  004EA2  241B               	addwf	??_display_battery,w,c
 11831  004EA4  6E04               	movwf	wr16@addr,c
 11832  004EA6  0E80               	movlw	128
 11833  004EA8  201C               	addwfc	??_display_battery+1,w,c
 11834  004EAA  6E05               	movwf	wr16@addr+1,c
 11835  004EAC  0E10               	movlw	16
 11836  004EAE  201D               	addwfc	??_display_battery+2,w,c
 11837  004EB0  6E06               	movwf	wr16@addr+2,c
 11838  004EB2  0E00               	movlw	0
 11839  004EB4  201E               	addwfc	??_display_battery+3,w,c
 11840  004EB6  6E07               	movwf	wr16@addr+3,c
 11841  004EB8  0E00               	movlw	0
 11842  004EBA  6E09               	movwf	wr16@value+1,c
 11843  004EBC  0E1E               	movlw	30
 11844  004EBE  6E08               	movwf	wr16@value,c
 11845  004EC0  ECB9  F033         	call	_wr16	;wreg free
 11846  004EC4  0E02               	movlw	2
 11847  004EC6  ECFA  F033         	call	_cmd_incrementn
 11848  004ECA  504F               	movf	_cmd_offset,w,c
 11849  004ECC  6E1B               	movwf	??_display_battery& (0+255),c
 11850  004ECE  5050               	movf	_cmd_offset+1,w,c
 11851  004ED0  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 11852  004ED2  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 11853  004ED4  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 11854  004ED6  0E00               	movlw	0
 11855  004ED8  241B               	addwf	??_display_battery,w,c
 11856  004EDA  6E04               	movwf	wr16@addr,c
 11857  004EDC  0E80               	movlw	128
 11858  004EDE  201C               	addwfc	??_display_battery+1,w,c
 11859  004EE0  6E05               	movwf	wr16@addr+1,c
 11860  004EE2  0E10               	movlw	16
 11861  004EE4  201D               	addwfc	??_display_battery+2,w,c
 11862  004EE6  6E06               	movwf	wr16@addr+2,c
 11863  004EE8  0E00               	movlw	0
 11864  004EEA  201E               	addwfc	??_display_battery+3,w,c
 11865  004EEC  6E07               	movwf	wr16@addr+3,c
 11866  004EEE  0E00               	movlw	0
 11867  004EF0  6E09               	movwf	wr16@value+1,c
 11868  004EF2  0E00               	movlw	0
 11869  004EF4  6E08               	movwf	wr16@value,c
 11870  004EF6  ECB9  F033         	call	_wr16	;wreg free
 11871  004EFA  0E02               	movlw	2
 11872  004EFC  ECFA  F033         	call	_cmd_incrementn
 11873  004F00  504F               	movf	_cmd_offset,w,c
 11874  004F02  6E1B               	movwf	??_display_battery& (0+255),c
 11875  004F04  5050               	movf	_cmd_offset+1,w,c
 11876  004F06  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 11877  004F08  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 11878  004F0A  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 11879  004F0C  0E00               	movlw	0
 11880  004F0E  241B               	addwf	??_display_battery,w,c
 11881  004F10  6E09               	movwf	wr8s@addr,c
 11882  004F12  0E80               	movlw	128
 11883  004F14  201C               	addwfc	??_display_battery+1,w,c
 11884  004F16  6E0A               	movwf	wr8s@addr+1,c
 11885  004F18  0E10               	movlw	16
 11886  004F1A  201D               	addwfc	??_display_battery+2,w,c
 11887  004F1C  6E0B               	movwf	wr8s@addr+2,c
 11888  004F1E  0E00               	movlw	0
 11889  004F20  201E               	addwfc	??_display_battery+3,w,c
 11890  004F22  6E0C               	movwf	wr8s@addr+3,c
 11891  004F24  0E97               	movlw	low STR_21
 11892  004F26  6E0D               	movwf	wr8s@s,c
 11893  004F28  0E0F               	movlw	high STR_21
 11894  004F2A  6E0E               	movwf	wr8s@s+1,c
 11895  004F2C  ECD8  F031         	call	_wr8s	;wreg free
 11896  004F30  ECFA  F033         	call	_cmd_incrementn
 11897                           
 11898                           ;display.c: 309:     cmd(4294967086UL);wr16(1081344UL +cmd_offset, 248);cmd_incrementn(2
      +                          );wr16(1081344UL +cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL +cmd_offset, 30);cmd
      +                          _incrementn(2);wr16(1081344UL +cmd_offset, 0);cmd_incrementn(2);cmd(volts%10);
 11899  004F34  0E2E               	movlw	46
 11900  004F36  6E11               	movwf	cmd@command,c
 11901  004F38  0EFF               	movlw	255
 11902  004F3A  6E12               	movwf	cmd@command+1,c
 11903  004F3C  0EFF               	movlw	255
 11904  004F3E  6E13               	movwf	cmd@command+2,c
 11905  004F40  0EFF               	movlw	255
 11906  004F42  6E14               	movwf	cmd@command+3,c
 11907  004F44  ECE1  F032         	call	_cmd	;wreg free
 11908  004F48  504F               	movf	_cmd_offset,w,c
 11909  004F4A  6E1B               	movwf	??_display_battery& (0+255),c
 11910  004F4C  5050               	movf	_cmd_offset+1,w,c
 11911  004F4E  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 11912  004F50  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 11913  004F52  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 11914  004F54  0E00               	movlw	0
 11915  004F56  241B               	addwf	??_display_battery,w,c
 11916  004F58  6E04               	movwf	wr16@addr,c
 11917  004F5A  0E80               	movlw	128
 11918  004F5C  201C               	addwfc	??_display_battery+1,w,c
 11919  004F5E  6E05               	movwf	wr16@addr+1,c
 11920  004F60  0E10               	movlw	16
 11921  004F62  201D               	addwfc	??_display_battery+2,w,c
 11922  004F64  6E06               	movwf	wr16@addr+2,c
 11923  004F66  0E00               	movlw	0
 11924  004F68  201E               	addwfc	??_display_battery+3,w,c
 11925  004F6A  6E07               	movwf	wr16@addr+3,c
 11926  004F6C  0E00               	movlw	0
 11927  004F6E  6E09               	movwf	wr16@value+1,c
 11928  004F70  0EF8               	movlw	248
 11929  004F72  6E08               	movwf	wr16@value,c
 11930  004F74  ECB9  F033         	call	_wr16	;wreg free
 11931  004F78  0E02               	movlw	2
 11932  004F7A  ECFA  F033         	call	_cmd_incrementn
 11933  004F7E  504F               	movf	_cmd_offset,w,c
 11934  004F80  6E1B               	movwf	??_display_battery& (0+255),c
 11935  004F82  5050               	movf	_cmd_offset+1,w,c
 11936  004F84  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 11937  004F86  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 11938  004F88  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 11939  004F8A  0E00               	movlw	0
 11940  004F8C  241B               	addwf	??_display_battery,w,c
 11941  004F8E  6E04               	movwf	wr16@addr,c
 11942  004F90  0E80               	movlw	128
 11943  004F92  201C               	addwfc	??_display_battery+1,w,c
 11944  004F94  6E05               	movwf	wr16@addr+1,c
 11945  004F96  0E10               	movlw	16
 11946  004F98  201D               	addwfc	??_display_battery+2,w,c
 11947  004F9A  6E06               	movwf	wr16@addr+2,c
 11948  004F9C  0E00               	movlw	0
 11949  004F9E  201E               	addwfc	??_display_battery+3,w,c
 11950  004FA0  6E07               	movwf	wr16@addr+3,c
 11951  004FA2  0E00               	movlw	0
 11952  004FA4  6E09               	movwf	wr16@value+1,c
 11953  004FA6  0EEC               	movlw	236
 11954  004FA8  6E08               	movwf	wr16@value,c
 11955  004FAA  ECB9  F033         	call	_wr16	;wreg free
 11956  004FAE  0E02               	movlw	2
 11957  004FB0  ECFA  F033         	call	_cmd_incrementn
 11958  004FB4  504F               	movf	_cmd_offset,w,c
 11959  004FB6  6E1B               	movwf	??_display_battery& (0+255),c
 11960  004FB8  5050               	movf	_cmd_offset+1,w,c
 11961  004FBA  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 11962  004FBC  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 11963  004FBE  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 11964  004FC0  0E00               	movlw	0
 11965  004FC2  241B               	addwf	??_display_battery,w,c
 11966  004FC4  6E04               	movwf	wr16@addr,c
 11967  004FC6  0E80               	movlw	128
 11968  004FC8  201C               	addwfc	??_display_battery+1,w,c
 11969  004FCA  6E05               	movwf	wr16@addr+1,c
 11970  004FCC  0E10               	movlw	16
 11971  004FCE  201D               	addwfc	??_display_battery+2,w,c
 11972  004FD0  6E06               	movwf	wr16@addr+2,c
 11973  004FD2  0E00               	movlw	0
 11974  004FD4  201E               	addwfc	??_display_battery+3,w,c
 11975  004FD6  6E07               	movwf	wr16@addr+3,c
 11976  004FD8  0E00               	movlw	0
 11977  004FDA  6E09               	movwf	wr16@value+1,c
 11978  004FDC  0E1E               	movlw	30
 11979  004FDE  6E08               	movwf	wr16@value,c
 11980  004FE0  ECB9  F033         	call	_wr16	;wreg free
 11981  004FE4  0E02               	movlw	2
 11982  004FE6  ECFA  F033         	call	_cmd_incrementn
 11983  004FEA  504F               	movf	_cmd_offset,w,c
 11984  004FEC  6E1B               	movwf	??_display_battery& (0+255),c
 11985  004FEE  5050               	movf	_cmd_offset+1,w,c
 11986  004FF0  6E1C               	movwf	(??_display_battery+1)& (0+255),c
 11987  004FF2  6A1D               	clrf	(??_display_battery+2)& (0+255),c
 11988  004FF4  6A1E               	clrf	(??_display_battery+3)& (0+255),c
 11989  004FF6  0E00               	movlw	0
 11990  004FF8  241B               	addwf	??_display_battery,w,c
 11991  004FFA  6E04               	movwf	wr16@addr,c
 11992  004FFC  0E80               	movlw	128
 11993  004FFE  201C               	addwfc	??_display_battery+1,w,c
 11994  005000  6E05               	movwf	wr16@addr+1,c
 11995  005002  0E10               	movlw	16
 11996  005004  201D               	addwfc	??_display_battery+2,w,c
 11997  005006  6E06               	movwf	wr16@addr+2,c
 11998  005008  0E00               	movlw	0
 11999  00500A  201E               	addwfc	??_display_battery+3,w,c
 12000  00500C  6E07               	movwf	wr16@addr+3,c
 12001  00500E  0E00               	movlw	0
 12002  005010  6E09               	movwf	wr16@value+1,c
 12003  005012  0E00               	movlw	0
 12004  005014  6E08               	movwf	wr16@value,c
 12005  005016  ECB9  F033         	call	_wr16	;wreg free
 12006  00501A  0E02               	movlw	2
 12007  00501C  ECFA  F033         	call	_cmd_incrementn
 12008  005020  C019  F00B         	movff	display_battery@volts,___awmod@dividend
 12009  005024  C01A  F00C         	movff	display_battery@volts+1,___awmod@dividend+1
 12010  005028  0E00               	movlw	0
 12011  00502A  6E0E               	movwf	___awmod@divisor+1,c
 12012  00502C  0E0A               	movlw	10
 12013  00502E  6E0D               	movwf	___awmod@divisor,c
 12014  005030  EC14  F032         	call	___awmod	;wreg free
 12015  005034  C00B  F011         	movff	?___awmod,cmd@command
 12016  005038  C00C  F012         	movff	?___awmod+1,cmd@command+1
 12017  00503C  0E00               	movlw	0
 12018  00503E  BE12               	btfsc	cmd@command+1,7,c
 12019  005040  0EFF               	movlw	-1
 12020  005042  6E13               	movwf	cmd@command+2,c
 12021  005044  6E14               	movwf	cmd@command+3,c
 12022  005046  ECE1  F032         	call	_cmd	;wreg free
 12023  00504A  0012               	return		;funcret
 12024  00504C                     __end_of_display_battery:
 12025                           	opt stack 0
 12026                           tblptru	equ	0xFF8
 12027                           tblptrh	equ	0xFF7
 12028                           tblptrl	equ	0xFF6
 12029                           tablat	equ	0xFF5
 12030                           prodh	equ	0xFF4
 12031                           prodl	equ	0xFF3
 12032                           intcon	equ	0xFF2
 12033                           postinc0	equ	0xFEE
 12034                           wreg	equ	0xFE8
 12035                           postdec1	equ	0xFE5
 12036                           plusw1	equ	0xFE3
 12037                           fsr1l	equ	0xFE1
 12038                           plusw2	equ	0xFDB
 12039                           status	equ	0xFD8
 12040                           
 12041 ;; *************** function _wr8s *****************
 12042 ;; Defined at:
 12043 ;;		line 43 in file "FT800.c"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;  addr            4    8[COMRAM] unsigned long 
 12046 ;;  s               2   12[COMRAM] PTR const unsigned char 
 12047 ;;		 -> STR_36(2), STR_35(2), STR_34(7), STR_33(5), 
 12048 ;;		 -> STR_32(11), STR_31(6), STR_30(9), STR_29(5), 
 12049 ;;		 -> STR_28(2), STR_27(8), STR_26(7), STR_25(2), 
 12050 ;;		 -> STR_24(6), STR_23(8), STR_22(7), STR_21(2), 
 12051 ;;		 -> STR_20(2), STR_19(2), STR_18(6), STR_17(7), 
 12052 ;;		 -> STR_16(5), STR_15(7), STR_14(11), STR_13(5), 
 12053 ;;		 -> STR_12(2), STR_11(4), STR_10(2), STR_9(3), 
 12054 ;;		 -> STR_8(2), STR_7(5), STR_6(6), STR_5(4), 
 12055 ;;		 -> STR_4(4), STR_3(6), STR_2(10), STR_1(4), 
 12056 ;; Auto vars:     Size  Location     Type
 12057 ;;  i               1   17[COMRAM] unsigned char 
 12058 ;;  l               1   16[COMRAM] unsigned char 
 12059 ;; Return value:  Size  Location     Type
 12060 ;;                  1    wreg      unsigned char 
 12061 ;; Registers used:
 12062 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12063 ;; Tracked objects:
 12064 ;;		On entry : 0/0
 12065 ;;		On exit  : 0/0
 12066 ;;		Unchanged: 0/0
 12067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12068 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12071 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12072 ;;Total ram usage:       10 bytes
 12073 ;; Hardware stack levels used:    1
 12074 ;; Hardware stack levels required when called:    5
 12075 ;; This function calls:
 12076 ;;		_SPI_Exchange8bit
 12077 ;;		_strlen
 12078 ;; This function is called by:
 12079 ;;		_display_labels
 12080 ;;		_display_status
 12081 ;;		_display_laptime
 12082 ;;		_display_bspd
 12083 ;;		_display_battery
 12084 ;;		_display_fuel_level
 12085 ;;		_display_etc
 12086 ;;		_display_rpm
 12087 ;;		_display_gasPres
 12088 ;; This function uses a non-reentrant model
 12089 ;;
 12090                           
 12091                           	psect	text22
 12092  0063B0                     __ptext22:
 12093                           	opt stack 0
 12094  0063B0                     _wr8s:
 12095                           	opt stack 24
 12096                           
 12097                           ;FT800.c: 43: ft_uint8_t wr8s(unsigned long addr, const ft_char8_t *s);FT800.c: 44: {;FT
      +                          800.c: 45:     LATDbits.LATD0 = 0;
 12098                           
 12099                           ;incstack = 0
 12100  0063B0  908C               	bcf	3980,0,c	;volatile
 12101                           
 12102                           ;FT800.c: 46:     SPI_Exchange8bit(0x80 | (addr >> 16));
 12103  0063B2  500B               	movf	wr8s@addr+2,w,c
 12104  0063B4  0980               	iorlw	128
 12105  0063B6  EC36  F034         	call	_SPI_Exchange8bit
 12106                           
 12107                           ;FT800.c: 47:     SPI_Exchange8bit(addr >> 8);
 12108  0063BA  500A               	movf	wr8s@addr+1,w,c
 12109  0063BC  EC36  F034         	call	_SPI_Exchange8bit
 12110                           
 12111                           ;FT800.c: 48:     SPI_Exchange8bit(addr);
 12112  0063C0  5009               	movf	wr8s@addr,w,c
 12113  0063C2  EC36  F034         	call	_SPI_Exchange8bit
 12114                           
 12115                           ;FT800.c: 49:     ft_uint8_t l = strlen(s);
 12116  0063C6  C00D  F003         	movff	wr8s@s,strlen@s
 12117  0063CA  C00E  F004         	movff	wr8s@s+1,strlen@s+1
 12118  0063CE  ECC1  F032         	call	_strlen	;wreg free
 12119  0063D2  5003               	movf	?_strlen,w,c
 12120  0063D4  6E11               	movwf	wr8s@l,c
 12121                           
 12122                           ;FT800.c: 50:     ft_uint8_t i;;FT800.c: 51:     for(i=0;i<=l;i++){
 12123  0063D6  0E00               	movlw	0
 12124  0063D8  6E12               	movwf	wr8s@i,c
 12125  0063DA  D014               	goto	l31
 12126  0063DC                     
 12127                           ;FT800.c: 52:         SPI_Exchange8bit(s[i]);
 12128  0063DC  5012               	movf	wr8s@i,w,c
 12129  0063DE  0D01               	mullw	1
 12130  0063E0  C00D  F00F         	movff	wr8s@s,??_wr8s
 12131  0063E4  C00E  F010         	movff	wr8s@s+1,??_wr8s+1
 12132  0063E8  50F3               	movf	prodl,w,c
 12133  0063EA  260F               	addwf	??_wr8s,f,c
 12134  0063EC  50F4               	movf	prodh,w,c
 12135  0063EE  2210               	addwfc	??_wr8s+1,f,c
 12136  0063F0  C00F  FFF6         	movff	??_wr8s,tblptrl
 12137  0063F4  C010  FFF7         	movff	??_wr8s+1,tblptrh
 12138  0063F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12139  0063F8  6AF8               	clrf	tblptru,c
 12140  0063FA                     	endif
 12141  0063FA                     	if	0	;tblptru may be non-zero
 12142  0063FA                     	endif
 12143  0063FA  0008               	tblrd		*
 12144  0063FC  50F5               	movf	tablat,w,c
 12145  0063FE  EC36  F034         	call	_SPI_Exchange8bit
 12146                           
 12147                           ;FT800.c: 53:     }
 12148  006402  2A12               	incf	wr8s@i,f,c
 12149  006404                     l31:
 12150  006404  5012               	movf	wr8s@i,w,c
 12151  006406  5C11               	subwf	wr8s@l,w,c
 12152  006408  A0D8               	btfss	status,0,c
 12153  00640A  D005               	goto	l34
 12154  00640C  D7E7               	goto	l32
 12155  00640E                     
 12156                           ;FT800.c: 55:         SPI_Exchange8bit(0);
 12157  00640E  0E00               	movlw	0
 12158  006410  EC36  F034         	call	_SPI_Exchange8bit
 12159                           
 12160                           ;FT800.c: 56:     }
 12161  006414  2A12               	incf	wr8s@i,f,c
 12162  006416                     l34:
 12163  006416  C012  F00F         	movff	wr8s@i,??_wr8s
 12164  00641A  0E03               	movlw	3
 12165  00641C  160F               	andwf	??_wr8s,f,c
 12166  00641E  A4D8               	btfss	status,2,c
 12167  006420  D7F6               	goto	l35
 12168                           
 12169                           ;FT800.c: 57:     LATDbits.LATD0 = 1;
 12170  006422  808C               	bsf	3980,0,c	;volatile
 12171                           
 12172                           ;FT800.c: 58:     return i;
 12173  006424  5012               	movf	wr8s@i,w,c
 12174  006426  0012               	return	
 12175  006428                     __end_of_wr8s:
 12176                           	opt stack 0
 12177                           tblptru	equ	0xFF8
 12178                           tblptrh	equ	0xFF7
 12179                           tblptrl	equ	0xFF6
 12180                           tablat	equ	0xFF5
 12181                           prodh	equ	0xFF4
 12182                           prodl	equ	0xFF3
 12183                           intcon	equ	0xFF2
 12184                           postinc0	equ	0xFEE
 12185                           wreg	equ	0xFE8
 12186                           postdec1	equ	0xFE5
 12187                           plusw1	equ	0xFE3
 12188                           fsr1l	equ	0xFE1
 12189                           plusw2	equ	0xFDB
 12190                           status	equ	0xFD8
 12191                           
 12192 ;; *************** function _strlen *****************
 12193 ;; Defined at:
 12194 ;;		line 12 in file "F:\Microchip\XC8\pic\sources\c99\common\strlen.c"
 12195 ;; Parameters:    Size  Location     Type
 12196 ;;  s               2    2[COMRAM] PTR const unsigned char 
 12197 ;;		 -> STR_36(2), STR_35(2), STR_34(7), STR_33(5), 
 12198 ;;		 -> STR_32(11), STR_31(6), STR_30(9), STR_29(5), 
 12199 ;;		 -> STR_28(2), STR_27(8), STR_26(7), STR_25(2), 
 12200 ;;		 -> STR_24(6), STR_23(8), STR_22(7), STR_21(2), 
 12201 ;;		 -> STR_20(2), STR_19(2), STR_18(6), STR_17(7), 
 12202 ;;		 -> STR_16(5), STR_15(7), STR_14(11), STR_13(5), 
 12203 ;;		 -> STR_12(2), STR_11(4), STR_10(2), STR_9(3), 
 12204 ;;		 -> STR_8(2), STR_7(5), STR_6(6), STR_5(4), 
 12205 ;;		 -> STR_4(4), STR_3(6), STR_2(10), STR_1(4), 
 12206 ;; Auto vars:     Size  Location     Type
 12207 ;;  a               2    6[COMRAM] PTR const unsigned char 
 12208 ;;		 -> STR_36(2), STR_35(2), STR_34(7), STR_33(5), 
 12209 ;;		 -> STR_32(11), STR_31(6), STR_30(9), STR_29(5), 
 12210 ;;		 -> STR_28(2), STR_27(8), STR_26(7), STR_25(2), 
 12211 ;;		 -> STR_24(6), STR_23(8), STR_22(7), STR_21(2), 
 12212 ;;		 -> STR_20(2), STR_19(2), STR_18(6), STR_17(7), 
 12213 ;;		 -> STR_16(5), STR_15(7), STR_14(11), STR_13(5), 
 12214 ;;		 -> STR_12(2), STR_11(4), STR_10(2), STR_9(3), 
 12215 ;;		 -> STR_8(2), STR_7(5), STR_6(6), STR_5(4), 
 12216 ;;		 -> STR_4(4), STR_3(6), STR_2(10), STR_1(4), 
 12217 ;; Return value:  Size  Location     Type
 12218 ;;                  2    2[COMRAM] unsigned int 
 12219 ;; Registers used:
 12220 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 12221 ;; Tracked objects:
 12222 ;;		On entry : 0/0
 12223 ;;		On exit  : 0/0
 12224 ;;		Unchanged: 0/0
 12225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12229 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12230 ;;Total ram usage:        6 bytes
 12231 ;; Hardware stack levels used:    1
 12232 ;; Hardware stack levels required when called:    4
 12233 ;; This function calls:
 12234 ;;		Nothing
 12235 ;; This function is called by:
 12236 ;;		_wr8s
 12237 ;; This function uses a non-reentrant model
 12238 ;;
 12239                           
 12240                           	psect	text23
 12241  006582                     __ptext23:
 12242                           	opt stack 0
 12243  006582                     _strlen:
 12244                           	opt stack 24
 12245                           
 12246                           ;incstack = 0
 12247  006582  C003  F007         	movff	strlen@s,strlen@a
 12248  006586  C004  F008         	movff	strlen@s+1,strlen@a+1
 12249  00658A  D002               	goto	l1554
 12250  00658C  4A03               	infsnz	strlen@s,f,c
 12251  00658E  2A04               	incf	strlen@s+1,f,c
 12252  006590                     l1554:
 12253  006590  C003  FFF6         	movff	strlen@s,tblptrl
 12254  006594  C004  FFF7         	movff	strlen@s+1,tblptrh
 12255  006598                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12256  006598  6AF8               	clrf	tblptru,c
 12257  00659A                     	endif
 12258  00659A                     	if	0	;tblptru may be non-zero
 12259  00659A                     	endif
 12260  00659A  0008               	tblrd		*
 12261  00659C  50F5               	movf	tablat,w,c
 12262  00659E  0900               	iorlw	0
 12263  0065A0  A4D8               	btfss	status,2,c
 12264  0065A2  D7F4               	goto	l1555
 12265  0065A4  C007  F005         	movff	strlen@a,??_strlen
 12266  0065A8  C008  F006         	movff	strlen@a+1,??_strlen+1
 12267  0065AC  1E05               	comf	??_strlen,f,c
 12268  0065AE  1E06               	comf	??_strlen+1,f,c
 12269  0065B0  4A05               	infsnz	??_strlen,f,c
 12270  0065B2  2A06               	incf	??_strlen+1,f,c
 12271  0065B4  5003               	movf	strlen@s,w,c
 12272  0065B6  2405               	addwf	??_strlen,w,c
 12273  0065B8  6E03               	movwf	?_strlen,c
 12274  0065BA  5004               	movf	strlen@s+1,w,c
 12275  0065BC  2006               	addwfc	??_strlen+1,w,c
 12276  0065BE  6E04               	movwf	?_strlen+1,c
 12277  0065C0  0012               	return	
 12278  0065C2                     __end_of_strlen:
 12279                           	opt stack 0
 12280                           tblptru	equ	0xFF8
 12281                           tblptrh	equ	0xFF7
 12282                           tblptrl	equ	0xFF6
 12283                           tablat	equ	0xFF5
 12284                           prodh	equ	0xFF4
 12285                           prodl	equ	0xFF3
 12286                           intcon	equ	0xFF2
 12287                           postinc0	equ	0xFEE
 12288                           wreg	equ	0xFE8
 12289                           postdec1	equ	0xFE5
 12290                           plusw1	equ	0xFE3
 12291                           fsr1l	equ	0xFE1
 12292                           plusw2	equ	0xFDB
 12293                           status	equ	0xFD8
 12294                           
 12295 ;; *************** function _cmd *****************
 12296 ;; Defined at:
 12297 ;;		line 126 in file "FT800.c"
 12298 ;; Parameters:    Size  Location     Type
 12299 ;;  command         4   16[COMRAM] unsigned long 
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;		None
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  1    wreg      void 
 12304 ;; Registers used:
 12305 ;;		wreg, status,2, status,0, cstack
 12306 ;; Tracked objects:
 12307 ;;		On entry : 0/0
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12313 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12314 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12315 ;;Total ram usage:        8 bytes
 12316 ;; Hardware stack levels used:    1
 12317 ;; Hardware stack levels required when called:    6
 12318 ;; This function calls:
 12319 ;;		_cmd_incrementn
 12320 ;;		_wr32
 12321 ;; This function is called by:
 12322 ;;		_display_start
 12323 ;;		_display_end
 12324 ;;		_display_bottom_section
 12325 ;;		_display_labels
 12326 ;;		_display_grids
 12327 ;;		_display_status
 12328 ;;		_display_laptime
 12329 ;;		_display_waterTemp
 12330 ;;		_display_oilTemp
 12331 ;;		_display_bspd
 12332 ;;		_display_battery
 12333 ;;		_display_fuel_level
 12334 ;;		_display_tp
 12335 ;;		_display_etc
 12336 ;;		_display_speed
 12337 ;;		_display_brake_bias
 12338 ;;		_display_rpm
 12339 ;;		_display_gear
 12340 ;;		_display_fuel
 12341 ;;		_display_gasPres
 12342 ;; This function uses a non-reentrant model
 12343 ;;
 12344                           
 12345                           	psect	text24
 12346  0065C2                     __ptext24:
 12347                           	opt stack 0
 12348  0065C2                     _cmd:
 12349                           	opt stack 23
 12350                           
 12351                           ;FT800.c: 127:     wr32(1081344UL + cmd_offset, command);cmd_incrementn(4);
 12352                           
 12353                           ;incstack = 0
 12354  0065C2  504F               	movf	_cmd_offset,w,c
 12355  0065C4  6E15               	movwf	??_cmd& (0+255),c
 12356  0065C6  5050               	movf	_cmd_offset+1,w,c
 12357  0065C8  6E16               	movwf	(??_cmd+1)& (0+255),c
 12358  0065CA  6A17               	clrf	(??_cmd+2)& (0+255),c
 12359  0065CC  6A18               	clrf	(??_cmd+3)& (0+255),c
 12360  0065CE  0E00               	movlw	0
 12361  0065D0  2415               	addwf	??_cmd,w,c
 12362  0065D2  6E04               	movwf	wr32@addr,c
 12363  0065D4  0E80               	movlw	128
 12364  0065D6  2016               	addwfc	??_cmd+1,w,c
 12365  0065D8  6E05               	movwf	wr32@addr+1,c
 12366  0065DA  0E10               	movlw	16
 12367  0065DC  2017               	addwfc	??_cmd+2,w,c
 12368  0065DE  6E06               	movwf	wr32@addr+2,c
 12369  0065E0  0E00               	movlw	0
 12370  0065E2  2018               	addwfc	??_cmd+3,w,c
 12371  0065E4  6E07               	movwf	wr32@addr+3,c
 12372  0065E6  C011  F008         	movff	cmd@command,wr32@value
 12373  0065EA  C012  F009         	movff	cmd@command+1,wr32@value+1
 12374  0065EE  C013  F00A         	movff	cmd@command+2,wr32@value+2
 12375  0065F2  C014  F00B         	movff	cmd@command+3,wr32@value+3
 12376  0065F6  EC4C  F032         	call	_wr32	;wreg free
 12377  0065FA  0E04               	movlw	4
 12378  0065FC  ECFA  F033         	call	_cmd_incrementn
 12379  006600  0012               	return		;funcret
 12380  006602                     __end_of_cmd:
 12381                           	opt stack 0
 12382                           tblptru	equ	0xFF8
 12383                           tblptrh	equ	0xFF7
 12384                           tblptrl	equ	0xFF6
 12385                           tablat	equ	0xFF5
 12386                           prodh	equ	0xFF4
 12387                           prodl	equ	0xFF3
 12388                           intcon	equ	0xFF2
 12389                           postinc0	equ	0xFEE
 12390                           wreg	equ	0xFE8
 12391                           postdec1	equ	0xFE5
 12392                           plusw1	equ	0xFE3
 12393                           fsr1l	equ	0xFE1
 12394                           plusw2	equ	0xFDB
 12395                           status	equ	0xFD8
 12396                           
 12397 ;; *************** function _cmd_incrementn *****************
 12398 ;; Defined at:
 12399 ;;		line 122 in file "FT800.c"
 12400 ;; Parameters:    Size  Location     Type
 12401 ;;  n               1    wreg     unsigned char 
 12402 ;; Auto vars:     Size  Location     Type
 12403 ;;  n               1    4[COMRAM] unsigned char 
 12404 ;; Return value:  Size  Location     Type
 12405 ;;                  1    wreg      void 
 12406 ;; Registers used:
 12407 ;;		wreg, status,2, status,0
 12408 ;; Tracked objects:
 12409 ;;		On entry : 0/0
 12410 ;;		On exit  : 0/0
 12411 ;;		Unchanged: 0/0
 12412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12415 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12416 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12417 ;;Total ram usage:        3 bytes
 12418 ;; Hardware stack levels used:    1
 12419 ;; Hardware stack levels required when called:    4
 12420 ;; This function calls:
 12421 ;;		Nothing
 12422 ;; This function is called by:
 12423 ;;		_cmd
 12424 ;;		_display_labels
 12425 ;;		_display_status
 12426 ;;		_display_laptime
 12427 ;;		_display_waterTemp
 12428 ;;		_display_oilTemp
 12429 ;;		_display_bspd
 12430 ;;		_display_battery
 12431 ;;		_display_fuel_level
 12432 ;;		_display_tp
 12433 ;;		_display_etc
 12434 ;;		_display_speed
 12435 ;;		_display_brake_bias
 12436 ;;		_display_rpm
 12437 ;;		_display_fuel
 12438 ;;		_display_gasPres
 12439 ;; This function uses a non-reentrant model
 12440 ;;
 12441                           
 12442                           	psect	text25
 12443  0067F4                     __ptext25:
 12444                           	opt stack 0
 12445  0067F4                     _cmd_incrementn:
 12446                           	opt stack 25
 12447                           
 12448                           ;incstack = 0
 12449                           ;cmd_incrementn@n stored from wreg
 12450  0067F4  6E05               	movwf	cmd_incrementn@n,c
 12451                           
 12452                           ;FT800.c: 123:     cmd_offset=(cmd_offset+n)%4096;
 12453  0067F6  5005               	movf	cmd_incrementn@n,w,c
 12454  0067F8  244F               	addwf	_cmd_offset,w,c
 12455  0067FA  6E03               	movwf	??_cmd_incrementn& (0+255),c
 12456  0067FC  0E00               	movlw	0
 12457  0067FE  2050               	addwfc	_cmd_offset+1,w,c
 12458  006800  6E04               	movwf	(??_cmd_incrementn+1)& (0+255),c
 12459  006802  0EFF               	movlw	255
 12460  006804  1403               	andwf	??_cmd_incrementn,w,c
 12461  006806  6E4F               	movwf	_cmd_offset,c
 12462  006808  0E0F               	movlw	15
 12463  00680A  1404               	andwf	??_cmd_incrementn+1,w,c
 12464  00680C  6E50               	movwf	_cmd_offset+1,c
 12465  00680E  0012               	return		;funcret
 12466  006810                     __end_of_cmd_incrementn:
 12467                           	opt stack 0
 12468                           tblptru	equ	0xFF8
 12469                           tblptrh	equ	0xFF7
 12470                           tblptrl	equ	0xFF6
 12471                           tablat	equ	0xFF5
 12472                           prodh	equ	0xFF4
 12473                           prodl	equ	0xFF3
 12474                           intcon	equ	0xFF2
 12475                           postinc0	equ	0xFEE
 12476                           wreg	equ	0xFE8
 12477                           postdec1	equ	0xFE5
 12478                           plusw1	equ	0xFE3
 12479                           fsr1l	equ	0xFE1
 12480                           plusw2	equ	0xFDB
 12481                           status	equ	0xFD8
 12482                           
 12483 ;; *************** function ___awmod *****************
 12484 ;; Defined at:
 12485 ;;		line 7 in file "F:\Microchip\XC8\pic\sources\c99\common\awmod.c"
 12486 ;; Parameters:    Size  Location     Type
 12487 ;;  dividend        2   10[COMRAM] int 
 12488 ;;  divisor         2   12[COMRAM] int 
 12489 ;; Auto vars:     Size  Location     Type
 12490 ;;  sign            1   15[COMRAM] unsigned char 
 12491 ;;  counter         1   14[COMRAM] unsigned char 
 12492 ;; Return value:  Size  Location     Type
 12493 ;;                  2   10[COMRAM] int 
 12494 ;; Registers used:
 12495 ;;		wreg, status,2, status,0
 12496 ;; Tracked objects:
 12497 ;;		On entry : 0/0
 12498 ;;		On exit  : 0/0
 12499 ;;		Unchanged: 0/0
 12500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12504 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12505 ;;Total ram usage:        6 bytes
 12506 ;; Hardware stack levels used:    1
 12507 ;; Hardware stack levels required when called:    4
 12508 ;; This function calls:
 12509 ;;		Nothing
 12510 ;; This function is called by:
 12511 ;;		_display_battery
 12512 ;;		_display_rpm
 12513 ;;		_main
 12514 ;;		_display_gasPres
 12515 ;; This function uses a non-reentrant model
 12516 ;;
 12517                           
 12518                           	psect	text26
 12519  006428                     __ptext26:
 12520                           	opt stack 0
 12521  006428                     ___awmod:
 12522                           	opt stack 25
 12523                           
 12524                           ;incstack = 0
 12525  006428  0E00               	movlw	0
 12526  00642A  6E10               	movwf	___awmod@sign,c
 12527  00642C  AE0C               	btfss	___awmod@dividend+1,7,c
 12528  00642E  D006               	goto	l1114
 12529  006430  6C0B               	negf	___awmod@dividend,c
 12530  006432  1E0C               	comf	___awmod@dividend+1,f,c
 12531  006434  B0D8               	btfsc	status,0,c
 12532  006436  2A0C               	incf	___awmod@dividend+1,f,c
 12533  006438  0E01               	movlw	1
 12534  00643A  6E10               	movwf	___awmod@sign,c
 12535  00643C                     l1114:
 12536  00643C  AE0E               	btfss	___awmod@divisor+1,7,c
 12537  00643E  D004               	goto	l1115
 12538  006440  6C0D               	negf	___awmod@divisor,c
 12539  006442  1E0E               	comf	___awmod@divisor+1,f,c
 12540  006444  B0D8               	btfsc	status,0,c
 12541  006446  2A0E               	incf	___awmod@divisor+1,f,c
 12542  006448                     l1115:
 12543  006448  500D               	movf	___awmod@divisor,w,c
 12544  00644A  100E               	iorwf	___awmod@divisor+1,w,c
 12545  00644C  B4D8               	btfsc	status,2,c
 12546  00644E  D018               	goto	l1122
 12547  006450  0E01               	movlw	1
 12548  006452  6E0F               	movwf	___awmod@counter,c
 12549  006454  D004               	goto	l1117
 12550  006456  90D8               	bcf	status,0,c
 12551  006458  360D               	rlcf	___awmod@divisor,f,c
 12552  00645A  360E               	rlcf	___awmod@divisor+1,f,c
 12553  00645C  2A0F               	incf	___awmod@counter,f,c
 12554  00645E                     l1117:
 12555  00645E  AE0E               	btfss	___awmod@divisor+1,7,c
 12556  006460  D7FA               	goto	l1118
 12557  006462                     u1340:
 12558  006462  500D               	movf	___awmod@divisor,w,c
 12559  006464  5C0B               	subwf	___awmod@dividend,w,c
 12560  006466  500E               	movf	___awmod@divisor+1,w,c
 12561  006468  580C               	subwfb	___awmod@dividend+1,w,c
 12562  00646A  A0D8               	btfss	status,0,c
 12563  00646C  D004               	goto	l1121
 12564  00646E  500D               	movf	___awmod@divisor,w,c
 12565  006470  5E0B               	subwf	___awmod@dividend,f,c
 12566  006472  500E               	movf	___awmod@divisor+1,w,c
 12567  006474  5A0C               	subwfb	___awmod@dividend+1,f,c
 12568  006476                     l1121:
 12569  006476  90D8               	bcf	status,0,c
 12570  006478  320E               	rrcf	___awmod@divisor+1,f,c
 12571  00647A  320D               	rrcf	___awmod@divisor,f,c
 12572  00647C  2E0F               	decfsz	___awmod@counter,f,c
 12573  00647E  D7F1               	goto	u1340
 12574  006480                     l1122:
 12575  006480  5010               	movf	___awmod@sign,w,c
 12576  006482  B4D8               	btfsc	status,2,c
 12577  006484  D004               	goto	l1123
 12578  006486  6C0B               	negf	___awmod@dividend,c
 12579  006488  1E0C               	comf	___awmod@dividend+1,f,c
 12580  00648A  B0D8               	btfsc	status,0,c
 12581  00648C  2A0C               	incf	___awmod@dividend+1,f,c
 12582  00648E                     l1123:
 12583  00648E  C00B  F00B         	movff	___awmod@dividend,?___awmod
 12584  006492  C00C  F00C         	movff	___awmod@dividend+1,?___awmod+1
 12585  006496  0012               	return	
 12586  006498                     __end_of___awmod:
 12587                           	opt stack 0
 12588                           tblptru	equ	0xFF8
 12589                           tblptrh	equ	0xFF7
 12590                           tblptrl	equ	0xFF6
 12591                           tablat	equ	0xFF5
 12592                           prodh	equ	0xFF4
 12593                           prodl	equ	0xFF3
 12594                           intcon	equ	0xFF2
 12595                           postinc0	equ	0xFEE
 12596                           wreg	equ	0xFE8
 12597                           postdec1	equ	0xFE5
 12598                           plusw1	equ	0xFE3
 12599                           fsr1l	equ	0xFE1
 12600                           plusw2	equ	0xFDB
 12601                           status	equ	0xFD8
 12602                           
 12603 ;; *************** function ___awdiv *****************
 12604 ;; Defined at:
 12605 ;;		line 7 in file "F:\Microchip\XC8\pic\sources\c99\common\awdiv.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;  dividend        2    2[COMRAM] int 
 12608 ;;  divisor         2    4[COMRAM] int 
 12609 ;; Auto vars:     Size  Location     Type
 12610 ;;  quotient        2    8[COMRAM] int 
 12611 ;;  sign            1    7[COMRAM] unsigned char 
 12612 ;;  counter         1    6[COMRAM] unsigned char 
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  2    2[COMRAM] int 
 12615 ;; Registers used:
 12616 ;;		wreg, status,2, status,0
 12617 ;; Tracked objects:
 12618 ;;		On entry : 0/0
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12622 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12623 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12625 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12626 ;;Total ram usage:        8 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:    4
 12629 ;; This function calls:
 12630 ;;		Nothing
 12631 ;; This function is called by:
 12632 ;;		_display_battery
 12633 ;;		_display_rpm
 12634 ;;		_main
 12635 ;;		_display_gasPres
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text27
 12640  00632C                     __ptext27:
 12641                           	opt stack 0
 12642  00632C                     ___awdiv:
 12643                           	opt stack 25
 12644                           
 12645                           ;incstack = 0
 12646  00632C  0E00               	movlw	0
 12647  00632E  6E08               	movwf	___awdiv@sign,c
 12648  006330  AE06               	btfss	___awdiv@divisor+1,7,c
 12649  006332  D006               	goto	l1101
 12650  006334  6C05               	negf	___awdiv@divisor,c
 12651  006336  1E06               	comf	___awdiv@divisor+1,f,c
 12652  006338  B0D8               	btfsc	status,0,c
 12653  00633A  2A06               	incf	___awdiv@divisor+1,f,c
 12654  00633C  0E01               	movlw	1
 12655  00633E  6E08               	movwf	___awdiv@sign,c
 12656  006340                     l1101:
 12657  006340  AE04               	btfss	___awdiv@dividend+1,7,c
 12658  006342  D006               	goto	l1102
 12659  006344  6C03               	negf	___awdiv@dividend,c
 12660  006346  1E04               	comf	___awdiv@dividend+1,f,c
 12661  006348  B0D8               	btfsc	status,0,c
 12662  00634A  2A04               	incf	___awdiv@dividend+1,f,c
 12663  00634C  0E01               	movlw	1
 12664  00634E  1A08               	xorwf	___awdiv@sign,f,c
 12665  006350                     l1102:
 12666  006350  0E00               	movlw	0
 12667  006352  6E0A               	movwf	___awdiv@quotient+1,c
 12668  006354  0E00               	movlw	0
 12669  006356  6E09               	movwf	___awdiv@quotient,c
 12670  006358  5005               	movf	___awdiv@divisor,w,c
 12671  00635A  1006               	iorwf	___awdiv@divisor+1,w,c
 12672  00635C  B4D8               	btfsc	status,2,c
 12673  00635E  D01C               	goto	l1109
 12674  006360  0E01               	movlw	1
 12675  006362  6E07               	movwf	___awdiv@counter,c
 12676  006364  D004               	goto	l1104
 12677  006366  90D8               	bcf	status,0,c
 12678  006368  3605               	rlcf	___awdiv@divisor,f,c
 12679  00636A  3606               	rlcf	___awdiv@divisor+1,f,c
 12680  00636C  2A07               	incf	___awdiv@counter,f,c
 12681  00636E                     l1104:
 12682  00636E  AE06               	btfss	___awdiv@divisor+1,7,c
 12683  006370  D7FA               	goto	l1105
 12684  006372                     u1280:
 12685  006372  90D8               	bcf	status,0,c
 12686  006374  3609               	rlcf	___awdiv@quotient,f,c
 12687  006376  360A               	rlcf	___awdiv@quotient+1,f,c
 12688  006378  5005               	movf	___awdiv@divisor,w,c
 12689  00637A  5C03               	subwf	___awdiv@dividend,w,c
 12690  00637C  5006               	movf	___awdiv@divisor+1,w,c
 12691  00637E  5804               	subwfb	___awdiv@dividend+1,w,c
 12692  006380  A0D8               	btfss	status,0,c
 12693  006382  D005               	goto	l1108
 12694  006384  5005               	movf	___awdiv@divisor,w,c
 12695  006386  5E03               	subwf	___awdiv@dividend,f,c
 12696  006388  5006               	movf	___awdiv@divisor+1,w,c
 12697  00638A  5A04               	subwfb	___awdiv@dividend+1,f,c
 12698  00638C  8009               	bsf	___awdiv@quotient,0,c
 12699  00638E                     l1108:
 12700  00638E  90D8               	bcf	status,0,c
 12701  006390  3206               	rrcf	___awdiv@divisor+1,f,c
 12702  006392  3205               	rrcf	___awdiv@divisor,f,c
 12703  006394  2E07               	decfsz	___awdiv@counter,f,c
 12704  006396  D7ED               	goto	u1280
 12705  006398                     l1109:
 12706  006398  5008               	movf	___awdiv@sign,w,c
 12707  00639A  B4D8               	btfsc	status,2,c
 12708  00639C  D004               	goto	l1110
 12709  00639E  6C09               	negf	___awdiv@quotient,c
 12710  0063A0  1E0A               	comf	___awdiv@quotient+1,f,c
 12711  0063A2  B0D8               	btfsc	status,0,c
 12712  0063A4  2A0A               	incf	___awdiv@quotient+1,f,c
 12713  0063A6                     l1110:
 12714  0063A6  C009  F003         	movff	___awdiv@quotient,?___awdiv
 12715  0063AA  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
 12716  0063AE  0012               	return	
 12717  0063B0                     __end_of___awdiv:
 12718                           	opt stack 0
 12719                           tblptru	equ	0xFF8
 12720                           tblptrh	equ	0xFF7
 12721                           tblptrl	equ	0xFF6
 12722                           tablat	equ	0xFF5
 12723                           prodh	equ	0xFF4
 12724                           prodl	equ	0xFF3
 12725                           intcon	equ	0xFF2
 12726                           postinc0	equ	0xFEE
 12727                           wreg	equ	0xFE8
 12728                           postdec1	equ	0xFE5
 12729                           plusw1	equ	0xFE3
 12730                           fsr1l	equ	0xFE1
 12731                           plusw2	equ	0xFDB
 12732                           status	equ	0xFD8
 12733                           
 12734 ;; *************** function ___xxtofl *****************
 12735 ;; Defined at:
 12736 ;;		line 10 in file "F:\Microchip\XC8\pic\sources\c99\common\xxtofl.c"
 12737 ;; Parameters:    Size  Location     Type
 12738 ;;  sign            1    wreg     unsigned char 
 12739 ;;  val             4    2[COMRAM] long 
 12740 ;; Auto vars:     Size  Location     Type
 12741 ;;  sign            1   10[COMRAM] unsigned char 
 12742 ;;  arg             4   12[COMRAM] unsigned long 
 12743 ;;  exp             1   11[COMRAM] unsigned char 
 12744 ;; Return value:  Size  Location     Type
 12745 ;;                  4    2[COMRAM] unsigned char 
 12746 ;; Registers used:
 12747 ;;		wreg, status,2, status,0
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/0
 12750 ;;		On exit  : 0/0
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12754 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12755 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12756 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12757 ;;Total ram usage:       14 bytes
 12758 ;; Hardware stack levels used:    1
 12759 ;; Hardware stack levels required when called:    4
 12760 ;; This function calls:
 12761 ;;		Nothing
 12762 ;; This function is called by:
 12763 ;;		_main
 12764 ;; This function uses a non-reentrant model
 12765 ;;
 12766                           
 12767                           	psect	text28
 12768  00592C                     __ptext28:
 12769                           	opt stack 0
 12770  00592C                     ___xxtofl:
 12771                           	opt stack 26
 12772                           
 12773                           ;incstack = 0
 12774                           ;___xxtofl@sign stored from wreg
 12775  00592C  6E0B               	movwf	___xxtofl@sign,c
 12776  00592E  500B               	movf	___xxtofl@sign,w,c
 12777  005930  A4D8               	btfss	status,2,c
 12778  005932  AE06               	btfss	___xxtofl@val+3,7,c
 12779  005934  D01A               	goto	l1535
 12780  005936  C003  F007         	movff	___xxtofl@val,??___xxtofl
 12781  00593A  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
 12782  00593E  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
 12783  005942  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
 12784  005946  1E07               	comf	??___xxtofl,f,c
 12785  005948  1E08               	comf	??___xxtofl+1,f,c
 12786  00594A  1E09               	comf	??___xxtofl+2,f,c
 12787  00594C  1E0A               	comf	??___xxtofl+3,f,c
 12788  00594E  2A07               	incf	??___xxtofl,f,c
 12789  005950  0E00               	movlw	0
 12790  005952  2208               	addwfc	??___xxtofl+1,f,c
 12791  005954  2209               	addwfc	??___xxtofl+2,f,c
 12792  005956  220A               	addwfc	??___xxtofl+3,f,c
 12793  005958  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
 12794  00595C  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
 12795  005960  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
 12796  005964  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
 12797  005968  D008               	goto	l1536
 12798  00596A                     l1535:
 12799  00596A  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
 12800  00596E  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12801  005972  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12802  005976  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12803  00597A                     l1536:
 12804  00597A  5003               	movf	___xxtofl@val,w,c
 12805  00597C  1004               	iorwf	___xxtofl@val+1,w,c
 12806  00597E  1005               	iorwf	___xxtofl@val+2,w,c
 12807  005980  1006               	iorwf	___xxtofl@val+3,w,c
 12808  005982  A4D8               	btfss	status,2,c
 12809  005984  D009               	goto	l1537
 12810  005986  0E00               	movlw	0
 12811  005988  6E03               	movwf	?___xxtofl,c
 12812  00598A  0E00               	movlw	0
 12813  00598C  6E04               	movwf	?___xxtofl+1,c
 12814  00598E  0E00               	movlw	0
 12815  005990  6E05               	movwf	?___xxtofl+2,c
 12816  005992  0E00               	movlw	0
 12817  005994  6E06               	movwf	?___xxtofl+3,c
 12818  005996  0012               	return	
 12819  005998                     l1537:
 12820  005998  0E96               	movlw	150
 12821  00599A  6E0C               	movwf	___xxtofl@exp,c
 12822  00599C  D006               	goto	l1539
 12823  00599E  2A0C               	incf	___xxtofl@exp,f,c
 12824  0059A0  90D8               	bcf	status,0,c
 12825  0059A2  3210               	rrcf	___xxtofl@arg+3,f,c
 12826  0059A4  320F               	rrcf	___xxtofl@arg+2,f,c
 12827  0059A6  320E               	rrcf	___xxtofl@arg+1,f,c
 12828  0059A8  320D               	rrcf	___xxtofl@arg,f,c
 12829  0059AA                     l1539:
 12830  0059AA  0E00               	movlw	0
 12831  0059AC  140D               	andwf	___xxtofl@arg,w,c
 12832  0059AE  6E07               	movwf	??___xxtofl& (0+255),c
 12833  0059B0  0E00               	movlw	0
 12834  0059B2  140E               	andwf	___xxtofl@arg+1,w,c
 12835  0059B4  6E08               	movwf	(??___xxtofl+1)& (0+255),c
 12836  0059B6  0E00               	movlw	0
 12837  0059B8  140F               	andwf	___xxtofl@arg+2,w,c
 12838  0059BA  6E09               	movwf	(??___xxtofl+2)& (0+255),c
 12839  0059BC  0EFE               	movlw	254
 12840  0059BE  1410               	andwf	___xxtofl@arg+3,w,c
 12841  0059C0  6E0A               	movwf	(??___xxtofl+3)& (0+255),c
 12842  0059C2  5007               	movf	??___xxtofl,w,c
 12843  0059C4  1008               	iorwf	??___xxtofl+1,w,c
 12844  0059C6  1009               	iorwf	??___xxtofl+2,w,c
 12845  0059C8  100A               	iorwf	??___xxtofl+3,w,c
 12846  0059CA  B4D8               	btfsc	status,2,c
 12847  0059CC  D00D               	goto	l1542
 12848  0059CE  D7E7               	goto	l1540
 12849  0059D0  2A0C               	incf	___xxtofl@exp,f,c
 12850  0059D2  0E01               	movlw	1
 12851  0059D4  260D               	addwf	___xxtofl@arg,f,c
 12852  0059D6  0E00               	movlw	0
 12853  0059D8  220E               	addwfc	___xxtofl@arg+1,f,c
 12854  0059DA  220F               	addwfc	___xxtofl@arg+2,f,c
 12855  0059DC  2210               	addwfc	___xxtofl@arg+3,f,c
 12856  0059DE  90D8               	bcf	status,0,c
 12857  0059E0  3210               	rrcf	___xxtofl@arg+3,f,c
 12858  0059E2  320F               	rrcf	___xxtofl@arg+2,f,c
 12859  0059E4  320E               	rrcf	___xxtofl@arg+1,f,c
 12860  0059E6  320D               	rrcf	___xxtofl@arg,f,c
 12861  0059E8                     l1542:
 12862  0059E8  0E00               	movlw	0
 12863  0059EA  140D               	andwf	___xxtofl@arg,w,c
 12864  0059EC  6E07               	movwf	??___xxtofl& (0+255),c
 12865  0059EE  0E00               	movlw	0
 12866  0059F0  140E               	andwf	___xxtofl@arg+1,w,c
 12867  0059F2  6E08               	movwf	(??___xxtofl+1)& (0+255),c
 12868  0059F4  0E00               	movlw	0
 12869  0059F6  140F               	andwf	___xxtofl@arg+2,w,c
 12870  0059F8  6E09               	movwf	(??___xxtofl+2)& (0+255),c
 12871  0059FA  0EFF               	movlw	255
 12872  0059FC  1410               	andwf	___xxtofl@arg+3,w,c
 12873  0059FE  6E0A               	movwf	(??___xxtofl+3)& (0+255),c
 12874  005A00  5007               	movf	??___xxtofl,w,c
 12875  005A02  1008               	iorwf	??___xxtofl+1,w,c
 12876  005A04  1009               	iorwf	??___xxtofl+2,w,c
 12877  005A06  100A               	iorwf	??___xxtofl+3,w,c
 12878  005A08  B4D8               	btfsc	status,2,c
 12879  005A0A  D007               	goto	l1545
 12880  005A0C  D7E1               	goto	l1543
 12881  005A0E  060C               	decf	___xxtofl@exp,f,c
 12882  005A10  90D8               	bcf	status,0,c
 12883  005A12  360D               	rlcf	___xxtofl@arg,f,c
 12884  005A14  360E               	rlcf	___xxtofl@arg+1,f,c
 12885  005A16  360F               	rlcf	___xxtofl@arg+2,f,c
 12886  005A18  3610               	rlcf	___xxtofl@arg+3,f,c
 12887  005A1A                     l1545:
 12888  005A1A  BE0F               	btfsc	___xxtofl@arg+2,7,c
 12889  005A1C  D003               	goto	u1740
 12890  005A1E  0E02               	movlw	2
 12891  005A20  600C               	cpfslt	___xxtofl@exp,c
 12892  005A22  D7F5               	goto	l1546
 12893  005A24                     u1740:
 12894  005A24  A00C               	btfss	___xxtofl@exp,0,c
 12895  005A26  9E0F               	bcf	___xxtofl@arg+2,7,c
 12896  005A28  90D8               	bcf	status,0,c
 12897  005A2A  320C               	rrcf	___xxtofl@exp,f,c
 12898  005A2C  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
 12899  005A30  6A08               	clrf	(??___xxtofl+1)& (0+255),c
 12900  005A32  6A09               	clrf	(??___xxtofl+2)& (0+255),c
 12901  005A34  6A0A               	clrf	(??___xxtofl+3)& (0+255),c
 12902  005A36  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
 12903  005A3A  6A09               	clrf	??___xxtofl+2,c
 12904  005A3C  6A08               	clrf	??___xxtofl+1,c
 12905  005A3E  6A07               	clrf	??___xxtofl,c
 12906  005A40  5007               	movf	??___xxtofl,w,c
 12907  005A42  120D               	iorwf	___xxtofl@arg,f,c
 12908  005A44  5008               	movf	??___xxtofl+1,w,c
 12909  005A46  120E               	iorwf	___xxtofl@arg+1,f,c
 12910  005A48  5009               	movf	??___xxtofl+2,w,c
 12911  005A4A  120F               	iorwf	___xxtofl@arg+2,f,c
 12912  005A4C  500A               	movf	??___xxtofl+3,w,c
 12913  005A4E  1210               	iorwf	___xxtofl@arg+3,f,c
 12914  005A50  500B               	movf	___xxtofl@sign,w,c
 12915  005A52  A4D8               	btfss	status,2,c
 12916  005A54  AE06               	btfss	___xxtofl@val+3,7,c
 12917  005A56  D001               	goto	l1551
 12918  005A58  8E10               	bsf	___xxtofl@arg+3,7,c
 12919  005A5A                     l1551:
 12920  005A5A  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
 12921  005A5E  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
 12922  005A62  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
 12923  005A66  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
 12924  005A6A  0012               	return	
 12925  005A6C                     __end_of___xxtofl:
 12926                           	opt stack 0
 12927                           tblptru	equ	0xFF8
 12928                           tblptrh	equ	0xFF7
 12929                           tblptrl	equ	0xFF6
 12930                           tablat	equ	0xFF5
 12931                           prodh	equ	0xFF4
 12932                           prodl	equ	0xFF3
 12933                           intcon	equ	0xFF2
 12934                           postinc0	equ	0xFEE
 12935                           wreg	equ	0xFE8
 12936                           postdec1	equ	0xFE5
 12937                           plusw1	equ	0xFE3
 12938                           fsr1l	equ	0xFE1
 12939                           plusw2	equ	0xFDB
 12940                           status	equ	0xFD8
 12941                           
 12942 ;; *************** function ___flge *****************
 12943 ;; Defined at:
 12944 ;;		line 4 in file "F:\Microchip\XC8\pic\sources\c99\common\flge.c"
 12945 ;; Parameters:    Size  Location     Type
 12946 ;;  ff1             4   16[COMRAM] unsigned char 
 12947 ;;  ff2             4   20[COMRAM] unsigned char 
 12948 ;; Auto vars:     Size  Location     Type
 12949 ;;		None
 12950 ;; Return value:  Size  Location     Type
 12951 ;;		None               void
 12952 ;; Registers used:
 12953 ;;		wreg, status,2, status,0
 12954 ;; Tracked objects:
 12955 ;;		On entry : 0/0
 12956 ;;		On exit  : 0/0
 12957 ;;		Unchanged: 0/0
 12958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12959 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12961 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12962 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12963 ;;Total ram usage:       12 bytes
 12964 ;; Hardware stack levels used:    1
 12965 ;; Hardware stack levels required when called:    4
 12966 ;; This function calls:
 12967 ;;		Nothing
 12968 ;; This function is called by:
 12969 ;;		_main
 12970 ;; This function uses a non-reentrant model
 12971 ;;
 12972                           
 12973                           	psect	text29
 12974  005B94                     __ptext29:
 12975                           	opt stack 0
 12976  005B94                     ___flge:
 12977                           	opt stack 26
 12978                           
 12979                           ;incstack = 0
 12980  005B94  0E00               	movlw	0
 12981  005B96  1411               	andwf	___flge@ff1,w,c
 12982  005B98  6E19               	movwf	??___flge& (0+255),c
 12983  005B9A  0E00               	movlw	0
 12984  005B9C  1412               	andwf	___flge@ff1+1,w,c
 12985  005B9E  6E1A               	movwf	(??___flge+1)& (0+255),c
 12986  005BA0  0E80               	movlw	128
 12987  005BA2  1413               	andwf	___flge@ff1+2,w,c
 12988  005BA4  6E1B               	movwf	(??___flge+2)& (0+255),c
 12989  005BA6  0E7F               	movlw	127
 12990  005BA8  1414               	andwf	___flge@ff1+3,w,c
 12991  005BAA  6E1C               	movwf	(??___flge+3)& (0+255),c
 12992  005BAC  5019               	movf	??___flge,w,c
 12993  005BAE  101A               	iorwf	??___flge+1,w,c
 12994  005BB0  101B               	iorwf	??___flge+2,w,c
 12995  005BB2  101C               	iorwf	??___flge+3,w,c
 12996  005BB4  A4D8               	btfss	status,2,c
 12997  005BB6  D008               	goto	l1142
 12998  005BB8  0E00               	movlw	0
 12999  005BBA  6E11               	movwf	___flge@ff1,c
 13000  005BBC  0E00               	movlw	0
 13001  005BBE  6E12               	movwf	___flge@ff1+1,c
 13002  005BC0  0E00               	movlw	0
 13003  005BC2  6E13               	movwf	___flge@ff1+2,c
 13004  005BC4  0E00               	movlw	0
 13005  005BC6  6E14               	movwf	___flge@ff1+3,c
 13006  005BC8                     l1142:
 13007  005BC8  0E00               	movlw	0
 13008  005BCA  1415               	andwf	___flge@ff2,w,c
 13009  005BCC  6E19               	movwf	??___flge& (0+255),c
 13010  005BCE  0E00               	movlw	0
 13011  005BD0  1416               	andwf	___flge@ff2+1,w,c
 13012  005BD2  6E1A               	movwf	(??___flge+1)& (0+255),c
 13013  005BD4  0E80               	movlw	128
 13014  005BD6  1417               	andwf	___flge@ff2+2,w,c
 13015  005BD8  6E1B               	movwf	(??___flge+2)& (0+255),c
 13016  005BDA  0E7F               	movlw	127
 13017  005BDC  1418               	andwf	___flge@ff2+3,w,c
 13018  005BDE  6E1C               	movwf	(??___flge+3)& (0+255),c
 13019  005BE0  5019               	movf	??___flge,w,c
 13020  005BE2  101A               	iorwf	??___flge+1,w,c
 13021  005BE4  101B               	iorwf	??___flge+2,w,c
 13022  005BE6  101C               	iorwf	??___flge+3,w,c
 13023  005BE8  A4D8               	btfss	status,2,c
 13024  005BEA  D008               	goto	l1143
 13025  005BEC  0E00               	movlw	0
 13026  005BEE  6E15               	movwf	___flge@ff2,c
 13027  005BF0  0E00               	movlw	0
 13028  005BF2  6E16               	movwf	___flge@ff2+1,c
 13029  005BF4  0E00               	movlw	0
 13030  005BF6  6E17               	movwf	___flge@ff2+2,c
 13031  005BF8  0E00               	movlw	0
 13032  005BFA  6E18               	movwf	___flge@ff2+3,c
 13033  005BFC                     l1143:
 13034  005BFC  AE14               	btfss	___flge@ff1+3,7,c
 13035  005BFE  D01D               	goto	l1144
 13036  005C00  C011  F019         	movff	___flge@ff1,??___flge
 13037  005C04  C012  F01A         	movff	___flge@ff1+1,??___flge+1
 13038  005C08  C013  F01B         	movff	___flge@ff1+2,??___flge+2
 13039  005C0C  C014  F01C         	movff	___flge@ff1+3,??___flge+3
 13040  005C10  1E19               	comf	??___flge,f,c
 13041  005C12  1E1A               	comf	??___flge+1,f,c
 13042  005C14  1E1B               	comf	??___flge+2,f,c
 13043  005C16  1E1C               	comf	??___flge+3,f,c
 13044  005C18  2A19               	incf	??___flge,f,c
 13045  005C1A  0E00               	movlw	0
 13046  005C1C  221A               	addwfc	??___flge+1,f,c
 13047  005C1E  221B               	addwfc	??___flge+2,f,c
 13048  005C20  221C               	addwfc	??___flge+3,f,c
 13049  005C22  0E00               	movlw	0
 13050  005C24  2419               	addwf	??___flge,w,c
 13051  005C26  6E11               	movwf	___flge@ff1,c
 13052  005C28  0E00               	movlw	0
 13053  005C2A  201A               	addwfc	??___flge+1,w,c
 13054  005C2C  6E12               	movwf	___flge@ff1+1,c
 13055  005C2E  0E00               	movlw	0
 13056  005C30  201B               	addwfc	??___flge+2,w,c
 13057  005C32  6E13               	movwf	___flge@ff1+2,c
 13058  005C34  0E80               	movlw	128
 13059  005C36  201C               	addwfc	??___flge+3,w,c
 13060  005C38  6E14               	movwf	___flge@ff1+3,c
 13061  005C3A                     l1144:
 13062  005C3A  AE18               	btfss	___flge@ff2+3,7,c
 13063  005C3C  D01D               	goto	l1145
 13064  005C3E  C015  F019         	movff	___flge@ff2,??___flge
 13065  005C42  C016  F01A         	movff	___flge@ff2+1,??___flge+1
 13066  005C46  C017  F01B         	movff	___flge@ff2+2,??___flge+2
 13067  005C4A  C018  F01C         	movff	___flge@ff2+3,??___flge+3
 13068  005C4E  1E19               	comf	??___flge,f,c
 13069  005C50  1E1A               	comf	??___flge+1,f,c
 13070  005C52  1E1B               	comf	??___flge+2,f,c
 13071  005C54  1E1C               	comf	??___flge+3,f,c
 13072  005C56  2A19               	incf	??___flge,f,c
 13073  005C58  0E00               	movlw	0
 13074  005C5A  221A               	addwfc	??___flge+1,f,c
 13075  005C5C  221B               	addwfc	??___flge+2,f,c
 13076  005C5E  221C               	addwfc	??___flge+3,f,c
 13077  005C60  0E00               	movlw	0
 13078  005C62  2419               	addwf	??___flge,w,c
 13079  005C64  6E15               	movwf	___flge@ff2,c
 13080  005C66  0E00               	movlw	0
 13081  005C68  201A               	addwfc	??___flge+1,w,c
 13082  005C6A  6E16               	movwf	___flge@ff2+1,c
 13083  005C6C  0E00               	movlw	0
 13084  005C6E  201B               	addwfc	??___flge+2,w,c
 13085  005C70  6E17               	movwf	___flge@ff2+2,c
 13086  005C72  0E80               	movlw	128
 13087  005C74  201C               	addwfc	??___flge+3,w,c
 13088  005C76  6E18               	movwf	___flge@ff2+3,c
 13089  005C78                     l1145:
 13090  005C78  0E00               	movlw	0
 13091  005C7A  1A11               	xorwf	___flge@ff1,f,c
 13092  005C7C  0E00               	movlw	0
 13093  005C7E  1A12               	xorwf	___flge@ff1+1,f,c
 13094  005C80  0E00               	movlw	0
 13095  005C82  1A13               	xorwf	___flge@ff1+2,f,c
 13096  005C84  0E80               	movlw	128
 13097  005C86  1A14               	xorwf	___flge@ff1+3,f,c
 13098  005C88  0E00               	movlw	0
 13099  005C8A  1A15               	xorwf	___flge@ff2,f,c
 13100  005C8C  0E00               	movlw	0
 13101  005C8E  1A16               	xorwf	___flge@ff2+1,f,c
 13102  005C90  0E00               	movlw	0
 13103  005C92  1A17               	xorwf	___flge@ff2+2,f,c
 13104  005C94  0E80               	movlw	128
 13105  005C96  1A18               	xorwf	___flge@ff2+3,f,c
 13106  005C98  5015               	movf	___flge@ff2,w,c
 13107  005C9A  5C11               	subwf	___flge@ff1,w,c
 13108  005C9C  5016               	movf	___flge@ff2+1,w,c
 13109  005C9E  5812               	subwfb	___flge@ff1+1,w,c
 13110  005CA0  5017               	movf	___flge@ff2+2,w,c
 13111  005CA2  5813               	subwfb	___flge@ff1+2,w,c
 13112  005CA4  5018               	movf	___flge@ff2+3,w,c
 13113  005CA6  5814               	subwfb	___flge@ff1+3,w,c
 13114  005CA8  B0D8               	btfsc	status,0,c
 13115  005CAA  D002               	goto	l1147
 13116  005CAC  90D8               	bcf	status,0,c
 13117  005CAE  0012               	return	
 13118  005CB0                     l1147:
 13119  005CB0  80D8               	bsf	status,0,c
 13120  005CB2  0012               	return	
 13121  005CB4                     __end_of___flge:
 13122                           	opt stack 0
 13123                           tblptru	equ	0xFF8
 13124                           tblptrh	equ	0xFF7
 13125                           tblptrl	equ	0xFF6
 13126                           tablat	equ	0xFF5
 13127                           prodh	equ	0xFF4
 13128                           prodl	equ	0xFF3
 13129                           intcon	equ	0xFF2
 13130                           postinc0	equ	0xFEE
 13131                           wreg	equ	0xFE8
 13132                           postdec1	equ	0xFE5
 13133                           plusw1	equ	0xFE3
 13134                           fsr1l	equ	0xFE1
 13135                           plusw2	equ	0xFDB
 13136                           status	equ	0xFD8
 13137                           
 13138 ;; *************** function _TMR1_Reload *****************
 13139 ;; Defined at:
 13140 ;;		line 143 in file "mcc_generated_files/tmr1.c"
 13141 ;; Parameters:    Size  Location     Type
 13142 ;;		None
 13143 ;; Auto vars:     Size  Location     Type
 13144 ;;		None
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  1    wreg      void 
 13147 ;; Registers used:
 13148 ;;		wreg, status,2
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13158 ;;Total ram usage:        0 bytes
 13159 ;; Hardware stack levels used:    1
 13160 ;; Hardware stack levels required when called:    4
 13161 ;; This function calls:
 13162 ;;		Nothing
 13163 ;; This function is called by:
 13164 ;;		_main
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           	psect	text30
 13169  00689A                     __ptext30:
 13170                           	opt stack 0
 13171  00689A                     _TMR1_Reload:
 13172                           	opt stack 26
 13173                           
 13174                           ;mcc_generated_files/tmr1.c: 146:     TMR1H = (timer1ReloadVal >> 8);
 13175                           
 13176                           ;incstack = 0
 13177  00689A  504E               	movf	_timer1ReloadVal+1,w,c	;volatile
 13178  00689C  6ECF               	movwf	4047,c	;volatile
 13179                           
 13180                           ;mcc_generated_files/tmr1.c: 147:     TMR1L = timer1ReloadVal;
 13181  00689E  C04D  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 13182  0068A2  0012               	return		;funcret
 13183  0068A4                     __end_of_TMR1_Reload:
 13184                           	opt stack 0
 13185                           tblptru	equ	0xFF8
 13186                           tblptrh	equ	0xFF7
 13187                           tblptrl	equ	0xFF6
 13188                           tablat	equ	0xFF5
 13189                           prodh	equ	0xFF4
 13190                           prodl	equ	0xFF3
 13191                           intcon	equ	0xFF2
 13192                           postinc0	equ	0xFEE
 13193                           wreg	equ	0xFE8
 13194                           postdec1	equ	0xFE5
 13195                           plusw1	equ	0xFE3
 13196                           fsr1l	equ	0xFE1
 13197                           plusw2	equ	0xFDB
 13198                           status	equ	0xFD8
 13199                           
 13200 ;; *************** function _TMR0_StopTimer *****************
 13201 ;; Defined at:
 13202 ;;		line 101 in file "mcc_generated_files/tmr0.c"
 13203 ;; Parameters:    Size  Location     Type
 13204 ;;		None
 13205 ;; Auto vars:     Size  Location     Type
 13206 ;;		None
 13207 ;; Return value:  Size  Location     Type
 13208 ;;                  1    wreg      void 
 13209 ;; Registers used:
 13210 ;;		None
 13211 ;; Tracked objects:
 13212 ;;		On entry : 0/0
 13213 ;;		On exit  : 0/0
 13214 ;;		Unchanged: 0/0
 13215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13220 ;;Total ram usage:        0 bytes
 13221 ;; Hardware stack levels used:    1
 13222 ;; Hardware stack levels required when called:    4
 13223 ;; This function calls:
 13224 ;;		Nothing
 13225 ;; This function is called by:
 13226 ;;		_main
 13227 ;; This function uses a non-reentrant model
 13228 ;;
 13229                           
 13230                           	psect	text31
 13231  0068C0                     __ptext31:
 13232                           	opt stack 0
 13233  0068C0                     _TMR0_StopTimer:
 13234                           	opt stack 26
 13235                           
 13236                           ;mcc_generated_files/tmr0.c: 104:     T0CONbits.TMR0ON = 0;
 13237                           
 13238                           ;incstack = 0
 13239  0068C0  9ED5               	bcf	4053,7,c	;volatile
 13240  0068C2  0012               	return		;funcret
 13241  0068C4                     __end_of_TMR0_StopTimer:
 13242                           	opt stack 0
 13243                           tblptru	equ	0xFF8
 13244                           tblptrh	equ	0xFF7
 13245                           tblptrl	equ	0xFF6
 13246                           tablat	equ	0xFF5
 13247                           prodh	equ	0xFF4
 13248                           prodl	equ	0xFF3
 13249                           intcon	equ	0xFF2
 13250                           postinc0	equ	0xFEE
 13251                           wreg	equ	0xFE8
 13252                           postdec1	equ	0xFE5
 13253                           plusw1	equ	0xFE3
 13254                           fsr1l	equ	0xFE1
 13255                           plusw2	equ	0xFDB
 13256                           status	equ	0xFD8
 13257                           
 13258 ;; *************** function _SYSTEM_Initialize *****************
 13259 ;; Defined at:
 13260 ;;		line 111 in file "mcc_generated_files/mcc.c"
 13261 ;; Parameters:    Size  Location     Type
 13262 ;;		None
 13263 ;; Auto vars:     Size  Location     Type
 13264 ;;		None
 13265 ;; Return value:  Size  Location     Type
 13266 ;;                  1    wreg      void 
 13267 ;; Registers used:
 13268 ;;		wreg, status,2, status,0, cstack
 13269 ;; Tracked objects:
 13270 ;;		On entry : 0/0
 13271 ;;		On exit  : 0/0
 13272 ;;		Unchanged: 0/0
 13273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13278 ;;Total ram usage:        0 bytes
 13279 ;; Hardware stack levels used:    1
 13280 ;; Hardware stack levels required when called:    6
 13281 ;; This function calls:
 13282 ;;		_ECAN_Initialize
 13283 ;;		_INTERRUPT_Initialize
 13284 ;;		_OSCILLATOR_Initialize
 13285 ;;		_PIN_MANAGER_Initialize
 13286 ;;		_SPI_Initialize
 13287 ;;		_TMR0_Initialize
 13288 ;;		_TMR1_Initialize
 13289 ;; This function is called by:
 13290 ;;		_main
 13291 ;; This function uses a non-reentrant model
 13292 ;;
 13293                           
 13294                           	psect	text32
 13295  0067B8                     __ptext32:
 13296                           	opt stack 0
 13297  0067B8                     _SYSTEM_Initialize:
 13298                           	opt stack 24
 13299                           
 13300                           ;mcc_generated_files/mcc.c: 114:     INTERRUPT_Initialize();
 13301                           
 13302                           ;incstack = 0
 13303  0067B8  EC66  F034         	call	_INTERRUPT_Initialize	;wreg free
 13304                           
 13305                           ;mcc_generated_files/mcc.c: 115:     PIN_MANAGER_Initialize();
 13306  0067BC  EC77  F033         	call	_PIN_MANAGER_Initialize	;wreg free
 13307                           
 13308                           ;mcc_generated_files/mcc.c: 116:     OSCILLATOR_Initialize();
 13309  0067C0  EC2D  F034         	call	_OSCILLATOR_Initialize	;wreg free
 13310                           
 13311                           ;mcc_generated_files/mcc.c: 117:     SPI_Initialize();
 13312  0067C4  EC46  F034         	call	_SPI_Initialize	;wreg free
 13313                           
 13314                           ;mcc_generated_files/mcc.c: 118:     TMR1_Initialize();
 13315  0067C8  EC20  F033         	call	_TMR1_Initialize	;wreg free
 13316                           
 13317                           ;mcc_generated_files/mcc.c: 119:     TMR0_Initialize();
 13318  0067CC  EC5B  F033         	call	_TMR0_Initialize	;wreg free
 13319                           
 13320                           ;mcc_generated_files/mcc.c: 120:     ECAN_Initialize();
 13321  0067D0  EC76  F030         	call	_ECAN_Initialize	;wreg free
 13322  0067D4  0012               	return		;funcret
 13323  0067D6                     __end_of_SYSTEM_Initialize:
 13324                           	opt stack 0
 13325                           tblptru	equ	0xFF8
 13326                           tblptrh	equ	0xFF7
 13327                           tblptrl	equ	0xFF6
 13328                           tablat	equ	0xFF5
 13329                           prodh	equ	0xFF4
 13330                           prodl	equ	0xFF3
 13331                           intcon	equ	0xFF2
 13332                           postinc0	equ	0xFEE
 13333                           wreg	equ	0xFE8
 13334                           postdec1	equ	0xFE5
 13335                           plusw1	equ	0xFE3
 13336                           fsr1l	equ	0xFE1
 13337                           plusw2	equ	0xFDB
 13338                           status	equ	0xFD8
 13339                           
 13340 ;; *************** function _TMR1_Initialize *****************
 13341 ;; Defined at:
 13342 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 13343 ;; Parameters:    Size  Location     Type
 13344 ;;		None
 13345 ;; Auto vars:     Size  Location     Type
 13346 ;;		None
 13347 ;; Return value:  Size  Location     Type
 13348 ;;                  1    wreg      void 
 13349 ;; Registers used:
 13350 ;;		wreg, status,2, status,0, cstack
 13351 ;; Tracked objects:
 13352 ;;		On entry : 0/0
 13353 ;;		On exit  : 0/0
 13354 ;;		Unchanged: 0/0
 13355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13360 ;;Total ram usage:        2 bytes
 13361 ;; Hardware stack levels used:    1
 13362 ;; Hardware stack levels required when called:    5
 13363 ;; This function calls:
 13364 ;;		_TMR1_SetInterruptHandler
 13365 ;;		_TMR1_StartTimer
 13366 ;; This function is called by:
 13367 ;;		_SYSTEM_Initialize
 13368 ;; This function uses a non-reentrant model
 13369 ;;
 13370                           
 13371                           	psect	text33
 13372  006640                     __ptext33:
 13373                           	opt stack 0
 13374  006640                     _TMR1_Initialize:
 13375                           	opt stack 24
 13376                           
 13377                           ;mcc_generated_files/tmr1.c: 68:     T1CON = 0x30;
 13378                           
 13379                           ;incstack = 0
 13380  006640  0E30               	movlw	48
 13381  006642  6ECD               	movwf	4045,c	;volatile
 13382                           
 13383                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 13384  006644  0E00               	movlw	0
 13385  006646  6EAA               	movwf	4010,c	;volatile
 13386                           
 13387                           ;mcc_generated_files/tmr1.c: 74:     TMR1H = 0x15;
 13388  006648  0E15               	movlw	21
 13389  00664A  6ECF               	movwf	4047,c	;volatile
 13390                           
 13391                           ;mcc_generated_files/tmr1.c: 77:     TMR1L = 0xA0;
 13392  00664C  0EA0               	movlw	160
 13393  00664E  6ECE               	movwf	4046,c	;volatile
 13394                           
 13395                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13396  006650  50CE               	movf	4046,w,c	;volatile
 13397  006652  CFCF F005          	movff	4047,??_TMR1_Initialize	;volatile
 13398  006656  6A06               	clrf	(??_TMR1_Initialize+1)& (0+255),c
 13399  006658  C005  F006         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 13400  00665C  6A05               	clrf	??_TMR1_Initialize,c
 13401  00665E  1005               	iorwf	??_TMR1_Initialize,w,c
 13402  006660  6E4D               	movwf	_timer1ReloadVal,c	;volatile
 13403  006662  5006               	movf	??_TMR1_Initialize+1,w,c
 13404  006664  6E4E               	movwf	_timer1ReloadVal+1,c	;volatile
 13405                           
 13406                           ;mcc_generated_files/tmr1.c: 83:     PIR1bits.TMR1IF = 0;
 13407  006666  909E               	bcf	3998,0,c	;volatile
 13408                           
 13409                           ;mcc_generated_files/tmr1.c: 86:     PIE1bits.TMR1IE = 1;
 13410  006668  809D               	bsf	3997,0,c	;volatile
 13411                           
 13412                           ;mcc_generated_files/tmr1.c: 89:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 13413  00666A  0ED0               	movlw	low _TMR1_DefaultInterruptHandler
 13414  00666C  6E03               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
 13415  00666E  0E68               	movlw	high _TMR1_DefaultInterruptHandler
 13416  006670  6E04               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
 13417  006672  EC52  F034         	call	_TMR1_SetInterruptHandler	;wreg free
 13418                           
 13419                           ;mcc_generated_files/tmr1.c: 92:     TMR1_StartTimer();
 13420  006676  EC62  F034         	call	_TMR1_StartTimer	;wreg free
 13421  00667A  0012               	return		;funcret
 13422  00667C                     __end_of_TMR1_Initialize:
 13423                           	opt stack 0
 13424                           tblptru	equ	0xFF8
 13425                           tblptrh	equ	0xFF7
 13426                           tblptrl	equ	0xFF6
 13427                           tablat	equ	0xFF5
 13428                           prodh	equ	0xFF4
 13429                           prodl	equ	0xFF3
 13430                           intcon	equ	0xFF2
 13431                           postinc0	equ	0xFEE
 13432                           wreg	equ	0xFE8
 13433                           postdec1	equ	0xFE5
 13434                           plusw1	equ	0xFE3
 13435                           fsr1l	equ	0xFE1
 13436                           plusw2	equ	0xFDB
 13437                           status	equ	0xFD8
 13438                           
 13439 ;; *************** function _TMR1_StartTimer *****************
 13440 ;; Defined at:
 13441 ;;		line 95 in file "mcc_generated_files/tmr1.c"
 13442 ;; Parameters:    Size  Location     Type
 13443 ;;		None
 13444 ;; Auto vars:     Size  Location     Type
 13445 ;;		None
 13446 ;; Return value:  Size  Location     Type
 13447 ;;                  1    wreg      void 
 13448 ;; Registers used:
 13449 ;;		None
 13450 ;; Tracked objects:
 13451 ;;		On entry : 0/0
 13452 ;;		On exit  : 0/0
 13453 ;;		Unchanged: 0/0
 13454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13459 ;;Total ram usage:        0 bytes
 13460 ;; Hardware stack levels used:    1
 13461 ;; Hardware stack levels required when called:    4
 13462 ;; This function calls:
 13463 ;;		Nothing
 13464 ;; This function is called by:
 13465 ;;		_TMR1_Initialize
 13466 ;; This function uses a non-reentrant model
 13467 ;;
 13468                           
 13469                           	psect	text34
 13470  0068C4                     __ptext34:
 13471                           	opt stack 0
 13472  0068C4                     _TMR1_StartTimer:
 13473                           	opt stack 24
 13474                           
 13475                           ;mcc_generated_files/tmr1.c: 98:     T1CONbits.TMR1ON = 1;
 13476                           
 13477                           ;incstack = 0
 13478  0068C4  80CD               	bsf	4045,0,c	;volatile
 13479  0068C6  0012               	return		;funcret
 13480  0068C8                     __end_of_TMR1_StartTimer:
 13481                           	opt stack 0
 13482                           tblptru	equ	0xFF8
 13483                           tblptrh	equ	0xFF7
 13484                           tblptrl	equ	0xFF6
 13485                           tablat	equ	0xFF5
 13486                           prodh	equ	0xFF4
 13487                           prodl	equ	0xFF3
 13488                           intcon	equ	0xFF2
 13489                           postinc0	equ	0xFEE
 13490                           wreg	equ	0xFE8
 13491                           postdec1	equ	0xFE5
 13492                           plusw1	equ	0xFE3
 13493                           fsr1l	equ	0xFE1
 13494                           plusw2	equ	0xFDB
 13495                           status	equ	0xFD8
 13496                           
 13497 ;; *************** function _TMR1_SetInterruptHandler *****************
 13498 ;; Defined at:
 13499 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 13502 ;;		 -> refresh(1), TMR1_DefaultInterruptHandler(1), 
 13503 ;; Auto vars:     Size  Location     Type
 13504 ;;		None
 13505 ;; Return value:  Size  Location     Type
 13506 ;;                  1    wreg      void 
 13507 ;; Registers used:
 13508 ;;		wreg, status,2, status,0
 13509 ;; Tracked objects:
 13510 ;;		On entry : 0/0
 13511 ;;		On exit  : 0/0
 13512 ;;		Unchanged: 0/0
 13513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13518 ;;Total ram usage:        2 bytes
 13519 ;; Hardware stack levels used:    1
 13520 ;; Hardware stack levels required when called:    4
 13521 ;; This function calls:
 13522 ;;		Nothing
 13523 ;; This function is called by:
 13524 ;;		_TMR1_Initialize
 13525 ;;		_main
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           
 13529                           	psect	text35
 13530  0068A4                     __ptext35:
 13531                           	opt stack 0
 13532  0068A4                     _TMR1_SetInterruptHandler:
 13533                           	opt stack 26
 13534                           
 13535                           ;mcc_generated_files/tmr1.c: 184:     TMR1_InterruptHandler = InterruptHandler;
 13536                           
 13537                           ;incstack = 0
 13538  0068A4  C003  F04B         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 13539  0068A8  C004  F04C         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 13540  0068AC  0012               	return		;funcret
 13541  0068AE                     __end_of_TMR1_SetInterruptHandler:
 13542                           	opt stack 0
 13543                           tblptru	equ	0xFF8
 13544                           tblptrh	equ	0xFF7
 13545                           tblptrl	equ	0xFF6
 13546                           tablat	equ	0xFF5
 13547                           prodh	equ	0xFF4
 13548                           prodl	equ	0xFF3
 13549                           intcon	equ	0xFF2
 13550                           postinc0	equ	0xFEE
 13551                           wreg	equ	0xFE8
 13552                           postdec1	equ	0xFE5
 13553                           plusw1	equ	0xFE3
 13554                           fsr1l	equ	0xFE1
 13555                           plusw2	equ	0xFDB
 13556                           status	equ	0xFD8
 13557                           
 13558 ;; *************** function _TMR0_Initialize *****************
 13559 ;; Defined at:
 13560 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 13561 ;; Parameters:    Size  Location     Type
 13562 ;;		None
 13563 ;; Auto vars:     Size  Location     Type
 13564 ;;		None
 13565 ;; Return value:  Size  Location     Type
 13566 ;;                  1    wreg      void 
 13567 ;; Registers used:
 13568 ;;		wreg, status,2, status,0, cstack
 13569 ;; Tracked objects:
 13570 ;;		On entry : 0/0
 13571 ;;		On exit  : 0/0
 13572 ;;		Unchanged: 0/0
 13573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13576 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13577 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13578 ;;Total ram usage:        2 bytes
 13579 ;; Hardware stack levels used:    1
 13580 ;; Hardware stack levels required when called:    5
 13581 ;; This function calls:
 13582 ;;		_TMR0_SetInterruptHandler
 13583 ;;		_TMR0_StartTimer
 13584 ;; This function is called by:
 13585 ;;		_SYSTEM_Initialize
 13586 ;; This function uses a non-reentrant model
 13587 ;;
 13588                           
 13589                           	psect	text36
 13590  0066B6                     __ptext36:
 13591                           	opt stack 0
 13592  0066B6                     _TMR0_Initialize:
 13593                           	opt stack 24
 13594                           
 13595                           ;mcc_generated_files/tmr0.c: 71:     T0CON = 0x15;
 13596                           
 13597                           ;incstack = 0
 13598  0066B6  0E15               	movlw	21
 13599  0066B8  6ED5               	movwf	4053,c	;volatile
 13600                           
 13601                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xCF;
 13602  0066BA  0ECF               	movlw	207
 13603  0066BC  6ED7               	movwf	4055,c	;volatile
 13604                           
 13605                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x2B;
 13606  0066BE  0E2B               	movlw	43
 13607  0066C0  6ED6               	movwf	4054,c	;volatile
 13608                           
 13609                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal = (TMR0H << 8) | TMR0L;
 13610  0066C2  50D6               	movf	4054,w,c	;volatile
 13611  0066C4  CFD7 F005          	movff	4055,??_TMR0_Initialize	;volatile
 13612  0066C8  6A06               	clrf	(??_TMR0_Initialize+1)& (0+255),c
 13613  0066CA  C005  F006         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 13614  0066CE  6A05               	clrf	??_TMR0_Initialize,c
 13615  0066D0  1005               	iorwf	??_TMR0_Initialize,w,c
 13616  0066D2  6E47               	movwf	_timer0ReloadVal,c	;volatile
 13617  0066D4  5006               	movf	??_TMR0_Initialize+1,w,c
 13618  0066D6  6E48               	movwf	_timer0ReloadVal+1,c	;volatile
 13619                           
 13620                           ;mcc_generated_files/tmr0.c: 83:     INTCONbits.TMR0IF = 0;
 13621  0066D8  94F2               	bcf	intcon,2,c	;volatile
 13622                           
 13623                           ;mcc_generated_files/tmr0.c: 86:     INTCONbits.TMR0IE = 1;
 13624  0066DA  8AF2               	bsf	intcon,5,c	;volatile
 13625                           
 13626                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 13627  0066DC  0ED2               	movlw	low _TMR0_DefaultInterruptHandler
 13628  0066DE  6E03               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
 13629  0066E0  0E68               	movlw	high _TMR0_DefaultInterruptHandler
 13630  0066E2  6E04               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
 13631  0066E4  EC57  F034         	call	_TMR0_SetInterruptHandler	;wreg free
 13632                           
 13633                           ;mcc_generated_files/tmr0.c: 92:     TMR0_StartTimer();
 13634  0066E8  EC64  F034         	call	_TMR0_StartTimer	;wreg free
 13635  0066EC  0012               	return		;funcret
 13636  0066EE                     __end_of_TMR0_Initialize:
 13637                           	opt stack 0
 13638                           tblptru	equ	0xFF8
 13639                           tblptrh	equ	0xFF7
 13640                           tblptrl	equ	0xFF6
 13641                           tablat	equ	0xFF5
 13642                           prodh	equ	0xFF4
 13643                           prodl	equ	0xFF3
 13644                           intcon	equ	0xFF2
 13645                           postinc0	equ	0xFEE
 13646                           wreg	equ	0xFE8
 13647                           postdec1	equ	0xFE5
 13648                           plusw1	equ	0xFE3
 13649                           fsr1l	equ	0xFE1
 13650                           plusw2	equ	0xFDB
 13651                           status	equ	0xFD8
 13652                           
 13653 ;; *************** function _TMR0_StartTimer *****************
 13654 ;; Defined at:
 13655 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 13656 ;; Parameters:    Size  Location     Type
 13657 ;;		None
 13658 ;; Auto vars:     Size  Location     Type
 13659 ;;		None
 13660 ;; Return value:  Size  Location     Type
 13661 ;;                  1    wreg      void 
 13662 ;; Registers used:
 13663 ;;		None
 13664 ;; Tracked objects:
 13665 ;;		On entry : 0/0
 13666 ;;		On exit  : 0/0
 13667 ;;		Unchanged: 0/0
 13668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13673 ;;Total ram usage:        0 bytes
 13674 ;; Hardware stack levels used:    1
 13675 ;; Hardware stack levels required when called:    4
 13676 ;; This function calls:
 13677 ;;		Nothing
 13678 ;; This function is called by:
 13679 ;;		_TMR0_Initialize
 13680 ;; This function uses a non-reentrant model
 13681 ;;
 13682                           
 13683                           	psect	text37
 13684  0068C8                     __ptext37:
 13685                           	opt stack 0
 13686  0068C8                     _TMR0_StartTimer:
 13687                           	opt stack 24
 13688                           
 13689                           ;mcc_generated_files/tmr0.c: 98:     T0CONbits.TMR0ON = 1;
 13690                           
 13691                           ;incstack = 0
 13692  0068C8  8ED5               	bsf	4053,7,c	;volatile
 13693  0068CA  0012               	return		;funcret
 13694  0068CC                     __end_of_TMR0_StartTimer:
 13695                           	opt stack 0
 13696                           tblptru	equ	0xFF8
 13697                           tblptrh	equ	0xFF7
 13698                           tblptrl	equ	0xFF6
 13699                           tablat	equ	0xFF5
 13700                           prodh	equ	0xFF4
 13701                           prodl	equ	0xFF3
 13702                           intcon	equ	0xFF2
 13703                           postinc0	equ	0xFEE
 13704                           wreg	equ	0xFE8
 13705                           postdec1	equ	0xFE5
 13706                           plusw1	equ	0xFE3
 13707                           fsr1l	equ	0xFE1
 13708                           plusw2	equ	0xFDB
 13709                           status	equ	0xFD8
 13710                           
 13711 ;; *************** function _TMR0_SetInterruptHandler *****************
 13712 ;; Defined at:
 13713 ;;		line 154 in file "mcc_generated_files/tmr0.c"
 13714 ;; Parameters:    Size  Location     Type
 13715 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 13716 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 13717 ;; Auto vars:     Size  Location     Type
 13718 ;;		None
 13719 ;; Return value:  Size  Location     Type
 13720 ;;                  1    wreg      void 
 13721 ;; Registers used:
 13722 ;;		wreg, status,2, status,0
 13723 ;; Tracked objects:
 13724 ;;		On entry : 0/0
 13725 ;;		On exit  : 0/0
 13726 ;;		Unchanged: 0/0
 13727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13732 ;;Total ram usage:        2 bytes
 13733 ;; Hardware stack levels used:    1
 13734 ;; Hardware stack levels required when called:    4
 13735 ;; This function calls:
 13736 ;;		Nothing
 13737 ;; This function is called by:
 13738 ;;		_TMR0_Initialize
 13739 ;; This function uses a non-reentrant model
 13740 ;;
 13741                           
 13742                           	psect	text38
 13743  0068AE                     __ptext38:
 13744                           	opt stack 0
 13745  0068AE                     _TMR0_SetInterruptHandler:
 13746                           	opt stack 24
 13747                           
 13748                           ;mcc_generated_files/tmr0.c: 155:     TMR0_InterruptHandler = InterruptHandler;
 13749                           
 13750                           ;incstack = 0
 13751  0068AE  C003  F049         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 13752  0068B2  C004  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 13753  0068B6  0012               	return		;funcret
 13754  0068B8                     __end_of_TMR0_SetInterruptHandler:
 13755                           	opt stack 0
 13756                           tblptru	equ	0xFF8
 13757                           tblptrh	equ	0xFF7
 13758                           tblptrl	equ	0xFF6
 13759                           tablat	equ	0xFF5
 13760                           prodh	equ	0xFF4
 13761                           prodl	equ	0xFF3
 13762                           intcon	equ	0xFF2
 13763                           postinc0	equ	0xFEE
 13764                           wreg	equ	0xFE8
 13765                           postdec1	equ	0xFE5
 13766                           plusw1	equ	0xFE3
 13767                           fsr1l	equ	0xFE1
 13768                           plusw2	equ	0xFDB
 13769                           status	equ	0xFD8
 13770                           
 13771 ;; *************** function _SPI_Initialize *****************
 13772 ;; Defined at:
 13773 ;;		line 63 in file "mcc_generated_files/spi.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;		None
 13776 ;; Auto vars:     Size  Location     Type
 13777 ;;		None
 13778 ;; Return value:  Size  Location     Type
 13779 ;;                  1    wreg      void 
 13780 ;; Registers used:
 13781 ;;		wreg, status,2
 13782 ;; Tracked objects:
 13783 ;;		On entry : 0/0
 13784 ;;		On exit  : 0/0
 13785 ;;		Unchanged: 0/0
 13786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13791 ;;Total ram usage:        0 bytes
 13792 ;; Hardware stack levels used:    1
 13793 ;; Hardware stack levels required when called:    4
 13794 ;; This function calls:
 13795 ;;		Nothing
 13796 ;; This function is called by:
 13797 ;;		_SYSTEM_Initialize
 13798 ;; This function uses a non-reentrant model
 13799 ;;
 13800                           
 13801                           	psect	text39
 13802  00688C                     __ptext39:
 13803                           	opt stack 0
 13804  00688C                     _SPI_Initialize:
 13805                           	opt stack 25
 13806                           
 13807                           ;mcc_generated_files/spi.c: 68:     SSPSTAT = 0x00;
 13808                           
 13809                           ;incstack = 0
 13810  00688C  0E00               	movlw	0
 13811  00688E  6EC7               	movwf	4039,c	;volatile
 13812                           
 13813                           ;mcc_generated_files/spi.c: 71:     SSPCON1 = 0x20;
 13814  006890  0E20               	movlw	32
 13815  006892  6EC6               	movwf	4038,c	;volatile
 13816                           
 13817                           ;mcc_generated_files/spi.c: 74:     SSPADD = 0x00;
 13818  006894  0E00               	movlw	0
 13819  006896  6EC8               	movwf	4040,c	;volatile
 13820  006898  0012               	return		;funcret
 13821  00689A                     __end_of_SPI_Initialize:
 13822                           	opt stack 0
 13823                           tblptru	equ	0xFF8
 13824                           tblptrh	equ	0xFF7
 13825                           tblptrl	equ	0xFF6
 13826                           tablat	equ	0xFF5
 13827                           prodh	equ	0xFF4
 13828                           prodl	equ	0xFF3
 13829                           intcon	equ	0xFF2
 13830                           postinc0	equ	0xFEE
 13831                           wreg	equ	0xFE8
 13832                           postdec1	equ	0xFE5
 13833                           plusw1	equ	0xFE3
 13834                           fsr1l	equ	0xFE1
 13835                           plusw2	equ	0xFDB
 13836                           status	equ	0xFD8
 13837                           
 13838 ;; *************** function _PIN_MANAGER_Initialize *****************
 13839 ;; Defined at:
 13840 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 13841 ;; Parameters:    Size  Location     Type
 13842 ;;		None
 13843 ;; Auto vars:     Size  Location     Type
 13844 ;;		None
 13845 ;; Return value:  Size  Location     Type
 13846 ;;                  1    wreg      void 
 13847 ;; Registers used:
 13848 ;;		wreg, status,2
 13849 ;; Tracked objects:
 13850 ;;		On entry : 0/0
 13851 ;;		On exit  : 0/0
 13852 ;;		Unchanged: 0/0
 13853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13858 ;;Total ram usage:        0 bytes
 13859 ;; Hardware stack levels used:    1
 13860 ;; Hardware stack levels required when called:    4
 13861 ;; This function calls:
 13862 ;;		Nothing
 13863 ;; This function is called by:
 13864 ;;		_SYSTEM_Initialize
 13865 ;; This function uses a non-reentrant model
 13866 ;;
 13867                           
 13868                           	psect	text40
 13869  0066EE                     __ptext40:
 13870                           	opt stack 0
 13871  0066EE                     _PIN_MANAGER_Initialize:
 13872                           	opt stack 25
 13873                           
 13874                           ;mcc_generated_files/pin_manager.c: 57:     LATE = 0x00;
 13875                           
 13876                           ;incstack = 0
 13877  0066EE  0E00               	movlw	0
 13878  0066F0  6E8D               	movwf	3981,c	;volatile
 13879                           
 13880                           ;mcc_generated_files/pin_manager.c: 58:     LATD = 0x00;
 13881  0066F2  0E00               	movlw	0
 13882  0066F4  6E8C               	movwf	3980,c	;volatile
 13883                           
 13884                           ;mcc_generated_files/pin_manager.c: 59:     LATA = 0x00;
 13885  0066F6  0E00               	movlw	0
 13886  0066F8  6E89               	movwf	3977,c	;volatile
 13887                           
 13888                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
 13889  0066FA  0E00               	movlw	0
 13890  0066FC  6E8A               	movwf	3978,c	;volatile
 13891                           
 13892                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
 13893  0066FE  0E00               	movlw	0
 13894  006700  6E8B               	movwf	3979,c	;volatile
 13895                           
 13896                           ;mcc_generated_files/pin_manager.c: 66:     TRISE = 0x07;
 13897  006702  0E07               	movlw	7
 13898  006704  6E96               	movwf	3990,c	;volatile
 13899                           
 13900                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xEC;
 13901  006706  0EEC               	movlw	236
 13902  006708  6E92               	movwf	3986,c	;volatile
 13903                           
 13904                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDB;
 13905  00670A  0EDB               	movlw	219
 13906  00670C  6E93               	movwf	3987,c	;volatile
 13907                           
 13908                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD5;
 13909  00670E  0ED5               	movlw	213
 13910  006710  6E94               	movwf	3988,c	;volatile
 13911                           
 13912                           ;mcc_generated_files/pin_manager.c: 70:     TRISD = 0xC2;
 13913  006712  0EC2               	movlw	194
 13914  006714  6E95               	movwf	3989,c	;volatile
 13915                           
 13916                           ;mcc_generated_files/pin_manager.c: 75:     ANCON0 = 0xFF;
 13917  006716  010F               	movlb	15	; () banked
 13918  006718  695D               	setf	93,b	;volatile
 13919                           
 13920                           ;mcc_generated_files/pin_manager.c: 76:     ANCON1 = 0x7D;
 13921  00671A  0E7D               	movlw	125
 13922  00671C  6F5C               	movwf	92,b	;volatile
 13923                           
 13924                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0xCF;
 13925  00671E  0ECF               	movlw	207
 13926  006720  6F5B               	movwf	91,b	;volatile
 13927                           
 13928                           ; BSR set to: 15
 13929  006722  0012               	return		;funcret
 13930  006724                     __end_of_PIN_MANAGER_Initialize:
 13931                           	opt stack 0
 13932                           tblptru	equ	0xFF8
 13933                           tblptrh	equ	0xFF7
 13934                           tblptrl	equ	0xFF6
 13935                           tablat	equ	0xFF5
 13936                           prodh	equ	0xFF4
 13937                           prodl	equ	0xFF3
 13938                           intcon	equ	0xFF2
 13939                           postinc0	equ	0xFEE
 13940                           wreg	equ	0xFE8
 13941                           postdec1	equ	0xFE5
 13942                           plusw1	equ	0xFE3
 13943                           fsr1l	equ	0xFE1
 13944                           plusw2	equ	0xFDB
 13945                           status	equ	0xFD8
 13946                           
 13947 ;; *************** function _OSCILLATOR_Initialize *****************
 13948 ;; Defined at:
 13949 ;;		line 123 in file "mcc_generated_files/mcc.c"
 13950 ;; Parameters:    Size  Location     Type
 13951 ;;		None
 13952 ;; Auto vars:     Size  Location     Type
 13953 ;;		None
 13954 ;; Return value:  Size  Location     Type
 13955 ;;                  1    wreg      void 
 13956 ;; Registers used:
 13957 ;;		wreg, status,2
 13958 ;; Tracked objects:
 13959 ;;		On entry : 0/0
 13960 ;;		On exit  : 0/0
 13961 ;;		Unchanged: 0/0
 13962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13967 ;;Total ram usage:        0 bytes
 13968 ;; Hardware stack levels used:    1
 13969 ;; Hardware stack levels required when called:    4
 13970 ;; This function calls:
 13971 ;;		Nothing
 13972 ;; This function is called by:
 13973 ;;		_SYSTEM_Initialize
 13974 ;; This function uses a non-reentrant model
 13975 ;;
 13976                           
 13977                           	psect	text41
 13978  00685A                     __ptext41:
 13979                           	opt stack 0
 13980  00685A                     _OSCILLATOR_Initialize:
 13981                           	opt stack 25
 13982                           
 13983                           ;mcc_generated_files/mcc.c: 126:     OSCCON = 0x60;
 13984                           
 13985                           ; BSR set to: 15
 13986                           ;incstack = 0
 13987  00685A  0E60               	movlw	96
 13988  00685C  6ED3               	movwf	4051,c	;volatile
 13989                           
 13990                           ;mcc_generated_files/mcc.c: 128:     OSCCON2 = 0x00;
 13991  00685E  0E00               	movlw	0
 13992  006860  6ED2               	movwf	4050,c	;volatile
 13993                           
 13994                           ;mcc_generated_files/mcc.c: 130:     OSCTUNE = 0x00;
 13995  006862  0E00               	movlw	0
 13996  006864  6E9B               	movwf	3995,c	;volatile
 13997                           
 13998                           ;mcc_generated_files/mcc.c: 132:     REFOCON = 0x00;
 13999  006866  0E00               	movlw	0
 14000  006868  6E9A               	movwf	3994,c	;volatile
 14001  00686A  0012               	return		;funcret
 14002  00686C                     __end_of_OSCILLATOR_Initialize:
 14003                           	opt stack 0
 14004                           tblptru	equ	0xFF8
 14005                           tblptrh	equ	0xFF7
 14006                           tblptrl	equ	0xFF6
 14007                           tablat	equ	0xFF5
 14008                           prodh	equ	0xFF4
 14009                           prodl	equ	0xFF3
 14010                           intcon	equ	0xFF2
 14011                           postinc0	equ	0xFEE
 14012                           wreg	equ	0xFE8
 14013                           postdec1	equ	0xFE5
 14014                           plusw1	equ	0xFE3
 14015                           fsr1l	equ	0xFE1
 14016                           plusw2	equ	0xFDB
 14017                           status	equ	0xFD8
 14018                           
 14019 ;; *************** function _INTERRUPT_Initialize *****************
 14020 ;; Defined at:
 14021 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 14022 ;; Parameters:    Size  Location     Type
 14023 ;;		None
 14024 ;; Auto vars:     Size  Location     Type
 14025 ;;		None
 14026 ;; Return value:  Size  Location     Type
 14027 ;;                  1    wreg      void 
 14028 ;; Registers used:
 14029 ;;		None
 14030 ;; Tracked objects:
 14031 ;;		On entry : 0/0
 14032 ;;		On exit  : 0/0
 14033 ;;		Unchanged: 0/0
 14034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14039 ;;Total ram usage:        0 bytes
 14040 ;; Hardware stack levels used:    1
 14041 ;; Hardware stack levels required when called:    4
 14042 ;; This function calls:
 14043 ;;		Nothing
 14044 ;; This function is called by:
 14045 ;;		_SYSTEM_Initialize
 14046 ;; This function uses a non-reentrant model
 14047 ;;
 14048                           
 14049                           	psect	text42
 14050  0068CC                     __ptext42:
 14051                           	opt stack 0
 14052  0068CC                     _INTERRUPT_Initialize:
 14053                           	opt stack 25
 14054                           
 14055                           ;mcc_generated_files/interrupt_manager.c: 54:     RCONbits.IPEN = 0;
 14056                           
 14057                           ;incstack = 0
 14058  0068CC  9ED0               	bcf	4048,7,c	;volatile
 14059  0068CE  0012               	return		;funcret
 14060  0068D0                     __end_of_INTERRUPT_Initialize:
 14061                           	opt stack 0
 14062                           tblptru	equ	0xFF8
 14063                           tblptrh	equ	0xFF7
 14064                           tblptrl	equ	0xFF6
 14065                           tablat	equ	0xFF5
 14066                           prodh	equ	0xFF4
 14067                           prodl	equ	0xFF3
 14068                           intcon	equ	0xFF2
 14069                           postinc0	equ	0xFEE
 14070                           wreg	equ	0xFE8
 14071                           postdec1	equ	0xFE5
 14072                           plusw1	equ	0xFE3
 14073                           fsr1l	equ	0xFE1
 14074                           plusw2	equ	0xFDB
 14075                           status	equ	0xFD8
 14076                           
 14077 ;; *************** function _ECAN_Initialize *****************
 14078 ;; Defined at:
 14079 ;;		line 63 in file "mcc_generated_files/ecan.c"
 14080 ;; Parameters:    Size  Location     Type
 14081 ;;		None
 14082 ;; Auto vars:     Size  Location     Type
 14083 ;;		None
 14084 ;; Return value:  Size  Location     Type
 14085 ;;                  1    wreg      void 
 14086 ;; Registers used:
 14087 ;;		wreg, status,2, status,0
 14088 ;; Tracked objects:
 14089 ;;		On entry : 0/0
 14090 ;;		On exit  : 0/0
 14091 ;;		Unchanged: 0/0
 14092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14096 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14097 ;;Total ram usage:        1 bytes
 14098 ;; Hardware stack levels used:    1
 14099 ;; Hardware stack levels required when called:    4
 14100 ;; This function calls:
 14101 ;;		Nothing
 14102 ;; This function is called by:
 14103 ;;		_SYSTEM_Initialize
 14104 ;; This function uses a non-reentrant model
 14105 ;;
 14106                           
 14107                           	psect	text43
 14108  0060EC                     __ptext43:
 14109                           	opt stack 0
 14110  0060EC                     _ECAN_Initialize:
 14111                           	opt stack 25
 14112                           
 14113                           ;mcc_generated_files/ecan.c: 65:     CANCON = 0x80;
 14114                           
 14115                           ;incstack = 0
 14116  0060EC  0E80               	movlw	128
 14117  0060EE  6E6F               	movwf	3951,c	;volatile
 14118  0060F0  506E               	movf	3950,w,c	;volatile
 14119  0060F2  0BE0               	andlw	224
 14120  0060F4  0A80               	xorlw	128
 14121  0060F6  A4D8               	btfss	status,2,c
 14122  0060F8  D7FB               	goto	l439
 14123                           
 14124                           ;mcc_generated_files/ecan.c: 71:     ECANCON = 0x00;
 14125  0060FA  0E00               	movlw	0
 14126  0060FC  6E72               	movwf	3954,c	;volatile
 14127                           
 14128                           ;mcc_generated_files/ecan.c: 85:     RXM0EIDH = 0xFF;
 14129  0060FE  010E               	movlb	14	; () banked
 14130  006100  69FA               	setf	250,b	;volatile
 14131                           
 14132                           ; BSR set to: 14
 14133                           ;mcc_generated_files/ecan.c: 86:     RXM0EIDL = 0xFF;
 14134  006102  69FB               	setf	251,b	;volatile
 14135                           
 14136                           ; BSR set to: 14
 14137                           ;mcc_generated_files/ecan.c: 87:     RXM0SIDH = 0xFF;
 14138  006104  69F8               	setf	248,b	;volatile
 14139                           
 14140                           ; BSR set to: 14
 14141                           ;mcc_generated_files/ecan.c: 88:     RXM0SIDL = 0xFF;
 14142  006106  69F9               	setf	249,b	;volatile
 14143                           
 14144                           ; BSR set to: 14
 14145                           ;mcc_generated_files/ecan.c: 90:     RXM1EIDH = 0xFF;
 14146  006108  69FE               	setf	254,b	;volatile
 14147                           
 14148                           ; BSR set to: 14
 14149                           ;mcc_generated_files/ecan.c: 91:     RXM1EIDL = 0xFF;
 14150  00610A  69FF               	setf	255,b	;volatile
 14151                           
 14152                           ; BSR set to: 14
 14153                           ;mcc_generated_files/ecan.c: 92:     RXM1SIDH = 0xFF;
 14154  00610C  69FC               	setf	252,b	;volatile
 14155                           
 14156                           ; BSR set to: 14
 14157                           ;mcc_generated_files/ecan.c: 93:     RXM1SIDL = 0xFF;
 14158  00610E  69FD               	setf	253,b	;volatile
 14159                           
 14160                           ;mcc_generated_files/ecan.c: 99:     RXF0EIDH = 0x00;
 14161  006110  0E00               	movlw	0
 14162  006112  6FE2               	movwf	226,b	;volatile
 14163                           
 14164                           ;mcc_generated_files/ecan.c: 100:     RXF0EIDL = 0x00;
 14165  006114  0E00               	movlw	0
 14166  006116  6FE3               	movwf	227,b	;volatile
 14167                           
 14168                           ;mcc_generated_files/ecan.c: 101:     RXF0SIDH = 0x00;
 14169  006118  0E00               	movlw	0
 14170  00611A  6FE0               	movwf	224,b	;volatile
 14171                           
 14172                           ;mcc_generated_files/ecan.c: 102:     RXF0SIDL = 0x00;
 14173  00611C  0E00               	movlw	0
 14174  00611E  6FE1               	movwf	225,b	;volatile
 14175                           
 14176                           ;mcc_generated_files/ecan.c: 104:     RXF1EIDH = 0x00;
 14177  006120  0E00               	movlw	0
 14178  006122  6FE6               	movwf	230,b	;volatile
 14179                           
 14180                           ;mcc_generated_files/ecan.c: 105:     RXF1EIDL = 0x00;
 14181  006124  0E00               	movlw	0
 14182  006126  6FE7               	movwf	231,b	;volatile
 14183                           
 14184                           ;mcc_generated_files/ecan.c: 106:     RXF1SIDH = 0x00;
 14185  006128  0E00               	movlw	0
 14186  00612A  6FE4               	movwf	228,b	;volatile
 14187                           
 14188                           ;mcc_generated_files/ecan.c: 107:     RXF1SIDL = 0x00;
 14189  00612C  0E00               	movlw	0
 14190  00612E  6FE5               	movwf	229,b	;volatile
 14191                           
 14192                           ;mcc_generated_files/ecan.c: 109:     RXF2EIDH = 0x00;
 14193  006130  0E00               	movlw	0
 14194  006132  6FEA               	movwf	234,b	;volatile
 14195                           
 14196                           ;mcc_generated_files/ecan.c: 110:     RXF2EIDL = 0x00;
 14197  006134  0E00               	movlw	0
 14198  006136  6FEB               	movwf	235,b	;volatile
 14199                           
 14200                           ;mcc_generated_files/ecan.c: 111:     RXF2SIDH = 0x00;
 14201  006138  0E00               	movlw	0
 14202  00613A  6FE8               	movwf	232,b	;volatile
 14203                           
 14204                           ;mcc_generated_files/ecan.c: 112:     RXF2SIDL = 0x00;
 14205  00613C  0E00               	movlw	0
 14206  00613E  6FE9               	movwf	233,b	;volatile
 14207                           
 14208                           ;mcc_generated_files/ecan.c: 114:     RXF3EIDH = 0x00;
 14209  006140  0E00               	movlw	0
 14210  006142  6FEE               	movwf	238,b	;volatile
 14211                           
 14212                           ;mcc_generated_files/ecan.c: 115:     RXF3EIDL = 0x00;
 14213  006144  0E00               	movlw	0
 14214  006146  6FEF               	movwf	239,b	;volatile
 14215                           
 14216                           ;mcc_generated_files/ecan.c: 116:     RXF3SIDH = 0x00;
 14217  006148  0E00               	movlw	0
 14218  00614A  6FEC               	movwf	236,b	;volatile
 14219                           
 14220                           ;mcc_generated_files/ecan.c: 117:     RXF3SIDL = 0x00;
 14221  00614C  0E00               	movlw	0
 14222  00614E  6FED               	movwf	237,b	;volatile
 14223                           
 14224                           ;mcc_generated_files/ecan.c: 119:     RXF4EIDH = 0x00;
 14225  006150  0E00               	movlw	0
 14226  006152  6FF2               	movwf	242,b	;volatile
 14227                           
 14228                           ;mcc_generated_files/ecan.c: 120:     RXF4EIDL = 0x00;
 14229  006154  0E00               	movlw	0
 14230  006156  6FF3               	movwf	243,b	;volatile
 14231                           
 14232                           ;mcc_generated_files/ecan.c: 121:     RXF4SIDH = 0x00;
 14233  006158  0E00               	movlw	0
 14234  00615A  6FF0               	movwf	240,b	;volatile
 14235                           
 14236                           ;mcc_generated_files/ecan.c: 122:     RXF4SIDL = 0x00;
 14237  00615C  0E00               	movlw	0
 14238  00615E  6FF1               	movwf	241,b	;volatile
 14239                           
 14240                           ;mcc_generated_files/ecan.c: 124:     RXF5EIDH = 0x00;
 14241  006160  0E00               	movlw	0
 14242  006162  6FF6               	movwf	246,b	;volatile
 14243                           
 14244                           ;mcc_generated_files/ecan.c: 125:     RXF5EIDL = 0x00;
 14245  006164  0E00               	movlw	0
 14246  006166  6FF7               	movwf	247,b	;volatile
 14247                           
 14248                           ;mcc_generated_files/ecan.c: 126:     RXF5SIDH = 0x00;
 14249  006168  0E00               	movlw	0
 14250  00616A  6FF4               	movwf	244,b	;volatile
 14251                           
 14252                           ;mcc_generated_files/ecan.c: 127:     RXF5SIDL = 0x00;
 14253  00616C  0E00               	movlw	0
 14254  00616E  6FF5               	movwf	245,b	;volatile
 14255                           
 14256                           ;mcc_generated_files/ecan.c: 142:     BRGCON1 = 0x03;
 14257  006170  0E03               	movlw	3
 14258  006172  6F43               	movwf	67,b	;volatile
 14259                           
 14260                           ;mcc_generated_files/ecan.c: 143:     BRGCON2 = 0x98;
 14261  006174  0E98               	movlw	152
 14262  006176  6F44               	movwf	68,b	;volatile
 14263                           
 14264                           ;mcc_generated_files/ecan.c: 144:     BRGCON3 = 0x01;
 14265  006178  0E01               	movlw	1
 14266  00617A  6F45               	movwf	69,b	;volatile
 14267                           
 14268                           ;mcc_generated_files/ecan.c: 146:     CANCON = 0x00;
 14269  00617C  0E00               	movlw	0
 14270  00617E  6E6F               	movwf	3951,c	;volatile
 14271  006180                     
 14272                           ; BSR set to: 14
 14273                           
 14274                           ; BSR set to: 14
 14275  006180  CF6E F003          	movff	3950,??_ECAN_Initialize	;volatile
 14276  006184  0EE0               	movlw	224
 14277  006186  1603               	andwf	??_ECAN_Initialize,f,c
 14278  006188  B4D8               	btfsc	status,2,c
 14279  00618A  0012               	return	
 14280  00618C  D7F9               	goto	l442
 14281  00618E                     __end_of_ECAN_Initialize:
 14282                           	opt stack 0
 14283                           tblptru	equ	0xFF8
 14284                           tblptrh	equ	0xFF7
 14285                           tblptrl	equ	0xFF6
 14286                           tablat	equ	0xFF5
 14287                           prodh	equ	0xFF4
 14288                           prodl	equ	0xFF3
 14289                           intcon	equ	0xFF2
 14290                           postinc0	equ	0xFEE
 14291                           wreg	equ	0xFE8
 14292                           postdec1	equ	0xFE5
 14293                           plusw1	equ	0xFE3
 14294                           fsr1l	equ	0xFE1
 14295                           plusw2	equ	0xFDB
 14296                           status	equ	0xFD8
 14297                           
 14298 ;; *************** function _FT800_Init *****************
 14299 ;; Defined at:
 14300 ;;		line 143 in file "FT800.c"
 14301 ;; Parameters:    Size  Location     Type
 14302 ;;		None
 14303 ;; Auto vars:     Size  Location     Type
 14304 ;;		None
 14305 ;; Return value:  Size  Location     Type
 14306 ;;                  1    wreg      void 
 14307 ;; Registers used:
 14308 ;;		wreg, status,2, status,0, cstack
 14309 ;; Tracked objects:
 14310 ;;		On entry : 0/0
 14311 ;;		On exit  : 0/0
 14312 ;;		Unchanged: 0/0
 14313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14316 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14318 ;;Total ram usage:        2 bytes
 14319 ;; Hardware stack levels used:    1
 14320 ;; Hardware stack levels required when called:    6
 14321 ;; This function calls:
 14322 ;;		_host_command
 14323 ;;		_rd16
 14324 ;;		_wr16
 14325 ;;		_wr32
 14326 ;;		_wr8
 14327 ;; This function is called by:
 14328 ;;		_main
 14329 ;; This function uses a non-reentrant model
 14330 ;;
 14331                           
 14332                           	psect	text44
 14333  00504C                     __ptext44:
 14334                           	opt stack 0
 14335  00504C                     _FT800_Init:
 14336                           	opt stack 24
 14337                           
 14338                           ;FT800.c: 145:     LATCbits.LATC1 = 0;
 14339                           
 14340                           ;incstack = 0
 14341  00504C  928B               	bcf	3979,1,c	;volatile
 14342                           
 14343                           ;FT800.c: 146:     _delay((unsigned long)((20)*(64000000/4000.0)));
 14344  00504E  0E02               	movlw	2
 14345  005050  6E11               	movwf	(??_FT800_Init+1)& (0+255),c
 14346  005052  0EA0               	movlw	160
 14347  005054  6E10               	movwf	??_FT800_Init& (0+255),c
 14348  005056  0E92               	movlw	146
 14349  005058                     u2217:
 14350  005058  2EE8               	decfsz	wreg,f,c
 14351  00505A  D7FE               	bra	u2217
 14352  00505C  2E10               	decfsz	??_FT800_Init& (0+255),f,c
 14353  00505E  D7FC               	bra	u2217
 14354  005060  2E11               	decfsz	(??_FT800_Init+1)& (0+255),f,c
 14355  005062  D7FA               	bra	u2217
 14356  005064  D000               	nop2	
 14357                           
 14358                           ;FT800.c: 147:     LATCbits.LATC1 = 1;
 14359  005066  828B               	bsf	3979,1,c	;volatile
 14360                           
 14361                           ;FT800.c: 148:     _delay((unsigned long)((20)*(64000000/4000.0)));
 14362  005068  0E02               	movlw	2
 14363  00506A  6E11               	movwf	(??_FT800_Init+1)& (0+255),c
 14364  00506C  0EA0               	movlw	160
 14365  00506E  6E10               	movwf	??_FT800_Init& (0+255),c
 14366  005070  0E92               	movlw	146
 14367  005072                     u2227:
 14368  005072  2EE8               	decfsz	wreg,f,c
 14369  005074  D7FE               	bra	u2227
 14370  005076  2E10               	decfsz	??_FT800_Init& (0+255),f,c
 14371  005078  D7FC               	bra	u2227
 14372  00507A  2E11               	decfsz	(??_FT800_Init+1)& (0+255),f,c
 14373  00507C  D7FA               	bra	u2227
 14374  00507E  D000               	nop2	
 14375                           
 14376                           ;FT800.c: 150:     host_command(0x00);
 14377  005080  0E00               	movlw	0
 14378  005082  EC15  F034         	call	_host_command
 14379                           
 14380                           ;FT800.c: 152:     host_command(0x44);
 14381  005086  0E44               	movlw	68
 14382  005088  EC15  F034         	call	_host_command
 14383                           
 14384                           ;FT800.c: 154:     host_command(0x62);
 14385  00508C  0E62               	movlw	98
 14386  00508E  EC15  F034         	call	_host_command
 14387                           
 14388                           ;FT800.c: 157:     wr16(1057840UL, 480);
 14389  005092  0E30               	movlw	48
 14390  005094  6E04               	movwf	wr16@addr,c
 14391  005096  0E24               	movlw	36
 14392  005098  6E05               	movwf	wr16@addr+1,c
 14393  00509A  0E10               	movlw	16
 14394  00509C  6E06               	movwf	wr16@addr+2,c
 14395  00509E  0E00               	movlw	0
 14396  0050A0  6E07               	movwf	wr16@addr+3,c
 14397  0050A2  0E01               	movlw	1
 14398  0050A4  6E09               	movwf	wr16@value+1,c
 14399  0050A6  0EE0               	movlw	224
 14400  0050A8  6E08               	movwf	wr16@value,c
 14401  0050AA  ECB9  F033         	call	_wr16	;wreg free
 14402                           
 14403                           ;FT800.c: 158:     wr16(1057860UL, 272);
 14404  0050AE  0E44               	movlw	68
 14405  0050B0  6E04               	movwf	wr16@addr,c
 14406  0050B2  0E24               	movlw	36
 14407  0050B4  6E05               	movwf	wr16@addr+1,c
 14408  0050B6  0E10               	movlw	16
 14409  0050B8  6E06               	movwf	wr16@addr+2,c
 14410  0050BA  0E00               	movlw	0
 14411  0050BC  6E07               	movwf	wr16@addr+3,c
 14412  0050BE  0E01               	movlw	1
 14413  0050C0  6E09               	movwf	wr16@value+1,c
 14414  0050C2  0E10               	movlw	16
 14415  0050C4  6E08               	movwf	wr16@value,c
 14416  0050C6  ECB9  F033         	call	_wr16	;wreg free
 14417                           
 14418                           ;FT800.c: 159:     wr16(1057832UL, 525);
 14419  0050CA  0E28               	movlw	40
 14420  0050CC  6E04               	movwf	wr16@addr,c
 14421  0050CE  0E24               	movlw	36
 14422  0050D0  6E05               	movwf	wr16@addr+1,c
 14423  0050D2  0E10               	movlw	16
 14424  0050D4  6E06               	movwf	wr16@addr+2,c
 14425  0050D6  0E00               	movlw	0
 14426  0050D8  6E07               	movwf	wr16@addr+3,c
 14427  0050DA  0E02               	movlw	2
 14428  0050DC  6E09               	movwf	wr16@value+1,c
 14429  0050DE  0E0D               	movlw	13
 14430  0050E0  6E08               	movwf	wr16@value,c
 14431  0050E2  ECB9  F033         	call	_wr16	;wreg free
 14432                           
 14433                           ;FT800.c: 160:     wr16(1057844UL, 0);
 14434  0050E6  0E34               	movlw	52
 14435  0050E8  6E04               	movwf	wr16@addr,c
 14436  0050EA  0E24               	movlw	36
 14437  0050EC  6E05               	movwf	wr16@addr+1,c
 14438  0050EE  0E10               	movlw	16
 14439  0050F0  6E06               	movwf	wr16@addr+2,c
 14440  0050F2  0E00               	movlw	0
 14441  0050F4  6E07               	movwf	wr16@addr+3,c
 14442  0050F6  0E00               	movlw	0
 14443  0050F8  6E09               	movwf	wr16@value+1,c
 14444  0050FA  0E00               	movlw	0
 14445  0050FC  6E08               	movwf	wr16@value,c
 14446  0050FE  ECB9  F033         	call	_wr16	;wreg free
 14447                           
 14448                           ;FT800.c: 161:     wr16(1057848UL, 41);
 14449  005102  0E38               	movlw	56
 14450  005104  6E04               	movwf	wr16@addr,c
 14451  005106  0E24               	movlw	36
 14452  005108  6E05               	movwf	wr16@addr+1,c
 14453  00510A  0E10               	movlw	16
 14454  00510C  6E06               	movwf	wr16@addr+2,c
 14455  00510E  0E00               	movlw	0
 14456  005110  6E07               	movwf	wr16@addr+3,c
 14457  005112  0E00               	movlw	0
 14458  005114  6E09               	movwf	wr16@value+1,c
 14459  005116  0E29               	movlw	41
 14460  005118  6E08               	movwf	wr16@value,c
 14461  00511A  ECB9  F033         	call	_wr16	;wreg free
 14462                           
 14463                           ;FT800.c: 162:     wr16(1057836UL, 43);
 14464  00511E  0E2C               	movlw	44
 14465  005120  6E04               	movwf	wr16@addr,c
 14466  005122  0E24               	movlw	36
 14467  005124  6E05               	movwf	wr16@addr+1,c
 14468  005126  0E10               	movlw	16
 14469  005128  6E06               	movwf	wr16@addr+2,c
 14470  00512A  0E00               	movlw	0
 14471  00512C  6E07               	movwf	wr16@addr+3,c
 14472  00512E  0E00               	movlw	0
 14473  005130  6E09               	movwf	wr16@value+1,c
 14474  005132  0E2B               	movlw	43
 14475  005134  6E08               	movwf	wr16@value,c
 14476  005136  ECB9  F033         	call	_wr16	;wreg free
 14477                           
 14478                           ;FT800.c: 163:     wr16(1057852UL, 286);
 14479  00513A  0E3C               	movlw	60
 14480  00513C  6E04               	movwf	wr16@addr,c
 14481  00513E  0E24               	movlw	36
 14482  005140  6E05               	movwf	wr16@addr+1,c
 14483  005142  0E10               	movlw	16
 14484  005144  6E06               	movwf	wr16@addr+2,c
 14485  005146  0E00               	movlw	0
 14486  005148  6E07               	movwf	wr16@addr+3,c
 14487  00514A  0E01               	movlw	1
 14488  00514C  6E09               	movwf	wr16@value+1,c
 14489  00514E  0E1E               	movlw	30
 14490  005150  6E08               	movwf	wr16@value,c
 14491  005152  ECB9  F033         	call	_wr16	;wreg free
 14492                           
 14493                           ;FT800.c: 164:     wr16(1057864UL, 0);
 14494  005156  0E48               	movlw	72
 14495  005158  6E04               	movwf	wr16@addr,c
 14496  00515A  0E24               	movlw	36
 14497  00515C  6E05               	movwf	wr16@addr+1,c
 14498  00515E  0E10               	movlw	16
 14499  005160  6E06               	movwf	wr16@addr+2,c
 14500  005162  0E00               	movlw	0
 14501  005164  6E07               	movwf	wr16@addr+3,c
 14502  005166  0E00               	movlw	0
 14503  005168  6E09               	movwf	wr16@value+1,c
 14504  00516A  0E00               	movlw	0
 14505  00516C  6E08               	movwf	wr16@value,c
 14506  00516E  ECB9  F033         	call	_wr16	;wreg free
 14507                           
 14508                           ;FT800.c: 165:     wr16(1057868UL, 10);
 14509  005172  0E4C               	movlw	76
 14510  005174  6E04               	movwf	wr16@addr,c
 14511  005176  0E24               	movlw	36
 14512  005178  6E05               	movwf	wr16@addr+1,c
 14513  00517A  0E10               	movlw	16
 14514  00517C  6E06               	movwf	wr16@addr+2,c
 14515  00517E  0E00               	movlw	0
 14516  005180  6E07               	movwf	wr16@addr+3,c
 14517  005182  0E00               	movlw	0
 14518  005184  6E09               	movwf	wr16@value+1,c
 14519  005186  0E0A               	movlw	10
 14520  005188  6E08               	movwf	wr16@value,c
 14521  00518A  ECB9  F033         	call	_wr16	;wreg free
 14522                           
 14523                           ;FT800.c: 166:     wr16(1057856UL, 12);
 14524  00518E  0E40               	movlw	64
 14525  005190  6E04               	movwf	wr16@addr,c
 14526  005192  0E24               	movlw	36
 14527  005194  6E05               	movwf	wr16@addr+1,c
 14528  005196  0E10               	movlw	16
 14529  005198  6E06               	movwf	wr16@addr+2,c
 14530  00519A  0E00               	movlw	0
 14531  00519C  6E07               	movwf	wr16@addr+3,c
 14532  00519E  0E00               	movlw	0
 14533  0051A0  6E09               	movwf	wr16@value+1,c
 14534  0051A2  0E0C               	movlw	12
 14535  0051A4  6E08               	movwf	wr16@value,c
 14536  0051A6  ECB9  F033         	call	_wr16	;wreg free
 14537                           
 14538                           ;FT800.c: 167:     wr8(1057892UL, 0);
 14539  0051AA  0E64               	movlw	100
 14540  0051AC  6E04               	movwf	wr8@addr,c
 14541  0051AE  0E24               	movlw	36
 14542  0051B0  6E05               	movwf	wr8@addr+1,c
 14543  0051B2  0E10               	movlw	16
 14544  0051B4  6E06               	movwf	wr8@addr+2,c
 14545  0051B6  0E00               	movlw	0
 14546  0051B8  6E07               	movwf	wr8@addr+3,c
 14547  0051BA  0E00               	movlw	0
 14548  0051BC  6E08               	movwf	wr8@value,c
 14549  0051BE  ECCC  F033         	call	_wr8	;wreg free
 14550                           
 14551                           ;FT800.c: 168:     wr8(1057884UL, 0);
 14552  0051C2  0E5C               	movlw	92
 14553  0051C4  6E04               	movwf	wr8@addr,c
 14554  0051C6  0E24               	movlw	36
 14555  0051C8  6E05               	movwf	wr8@addr+1,c
 14556  0051CA  0E10               	movlw	16
 14557  0051CC  6E06               	movwf	wr8@addr+2,c
 14558  0051CE  0E00               	movlw	0
 14559  0051D0  6E07               	movwf	wr8@addr+3,c
 14560  0051D2  0E00               	movlw	0
 14561  0051D4  6E08               	movwf	wr8@value,c
 14562  0051D6  ECCC  F033         	call	_wr8	;wreg free
 14563                           
 14564                           ;FT800.c: 169:     wr16(1057880UL, 0x01B6);
 14565  0051DA  0E58               	movlw	88
 14566  0051DC  6E04               	movwf	wr16@addr,c
 14567  0051DE  0E24               	movlw	36
 14568  0051E0  6E05               	movwf	wr16@addr+1,c
 14569  0051E2  0E10               	movlw	16
 14570  0051E4  6E06               	movwf	wr16@addr+2,c
 14571  0051E6  0E00               	movlw	0
 14572  0051E8  6E07               	movwf	wr16@addr+3,c
 14573  0051EA  0E01               	movlw	1
 14574  0051EC  6E09               	movwf	wr16@value+1,c
 14575  0051EE  0EB6               	movlw	182
 14576  0051F0  6E08               	movwf	wr16@value,c
 14577  0051F2  ECB9  F033         	call	_wr16	;wreg free
 14578                           
 14579                           ;FT800.c: 170:     wr8(1057888UL, 0x0000);
 14580  0051F6  0E60               	movlw	96
 14581  0051F8  6E04               	movwf	wr8@addr,c
 14582  0051FA  0E24               	movlw	36
 14583  0051FC  6E05               	movwf	wr8@addr+1,c
 14584  0051FE  0E10               	movlw	16
 14585  005200  6E06               	movwf	wr8@addr+2,c
 14586  005202  0E00               	movlw	0
 14587  005204  6E07               	movwf	wr8@addr+3,c
 14588  005206  0E00               	movlw	0
 14589  005208  6E08               	movwf	wr8@value,c
 14590  00520A  ECCC  F033         	call	_wr8	;wreg free
 14591                           
 14592                           ;FT800.c: 173:     wr8(1057896UL, 0);
 14593  00520E  0E68               	movlw	104
 14594  005210  6E04               	movwf	wr8@addr,c
 14595  005212  0E24               	movlw	36
 14596  005214  6E05               	movwf	wr8@addr+1,c
 14597  005216  0E10               	movlw	16
 14598  005218  6E06               	movwf	wr8@addr+2,c
 14599  00521A  0E00               	movlw	0
 14600  00521C  6E07               	movwf	wr8@addr+3,c
 14601  00521E  0E00               	movlw	0
 14602  005220  6E08               	movwf	wr8@value,c
 14603  005222  ECCC  F033         	call	_wr8	;wreg free
 14604                           
 14605                           ;FT800.c: 175:     wr8(1057876UL, 0);
 14606  005226  0E54               	movlw	84
 14607  005228  6E04               	movwf	wr8@addr,c
 14608  00522A  0E24               	movlw	36
 14609  00522C  6E05               	movwf	wr8@addr+1,c
 14610  00522E  0E10               	movlw	16
 14611  005230  6E06               	movwf	wr8@addr+2,c
 14612  005232  0E00               	movlw	0
 14613  005234  6E07               	movwf	wr8@addr+3,c
 14614  005236  0E00               	movlw	0
 14615  005238  6E08               	movwf	wr8@value,c
 14616  00523A  ECCC  F033         	call	_wr8	;wreg free
 14617                           
 14618                           ;FT800.c: 182:     wr32(1048576UL +0,((2UL<<24)|(((0)&255UL)<<16)|(((26)&255UL)<<8)|(((0
      +                          )&255UL)<<0)));
 14619  00523E  0E00               	movlw	0
 14620  005240  6E04               	movwf	wr32@addr,c
 14621  005242  0E00               	movlw	0
 14622  005244  6E05               	movwf	wr32@addr+1,c
 14623  005246  0E10               	movlw	16
 14624  005248  6E06               	movwf	wr32@addr+2,c
 14625  00524A  0E00               	movlw	0
 14626  00524C  6E07               	movwf	wr32@addr+3,c
 14627  00524E  0E00               	movlw	0
 14628  005250  6E08               	movwf	wr32@value,c
 14629  005252  0E1A               	movlw	26
 14630  005254  6E09               	movwf	wr32@value+1,c
 14631  005256  0E00               	movlw	0
 14632  005258  6E0A               	movwf	wr32@value+2,c
 14633  00525A  0E02               	movlw	2
 14634  00525C  6E0B               	movwf	wr32@value+3,c
 14635  00525E  EC4C  F032         	call	_wr32	;wreg free
 14636                           
 14637                           ;FT800.c: 183:     wr32(1048576UL +4,((38UL<<24)|(((1)&1UL)<<2)|(((1)&1UL)<<1)|(((1)&1UL
      +                          )<<0)));
 14638  005262  0E04               	movlw	4
 14639  005264  6E04               	movwf	wr32@addr,c
 14640  005266  0E00               	movlw	0
 14641  005268  6E05               	movwf	wr32@addr+1,c
 14642  00526A  0E10               	movlw	16
 14643  00526C  6E06               	movwf	wr32@addr+2,c
 14644  00526E  0E00               	movlw	0
 14645  005270  6E07               	movwf	wr32@addr+3,c
 14646  005272  0E07               	movlw	7
 14647  005274  6E08               	movwf	wr32@value,c
 14648  005276  0E00               	movlw	0
 14649  005278  6E09               	movwf	wr32@value+1,c
 14650  00527A  0E00               	movlw	0
 14651  00527C  6E0A               	movwf	wr32@value+2,c
 14652  00527E  0E26               	movlw	38
 14653  005280  6E0B               	movwf	wr32@value+3,c
 14654  005282  EC4C  F032         	call	_wr32	;wreg free
 14655                           
 14656                           ;FT800.c: 184:     wr32(1048576UL +8,((0UL<<24)));
 14657  005286  0E08               	movlw	8
 14658  005288  6E04               	movwf	wr32@addr,c
 14659  00528A  0E00               	movlw	0
 14660  00528C  6E05               	movwf	wr32@addr+1,c
 14661  00528E  0E10               	movlw	16
 14662  005290  6E06               	movwf	wr32@addr+2,c
 14663  005292  0E00               	movlw	0
 14664  005294  6E07               	movwf	wr32@addr+3,c
 14665  005296  0E00               	movlw	0
 14666  005298  6E08               	movwf	wr32@value,c
 14667  00529A  0E00               	movlw	0
 14668  00529C  6E09               	movwf	wr32@value+1,c
 14669  00529E  0E00               	movlw	0
 14670  0052A0  6E0A               	movwf	wr32@value+2,c
 14671  0052A2  0E00               	movlw	0
 14672  0052A4  6E0B               	movwf	wr32@value+3,c
 14673  0052A6  EC4C  F032         	call	_wr32	;wreg free
 14674                           
 14675                           ;FT800.c: 186:     wr8(1057872UL,2UL);
 14676  0052AA  0E50               	movlw	80
 14677  0052AC  6E04               	movwf	wr8@addr,c
 14678  0052AE  0E24               	movlw	36
 14679  0052B0  6E05               	movwf	wr8@addr+1,c
 14680  0052B2  0E10               	movlw	16
 14681  0052B4  6E06               	movwf	wr8@addr+2,c
 14682  0052B6  0E00               	movlw	0
 14683  0052B8  6E07               	movwf	wr8@addr+3,c
 14684  0052BA  0E02               	movlw	2
 14685  0052BC  6E08               	movwf	wr8@value,c
 14686  0052BE  ECCC  F033         	call	_wr8	;wreg free
 14687                           
 14688                           ;FT800.c: 191:     wr8(1057932UL, 0xfc);
 14689  0052C2  0E8C               	movlw	140
 14690  0052C4  6E04               	movwf	wr8@addr,c
 14691  0052C6  0E24               	movlw	36
 14692  0052C8  6E05               	movwf	wr8@addr+1,c
 14693  0052CA  0E10               	movlw	16
 14694  0052CC  6E06               	movwf	wr8@addr+2,c
 14695  0052CE  0E00               	movlw	0
 14696  0052D0  6E07               	movwf	wr8@addr+3,c
 14697  0052D2  0EFC               	movlw	252
 14698  0052D4  6E08               	movwf	wr8@value,c
 14699  0052D6  ECCC  F033         	call	_wr8	;wreg free
 14700                           
 14701                           ;FT800.c: 192:     wr8(1057936UL, 0xff);
 14702  0052DA  0E90               	movlw	144
 14703  0052DC  6E04               	movwf	wr8@addr,c
 14704  0052DE  0E24               	movlw	36
 14705  0052E0  6E05               	movwf	wr8@addr+1,c
 14706  0052E2  0E10               	movlw	16
 14707  0052E4  6E06               	movwf	wr8@addr+2,c
 14708  0052E6  0E00               	movlw	0
 14709  0052E8  6E07               	movwf	wr8@addr+3,c
 14710  0052EA  0EFF               	movlw	255
 14711  0052EC  6E08               	movwf	wr8@value,c
 14712  0052EE  ECCC  F033         	call	_wr8	;wreg free
 14713                           
 14714                           ;FT800.c: 194:     wr8(1057900UL,5);
 14715  0052F2  0E6C               	movlw	108
 14716  0052F4  6E04               	movwf	wr8@addr,c
 14717  0052F6  0E24               	movlw	36
 14718  0052F8  6E05               	movwf	wr8@addr+1,c
 14719  0052FA  0E10               	movlw	16
 14720  0052FC  6E06               	movwf	wr8@addr+2,c
 14721  0052FE  0E00               	movlw	0
 14722  005300  6E07               	movwf	wr8@addr+3,c
 14723  005302  0E05               	movlw	5
 14724  005304  6E08               	movwf	wr8@value,c
 14725  005306  ECCC  F033         	call	_wr8	;wreg free
 14726                           
 14727                           ;FT800.c: 196:     cmd_offset=rd16(1058024UL);while(rd16(1058020UL) != cmd_offset);
 14728  00530A  0EE8               	movlw	232
 14729  00530C  6E04               	movwf	rd16@addr,c
 14730  00530E  0E24               	movlw	36
 14731  005310  6E05               	movwf	rd16@addr+1,c
 14732  005312  0E10               	movlw	16
 14733  005314  6E06               	movwf	rd16@addr+2,c
 14734  005316  0E00               	movlw	0
 14735  005318  6E07               	movwf	rd16@addr+3,c
 14736  00531A  EC3E  F033         	call	_rd16	;wreg free
 14737  00531E  C004  F04F         	movff	?_rd16,_cmd_offset
 14738  005322  C005  F050         	movff	?_rd16+1,_cmd_offset+1
 14739  005326                     l4067:
 14740  005326  0EE4               	movlw	228
 14741  005328  6E04               	movwf	rd16@addr,c
 14742  00532A  0E24               	movlw	36
 14743  00532C  6E05               	movwf	rd16@addr+1,c
 14744  00532E  0E10               	movlw	16
 14745  005330  6E06               	movwf	rd16@addr+2,c
 14746  005332  0E00               	movlw	0
 14747  005334  6E07               	movwf	rd16@addr+3,c
 14748  005336  EC3E  F033         	call	_rd16	;wreg free
 14749  00533A  504F               	movf	_cmd_offset,w,c
 14750  00533C  1804               	xorwf	?_rd16,w,c
 14751  00533E  E1F3               	bnz	l4067
 14752  005340  5050               	movf	_cmd_offset+1,w,c
 14753  005342  1805               	xorwf	?_rd16+1,w,c
 14754  005344  B4D8               	btfsc	status,2,c
 14755  005346  0012               	return	
 14756  005348  D7EE               	goto	l61
 14757  00534A                     __end_of_FT800_Init:
 14758                           	opt stack 0
 14759                           tblptru	equ	0xFF8
 14760                           tblptrh	equ	0xFF7
 14761                           tblptrl	equ	0xFF6
 14762                           tablat	equ	0xFF5
 14763                           prodh	equ	0xFF4
 14764                           prodl	equ	0xFF3
 14765                           intcon	equ	0xFF2
 14766                           postinc0	equ	0xFEE
 14767                           wreg	equ	0xFE8
 14768                           postdec1	equ	0xFE5
 14769                           plusw1	equ	0xFE3
 14770                           fsr1l	equ	0xFE1
 14771                           plusw2	equ	0xFDB
 14772                           status	equ	0xFD8
 14773                           
 14774 ;; *************** function _wr8 *****************
 14775 ;; Defined at:
 14776 ;;		line 16 in file "FT800.c"
 14777 ;; Parameters:    Size  Location     Type
 14778 ;;  addr            4    3[COMRAM] unsigned long 
 14779 ;;  value           1    7[COMRAM] unsigned char 
 14780 ;; Auto vars:     Size  Location     Type
 14781 ;;		None
 14782 ;; Return value:  Size  Location     Type
 14783 ;;                  1    wreg      void 
 14784 ;; Registers used:
 14785 ;;		wreg, status,2, status,0, cstack
 14786 ;; Tracked objects:
 14787 ;;		On entry : 0/0
 14788 ;;		On exit  : 0/0
 14789 ;;		Unchanged: 0/0
 14790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14791 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14794 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14795 ;;Total ram usage:        5 bytes
 14796 ;; Hardware stack levels used:    1
 14797 ;; Hardware stack levels required when called:    5
 14798 ;; This function calls:
 14799 ;;		_SPI_Exchange8bit
 14800 ;; This function is called by:
 14801 ;;		_FT800_Init
 14802 ;; This function uses a non-reentrant model
 14803 ;;
 14804                           
 14805                           	psect	text45
 14806  006798                     __ptext45:
 14807                           	opt stack 0
 14808  006798                     _wr8:
 14809                           	opt stack 24
 14810                           
 14811                           ;FT800.c: 17:     LATDbits.LATD0 = 0;
 14812                           
 14813                           ;incstack = 0
 14814  006798  908C               	bcf	3980,0,c	;volatile
 14815                           
 14816                           ;FT800.c: 18:     SPI_Exchange8bit(0x80 | (addr >> 16));
 14817  00679A  5006               	movf	wr8@addr+2,w,c
 14818  00679C  0980               	iorlw	128
 14819  00679E  EC36  F034         	call	_SPI_Exchange8bit
 14820                           
 14821                           ;FT800.c: 19:     SPI_Exchange8bit(addr >> 8);
 14822  0067A2  5005               	movf	wr8@addr+1,w,c
 14823  0067A4  EC36  F034         	call	_SPI_Exchange8bit
 14824                           
 14825                           ;FT800.c: 20:     SPI_Exchange8bit(addr);
 14826  0067A8  5004               	movf	wr8@addr,w,c
 14827  0067AA  EC36  F034         	call	_SPI_Exchange8bit
 14828                           
 14829                           ;FT800.c: 21:     SPI_Exchange8bit(value);
 14830  0067AE  5008               	movf	wr8@value,w,c
 14831  0067B0  EC36  F034         	call	_SPI_Exchange8bit
 14832                           
 14833                           ;FT800.c: 22:     LATDbits.LATD0 = 1;
 14834  0067B4  808C               	bsf	3980,0,c	;volatile
 14835  0067B6  0012               	return		;funcret
 14836  0067B8                     __end_of_wr8:
 14837                           	opt stack 0
 14838                           tblptru	equ	0xFF8
 14839                           tblptrh	equ	0xFF7
 14840                           tblptrl	equ	0xFF6
 14841                           tablat	equ	0xFF5
 14842                           prodh	equ	0xFF4
 14843                           prodl	equ	0xFF3
 14844                           intcon	equ	0xFF2
 14845                           postinc0	equ	0xFEE
 14846                           wreg	equ	0xFE8
 14847                           postdec1	equ	0xFE5
 14848                           plusw1	equ	0xFE3
 14849                           fsr1l	equ	0xFE1
 14850                           plusw2	equ	0xFDB
 14851                           status	equ	0xFD8
 14852                           
 14853 ;; *************** function _wr32 *****************
 14854 ;; Defined at:
 14855 ;;		line 34 in file "FT800.c"
 14856 ;; Parameters:    Size  Location     Type
 14857 ;;  addr            4    3[COMRAM] unsigned long 
 14858 ;;  value           4    7[COMRAM] unsigned long 
 14859 ;; Auto vars:     Size  Location     Type
 14860 ;;		None
 14861 ;; Return value:  Size  Location     Type
 14862 ;;                  1    wreg      void 
 14863 ;; Registers used:
 14864 ;;		wreg, status,2, status,0, cstack
 14865 ;; Tracked objects:
 14866 ;;		On entry : 0/0
 14867 ;;		On exit  : 0/0
 14868 ;;		Unchanged: 0/0
 14869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14870 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14872 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14873 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14874 ;;Total ram usage:       12 bytes
 14875 ;; Hardware stack levels used:    1
 14876 ;; Hardware stack levels required when called:    5
 14877 ;; This function calls:
 14878 ;;		_SPI_Exchange8bit
 14879 ;; This function is called by:
 14880 ;;		_cmd
 14881 ;;		_FT800_Init
 14882 ;; This function uses a non-reentrant model
 14883 ;;
 14884                           
 14885                           	psect	text46
 14886  006498                     __ptext46:
 14887                           	opt stack 0
 14888  006498                     _wr32:
 14889                           	opt stack 23
 14890                           
 14891                           ;FT800.c: 35:     LATDbits.LATD0 = 0;
 14892                           
 14893                           ;incstack = 0
 14894  006498  908C               	bcf	3980,0,c	;volatile
 14895                           
 14896                           ;FT800.c: 36:     SPI_Exchange8bit(0x80 | (addr >> 16));
 14897  00649A  5006               	movf	wr32@addr+2,w,c
 14898  00649C  0980               	iorlw	128
 14899  00649E  EC36  F034         	call	_SPI_Exchange8bit
 14900                           
 14901                           ;FT800.c: 37:     SPI_Exchange8bit(addr >> 8);
 14902  0064A2  5005               	movf	wr32@addr+1,w,c
 14903  0064A4  EC36  F034         	call	_SPI_Exchange8bit
 14904                           
 14905                           ;FT800.c: 38:     SPI_Exchange8bit(addr);
 14906  0064A8  5004               	movf	wr32@addr,w,c
 14907  0064AA  EC36  F034         	call	_SPI_Exchange8bit
 14908                           
 14909                           ;FT800.c: 39:     SPI_Exchange8bit(((value) & 0xFFFF) & 0xFF);SPI_Exchange8bit((((value)
      +                           & 0xFFFF) >> 8) & 0xFF);SPI_Exchange8bit((((value) >> 16) & 0xFFFF) & 0xFF);SPI_Exchang
      +                          e8bit(((((value) >> 16) & 0xFFFF) >> 8) & 0xFF);
 14910  0064AE  5008               	movf	wr32@value,w,c
 14911  0064B0  EC36  F034         	call	_SPI_Exchange8bit
 14912  0064B4  5009               	movf	wr32@value+1,w,c
 14913  0064B6  EC36  F034         	call	_SPI_Exchange8bit
 14914  0064BA  500A               	movf	wr32@value+2,w,c
 14915  0064BC  EC36  F034         	call	_SPI_Exchange8bit
 14916  0064C0  C008  F00C         	movff	wr32@value,??_wr32
 14917  0064C4  C009  F00D         	movff	wr32@value+1,??_wr32+1
 14918  0064C8  C00A  F00E         	movff	wr32@value+2,??_wr32+2
 14919  0064CC  C00B  F00F         	movff	wr32@value+3,??_wr32+3
 14920  0064D0  0E11               	movlw	17
 14921  0064D2  D005               	goto	u1210
 14922  0064D4                     u1215:
 14923  0064D4  90D8               	bcf	status,0,c
 14924  0064D6  320F               	rrcf	??_wr32+3,f,c
 14925  0064D8  320E               	rrcf	??_wr32+2,f,c
 14926  0064DA  320D               	rrcf	??_wr32+1,f,c
 14927  0064DC  320C               	rrcf	??_wr32,f,c
 14928  0064DE                     u1210:
 14929  0064DE  2EE8               	decfsz	wreg,f,c
 14930  0064E0  D7F9               	goto	u1215
 14931  0064E2  C00D  F00C         	movff	??_wr32+1,??_wr32
 14932  0064E6  C00E  F00D         	movff	??_wr32+2,??_wr32+1
 14933  0064EA  C00F  F00E         	movff	??_wr32+3,??_wr32+2
 14934  0064EE  6A0F               	clrf	??_wr32+3,c
 14935  0064F0  500C               	movf	??_wr32,w,c
 14936  0064F2  EC36  F034         	call	_SPI_Exchange8bit
 14937                           
 14938                           ;FT800.c: 40:     LATDbits.LATD0 = 1;
 14939  0064F6  808C               	bsf	3980,0,c	;volatile
 14940  0064F8  0012               	return		;funcret
 14941  0064FA                     __end_of_wr32:
 14942                           	opt stack 0
 14943                           tblptru	equ	0xFF8
 14944                           tblptrh	equ	0xFF7
 14945                           tblptrl	equ	0xFF6
 14946                           tablat	equ	0xFF5
 14947                           prodh	equ	0xFF4
 14948                           prodl	equ	0xFF3
 14949                           intcon	equ	0xFF2
 14950                           postinc0	equ	0xFEE
 14951                           wreg	equ	0xFE8
 14952                           postdec1	equ	0xFE5
 14953                           plusw1	equ	0xFE3
 14954                           fsr1l	equ	0xFE1
 14955                           plusw2	equ	0xFDB
 14956                           status	equ	0xFD8
 14957                           
 14958 ;; *************** function _wr16 *****************
 14959 ;; Defined at:
 14960 ;;		line 25 in file "FT800.c"
 14961 ;; Parameters:    Size  Location     Type
 14962 ;;  addr            4    3[COMRAM] unsigned long 
 14963 ;;  value           2    7[COMRAM] unsigned int 
 14964 ;; Auto vars:     Size  Location     Type
 14965 ;;		None
 14966 ;; Return value:  Size  Location     Type
 14967 ;;                  1    wreg      void 
 14968 ;; Registers used:
 14969 ;;		wreg, status,2, status,0, cstack
 14970 ;; Tracked objects:
 14971 ;;		On entry : 0/0
 14972 ;;		On exit  : 0/0
 14973 ;;		Unchanged: 0/0
 14974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14975 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14978 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14979 ;;Total ram usage:        6 bytes
 14980 ;; Hardware stack levels used:    1
 14981 ;; Hardware stack levels required when called:    5
 14982 ;; This function calls:
 14983 ;;		_SPI_Exchange8bit
 14984 ;; This function is called by:
 14985 ;;		_FT800_Init
 14986 ;;		_display_end
 14987 ;;		_display_labels
 14988 ;;		_display_status
 14989 ;;		_display_laptime
 14990 ;;		_display_waterTemp
 14991 ;;		_display_oilTemp
 14992 ;;		_display_bspd
 14993 ;;		_display_battery
 14994 ;;		_display_fuel_level
 14995 ;;		_display_tp
 14996 ;;		_display_etc
 14997 ;;		_display_speed
 14998 ;;		_display_brake_bias
 14999 ;;		_display_rpm
 15000 ;;		_display_fuel
 15001 ;;		_display_gasPres
 15002 ;; This function uses a non-reentrant model
 15003 ;;
 15004                           
 15005                           	psect	text47
 15006  006772                     __ptext47:
 15007                           	opt stack 0
 15008  006772                     _wr16:
 15009                           	opt stack 24
 15010                           
 15011                           ;FT800.c: 26:     LATDbits.LATD0 = 0;
 15012                           
 15013                           ;incstack = 0
 15014  006772  908C               	bcf	3980,0,c	;volatile
 15015                           
 15016                           ;FT800.c: 27:     SPI_Exchange8bit(0x80 | (addr >> 16));
 15017  006774  5006               	movf	wr16@addr+2,w,c
 15018  006776  0980               	iorlw	128
 15019  006778  EC36  F034         	call	_SPI_Exchange8bit
 15020                           
 15021                           ;FT800.c: 28:     SPI_Exchange8bit(addr >> 8);
 15022  00677C  5005               	movf	wr16@addr+1,w,c
 15023  00677E  EC36  F034         	call	_SPI_Exchange8bit
 15024                           
 15025                           ;FT800.c: 29:     SPI_Exchange8bit(addr);
 15026  006782  5004               	movf	wr16@addr,w,c
 15027  006784  EC36  F034         	call	_SPI_Exchange8bit
 15028                           
 15029                           ;FT800.c: 30:     SPI_Exchange8bit((value) & 0xFF);SPI_Exchange8bit(((value) >> 8) & 0xF
      +                          F);
 15030  006788  5008               	movf	wr16@value,w,c
 15031  00678A  EC36  F034         	call	_SPI_Exchange8bit
 15032  00678E  5009               	movf	wr16@value+1,w,c
 15033  006790  EC36  F034         	call	_SPI_Exchange8bit
 15034                           
 15035                           ;FT800.c: 31:     LATDbits.LATD0 = 1;
 15036  006794  808C               	bsf	3980,0,c	;volatile
 15037  006796  0012               	return		;funcret
 15038  006798                     __end_of_wr16:
 15039                           	opt stack 0
 15040                           tblptru	equ	0xFF8
 15041                           tblptrh	equ	0xFF7
 15042                           tblptrl	equ	0xFF6
 15043                           tablat	equ	0xFF5
 15044                           prodh	equ	0xFF4
 15045                           prodl	equ	0xFF3
 15046                           intcon	equ	0xFF2
 15047                           postinc0	equ	0xFEE
 15048                           wreg	equ	0xFE8
 15049                           postdec1	equ	0xFE5
 15050                           plusw1	equ	0xFE3
 15051                           fsr1l	equ	0xFE1
 15052                           plusw2	equ	0xFDB
 15053                           status	equ	0xFD8
 15054                           
 15055 ;; *************** function _rd16 *****************
 15056 ;; Defined at:
 15057 ;;		line 72 in file "FT800.c"
 15058 ;; Parameters:    Size  Location     Type
 15059 ;;  addr            4    3[COMRAM] unsigned long 
 15060 ;; Auto vars:     Size  Location     Type
 15061 ;;  temp            1    9[COMRAM] unsigned char 
 15062 ;; Return value:  Size  Location     Type
 15063 ;;                  2    3[COMRAM] unsigned int 
 15064 ;; Registers used:
 15065 ;;		wreg, status,2, cstack
 15066 ;; Tracked objects:
 15067 ;;		On entry : 0/0
 15068 ;;		On exit  : 0/0
 15069 ;;		Unchanged: 0/0
 15070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15074 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15075 ;;Total ram usage:        7 bytes
 15076 ;; Hardware stack levels used:    1
 15077 ;; Hardware stack levels required when called:    5
 15078 ;; This function calls:
 15079 ;;		_SPI_Exchange8bit
 15080 ;; This function is called by:
 15081 ;;		_FT800_Init
 15082 ;; This function uses a non-reentrant model
 15083 ;;
 15084                           
 15085                           	psect	text48
 15086  00667C                     __ptext48:
 15087                           	opt stack 0
 15088  00667C                     _rd16:
 15089                           	opt stack 24
 15090                           
 15091                           ;FT800.c: 73:     LATDbits.LATD0 = 0;
 15092                           
 15093                           ;incstack = 0
 15094  00667C  908C               	bcf	3980,0,c	;volatile
 15095                           
 15096                           ;FT800.c: 74:     SPI_Exchange8bit(addr >> 16);
 15097  00667E  5006               	movf	rd16@addr+2,w,c
 15098  006680  EC36  F034         	call	_SPI_Exchange8bit
 15099                           
 15100                           ;FT800.c: 75:     SPI_Exchange8bit(addr >> 8);
 15101  006684  5005               	movf	rd16@addr+1,w,c
 15102  006686  EC36  F034         	call	_SPI_Exchange8bit
 15103                           
 15104                           ;FT800.c: 76:     SPI_Exchange8bit(addr);
 15105  00668A  5004               	movf	rd16@addr,w,c
 15106  00668C  EC36  F034         	call	_SPI_Exchange8bit
 15107                           
 15108                           ;FT800.c: 77:     SPI_Exchange8bit(0);
 15109  006690  0E00               	movlw	0
 15110  006692  EC36  F034         	call	_SPI_Exchange8bit
 15111                           
 15112                           ;FT800.c: 78:     SPI_Exchange8bit(0);
 15113  006696  0E00               	movlw	0
 15114  006698  EC36  F034         	call	_SPI_Exchange8bit
 15115                           
 15116                           ;FT800.c: 79:     ft_uint8_t temp = SSPBUF;
 15117  00669C  CFC9 F00A          	movff	4041,rd16@temp	;volatile
 15118                           
 15119                           ;FT800.c: 80:     SPI_Exchange8bit(0);
 15120  0066A0  0E00               	movlw	0
 15121  0066A2  EC36  F034         	call	_SPI_Exchange8bit
 15122                           
 15123                           ;FT800.c: 81:     LATDbits.LATD0 = 1;
 15124  0066A6  808C               	bsf	3980,0,c	;volatile
 15125                           
 15126                           ;FT800.c: 82:     return ((ft_uint16_t)SSPBUF << 8) | temp;
 15127  0066A8  50C9               	movf	4041,w,c	;volatile
 15128  0066AA  6E08               	movwf	??_rd16& (0+255),c
 15129  0066AC  500A               	movf	rd16@temp,w,c
 15130  0066AE  6E04               	movwf	?_rd16,c
 15131  0066B0  C008  F005         	movff	??_rd16,?_rd16+1
 15132  0066B4  0012               	return	
 15133  0066B6                     __end_of_rd16:
 15134                           	opt stack 0
 15135                           tblptru	equ	0xFF8
 15136                           tblptrh	equ	0xFF7
 15137                           tblptrl	equ	0xFF6
 15138                           tablat	equ	0xFF5
 15139                           prodh	equ	0xFF4
 15140                           prodl	equ	0xFF3
 15141                           intcon	equ	0xFF2
 15142                           postinc0	equ	0xFEE
 15143                           wreg	equ	0xFE8
 15144                           postdec1	equ	0xFE5
 15145                           plusw1	equ	0xFE3
 15146                           fsr1l	equ	0xFE1
 15147                           plusw2	equ	0xFDB
 15148                           status	equ	0xFD8
 15149                           
 15150 ;; *************** function _host_command *****************
 15151 ;; Defined at:
 15152 ;;		line 8 in file "FT800.c"
 15153 ;; Parameters:    Size  Location     Type
 15154 ;;  command         1    wreg     unsigned char 
 15155 ;; Auto vars:     Size  Location     Type
 15156 ;;  command         1    3[COMRAM] unsigned char 
 15157 ;; Return value:  Size  Location     Type
 15158 ;;                  1    wreg      void 
 15159 ;; Registers used:
 15160 ;;		wreg, status,2, cstack
 15161 ;; Tracked objects:
 15162 ;;		On entry : 0/0
 15163 ;;		On exit  : 0/0
 15164 ;;		Unchanged: 0/0
 15165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15170 ;;Total ram usage:        1 bytes
 15171 ;; Hardware stack levels used:    1
 15172 ;; Hardware stack levels required when called:    5
 15173 ;; This function calls:
 15174 ;;		_SPI_Exchange8bit
 15175 ;; This function is called by:
 15176 ;;		_FT800_Init
 15177 ;; This function uses a non-reentrant model
 15178 ;;
 15179                           
 15180                           	psect	text49
 15181  00682A                     __ptext49:
 15182                           	opt stack 0
 15183  00682A                     _host_command:
 15184                           	opt stack 24
 15185                           
 15186                           ;incstack = 0
 15187                           ;host_command@command stored from wreg
 15188  00682A  6E04               	movwf	host_command@command,c
 15189                           
 15190                           ;FT800.c: 9:     LATDbits.LATD0 = 0;
 15191  00682C  908C               	bcf	3980,0,c	;volatile
 15192                           
 15193                           ;FT800.c: 10:     SPI_Exchange8bit(command);
 15194  00682E  5004               	movf	host_command@command,w,c
 15195  006830  EC36  F034         	call	_SPI_Exchange8bit
 15196                           
 15197                           ;FT800.c: 11:     SPI_Exchange8bit(0);
 15198  006834  0E00               	movlw	0
 15199  006836  EC36  F034         	call	_SPI_Exchange8bit
 15200                           
 15201                           ;FT800.c: 12:     SPI_Exchange8bit(0);
 15202  00683A  0E00               	movlw	0
 15203  00683C  EC36  F034         	call	_SPI_Exchange8bit
 15204                           
 15205                           ;FT800.c: 13:     LATDbits.LATD0 = 1;
 15206  006840  808C               	bsf	3980,0,c	;volatile
 15207  006842  0012               	return		;funcret
 15208  006844                     __end_of_host_command:
 15209                           	opt stack 0
 15210                           tblptru	equ	0xFF8
 15211                           tblptrh	equ	0xFF7
 15212                           tblptrl	equ	0xFF6
 15213                           tablat	equ	0xFF5
 15214                           prodh	equ	0xFF4
 15215                           prodl	equ	0xFF3
 15216                           intcon	equ	0xFF2
 15217                           postinc0	equ	0xFEE
 15218                           wreg	equ	0xFE8
 15219                           postdec1	equ	0xFE5
 15220                           plusw1	equ	0xFE3
 15221                           fsr1l	equ	0xFE1
 15222                           plusw2	equ	0xFDB
 15223                           status	equ	0xFD8
 15224                           
 15225 ;; *************** function _SPI_Exchange8bit *****************
 15226 ;; Defined at:
 15227 ;;		line 77 in file "mcc_generated_files/spi.c"
 15228 ;; Parameters:    Size  Location     Type
 15229 ;;  data            1    wreg     unsigned char 
 15230 ;; Auto vars:     Size  Location     Type
 15231 ;;  data            1    2[COMRAM] unsigned char 
 15232 ;; Return value:  Size  Location     Type
 15233 ;;                  1    wreg      unsigned char 
 15234 ;; Registers used:
 15235 ;;		wreg, status,2
 15236 ;; Tracked objects:
 15237 ;;		On entry : 0/0
 15238 ;;		On exit  : 0/0
 15239 ;;		Unchanged: 0/0
 15240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15245 ;;Total ram usage:        1 bytes
 15246 ;; Hardware stack levels used:    1
 15247 ;; Hardware stack levels required when called:    4
 15248 ;; This function calls:
 15249 ;;		Nothing
 15250 ;; This function is called by:
 15251 ;;		_host_command
 15252 ;;		_wr8
 15253 ;;		_wr16
 15254 ;;		_wr32
 15255 ;;		_wr8s
 15256 ;;		_rd16
 15257 ;;		_rd8
 15258 ;;		_rd32
 15259 ;;		_SPI_Exchange8bitBuffer
 15260 ;; This function uses a non-reentrant model
 15261 ;;
 15262                           
 15263                           	psect	text50
 15264  00686C                     __ptext50:
 15265                           	opt stack 0
 15266  00686C                     _SPI_Exchange8bit:
 15267                           	opt stack 24
 15268                           
 15269                           ;incstack = 0
 15270                           ;SPI_Exchange8bit@data stored from wreg
 15271  00686C  6E03               	movwf	SPI_Exchange8bit@data,c
 15272                           
 15273                           ;mcc_generated_files/spi.c: 77: uint8_t SPI_Exchange8bit(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 78: {;mcc_generated_files/spi.c: 80:     SSPCON1bits.WCOL = 0;
 15274  00686E  9EC6               	bcf	4038,7,c	;volatile
 15275                           
 15276                           ;mcc_generated_files/spi.c: 82:     SSPBUF = data;
 15277  006870  C003  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 15278  006874                     
 15279                           ;mcc_generated_files/spi.c: 84:     while(SSPSTATbits.BF == 0x0)
 15280                           
 15281                           ;mcc_generated_files/spi.c: 85:     {;mcc_generated_files/spi.c: 86:     }
 15282  006874  A0C7               	btfss	4039,0,c	;volatile
 15283  006876  D7FE               	goto	l181
 15284                           
 15285                           ;mcc_generated_files/spi.c: 88:     return (SSPBUF);
 15286  006878  50C9               	movf	4041,w,c	;volatile
 15287  00687A  0012               	return		;funcret
 15288  00687C                     __end_of_SPI_Exchange8bit:
 15289                           	opt stack 0
 15290                           tblptru	equ	0xFF8
 15291                           tblptrh	equ	0xFF7
 15292                           tblptrl	equ	0xFF6
 15293                           tablat	equ	0xFF5
 15294                           prodh	equ	0xFF4
 15295                           prodl	equ	0xFF3
 15296                           intcon	equ	0xFF2
 15297                           postinc0	equ	0xFEE
 15298                           wreg	equ	0xFE8
 15299                           postdec1	equ	0xFE5
 15300                           plusw1	equ	0xFE3
 15301                           fsr1l	equ	0xFE1
 15302                           plusw2	equ	0xFDB
 15303                           status	equ	0xFD8
 15304                           
 15305 ;; *************** function _CAN_receive *****************
 15306 ;; Defined at:
 15307 ;;		line 239 in file "mcc_generated_files/ecan.c"
 15308 ;; Parameters:    Size  Location     Type
 15309 ;;  tempCanMsg      2   21[COMRAM] PTR struct .
 15310 ;;		 -> canMessage(14), 
 15311 ;; Auto vars:     Size  Location     Type
 15312 ;;  returnValue     1   23[COMRAM] unsigned char 
 15313 ;; Return value:  Size  Location     Type
 15314 ;;                  1    wreg      unsigned char 
 15315 ;; Registers used:
 15316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15317 ;; Tracked objects:
 15318 ;;		On entry : 0/0
 15319 ;;		On exit  : 0/0
 15320 ;;		Unchanged: 0/0
 15321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15325 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15326 ;;Total ram usage:        3 bytes
 15327 ;; Hardware stack levels used:    1
 15328 ;; Hardware stack levels required when called:    5
 15329 ;; This function calls:
 15330 ;;		_convertReg2ExtendedCANid
 15331 ;;		_convertReg2StandardCANid
 15332 ;; This function is called by:
 15333 ;;		_main
 15334 ;; This function uses a non-reentrant model
 15335 ;;
 15336                           
 15337                           	psect	text51
 15338  0055BE                     __ptext51:
 15339                           	opt stack 0
 15340  0055BE                     _CAN_receive:
 15341                           	opt stack 25
 15342                           
 15343                           ;mcc_generated_files/ecan.c: 240:     unsigned char returnValue = 0;
 15344                           
 15345                           ;incstack = 0
 15346  0055BE  0E00               	movlw	0
 15347  0055C0  6E18               	movwf	CAN_receive@returnValue,c
 15348                           
 15349                           ;mcc_generated_files/ecan.c: 244:     {;mcc_generated_files/ecan.c: 247:         if (RXB
      +                          0CONbits.RXFUL != 0)
 15350  0055C2  AE60               	btfss	3936,7,c	;volatile
 15351  0055C4  D083               	goto	l461
 15352                           
 15353                           ;mcc_generated_files/ecan.c: 248:         {;mcc_generated_files/ecan.c: 249:            
      +                           if ((RXB0SIDL & 0x08) == 0x08)
 15354  0055C6  A662               	btfss	3938,3,c	;volatile
 15355  0055C8  D01E               	goto	l462
 15356                           
 15357                           ;mcc_generated_files/ecan.c: 250:             {;mcc_generated_files/ecan.c: 252:        
      +                                   tempCanMsg->frame.idType = (unsigned char) 2;
 15358  0055CA  C016  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 15359  0055CE  C017  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 15360  0055D2  0E02               	movlw	2
 15361  0055D4  6EDF               	movwf	indf2,c
 15362                           
 15363                           ;mcc_generated_files/ecan.c: 253:                 tempCanMsg->frame.id = convertReg2Exte
      +                          ndedCANid(RXB0EIDH, RXB0EIDL, RXB0SIDH, RXB0SIDL);
 15364  0055D6  CF64 F003          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
 15365  0055DA  CF61 F004          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
 15366  0055DE  CF62 F005          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
 15367  0055E2  5063               	movf	3939,w,c	;volatile
 15368  0055E4  ECF2  F02B         	call	_convertReg2ExtendedCANid
 15369  0055E8  EE20 F001          	lfsr	2,1
 15370  0055EC  5016               	movf	CAN_receive@tempCanMsg,w,c
 15371  0055EE  26D9               	addwf	fsr2l,f,c
 15372  0055F0  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15373  0055F2  22DA               	addwfc	fsr2h,f,c
 15374  0055F4  C003  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
 15375  0055F8  C004  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
 15376  0055FC  C005  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
 15377  005600  C006  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
 15378                           
 15379                           ;mcc_generated_files/ecan.c: 254:             } else {
 15380  005604  D019               	goto	l463
 15381  005606                     l462:
 15382                           
 15383                           ;mcc_generated_files/ecan.c: 256:                 tempCanMsg->frame.idType = (unsigned c
      +                          har) 1;
 15384  005606  C016  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 15385  00560A  C017  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 15386  00560E  0E01               	movlw	1
 15387  005610  6EDF               	movwf	indf2,c
 15388                           
 15389                           ;mcc_generated_files/ecan.c: 257:                 tempCanMsg->frame.id = convertReg2Stan
      +                          dardCANid(RXB0SIDH, RXB0SIDL);
 15390  005612  CF62 F003          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
 15391  005616  5061               	movf	3937,w,c	;volatile
 15392  005618  EC53  F031         	call	_convertReg2StandardCANid
 15393  00561C  EE20 F001          	lfsr	2,1
 15394  005620  5016               	movf	CAN_receive@tempCanMsg,w,c
 15395  005622  26D9               	addwf	fsr2l,f,c
 15396  005624  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15397  005626  22DA               	addwfc	fsr2h,f,c
 15398  005628  C003  FFDE         	movff	?_convertReg2StandardCANid,postinc2
 15399  00562C  C004  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
 15400  005630  C005  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
 15401  005634  C006  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
 15402  005638                     l463:
 15403                           
 15404                           ;mcc_generated_files/ecan.c: 260:             tempCanMsg->frame.dlc = RXB0DLC;
 15405  005638  EE20 F005          	lfsr	2,5
 15406  00563C  5016               	movf	CAN_receive@tempCanMsg,w,c
 15407  00563E  26D9               	addwf	fsr2l,f,c
 15408  005640  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15409  005642  22DA               	addwfc	fsr2h,f,c
 15410  005644  CF65 FFDF          	movff	3941,indf2	;volatile
 15411                           
 15412                           ;mcc_generated_files/ecan.c: 261:             tempCanMsg->frame.data0 = RXB0D0;
 15413  005648  EE20 F006          	lfsr	2,6
 15414  00564C  5016               	movf	CAN_receive@tempCanMsg,w,c
 15415  00564E  26D9               	addwf	fsr2l,f,c
 15416  005650  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15417  005652  22DA               	addwfc	fsr2h,f,c
 15418  005654  CF66 FFDF          	movff	3942,indf2	;volatile
 15419                           
 15420                           ;mcc_generated_files/ecan.c: 262:             tempCanMsg->frame.data1 = RXB0D1;
 15421  005658  EE20 F007          	lfsr	2,7
 15422  00565C  5016               	movf	CAN_receive@tempCanMsg,w,c
 15423  00565E  26D9               	addwf	fsr2l,f,c
 15424  005660  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15425  005662  22DA               	addwfc	fsr2h,f,c
 15426  005664  CF67 FFDF          	movff	3943,indf2	;volatile
 15427                           
 15428                           ;mcc_generated_files/ecan.c: 263:             tempCanMsg->frame.data2 = RXB0D2;
 15429  005668  EE20 F008          	lfsr	2,8
 15430  00566C  5016               	movf	CAN_receive@tempCanMsg,w,c
 15431  00566E  26D9               	addwf	fsr2l,f,c
 15432  005670  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15433  005672  22DA               	addwfc	fsr2h,f,c
 15434  005674  CF68 FFDF          	movff	3944,indf2	;volatile
 15435                           
 15436                           ;mcc_generated_files/ecan.c: 264:             tempCanMsg->frame.data3 = RXB0D3;
 15437  005678  EE20 F009          	lfsr	2,9
 15438  00567C  5016               	movf	CAN_receive@tempCanMsg,w,c
 15439  00567E  26D9               	addwf	fsr2l,f,c
 15440  005680  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15441  005682  22DA               	addwfc	fsr2h,f,c
 15442  005684  CF69 FFDF          	movff	3945,indf2	;volatile
 15443                           
 15444                           ;mcc_generated_files/ecan.c: 265:             tempCanMsg->frame.data4 = RXB0D4;
 15445  005688  EE20 F00A          	lfsr	2,10
 15446  00568C  5016               	movf	CAN_receive@tempCanMsg,w,c
 15447  00568E  26D9               	addwf	fsr2l,f,c
 15448  005690  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15449  005692  22DA               	addwfc	fsr2h,f,c
 15450  005694  CF6A FFDF          	movff	3946,indf2	;volatile
 15451                           
 15452                           ;mcc_generated_files/ecan.c: 266:             tempCanMsg->frame.data5 = RXB0D5;
 15453  005698  EE20 F00B          	lfsr	2,11
 15454  00569C  5016               	movf	CAN_receive@tempCanMsg,w,c
 15455  00569E  26D9               	addwf	fsr2l,f,c
 15456  0056A0  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15457  0056A2  22DA               	addwfc	fsr2h,f,c
 15458  0056A4  CF6B FFDF          	movff	3947,indf2	;volatile
 15459                           
 15460                           ;mcc_generated_files/ecan.c: 267:             tempCanMsg->frame.data6 = RXB0D6;
 15461  0056A8  EE20 F00C          	lfsr	2,12
 15462  0056AC  5016               	movf	CAN_receive@tempCanMsg,w,c
 15463  0056AE  26D9               	addwf	fsr2l,f,c
 15464  0056B0  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15465  0056B2  22DA               	addwfc	fsr2h,f,c
 15466  0056B4  CF6C FFDF          	movff	3948,indf2	;volatile
 15467                           
 15468                           ;mcc_generated_files/ecan.c: 268:             tempCanMsg->frame.data7 = RXB0D7;
 15469  0056B8  EE20 F00D          	lfsr	2,13
 15470  0056BC  5016               	movf	CAN_receive@tempCanMsg,w,c
 15471  0056BE  26D9               	addwf	fsr2l,f,c
 15472  0056C0  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15473  0056C2  22DA               	addwfc	fsr2h,f,c
 15474  0056C4  CF6D FFDF          	movff	3949,indf2	;volatile
 15475                           
 15476                           ;mcc_generated_files/ecan.c: 269:             RXB0CONbits.RXFUL = 0;
 15477  0056C8  9E60               	bcf	3936,7,c	;volatile
 15478  0056CA  D087               	goto	l4147
 15479  0056CC                     l461:
 15480  0056CC  010F               	movlb	15	; () banked
 15481  0056CE  AF30               	btfss	48,7,b	;volatile
 15482  0056D0  D086               	goto	l465
 15483                           
 15484                           ; BSR set to: 15
 15485                           ;mcc_generated_files/ecan.c: 272:         {;mcc_generated_files/ecan.c: 273:            
      +                           if ((RXB1SIDL & 0x08) == 0x08)
 15486  0056D2  A732               	btfss	50,3,b	;volatile
 15487  0056D4  D01E               	goto	l466
 15488                           
 15489                           ; BSR set to: 15
 15490                           ;mcc_generated_files/ecan.c: 274:             {;mcc_generated_files/ecan.c: 276:        
      +                                   tempCanMsg->frame.idType = (unsigned char) 2;
 15491  0056D6  C016  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 15492  0056DA  C017  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 15493  0056DE  0E02               	movlw	2
 15494  0056E0  6EDF               	movwf	indf2,c
 15495                           
 15496                           ; BSR set to: 15
 15497                           ;mcc_generated_files/ecan.c: 277:                 tempCanMsg->frame.id = convertReg2Exte
      +                          ndedCANid(RXB1EIDH, RXB1EIDL, RXB1SIDH, RXB1SIDL);
 15498  0056E2  CF34 F003          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
 15499  0056E6  CF31 F004          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
 15500  0056EA  CF32 F005          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
 15501  0056EE  5133               	movf	51,w,b	;volatile
 15502  0056F0  ECF2  F02B         	call	_convertReg2ExtendedCANid
 15503  0056F4  EE20 F001          	lfsr	2,1
 15504  0056F8  5016               	movf	CAN_receive@tempCanMsg,w,c
 15505  0056FA  26D9               	addwf	fsr2l,f,c
 15506  0056FC  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15507  0056FE  22DA               	addwfc	fsr2h,f,c
 15508  005700  C003  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
 15509  005704  C004  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
 15510  005708  C005  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
 15511  00570C  C006  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
 15512                           
 15513                           ;mcc_generated_files/ecan.c: 278:             }
 15514  005710  D01A               	goto	l467
 15515  005712                     l466:
 15516                           
 15517                           ;mcc_generated_files/ecan.c: 280:    {;mcc_generated_files/ecan.c: 282:                 
      +                          tempCanMsg->frame.idType = (unsigned char) 1;
 15518  005712  C016  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 15519  005716  C017  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 15520  00571A  0E01               	movlw	1
 15521  00571C  6EDF               	movwf	indf2,c
 15522                           
 15523                           ;mcc_generated_files/ecan.c: 283:                 tempCanMsg->frame.id = convertReg2Stan
      +                          dardCANid(RXB1SIDH, RXB1SIDL);
 15524  00571E  CF32 F003          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
 15525  005722  010F               	movlb	15	; () banked
 15526  005724  5131               	movf	49,w,b	;volatile
 15527  005726  EC53  F031         	call	_convertReg2StandardCANid
 15528  00572A  EE20 F001          	lfsr	2,1
 15529  00572E  5016               	movf	CAN_receive@tempCanMsg,w,c
 15530  005730  26D9               	addwf	fsr2l,f,c
 15531  005732  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15532  005734  22DA               	addwfc	fsr2h,f,c
 15533  005736  C003  FFDE         	movff	?_convertReg2StandardCANid,postinc2
 15534  00573A  C004  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
 15535  00573E  C005  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
 15536  005742  C006  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
 15537  005746                     l467:
 15538                           
 15539                           ;mcc_generated_files/ecan.c: 286:             tempCanMsg->frame.dlc = RXB1DLC;
 15540  005746  EE20 F005          	lfsr	2,5
 15541  00574A  5016               	movf	CAN_receive@tempCanMsg,w,c
 15542  00574C  26D9               	addwf	fsr2l,f,c
 15543  00574E  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15544  005750  22DA               	addwfc	fsr2h,f,c
 15545  005752  CF35 FFDF          	movff	3893,indf2	;volatile
 15546                           
 15547                           ;mcc_generated_files/ecan.c: 287:             tempCanMsg->frame.data0 = RXB1D0;
 15548  005756  EE20 F006          	lfsr	2,6
 15549  00575A  5016               	movf	CAN_receive@tempCanMsg,w,c
 15550  00575C  26D9               	addwf	fsr2l,f,c
 15551  00575E  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15552  005760  22DA               	addwfc	fsr2h,f,c
 15553  005762  CF36 FFDF          	movff	3894,indf2	;volatile
 15554                           
 15555                           ;mcc_generated_files/ecan.c: 288:             tempCanMsg->frame.data1 = RXB1D1;
 15556  005766  EE20 F007          	lfsr	2,7
 15557  00576A  5016               	movf	CAN_receive@tempCanMsg,w,c
 15558  00576C  26D9               	addwf	fsr2l,f,c
 15559  00576E  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15560  005770  22DA               	addwfc	fsr2h,f,c
 15561  005772  CF37 FFDF          	movff	3895,indf2	;volatile
 15562                           
 15563                           ;mcc_generated_files/ecan.c: 289:             tempCanMsg->frame.data2 = RXB1D2;
 15564  005776  EE20 F008          	lfsr	2,8
 15565  00577A  5016               	movf	CAN_receive@tempCanMsg,w,c
 15566  00577C  26D9               	addwf	fsr2l,f,c
 15567  00577E  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15568  005780  22DA               	addwfc	fsr2h,f,c
 15569  005782  CF38 FFDF          	movff	3896,indf2	;volatile
 15570                           
 15571                           ;mcc_generated_files/ecan.c: 290:             tempCanMsg->frame.data3 = RXB1D3;
 15572  005786  EE20 F009          	lfsr	2,9
 15573  00578A  5016               	movf	CAN_receive@tempCanMsg,w,c
 15574  00578C  26D9               	addwf	fsr2l,f,c
 15575  00578E  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15576  005790  22DA               	addwfc	fsr2h,f,c
 15577  005792  CF39 FFDF          	movff	3897,indf2	;volatile
 15578                           
 15579                           ;mcc_generated_files/ecan.c: 291:             tempCanMsg->frame.data4 = RXB1D4;
 15580  005796  EE20 F00A          	lfsr	2,10
 15581  00579A  5016               	movf	CAN_receive@tempCanMsg,w,c
 15582  00579C  26D9               	addwf	fsr2l,f,c
 15583  00579E  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15584  0057A0  22DA               	addwfc	fsr2h,f,c
 15585  0057A2  CF3A FFDF          	movff	3898,indf2	;volatile
 15586                           
 15587                           ;mcc_generated_files/ecan.c: 292:             tempCanMsg->frame.data5 = RXB1D5;
 15588  0057A6  EE20 F00B          	lfsr	2,11
 15589  0057AA  5016               	movf	CAN_receive@tempCanMsg,w,c
 15590  0057AC  26D9               	addwf	fsr2l,f,c
 15591  0057AE  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15592  0057B0  22DA               	addwfc	fsr2h,f,c
 15593  0057B2  CF3B FFDF          	movff	3899,indf2	;volatile
 15594                           
 15595                           ;mcc_generated_files/ecan.c: 293:             tempCanMsg->frame.data6 = RXB1D6;
 15596  0057B6  EE20 F00C          	lfsr	2,12
 15597  0057BA  5016               	movf	CAN_receive@tempCanMsg,w,c
 15598  0057BC  26D9               	addwf	fsr2l,f,c
 15599  0057BE  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15600  0057C0  22DA               	addwfc	fsr2h,f,c
 15601  0057C2  CF3C FFDF          	movff	3900,indf2	;volatile
 15602                           
 15603                           ;mcc_generated_files/ecan.c: 294:             tempCanMsg->frame.data7 = RXB1D7;
 15604  0057C6  EE20 F00D          	lfsr	2,13
 15605  0057CA  5016               	movf	CAN_receive@tempCanMsg,w,c
 15606  0057CC  26D9               	addwf	fsr2l,f,c
 15607  0057CE  5017               	movf	CAN_receive@tempCanMsg+1,w,c
 15608  0057D0  22DA               	addwfc	fsr2h,f,c
 15609  0057D2  CF3D FFDF          	movff	3901,indf2	;volatile
 15610                           
 15611                           ;mcc_generated_files/ecan.c: 295:             RXB1CONbits.RXFUL = 0;
 15612  0057D6  010F               	movlb	15	; () banked
 15613  0057D8  9F30               	bcf	48,7,b	;volatile
 15614  0057DA                     l4147:
 15615                           
 15616                           ; BSR set to: 15
 15617                           ;mcc_generated_files/ecan.c: 296:             returnValue = 1;
 15618  0057DA  0E01               	movlw	1
 15619  0057DC  6E18               	movwf	CAN_receive@returnValue,c
 15620  0057DE                     l465:
 15621                           
 15622                           ;mcc_generated_files/ecan.c: 300:         PIR5bits.RXB1IF = 0;
 15623                           
 15624                           ; BSR set to: 15
 15625                           
 15626                           ; BSR set to: 15
 15627  0057DE  9277               	bcf	3959,1,c	;volatile
 15628                           
 15629                           ;mcc_generated_files/ecan.c: 301:     };mcc_generated_files/ecan.c: 304:     return (ret
      +                          urnValue);
 15630  0057E0  5018               	movf	CAN_receive@returnValue,w,c
 15631  0057E2  0012               	return	
 15632  0057E4                     __end_of_CAN_receive:
 15633                           	opt stack 0
 15634                           tblptru	equ	0xFF8
 15635                           tblptrh	equ	0xFF7
 15636                           tblptrl	equ	0xFF6
 15637                           tablat	equ	0xFF5
 15638                           prodh	equ	0xFF4
 15639                           prodl	equ	0xFF3
 15640                           intcon	equ	0xFF2
 15641                           postinc0	equ	0xFEE
 15642                           wreg	equ	0xFE8
 15643                           postdec1	equ	0xFE5
 15644                           plusw1	equ	0xFE3
 15645                           fsr1l	equ	0xFE1
 15646                           indf2	equ	0xFDF
 15647                           postinc2	equ	0xFDE
 15648                           plusw2	equ	0xFDB
 15649                           fsr2h	equ	0xFDA
 15650                           fsr2l	equ	0xFD9
 15651                           status	equ	0xFD8
 15652                           
 15653 ;; *************** function _convertReg2StandardCANid *****************
 15654 ;; Defined at:
 15655 ;;		line 385 in file "mcc_generated_files/ecan.c"
 15656 ;; Parameters:    Size  Location     Type
 15657 ;;  tempRXBn_SID    1    wreg     unsigned char 
 15658 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
 15659 ;; Auto vars:     Size  Location     Type
 15660 ;;  tempRXBn_SID    1    8[COMRAM] unsigned char 
 15661 ;;  ConvertedID     4   13[COMRAM] unsigned long 
 15662 ;;  returnValue     4    9[COMRAM] unsigned long 
 15663 ;; Return value:  Size  Location     Type
 15664 ;;                  4    2[COMRAM] unsigned long 
 15665 ;; Registers used:
 15666 ;;		wreg, status,2, status,0
 15667 ;; Tracked objects:
 15668 ;;		On entry : 0/0
 15669 ;;		On exit  : 0/0
 15670 ;;		Unchanged: 0/0
 15671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15673 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15675 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15676 ;;Total ram usage:       15 bytes
 15677 ;; Hardware stack levels used:    1
 15678 ;; Hardware stack levels required when called:    4
 15679 ;; This function calls:
 15680 ;;		Nothing
 15681 ;; This function is called by:
 15682 ;;		_CAN_receive
 15683 ;; This function uses a non-reentrant model
 15684 ;;
 15685                           
 15686                           	psect	text52
 15687  0062A6                     __ptext52:
 15688                           	opt stack 0
 15689  0062A6                     _convertReg2StandardCANid:
 15690                           	opt stack 25
 15691                           
 15692                           ;incstack = 0
 15693                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
 15694  0062A6  6E09               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
 15695                           
 15696                           ;mcc_generated_files/ecan.c: 386:     unsigned long returnValue = 0;
 15697  0062A8  0E00               	movlw	0
 15698  0062AA  6E0A               	movwf	convertReg2StandardCANid@returnValue,c
 15699  0062AC  0E00               	movlw	0
 15700  0062AE  6E0B               	movwf	convertReg2StandardCANid@returnValue+1,c
 15701  0062B0  0E00               	movlw	0
 15702  0062B2  6E0C               	movwf	convertReg2StandardCANid@returnValue+2,c
 15703  0062B4  0E00               	movlw	0
 15704  0062B6  6E0D               	movwf	convertReg2StandardCANid@returnValue+3,c
 15705                           
 15706                           ;mcc_generated_files/ecan.c: 387:     unsigned long ConvertedID;;mcc_generated_files/eca
      +                          n.c: 391:     ConvertedID = (tempRXBn_SIDH << 3);
 15707  0062B8  5009               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
 15708  0062BA  6E07               	movwf	??_convertReg2StandardCANid& (0+255),c
 15709  0062BC  6A08               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
 15710  0062BE  90D8               	bcf	status,0,c
 15711  0062C0  3607               	rlcf	??_convertReg2StandardCANid,f,c
 15712  0062C2  3608               	rlcf	??_convertReg2StandardCANid+1,f,c
 15713  0062C4  90D8               	bcf	status,0,c
 15714  0062C6  3607               	rlcf	??_convertReg2StandardCANid,f,c
 15715  0062C8  3608               	rlcf	??_convertReg2StandardCANid+1,f,c
 15716  0062CA  90D8               	bcf	status,0,c
 15717  0062CC  3607               	rlcf	??_convertReg2StandardCANid,f,c
 15718  0062CE  3608               	rlcf	??_convertReg2StandardCANid+1,f,c
 15719  0062D0  C007  F00E         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
 15720  0062D4  C008  F00F         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
 15721  0062D8  0E00               	movlw	0
 15722  0062DA  BE0F               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
 15723  0062DC  0EFF               	movlw	-1
 15724  0062DE  6E10               	movwf	convertReg2StandardCANid@ConvertedID+2,c
 15725  0062E0  6E11               	movwf	convertReg2StandardCANid@ConvertedID+3,c
 15726                           
 15727                           ;mcc_generated_files/ecan.c: 392:     ConvertedID = ConvertedID + (tempRXBn_SIDL >> 5);
 15728  0062E2  C003  F007         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
 15729  0062E6  0E05               	movlw	5
 15730  0062E8  6E08               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
 15731  0062EA                     u1425:
 15732  0062EA  90D8               	bcf	status,0,c
 15733  0062EC  3207               	rrcf	??_convertReg2StandardCANid,f,c
 15734  0062EE  2E08               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
 15735  0062F0  D7FC               	goto	u1425
 15736  0062F2  5007               	movf	??_convertReg2StandardCANid,w,c
 15737  0062F4  240E               	addwf	convertReg2StandardCANid@ConvertedID,w,c
 15738  0062F6  6E0E               	movwf	convertReg2StandardCANid@ConvertedID,c
 15739  0062F8  0E00               	movlw	0
 15740  0062FA  200F               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
 15741  0062FC  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+1,c
 15742  0062FE  0E00               	movlw	0
 15743  006300  2010               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
 15744  006302  6E10               	movwf	convertReg2StandardCANid@ConvertedID+2,c
 15745  006304  0E00               	movlw	0
 15746  006306  2011               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
 15747  006308  6E11               	movwf	convertReg2StandardCANid@ConvertedID+3,c
 15748                           
 15749                           ;mcc_generated_files/ecan.c: 393:     returnValue = ConvertedID;
 15750  00630A  C00E  F00A         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
 15751  00630E  C00F  F00B         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
 15752  006312  C010  F00C         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
 15753  006316  C011  F00D         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
 15754                           
 15755                           ;mcc_generated_files/ecan.c: 394:     return (returnValue);
 15756  00631A  C00A  F003         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
 15757  00631E  C00B  F004         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
 15758  006322  C00C  F005         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
 15759  006326  C00D  F006         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
 15760  00632A  0012               	return	
 15761  00632C                     __end_of_convertReg2StandardCANid:
 15762                           	opt stack 0
 15763                           tblptru	equ	0xFF8
 15764                           tblptrh	equ	0xFF7
 15765                           tblptrl	equ	0xFF6
 15766                           tablat	equ	0xFF5
 15767                           prodh	equ	0xFF4
 15768                           prodl	equ	0xFF3
 15769                           intcon	equ	0xFF2
 15770                           postinc0	equ	0xFEE
 15771                           wreg	equ	0xFE8
 15772                           postdec1	equ	0xFE5
 15773                           plusw1	equ	0xFE3
 15774                           fsr1l	equ	0xFE1
 15775                           indf2	equ	0xFDF
 15776                           postinc2	equ	0xFDE
 15777                           plusw2	equ	0xFDB
 15778                           fsr2h	equ	0xFDA
 15779                           fsr2l	equ	0xFD9
 15780                           status	equ	0xFD8
 15781                           
 15782 ;; *************** function _convertReg2ExtendedCANid *****************
 15783 ;; Defined at:
 15784 ;;		line 365 in file "mcc_generated_files/ecan.c"
 15785 ;; Parameters:    Size  Location     Type
 15786 ;;  tempRXBn_EID    1    wreg     unsigned char 
 15787 ;;  tempRXBn_EID    1    2[COMRAM] unsigned char 
 15788 ;;  tempRXBn_SID    1    3[COMRAM] unsigned char 
 15789 ;;  tempRXBn_SID    1    4[COMRAM] unsigned char 
 15790 ;; Auto vars:     Size  Location     Type
 15791 ;;  tempRXBn_EID    1   10[COMRAM] unsigned char 
 15792 ;;  ConvertedID     4   17[COMRAM] unsigned long 
 15793 ;;  returnValue     4   11[COMRAM] unsigned long 
 15794 ;;  CAN_standard    1   16[COMRAM] unsigned char 
 15795 ;;  CAN_standard    1   15[COMRAM] unsigned char 
 15796 ;; Return value:  Size  Location     Type
 15797 ;;                  4    2[COMRAM] unsigned long 
 15798 ;; Registers used:
 15799 ;;		wreg, status,2, status,0
 15800 ;; Tracked objects:
 15801 ;;		On entry : 0/0
 15802 ;;		On exit  : 0/0
 15803 ;;		Unchanged: 0/0
 15804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15805 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15806 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15807 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15808 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15809 ;;Total ram usage:       19 bytes
 15810 ;; Hardware stack levels used:    1
 15811 ;; Hardware stack levels required when called:    4
 15812 ;; This function calls:
 15813 ;;		Nothing
 15814 ;; This function is called by:
 15815 ;;		_CAN_receive
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           	psect	text53
 15820  0057E4                     __ptext53:
 15821                           	opt stack 0
 15822  0057E4                     _convertReg2ExtendedCANid:
 15823                           	opt stack 25
 15824                           
 15825                           ;incstack = 0
 15826                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
 15827  0057E4  6E0B               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
 15828                           
 15829                           ;mcc_generated_files/ecan.c: 366:     unsigned long returnValue = 0;
 15830  0057E6  0E00               	movlw	0
 15831  0057E8  6E0C               	movwf	convertReg2ExtendedCANid@returnValue,c
 15832  0057EA  0E00               	movlw	0
 15833  0057EC  6E0D               	movwf	convertReg2ExtendedCANid@returnValue+1,c
 15834  0057EE  0E00               	movlw	0
 15835  0057F0  6E0E               	movwf	convertReg2ExtendedCANid@returnValue+2,c
 15836  0057F2  0E00               	movlw	0
 15837  0057F4  6E0F               	movwf	convertReg2ExtendedCANid@returnValue+3,c
 15838                           
 15839                           ;mcc_generated_files/ecan.c: 367:     unsigned long ConvertedID = 0;
 15840  0057F6  0E00               	movlw	0
 15841  0057F8  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 15842  0057FA  0E00               	movlw	0
 15843  0057FC  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 15844  0057FE  0E00               	movlw	0
 15845  005800  6E14               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 15846  005802  0E00               	movlw	0
 15847  005804  6E15               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 15848                           
 15849                           ;mcc_generated_files/ecan.c: 368:     unsigned char CAN_standardLo_ID_lo2bits;;mcc_gener
      +                          ated_files/ecan.c: 369:     unsigned char CAN_standardLo_ID_hi3bits;;mcc_generated_files
      +                          /ecan.c: 371:     CAN_standardLo_ID_lo2bits = (tempRXBn_SIDL & 0x03);
 15850  005806  5005               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
 15851  005808  0B03               	andlw	3
 15852  00580A  6E10               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
 15853                           
 15854                           ;mcc_generated_files/ecan.c: 372:     CAN_standardLo_ID_hi3bits = (tempRXBn_SIDL >> 5);
 15855  00580C  3805               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
 15856  00580E  42E8               	rrncf	wreg,f,c
 15857  005810  0B07               	andlw	7
 15858  005812  6E11               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
 15859                           
 15860                           ;mcc_generated_files/ecan.c: 373:     ConvertedID = (tempRXBn_SIDH << 3);
 15861  005814  5004               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
 15862  005816  6E07               	movwf	??_convertReg2ExtendedCANid& (0+255),c
 15863  005818  6A08               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
 15864  00581A  90D8               	bcf	status,0,c
 15865  00581C  3607               	rlcf	??_convertReg2ExtendedCANid,f,c
 15866  00581E  3608               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 15867  005820  90D8               	bcf	status,0,c
 15868  005822  3607               	rlcf	??_convertReg2ExtendedCANid,f,c
 15869  005824  3608               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 15870  005826  90D8               	bcf	status,0,c
 15871  005828  3607               	rlcf	??_convertReg2ExtendedCANid,f,c
 15872  00582A  3608               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 15873  00582C  C007  F012         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 15874  005830  C008  F013         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 15875  005834  0E00               	movlw	0
 15876  005836  BE13               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
 15877  005838  0EFF               	movlw	-1
 15878  00583A  6E14               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 15879  00583C  6E15               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 15880                           
 15881                           ;mcc_generated_files/ecan.c: 374:     ConvertedID = ConvertedID + CAN_standardLo_ID_hi3b
      +                          its;
 15882  00583E  5011               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
 15883  005840  2412               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 15884  005842  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 15885  005844  0E00               	movlw	0
 15886  005846  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 15887  005848  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 15888  00584A  0E00               	movlw	0
 15889  00584C  2014               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 15890  00584E  6E14               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 15891  005850  0E00               	movlw	0
 15892  005852  2015               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 15893  005854  6E15               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 15894                           
 15895                           ;mcc_generated_files/ecan.c: 375:     ConvertedID = (ConvertedID << 2);
 15896  005856  C012  F007         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
 15897  00585A  C013  F008         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
 15898  00585E  C014  F009         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
 15899  005862  C015  F00A         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
 15900  005866  0E02               	movlw	2
 15901  005868                     u1415:
 15902  005868  90D8               	bcf	status,0,c
 15903  00586A  3607               	rlcf	??_convertReg2ExtendedCANid,f,c
 15904  00586C  3608               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 15905  00586E  3609               	rlcf	??_convertReg2ExtendedCANid+2,f,c
 15906  005870  360A               	rlcf	??_convertReg2ExtendedCANid+3,f,c
 15907  005872  2EE8               	decfsz	wreg,f,c
 15908  005874  D7F9               	goto	u1415
 15909  005876  C007  F012         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 15910  00587A  C008  F013         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 15911  00587E  C009  F014         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
 15912  005882  C00A  F015         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
 15913                           
 15914                           ;mcc_generated_files/ecan.c: 376:     ConvertedID = ConvertedID + CAN_standardLo_ID_lo2b
      +                          its;
 15915  005886  5010               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
 15916  005888  2412               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 15917  00588A  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 15918  00588C  0E00               	movlw	0
 15919  00588E  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 15920  005890  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 15921  005892  0E00               	movlw	0
 15922  005894  2014               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 15923  005896  6E14               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 15924  005898  0E00               	movlw	0
 15925  00589A  2015               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 15926  00589C  6E15               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 15927                           
 15928                           ;mcc_generated_files/ecan.c: 377:     ConvertedID = (ConvertedID << 8);
 15929  00589E  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
 15930  0058A2  C013  F009         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
 15931  0058A6  C014  F00A         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
 15932  0058AA  6A07               	clrf	??_convertReg2ExtendedCANid& (0+255),c
 15933  0058AC  C007  F012         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 15934  0058B0  C008  F013         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 15935  0058B4  C009  F014         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
 15936  0058B8  C00A  F015         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
 15937                           
 15938                           ;mcc_generated_files/ecan.c: 378:     ConvertedID = ConvertedID + tempRXBn_EIDH;
 15939  0058BC  500B               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
 15940  0058BE  2412               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 15941  0058C0  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 15942  0058C2  0E00               	movlw	0
 15943  0058C4  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 15944  0058C6  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 15945  0058C8  0E00               	movlw	0
 15946  0058CA  2014               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 15947  0058CC  6E14               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 15948  0058CE  0E00               	movlw	0
 15949  0058D0  2015               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 15950  0058D2  6E15               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 15951                           
 15952                           ;mcc_generated_files/ecan.c: 379:     ConvertedID = (ConvertedID << 8);
 15953  0058D4  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
 15954  0058D8  C013  F009         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
 15955  0058DC  C014  F00A         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
 15956  0058E0  6A07               	clrf	??_convertReg2ExtendedCANid& (0+255),c
 15957  0058E2  C007  F012         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 15958  0058E6  C008  F013         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 15959  0058EA  C009  F014         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
 15960  0058EE  C00A  F015         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
 15961                           
 15962                           ;mcc_generated_files/ecan.c: 380:     ConvertedID = ConvertedID + tempRXBn_EIDL;
 15963  0058F2  5003               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
 15964  0058F4  2412               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 15965  0058F6  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 15966  0058F8  0E00               	movlw	0
 15967  0058FA  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 15968  0058FC  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 15969  0058FE  0E00               	movlw	0
 15970  005900  2014               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 15971  005902  6E14               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 15972  005904  0E00               	movlw	0
 15973  005906  2015               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 15974  005908  6E15               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 15975                           
 15976                           ;mcc_generated_files/ecan.c: 381:     returnValue = ConvertedID;
 15977  00590A  C012  F00C         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
 15978  00590E  C013  F00D         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
 15979  005912  C014  F00E         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
 15980  005916  C015  F00F         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
 15981                           
 15982                           ;mcc_generated_files/ecan.c: 382:     return (returnValue);
 15983  00591A  C00C  F003         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
 15984  00591E  C00D  F004         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
 15985  005922  C00E  F005         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
 15986  005926  C00F  F006         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
 15987  00592A  0012               	return	
 15988  00592C                     __end_of_convertReg2ExtendedCANid:
 15989                           	opt stack 0
 15990                           tblptru	equ	0xFF8
 15991                           tblptrh	equ	0xFF7
 15992                           tblptrl	equ	0xFF6
 15993                           tablat	equ	0xFF5
 15994                           prodh	equ	0xFF4
 15995                           prodl	equ	0xFF3
 15996                           intcon	equ	0xFF2
 15997                           postinc0	equ	0xFEE
 15998                           wreg	equ	0xFE8
 15999                           postdec1	equ	0xFE5
 16000                           plusw1	equ	0xFE3
 16001                           fsr1l	equ	0xFE1
 16002                           indf2	equ	0xFDF
 16003                           postinc2	equ	0xFDE
 16004                           plusw2	equ	0xFDB
 16005                           fsr2h	equ	0xFDA
 16006                           fsr2l	equ	0xFD9
 16007                           status	equ	0xFD8
 16008                           
 16009 ;; *************** function _INTERRUPT_InterruptManager *****************
 16010 ;; Defined at:
 16011 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 16012 ;; Parameters:    Size  Location     Type
 16013 ;;		None
 16014 ;; Auto vars:     Size  Location     Type
 16015 ;;		None
 16016 ;; Return value:  Size  Location     Type
 16017 ;;                  1    wreg      void 
 16018 ;; Registers used:
 16019 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16020 ;; Tracked objects:
 16021 ;;		On entry : 0/0
 16022 ;;		On exit  : 0/0
 16023 ;;		Unchanged: 0/0
 16024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16027 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16028 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16029 ;;Total ram usage:        2 bytes
 16030 ;; Hardware stack levels used:    1
 16031 ;; Hardware stack levels required when called:    3
 16032 ;; This function calls:
 16033 ;;		_TMR0_ISR
 16034 ;;		_TMR1_ISR
 16035 ;; This function is called by:
 16036 ;;		Interrupt level 2
 16037 ;; This function uses a non-reentrant model
 16038 ;;
 16039                           
 16040                           	psect	intcode
 16041  000008                     __pintcode:
 16042                           	opt stack 0
 16043  000008                     _INTERRUPT_InterruptManager:
 16044                           	opt stack 21
 16045                           
 16046                           ;incstack = 0
 16047  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16048  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 16049  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 16050                           
 16051                           ;mcc_generated_files/interrupt_manager.c: 60:     if(INTCONbits.PEIE == 1 && PIE1bits.TM
      +                          R1IE == 1 && PIR1bits.TMR1IF == 1)
 16052  000012  BCF2               	btfsc	intcon,6,c	;volatile
 16053  000014  A09D               	btfss	3997,0,c	;volatile
 16054  000016  D005               	goto	i2l516
 16055  000018  A09E               	btfss	3998,0,c	;volatile
 16056  00001A  D003               	goto	i2l516
 16057                           
 16058                           ;mcc_generated_files/interrupt_manager.c: 61:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 62:         TMR1_ISR();
 16059  00001C  EC3E  F034         	call	_TMR1_ISR	;wreg free
 16060                           
 16061                           ;mcc_generated_files/interrupt_manager.c: 63:     }
 16062  000020  D005               	goto	i2l518
 16063  000022                     i2l516:
 16064  000022  BAF2               	btfsc	intcon,5,c	;volatile
 16065  000024  A4F2               	btfss	intcon,2,c	;volatile
 16066  000026  D002               	goto	i2l518
 16067                           
 16068                           ;mcc_generated_files/interrupt_manager.c: 65:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 66:         TMR0_ISR();
 16069  000028  EC92  F033         	call	_TMR0_ISR	;wreg free
 16070  00002C                     i2l518:
 16071                           
 16072                           ;mcc_generated_files/interrupt_manager.c: 69:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:     }
 16073  00002C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 16074  000030  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 16075  000034  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16076  000036  0011               	retfie		f
 16077  000038                     __end_of_INTERRUPT_InterruptManager:
 16078                           	opt stack 0
 16079                           pclatu	equ	0xFFB
 16080                           pclath	equ	0xFFA
 16081                           tblptru	equ	0xFF8
 16082                           tblptrh	equ	0xFF7
 16083                           tblptrl	equ	0xFF6
 16084                           tablat	equ	0xFF5
 16085                           prodh	equ	0xFF4
 16086                           prodl	equ	0xFF3
 16087                           intcon	equ	0xFF2
 16088                           postinc0	equ	0xFEE
 16089                           wreg	equ	0xFE8
 16090                           postdec1	equ	0xFE5
 16091                           plusw1	equ	0xFE3
 16092                           fsr1l	equ	0xFE1
 16093                           indf2	equ	0xFDF
 16094                           postinc2	equ	0xFDE
 16095                           plusw2	equ	0xFDB
 16096                           fsr2h	equ	0xFDA
 16097                           fsr2l	equ	0xFD9
 16098                           status	equ	0xFD8
 16099                           
 16100 ;; *************** function _TMR1_ISR *****************
 16101 ;; Defined at:
 16102 ;;		line 160 in file "mcc_generated_files/tmr1.c"
 16103 ;; Parameters:    Size  Location     Type
 16104 ;;		None
 16105 ;; Auto vars:     Size  Location     Type
 16106 ;;		None
 16107 ;; Return value:  Size  Location     Type
 16108 ;;                  1    wreg      void 
 16109 ;; Registers used:
 16110 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16111 ;; Tracked objects:
 16112 ;;		On entry : 0/0
 16113 ;;		On exit  : 0/0
 16114 ;;		Unchanged: 0/0
 16115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16120 ;;Total ram usage:        0 bytes
 16121 ;; Hardware stack levels used:    1
 16122 ;; Hardware stack levels required when called:    2
 16123 ;; This function calls:
 16124 ;;		_TMR1_CallBack
 16125 ;; This function is called by:
 16126 ;;		_INTERRUPT_InterruptManager
 16127 ;; This function uses a non-reentrant model
 16128 ;;
 16129                           
 16130                           	psect	text55
 16131  00687C                     __ptext55:
 16132                           	opt stack 0
 16133  00687C                     _TMR1_ISR:
 16134                           	opt stack 21
 16135                           
 16136                           ;mcc_generated_files/tmr1.c: 164:     PIR1bits.TMR1IF = 0;
 16137                           
 16138                           ;incstack = 0
 16139  00687C  909E               	bcf	3998,0,c	;volatile
 16140                           
 16141                           ;mcc_generated_files/tmr1.c: 166:     TMR1H = (timer1ReloadVal >> 8);
 16142  00687E  504E               	movf	_timer1ReloadVal+1,w,c	;volatile
 16143  006880  6ECF               	movwf	4047,c	;volatile
 16144                           
 16145                           ;mcc_generated_files/tmr1.c: 167:     TMR1L = timer1ReloadVal;
 16146  006882  C04D  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 16147                           
 16148                           ;mcc_generated_files/tmr1.c: 171:     TMR1_CallBack();
 16149  006886  ECEB  F033         	call	_TMR1_CallBack	;wreg free
 16150  00688A  0012               	return		;funcret
 16151  00688C                     __end_of_TMR1_ISR:
 16152                           	opt stack 0
 16153                           pclatu	equ	0xFFB
 16154                           pclath	equ	0xFFA
 16155                           tblptru	equ	0xFF8
 16156                           tblptrh	equ	0xFF7
 16157                           tblptrl	equ	0xFF6
 16158                           tablat	equ	0xFF5
 16159                           prodh	equ	0xFF4
 16160                           prodl	equ	0xFF3
 16161                           intcon	equ	0xFF2
 16162                           postinc0	equ	0xFEE
 16163                           wreg	equ	0xFE8
 16164                           postdec1	equ	0xFE5
 16165                           plusw1	equ	0xFE3
 16166                           fsr1l	equ	0xFE1
 16167                           indf2	equ	0xFDF
 16168                           postinc2	equ	0xFDE
 16169                           plusw2	equ	0xFDB
 16170                           fsr2h	equ	0xFDA
 16171                           fsr2l	equ	0xFD9
 16172                           status	equ	0xFD8
 16173                           
 16174 ;; *************** function _TMR1_CallBack *****************
 16175 ;; Defined at:
 16176 ;;		line 174 in file "mcc_generated_files/tmr1.c"
 16177 ;; Parameters:    Size  Location     Type
 16178 ;;		None
 16179 ;; Auto vars:     Size  Location     Type
 16180 ;;		None
 16181 ;; Return value:  Size  Location     Type
 16182 ;;                  1    wreg      void 
 16183 ;; Registers used:
 16184 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16185 ;; Tracked objects:
 16186 ;;		On entry : 0/0
 16187 ;;		On exit  : 0/0
 16188 ;;		Unchanged: 0/0
 16189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16194 ;;Total ram usage:        0 bytes
 16195 ;; Hardware stack levels used:    1
 16196 ;; Hardware stack levels required when called:    1
 16197 ;; This function calls:
 16198 ;;		Absolute function
 16199 ;;		_TMR1_DefaultInterruptHandler
 16200 ;;		_refresh
 16201 ;; This function is called by:
 16202 ;;		_TMR1_ISR
 16203 ;; This function uses a non-reentrant model
 16204 ;;
 16205                           
 16206                           	psect	text56
 16207  0067D6                     __ptext56:
 16208                           	opt stack 0
 16209  0067D6                     _TMR1_CallBack:
 16210                           	opt stack 21
 16211                           
 16212                           ;mcc_generated_files/tmr1.c: 177:     if(TMR1_InterruptHandler)
 16213                           
 16214                           ;incstack = 0
 16215  0067D6  504B               	movf	_TMR1_InterruptHandler,w,c
 16216  0067D8  104C               	iorwf	_TMR1_InterruptHandler+1,w,c
 16217  0067DA  B4D8               	btfsc	status,2,c
 16218  0067DC  0012               	return	
 16219                           
 16220                           ;mcc_generated_files/tmr1.c: 178:     {;mcc_generated_files/tmr1.c: 179:         TMR1_In
      +                          terruptHandler();
 16221  0067DE  D801               	call	i2u138_48
 16222  0067E0  0012               	return	
 16223  0067E2                     i2u138_48:
 16224  0067E2  0005               	push	
 16225  0067E4  6EFA               	movwf	pclath,c
 16226  0067E6  504B               	movf	_TMR1_InterruptHandler,w,c
 16227  0067E8  6EFD               	movwf	tosl,c
 16228  0067EA  504C               	movf	_TMR1_InterruptHandler+1,w,c
 16229  0067EC  6EFE               	movwf	tosh,c
 16230  0067EE  6AFF               	clrf	tosu,c
 16231  0067F0  50FA               	movf	pclath,w,c
 16232  0067F2  0012               	return		;indir
 16233  0067F4                     __end_of_TMR1_CallBack:
 16234                           	opt stack 0
 16235                           tosu	equ	0xFFF
 16236                           tosh	equ	0xFFE
 16237                           tosl	equ	0xFFD
 16238                           pclatu	equ	0xFFB
 16239                           pclath	equ	0xFFA
 16240                           tblptru	equ	0xFF8
 16241                           tblptrh	equ	0xFF7
 16242                           tblptrl	equ	0xFF6
 16243                           tablat	equ	0xFF5
 16244                           prodh	equ	0xFF4
 16245                           prodl	equ	0xFF3
 16246                           intcon	equ	0xFF2
 16247                           postinc0	equ	0xFEE
 16248                           wreg	equ	0xFE8
 16249                           postdec1	equ	0xFE5
 16250                           plusw1	equ	0xFE3
 16251                           fsr1l	equ	0xFE1
 16252                           indf2	equ	0xFDF
 16253                           postinc2	equ	0xFDE
 16254                           plusw2	equ	0xFDB
 16255                           fsr2h	equ	0xFDA
 16256                           fsr2l	equ	0xFD9
 16257                           status	equ	0xFD8
 16258                           
 16259 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 16260 ;; Defined at:
 16261 ;;		line 187 in file "mcc_generated_files/tmr1.c"
 16262 ;; Parameters:    Size  Location     Type
 16263 ;;		None
 16264 ;; Auto vars:     Size  Location     Type
 16265 ;;		None
 16266 ;; Return value:  Size  Location     Type
 16267 ;;                  1    wreg      void 
 16268 ;; Registers used:
 16269 ;;		None
 16270 ;; Tracked objects:
 16271 ;;		On entry : 0/0
 16272 ;;		On exit  : 0/0
 16273 ;;		Unchanged: 0/0
 16274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16279 ;;Total ram usage:        0 bytes
 16280 ;; Hardware stack levels used:    1
 16281 ;; This function calls:
 16282 ;;		Nothing
 16283 ;; This function is called by:
 16284 ;;		_TMR1_Initialize
 16285 ;;		_TMR1_CallBack
 16286 ;; This function uses a non-reentrant model
 16287 ;;
 16288                           
 16289                           	psect	text57
 16290  0068D0                     __ptext57:
 16291                           	opt stack 0
 16292  0068D0                     _TMR1_DefaultInterruptHandler:
 16293                           	opt stack 21
 16294                           
 16295                           ;incstack = 0
 16296  0068D0  0012               	return		;funcret
 16297  0068D2                     __end_of_TMR1_DefaultInterruptHandler:
 16298                           	opt stack 0
 16299                           tosu	equ	0xFFF
 16300                           tosh	equ	0xFFE
 16301                           tosl	equ	0xFFD
 16302                           pclatu	equ	0xFFB
 16303                           pclath	equ	0xFFA
 16304                           tblptru	equ	0xFF8
 16305                           tblptrh	equ	0xFF7
 16306                           tblptrl	equ	0xFF6
 16307                           tablat	equ	0xFF5
 16308                           prodh	equ	0xFF4
 16309                           prodl	equ	0xFF3
 16310                           intcon	equ	0xFF2
 16311                           postinc0	equ	0xFEE
 16312                           wreg	equ	0xFE8
 16313                           postdec1	equ	0xFE5
 16314                           plusw1	equ	0xFE3
 16315                           fsr1l	equ	0xFE1
 16316                           indf2	equ	0xFDF
 16317                           postinc2	equ	0xFDE
 16318                           plusw2	equ	0xFDB
 16319                           fsr2h	equ	0xFDA
 16320                           fsr2l	equ	0xFD9
 16321                           status	equ	0xFD8
 16322                           
 16323 ;; *************** function _refresh *****************
 16324 ;; Defined at:
 16325 ;;		line 31 in file "main.c"
 16326 ;; Parameters:    Size  Location     Type
 16327 ;;		None
 16328 ;; Auto vars:     Size  Location     Type
 16329 ;;		None
 16330 ;; Return value:  Size  Location     Type
 16331 ;;                  1    wreg      void 
 16332 ;; Registers used:
 16333 ;;		wreg, status,2
 16334 ;; Tracked objects:
 16335 ;;		On entry : 0/0
 16336 ;;		On exit  : 0/0
 16337 ;;		Unchanged: 0/0
 16338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16343 ;;Total ram usage:        0 bytes
 16344 ;; Hardware stack levels used:    1
 16345 ;; This function calls:
 16346 ;;		Nothing
 16347 ;; This function is called by:
 16348 ;;		_main
 16349 ;;		_TMR1_CallBack
 16350 ;; This function uses a non-reentrant model
 16351 ;;
 16352                           
 16353                           	psect	text58
 16354  0068B8                     __ptext58:
 16355                           	opt stack 0
 16356  0068B8                     _refresh:
 16357                           	opt stack 21
 16358                           
 16359                           ;main.c: 32:     refresh_screen = 1;
 16360                           
 16361                           ;incstack = 0
 16362  0068B8  0E01               	movlw	1
 16363  0068BA  0100               	movlb	0	; () banked
 16364  0068BC  6FC5               	movwf	_refresh_screen& (0+255),b
 16365                           
 16366                           ; BSR set to: 0
 16367  0068BE  0012               	return		;funcret
 16368  0068C0                     __end_of_refresh:
 16369                           	opt stack 0
 16370                           tosu	equ	0xFFF
 16371                           tosh	equ	0xFFE
 16372                           tosl	equ	0xFFD
 16373                           pclatu	equ	0xFFB
 16374                           pclath	equ	0xFFA
 16375                           tblptru	equ	0xFF8
 16376                           tblptrh	equ	0xFF7
 16377                           tblptrl	equ	0xFF6
 16378                           tablat	equ	0xFF5
 16379                           prodh	equ	0xFF4
 16380                           prodl	equ	0xFF3
 16381                           intcon	equ	0xFF2
 16382                           postinc0	equ	0xFEE
 16383                           wreg	equ	0xFE8
 16384                           postdec1	equ	0xFE5
 16385                           plusw1	equ	0xFE3
 16386                           fsr1l	equ	0xFE1
 16387                           indf2	equ	0xFDF
 16388                           postinc2	equ	0xFDE
 16389                           plusw2	equ	0xFDB
 16390                           fsr2h	equ	0xFDA
 16391                           fsr2l	equ	0xFD9
 16392                           status	equ	0xFD8
 16393                           
 16394 ;; *************** function _TMR0_ISR *****************
 16395 ;; Defined at:
 16396 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16397 ;; Parameters:    Size  Location     Type
 16398 ;;		None
 16399 ;; Auto vars:     Size  Location     Type
 16400 ;;		None
 16401 ;; Return value:  Size  Location     Type
 16402 ;;                  1    wreg      void 
 16403 ;; Registers used:
 16404 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16405 ;; Tracked objects:
 16406 ;;		On entry : 0/0
 16407 ;;		On exit  : 0/0
 16408 ;;		Unchanged: 0/0
 16409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16414 ;;Total ram usage:        0 bytes
 16415 ;; Hardware stack levels used:    1
 16416 ;; Hardware stack levels required when called:    1
 16417 ;; This function calls:
 16418 ;;		Absolute function
 16419 ;;		_TMR0_DefaultInterruptHandler
 16420 ;; This function is called by:
 16421 ;;		_INTERRUPT_InterruptManager
 16422 ;; This function uses a non-reentrant model
 16423 ;;
 16424                           
 16425                           	psect	text59
 16426  006724                     __ptext59:
 16427                           	opt stack 0
 16428  006724                     _TMR0_ISR:
 16429                           	opt stack 22
 16430                           
 16431                           ;mcc_generated_files/tmr0.c: 138:     INTCONbits.TMR0IF = 0;
 16432                           
 16433                           ; BSR set to: 0
 16434                           ;incstack = 0
 16435  006724  94F2               	bcf	intcon,2,c	;volatile
 16436                           
 16437                           ;mcc_generated_files/tmr0.c: 142:     TMR0H = timer0ReloadVal >> 8;
 16438  006726  5048               	movf	_timer0ReloadVal+1,w,c	;volatile
 16439  006728  6ED7               	movwf	4055,c	;volatile
 16440                           
 16441                           ;mcc_generated_files/tmr0.c: 143:     TMR0L = (uint8_t) timer0ReloadVal;
 16442  00672A  C047  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 16443                           
 16444                           ;mcc_generated_files/tmr0.c: 145:     if(TMR0_InterruptHandler)
 16445  00672E  5049               	movf	_TMR0_InterruptHandler,w,c
 16446  006730  104A               	iorwf	_TMR0_InterruptHandler+1,w,c
 16447  006732  B4D8               	btfsc	status,2,c
 16448  006734  0012               	return	
 16449                           
 16450                           ;mcc_generated_files/tmr0.c: 146:     {;mcc_generated_files/tmr0.c: 147:         TMR0_In
      +                          terruptHandler();
 16451  006736  D801               	call	i2u35_48
 16452  006738  0012               	return	
 16453  00673A                     i2u35_48:
 16454  00673A  0005               	push	
 16455  00673C  6EFA               	movwf	pclath,c
 16456  00673E  5049               	movf	_TMR0_InterruptHandler,w,c
 16457  006740  6EFD               	movwf	tosl,c
 16458  006742  504A               	movf	_TMR0_InterruptHandler+1,w,c
 16459  006744  6EFE               	movwf	tosh,c
 16460  006746  6AFF               	clrf	tosu,c
 16461  006748  50FA               	movf	pclath,w,c
 16462  00674A  0012               	return		;indir
 16463  00674C                     __end_of_TMR0_ISR:
 16464                           	opt stack 0
 16465                           tosu	equ	0xFFF
 16466                           tosh	equ	0xFFE
 16467                           tosl	equ	0xFFD
 16468                           pclatu	equ	0xFFB
 16469                           pclath	equ	0xFFA
 16470                           tblptru	equ	0xFF8
 16471                           tblptrh	equ	0xFF7
 16472                           tblptrl	equ	0xFF6
 16473                           tablat	equ	0xFF5
 16474                           prodh	equ	0xFF4
 16475                           prodl	equ	0xFF3
 16476                           intcon	equ	0xFF2
 16477                           postinc0	equ	0xFEE
 16478                           wreg	equ	0xFE8
 16479                           postdec1	equ	0xFE5
 16480                           plusw1	equ	0xFE3
 16481                           fsr1l	equ	0xFE1
 16482                           indf2	equ	0xFDF
 16483                           postinc2	equ	0xFDE
 16484                           plusw2	equ	0xFDB
 16485                           fsr2h	equ	0xFDA
 16486                           fsr2l	equ	0xFD9
 16487                           status	equ	0xFD8
 16488                           
 16489 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 16490 ;; Defined at:
 16491 ;;		line 158 in file "mcc_generated_files/tmr0.c"
 16492 ;; Parameters:    Size  Location     Type
 16493 ;;		None
 16494 ;; Auto vars:     Size  Location     Type
 16495 ;;		None
 16496 ;; Return value:  Size  Location     Type
 16497 ;;                  1    wreg      void 
 16498 ;; Registers used:
 16499 ;;		None
 16500 ;; Tracked objects:
 16501 ;;		On entry : 0/0
 16502 ;;		On exit  : 0/0
 16503 ;;		Unchanged: 0/0
 16504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16509 ;;Total ram usage:        0 bytes
 16510 ;; Hardware stack levels used:    1
 16511 ;; This function calls:
 16512 ;;		Nothing
 16513 ;; This function is called by:
 16514 ;;		_TMR0_Initialize
 16515 ;;		_TMR0_ISR
 16516 ;; This function uses a non-reentrant model
 16517 ;;
 16518                           
 16519                           	psect	text60
 16520  0068D2                     __ptext60:
 16521                           	opt stack 0
 16522  0068D2                     _TMR0_DefaultInterruptHandler:
 16523                           	opt stack 22
 16524                           
 16525                           ;incstack = 0
 16526  0068D2  0012               	return		;funcret
 16527  0068D4                     __end_of_TMR0_DefaultInterruptHandler:
 16528                           	opt stack 0
 16529                           tosu	equ	0xFFF
 16530                           tosh	equ	0xFFE
 16531                           tosl	equ	0xFFD
 16532                           pclatu	equ	0xFFB
 16533                           pclath	equ	0xFFA
 16534                           tblptru	equ	0xFF8
 16535                           tblptrh	equ	0xFF7
 16536                           tblptrl	equ	0xFF6
 16537                           tablat	equ	0xFF5
 16538                           prodh	equ	0xFF4
 16539                           prodl	equ	0xFF3
 16540                           intcon	equ	0xFF2
 16541                           postinc0	equ	0xFEE
 16542                           wreg	equ	0xFE8
 16543                           postdec1	equ	0xFE5
 16544                           plusw1	equ	0xFE3
 16545                           fsr1l	equ	0xFE1
 16546                           indf2	equ	0xFDF
 16547                           postinc2	equ	0xFDE
 16548                           plusw2	equ	0xFDB
 16549                           fsr2h	equ	0xFDA
 16550                           fsr2l	equ	0xFD9
 16551                           status	equ	0xFD8
 16552                           tosu	equ	0xFFF
 16553                           tosh	equ	0xFFE
 16554                           tosl	equ	0xFFD
 16555                           pclatu	equ	0xFFB
 16556                           pclath	equ	0xFFA
 16557                           tblptru	equ	0xFF8
 16558                           tblptrh	equ	0xFF7
 16559                           tblptrl	equ	0xFF6
 16560                           tablat	equ	0xFF5
 16561                           prodh	equ	0xFF4
 16562                           prodl	equ	0xFF3
 16563                           intcon	equ	0xFF2
 16564                           postinc0	equ	0xFEE
 16565                           wreg	equ	0xFE8
 16566                           postdec1	equ	0xFE5
 16567                           plusw1	equ	0xFE3
 16568                           fsr1l	equ	0xFE1
 16569                           indf2	equ	0xFDF
 16570                           postinc2	equ	0xFDE
 16571                           plusw2	equ	0xFDB
 16572                           fsr2h	equ	0xFDA
 16573                           fsr2l	equ	0xFD9
 16574                           status	equ	0xFD8
 16575                           
 16576                           	psect	text61
 16577  000000                     __ptext61:
 16578                           	opt stack 0
 16579                           tosu	equ	0xFFF
 16580                           tosh	equ	0xFFE
 16581                           tosl	equ	0xFFD
 16582                           pclatu	equ	0xFFB
 16583                           pclath	equ	0xFFA
 16584                           tblptru	equ	0xFF8
 16585                           tblptrh	equ	0xFF7
 16586                           tblptrl	equ	0xFF6
 16587                           tablat	equ	0xFF5
 16588                           prodh	equ	0xFF4
 16589                           prodl	equ	0xFF3
 16590                           intcon	equ	0xFF2
 16591                           postinc0	equ	0xFEE
 16592                           wreg	equ	0xFE8
 16593                           postdec1	equ	0xFE5
 16594                           plusw1	equ	0xFE3
 16595                           fsr1l	equ	0xFE1
 16596                           indf2	equ	0xFDF
 16597                           postinc2	equ	0xFDE
 16598                           plusw2	equ	0xFDB
 16599                           fsr2h	equ	0xFDA
 16600                           fsr2l	equ	0xFD9
 16601                           status	equ	0xFD8
 16602                           
 16603                           	psect	rparam
 16604  0000                     tosu	equ	0xFFF
 16605                           tosh	equ	0xFFE
 16606                           tosl	equ	0xFFD
 16607                           pclatu	equ	0xFFB
 16608                           pclath	equ	0xFFA
 16609                           tblptru	equ	0xFF8
 16610                           tblptrh	equ	0xFF7
 16611                           tblptrl	equ	0xFF6
 16612                           tablat	equ	0xFF5
 16613                           prodh	equ	0xFF4
 16614                           prodl	equ	0xFF3
 16615                           intcon	equ	0xFF2
 16616                           postinc0	equ	0xFEE
 16617                           wreg	equ	0xFE8
 16618                           postdec1	equ	0xFE5
 16619                           plusw1	equ	0xFE3
 16620                           fsr1l	equ	0xFE1
 16621                           indf2	equ	0xFDF
 16622                           postinc2	equ	0xFDE
 16623                           plusw2	equ	0xFDB
 16624                           fsr2h	equ	0xFDA
 16625                           fsr2l	equ	0xFD9
 16626                           status	equ	0xFD8
 16627                           
 16628                           	psect	temp
 16629  000054                     btemp:
 16630                           	opt stack 0
 16631  000054                     	ds	1
 16632  0000                     int$flags	set	btemp
 16633  0000                     wtemp8	set	btemp+1
 16634  0000                     ttemp5	set	btemp+1
 16635  0000                     ttemp6	set	btemp+4
 16636  0000                     ttemp7	set	btemp+8
 16637                           tosu	equ	0xFFF
 16638                           tosh	equ	0xFFE
 16639                           tosl	equ	0xFFD
 16640                           pclatu	equ	0xFFB
 16641                           pclath	equ	0xFFA
 16642                           tblptru	equ	0xFF8
 16643                           tblptrh	equ	0xFF7
 16644                           tblptrl	equ	0xFF6
 16645                           tablat	equ	0xFF5
 16646                           prodh	equ	0xFF4
 16647                           prodl	equ	0xFF3
 16648                           intcon	equ	0xFF2
 16649                           postinc0	equ	0xFEE
 16650                           wreg	equ	0xFE8
 16651                           postdec1	equ	0xFE5
 16652                           plusw1	equ	0xFE3
 16653                           fsr1l	equ	0xFE1
 16654                           indf2	equ	0xFDF
 16655                           postinc2	equ	0xFDE
 16656                           plusw2	equ	0xFDB
 16657                           fsr2h	equ	0xFDA
 16658                           fsr2l	equ	0xFD9
 16659                           status	equ	0xFD8


Data Sizes:
    Strings     156
    Constant    0
    Data        22
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      83
    BANK0           160     81     138
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[7]), STR_33(CODE[5]), 
		 -> STR_32(CODE[11]), STR_31(CODE[6]), STR_30(CODE[9]), STR_29(CODE[5]), 
		 -> STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[7]), STR_25(CODE[2]), 
		 -> STR_24(CODE[6]), STR_23(CODE[8]), STR_22(CODE[7]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[6]), STR_17(CODE[7]), 
		 -> STR_16(CODE[5]), STR_15(CODE[7]), STR_14(CODE[11]), STR_13(CODE[5]), 
		 -> STR_12(CODE[2]), STR_11(CODE[4]), STR_10(CODE[2]), STR_9(CODE[3]), 
		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[7]), STR_33(CODE[5]), 
		 -> STR_32(CODE[11]), STR_31(CODE[6]), STR_30(CODE[9]), STR_29(CODE[5]), 
		 -> STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[7]), STR_25(CODE[2]), 
		 -> STR_24(CODE[6]), STR_23(CODE[8]), STR_22(CODE[7]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[6]), STR_17(CODE[7]), 
		 -> STR_16(CODE[5]), STR_15(CODE[7]), STR_14(CODE[11]), STR_13(CODE[5]), 
		 -> STR_12(CODE[2]), STR_11(CODE[4]), STR_10(CODE[2]), STR_9(CODE[3]), 
		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[4]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> canMessage(BANK0[14]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> refresh(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> refresh(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    wr8s@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[7]), STR_33(CODE[5]), 
		 -> STR_32(CODE[11]), STR_31(CODE[6]), STR_30(CODE[9]), STR_29(CODE[5]), 
		 -> STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[7]), STR_25(CODE[2]), 
		 -> STR_24(CODE[6]), STR_23(CODE[8]), STR_22(CODE[7]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[6]), STR_17(CODE[7]), 
		 -> STR_16(CODE[5]), STR_15(CODE[7]), STR_14(CODE[11]), STR_13(CODE[5]), 
		 -> STR_12(CODE[2]), STR_11(CODE[4]), STR_10(CODE[2]), STR_9(CODE[3]), 
		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display_status->_cmd
    _display_laptime->_cmd
    _display_brake_bias->_cmd
    _display->_display_rpm
    _display_waterTemp->_cmd
    _display_start->_cmd
    _display_speed->_cmd
    _display_rpm->_cmd
    _display_oilTemp->_cmd
    _display_labels->_cmd
    _display_grids->_cmd
    _display_gear->_cmd
    _display_fuel_level->_cmd
    _display_etc->_cmd
    _display_end->_cmd
    _display_bspd->_cmd
    _display_bottom_section->_display_battery
    _display_bottom_section->_display_tp
    _display_tp->_cmd
    _display_battery->_cmd
    _wr8s->_strlen
    _cmd->___awmod
    ___awmod->___awdiv
    ___flge->___xxtofl
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _FT800_Init->_wr32
    _wr8->_SPI_Exchange8bit
    _wr32->_SPI_Exchange8bit
    _wr16->_SPI_Exchange8bit
    _rd16->_SPI_Exchange8bit
    _host_command->_SPI_Exchange8bit
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                83    83      0 1601381
                                             68 COMRAM     2     2      0
                                              0 BANK0     81    81      0
                        _CAN_receive
                         _FT800_Init
                  _SYSTEM_Initialize
                     _TMR0_StopTimer
                        _TMR1_Reload
           _TMR1_SetInterruptHandler
                            ___awdiv
                            ___awmod
                             ___flge
                           ___xxtofl
                            _display
             _display_bottom_section
                 _display_brake_bias
                       _display_bspd
                        _display_end
                        _display_etc
                 _display_fuel_level
                       _display_gear
                      _display_grids
                     _display_labels
                    _display_laptime
                    _display_oilTemp
                        _display_rpm
                      _display_speed
                      _display_start
                     _display_status
                  _display_waterTemp
                          _wait2secs
 ---------------------------------------------------------------------------------
 (1) _wait2secs                                            2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _display_status                                       8     5      3   58342
                                             24 COMRAM     8     5      3
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_laptime                                     24     8     16   58702
                                             24 COMRAM    24     8     16
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_brake_bias                                   6     4      2   52174
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display                                             24     0     24  695655
                                             44 COMRAM    24     0     24
             _display_bottom_section
                       _display_bspd
                        _display_end
                        _display_etc
                 _display_fuel_level
                       _display_gear
                      _display_grids
                     _display_labels
                    _display_oilTemp
                        _display_rpm
                      _display_speed
                      _display_start
                  _display_waterTemp
 ---------------------------------------------------------------------------------
 (1) _display_waterTemp                                    6     4      2   52228
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_start                                        0     0      0   19676
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _display_speed                                        6     4      2   52228
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_rpm                                         20    18      2   61373
                                             24 COMRAM    20    18      2
                            ___awdiv
                            ___awmod
                             ___wmul
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_oilTemp                                      6     4      2   52228
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_labels                                       4     4      0   57938
                                             24 COMRAM     4     4      0
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_grids                                        0     0      0   19676
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _display_gear                                         4     2      2   19850
                                             24 COMRAM     4     2      2
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _display_fuel_level                                   6     4      2   58112
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_etc                                          6     4      2   58112
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_end                                          0     0      0   52032
                                _cmd
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_bspd                                         6     4      2   58112
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_bottom_section                               4     0      4  132958
                                             30 COMRAM     4     0      4
                                _cmd
                    _display_battery
                         _display_tp
 ---------------------------------------------------------------------------------
 (2) _display_tp                                           6     4      2   52152
                                             24 COMRAM     6     4      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (2) _display_battery                                      6     4      2   60782
                                             24 COMRAM     6     4      2
                            ___awdiv
                            ___awmod
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (2) _wr8s                                                10     4      6    5884
                                              8 COMRAM    10     4      6
                   _SPI_Exchange8bit
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     166
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  8     4      4   19676
                                             16 COMRAM     8     4      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___wmul (ARG)
                     _cmd_incrementn
                               _wr32
 ---------------------------------------------------------------------------------
 (2) _cmd_incrementn                                       3     3      0      22
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1056
                                             10 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1668
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     334
                                             16 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
                    _ECAN_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                              4 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _FT800_Init                                           2     2      0   34925
                                             15 COMRAM     2     2      0
                       _host_command
                               _rd16
                               _wr16
                               _wr32
                                _wr8
 ---------------------------------------------------------------------------------
 (2) _wr8                                                  5     0      5    1478
                                              3 COMRAM     5     0      5
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _wr32                                                12     4      8     784
                                              3 COMRAM    12     4      8
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _wr16                                                 6     0      6   32356
                                              3 COMRAM     6     0      6
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _rd16                                                 7     3      4     263
                                              3 COMRAM     7     3      4
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _host_command                                         1     1      0      44
                                              3 COMRAM     1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _SPI_Exchange8bit                                     1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             21 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                              2 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                              2 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                            _refresh *
 ---------------------------------------------------------------------------------
 (10) _refresh                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _FT800_Init
     _host_command
       _SPI_Exchange8bit
     _rd16
       _SPI_Exchange8bit
     _wr16
       _SPI_Exchange8bit
     _wr32
       _SPI_Exchange8bit
     _wr8
       _SPI_Exchange8bit
   _SYSTEM_Initialize
     _ECAN_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _TMR0_StopTimer
   _TMR1_Reload
   _TMR1_SetInterruptHandler
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___flge
     ___xxtofl (ARG)
   ___xxtofl
   _display
     _display_bottom_section
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _display_battery
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _cmd
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___wmul (ARG)
           _cmd_incrementn (ARG)
           _wr32 (ARG)
             _SPI_Exchange8bit
         _cmd_incrementn
         _wr16
           _SPI_Exchange8bit
         _wr8s
           _SPI_Exchange8bit
           _strlen
       _display_tp
         _cmd
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___wmul (ARG)
           _cmd_incrementn (ARG)
           _wr32 (ARG)
             _SPI_Exchange8bit
         _cmd_incrementn
         _wr16
           _SPI_Exchange8bit
     _display_bspd
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_end
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _wr16
         _SPI_Exchange8bit
     _display_etc
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_fuel_level
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_gear
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
     _display_grids
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
     _display_labels
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_oilTemp
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
     _display_rpm
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       ___wmul
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_speed
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
     _display_start
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
     _display_waterTemp
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
   _display_bottom_section
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _display_battery
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_tp
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___wmul (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
   _display_brake_bias
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_bspd
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_end
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _wr16
       _SPI_Exchange8bit
   _display_etc
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_fuel_level
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_gear
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
   _display_grids
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
   _display_labels
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_laptime
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_oilTemp
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_rpm
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___wmul
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_speed
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_start
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
   _display_status
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_waterTemp
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___wmul (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _wait2secs

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _refresh *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     51      8A       5       86.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      53       1       88.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DD       6        0.0%
DATA                 0      0      DD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Apr 05 14:20:38 2019

                                   _SPI_Initialize 688C                                        _SSPSTATbits 000FC7  
                                     ?_display_end 0001                                       ?_display_etc 0019  
                                               l31 6404                                                 l32 63DC  
                                               l34 6416                                                 l35 640E  
                                               l61 5326                                       ?_display_rpm 0019  
                                     ___awdiv@sign 0008                           __size_of_ECAN_Initialize 00A2  
                              ___wmul@multiplicand 0005                                        __CFG_BORV$3 000000  
                                  _timer0ReloadVal 0047                                       __CFG_CP0$OFF 000000  
                                     __CFG_CP1$OFF 000000                                       __CFG_CP2$OFF 000000  
                                     __CFG_CP3$OFF 000000                             __end_of_display_labels 1F74  
                                    ?_display_gear 0019                                                l181 6874  
                                              l442 6180                                                l461 56CC  
                                              l462 5606                                                l702 5488  
                                              l463 5638                                                l439 60F0  
                                              l720 2520                                                l465 57DE  
                                              l713 2642                                                l466 5712  
                                              l714 1F76                                      ?_display_bspd 0019  
                                              l467 5746                                                l731 3E92  
                                              l716 2098                                                l740 4474  
                                              l732 3DD8                                                l660 2712  
                                              l717 21BA                                                l733 3DFC  
                                              l661 2756                                                l718 22DC  
                                              l742 44EE                                                l734 3E20  
                                              l670 2ABA                                                l662 276A  
                                              l719 23FE                                                l743 4568  
                                              l727 5AA4                                                l671 2BF6  
                                              l663 27AE                                                l744 4632  
                                              l672 2C0A                                                l664 27C2  
                                              l745 46D4                                                l665 2806  
                                              l657 26A6                                                l690 4CC4  
                                              l746 474E                                                l666 281A  
                                              l658 26BA                                                l691 4922  
                                              l739 48E2                                                l747 4818  
                                              l667 2956                                                l659 26FE  
                                              l676 3484                                                l668 296A  
                                              l693 4A58                                                l677 35B8  
                                              l669 2AA6                                                l861 2FAC  
                                              l694 4B8E                                                l870 31C2  
                                              l871 31D6                                                l863 3052  
                                              l855 2EAE                                                l872 31E4  
                                              l856 3144                                                l873 320C  
                                              l857 2F3A                                                l866 3144  
                                              l859 2F86                                                l869 31B0  
                                     __CFG_CPB$OFF 000000                                       __CFG_CPD$OFF 000000  
                                  _timer1ReloadVal 004D                                                _cmd 65C2  
                                              _dli 0051                                                _wr8 6798  
                                     ___awmod@sign 0010                             __end_of_display_status 2D2C  
                                              tosl 000FFD                                                wreg 000FE8  
                          __end_of_display_battery 504C                         ??_convertReg2StandardCANid 0007  
                              __size_of_FT800_Init 02FE                                        main@brake_p 007C  
                                      main@engTemp 0088                                               l1101 6340  
                                             l1110 63A6                                               l1102 6350  
                                             l1104 636E                                               l1105 6366  
                                             l1121 6476                                               l1122 6480  
                                             l1114 643C                                               l1123 648E  
                                             l1115 6448                                               l1108 638E  
                                             l1109 6398                                               l1117 645E  
                                             l1142 5BC8                                               l1118 6456  
                                             l1143 5BFC                                               l1144 5C3A  
                                             l1145 5C78                                               l1147 5CB0  
                                             ?_cmd 0011                                               l1540 599E  
                                             l1542 59E8                                               l1551 5A5A  
                                             l1543 59D0                                               l1535 596A  
                                             l1536 597A                                               l1545 5A1A  
                                             l1537 5998                                               l1546 5A0E  
                                             l1554 6590                                               l1539 59AA  
                                             l1555 658C                                               l4147 57DA  
                                             l4067 5326                                               l4621 3052  
                                             l4613 2F86                                               l4605 2F3A  
                                             l4617 2FAC                                               ?_wr8 0004  
                                             STR_1 0F82                                               STR_2 0F17  
                                             STR_3 0F53                                               STR_4 0F8A  
                                             STR_5 0F86                                               STR_6 0F47  
                                             STR_7 0F74                                               STR_8 0F91  
                                             STR_9 0F8E                                               u2000 2FE8  
                                             u1210 64DE                                               u2020 3014  
                                             u2030 3016                                               u1215 64D4  
                                             u2015 300C                                               u2050 3030  
                                             u1340 6462                                               u2140 3162  
                                             u2060 3032                                               u2045 3020  
                                             _LATA 000F89                                               u1430 3DE8  
                                             _LATB 000F8A                                               u1415 5868  
                                             u2207 681A                                               _LATC 000F8B  
                                             u1280 6372                                               u1440 3E0C  
                                             u2160 31D2                                               u2080 304C  
                                             _LATD 000F8C                                               u1425 62EA  
                                             u2217 5058                                               _LATE 000F8D  
                                             u1610 334E                                               u2090 304E  
                                             u2227 5072                                               u2075 303C  
                                   ?_display_grids 0001                                               u1620 5A90  
                                             u2190 3204                                               u1455 3E64  
                                             u1740 5A24                                               u1901 2D52  
                          __end_of_display_laptime 38DE                                               u1960 2FCA  
                                             u1970 2FCC                                               u1891 2D36  
                                             u1990 2FE6                                               u1985 2FD6  
                              display_oilTemp@temp 0019                            __end_of_display_oilTemp 5FE8  
                                             _WPUB 000F5B                                     ?_display_speed 0019  
                                      main@oilTemp 008A                                     ?_display_start 0001  
                                      main@message 0060                                        display@gear 003D  
                                      display@bspd 0037                                        display@fuel 0033  
                                      display@oilP 002F                                               _rd16 667C  
                                             _wr32 6498                                               _wr16 6772  
                                             _main 2D2C                                               _wr8s 63B0  
                                  _TMR0_StartTimer 68C8                                               fsr2h 000FDA  
                                             indf2 000FDF                                               fsr1l 000FE1  
                                             fsr2l 000FD9                                               btemp 0054  
                                             prodh 000FF4                                               prodl 000FF3  
                                             start 0038                                      __CFG_IESO$OFF 000000  
                                    __CFG_FOSC$HS2 000000                             __end_of_SPI_Initialize 689A  
                       ??_TMR1_SetInterruptHandler 0005                                      __CFG_MCLRE$ON 000000  
                                     ___param_bank 000000                         __end_of_display_brake_bias 5B94  
                                            ??_cmd 0015                                              ??_wr8 0009  
                          __end_of_TMR0_Initialize 66EE                     ??_TMR0_DefaultInterruptHandler 0001  
                   __size_of_OSCILLATOR_Initialize 0012                      __end_of_OSCILLATOR_Initialize 686C  
                                            ?_rd16 0004                                     ??_display_gear 001B  
                                   ??_display_bspd 001B                                              ?_wr32 0004  
                                            ?_wr16 0004                                              ?_main 0001  
                                  __end_of___awdiv 63B0                                              ?_wr8s 0009  
                                            STR_10 0F91                                              STR_11 0F7E  
                                            STR_12 0F99                                              STR_20 0F95  
                                            STR_21 0F97                                              STR_13 0F6A  
                                            STR_22 0F40                                              STR_30 0F21  
                                            STR_14 0F01                                              STR_31 0F5F  
                                            STR_15 0F32                                              STR_23 0F2A  
                                            STR_16 0F6F                                              STR_24 0F59  
                                            STR_32 0F0C                                              STR_25 0F97  
                                            STR_33 0F79                                              STR_17 0F39  
                                            STR_34 0F40                                              STR_26 0F40  
                                            STR_18 0F4D                                    ?_display_labels 0001  
                                            STR_35 0F97                                              STR_27 0F2A  
                                            STR_19 0F93                                              STR_36 0F9B  
                                  __end_of___awmod 6498                                              STR_29 0F65  
                                  _TMR1_StartTimer 68C4                                       main@lap_time 009B  
                                            _T0CON 000FD5                                    ___awdiv@divisor 0005  
                                            _T1CON 000FCD                                              i2l516 0022  
                                            i2l518 002C                                    ___awdiv@counter 0007  
                                            _TMR0H 000FD7                                              _TMR1H 000FCF  
                                            _TMR0L 000FD6                                              _TMR1L 000FCE  
                                            _TRISA 000F92                                              _TRISB 000F93  
                                            _TRISC 000F94                                              _TRISD 000F95  
                                            _TRISE 000F96                  __size_of_TMR0_SetInterruptHandler 000A  
                                    __CFG_WRT0$OFF 000000                                      __CFG_WRT1$OFF 000000  
                                    __CFG_WRT2$OFF 000000                                    ?_display_status 0019  
                        ?_TMR0_SetInterruptHandler 0003                                      __CFG_WRT3$OFF 000000  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                              CAN_receive@tempCanMsg 0016  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                 __end_of_TMR0_ISR 674C                                   __end_of_TMR1_ISR 688C  
                                    __CFG_WRTB$OFF 000000                                    __end_of_display 62A6  
                                    __CFG_WRTC$OFF 000000                                      __CFG_WRTD$OFF 000000  
                                     display@speed 003B                                     __CFG_EBTRB$OFF 000000  
                          __size_of_cmd_incrementn 001C                                    __end_of_refresh 68C0  
                          __end_of_TMR1_Initialize 667C                                              pclath 000FFA  
                                            wr8s@i 0012                                              wr8s@l 0011  
                                            wr8s@s 000D                                              tablat 000FF5  
                                            plusw1 000FE3                                              plusw2 000FDB  
                                     display_tp@tp 0019                                       display_rpm@i 002B  
                                     display_rpm@n 0029                                              ttemp5 0055  
                                            ttemp6 0058                                              ttemp7 005C  
              convertReg2ExtendedCANid@ConvertedID 0012                                              status 000FD8  
                                            wtemp8 0055                                    ?_SPI_Initialize 0001  
                       __end_of_display_fuel_level 55BE                                    __initialization 6540  
                             __size_of_CAN_receive 0226                                       __end_of_rd16 66B6  
                                     __end_of_wr16 6798                                       __end_of_wr32 64FA  
                                     __end_of_main 3308                                       __end_of_wr8s 6428  
                                    main@battVolts 008C                        ?_INTERRUPT_InterruptManager 0001  
                                           ??_rd16 0008                                             ??_wr32 000C  
                                           ??_wr16 000A                                             ??_main 0045  
                                           ??_wr8s 000F                                      __activetblptr 000003  
                                   __CFG_PLLCFG$ON 000000                                     __CFG_RETEN$OFF 000000  
                                ??_ECAN_Initialize 0003                                     _refresh_screen 00C5  
                         __end_of_SPI_Exchange8bit 687C                                      main@bspd_flag 0094  
                                 ?_display_battery 0019                                    ??_display_grids 0019  
                          __end_of_TMR0_StartTimer 68CC                                             _CANCON 000F6F  
                                  ??_display_speed 001B                                    ??_display_start 0019  
                                           _ANCON0 000F5D                                             _ANCON1 000F5C  
                                 ___awdiv@dividend 0003                                      main@autoShift 007F  
                                           _T1GCON 000FAA                                    __CFG_BBSIZ$BB2K 000000  
                                 ?_display_laptime 0019                                     __CFG_WDTEN$OFF 000000  
                                 ?_display_oilTemp 0019                                             _OSCCON 000FD3  
                                           _RXB0D0 000F66                                             _RXB0D1 000F67  
                                           _RXB0D2 000F68                                             _RXB0D3 000F69  
                                           _RXB0D4 000F6A                                             _RXB1D0 000F36  
                                           _RXB0D5 000F6B                                             _RXB1D1 000F37  
                                           _RXB0D6 000F6C                                             _RXB1D2 000F38  
                                           _RXB0D7 000F6D                                             _RXB1D3 000F39  
                                           _RXB1D4 000F3A                                             _RXB1D5 000F3B  
                                           _RXB1D6 000F3C                                             _RXB1D7 000F3D  
                                           _TXB0D0 000F26                                             _TXB0D1 000F27  
                                           _TXB0D2 000F28                                             _TXB0D3 000F29  
                                           _TXB0D4 000F2A                                             _TXB1D0 000F16  
                                           _TXB0D5 000F2B                                             _TXB1D1 000F17  
                                           _TXB0D6 000F2C                                             _TXB1D2 000F18  
                                           _TXB0D7 000F2D                                             _TXB1D3 000F19  
                                           _TXB1D4 000F1A                                             _TXB2D0 000F06  
                                           _TXB1D5 000F1B                                             _TXB2D1 000F07  
                                           _TXB1D6 000F1C                                             _TXB2D2 000F08  
                                           _TXB1D7 000F1D                                             _TXB2D3 000F09  
                                           _TXB2D4 000F0A                                             _TXB2D5 000F0B  
                                           _TXB2D6 000F0C                                             _TXB2D7 000F0D  
                                           _SSPADD 000FC8                                             _SSPBUF 000FC9  
                                 __end_of___xxtofl 5A6C                                     __CFG_XINST$OFF 000000  
                                     ??_FT800_Init 0010               __end_of_TMR1_DefaultInterruptHandler 68D2  
            __size_of_TMR1_DefaultInterruptHandler 0002                       _TMR1_DefaultInterruptHandler 68D0  
                                           ___flge 5B94                            __end_of_TMR1_StartTimer 68C8  
                                     ?_TMR1_Reload 0001                                             ___wmul 674C  
                                        ??___awdiv 0007                                     __CFG_STVREN$ON 000000  
                                        ??___awmod 000F                                   ?_TMR0_Initialize 0001  
                                           clear_0 6566                                             clear_1 6572  
                                 ___awdiv@quotient 0009                                    ___awmod@divisor 000D  
                                  ___awmod@counter 000F                               __size_of_display_end 0046  
                                           main@tp 0099                               __size_of_display_etc 0700  
                                           _strlen 6582                                          ??_display 0045  
                             __size_of_display_rpm 05CA                                          ??_refresh 0001  
                                     __mediumconst 0000                   __end_of_convertReg2StandardCANid 632C  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8           TMR0_SetInterruptHandler@InterruptHandler 0003  
         TMR1_SetInterruptHandler@InterruptHandler 0003                                 __end_of_FT800_Init 534A  
                    __size_of_INTERRUPT_Initialize 0004                              __end_of_TMR1_CallBack 67F4  
                                       ___flge@ff1 0011                                         ___flge@ff2 0015  
                                 ?_TMR1_Initialize 0001                                       ___xxtofl@arg 000D  
                                     ___xxtofl@exp 000C                                  _SYSTEM_Initialize 67B8  
                                     ___xxtofl@val 0003                                      ?_host_command 0001  
                                       __accesstop 0060                            __end_of__initialization 6578  
                             __end_of_display_gear 4920                               __end_of_display_bspd 4CEA  
                               ?_SYSTEM_Initialize 0001                           _convertReg2ExtendedCANid 57E4  
                           CAN_receive@returnValue 0018                                      ___rparam_used 000001  
                                   __pcstackCOMRAM 0001                                       __pidataBANK0 6844  
                              ??_SYSTEM_Initialize 0007                                          ?_TMR0_ISR 0001  
                                        ?_TMR1_ISR 0001                      ?_TMR1_DefaultInterruptHandler 0001  
                                       _canMessage 00C6                                    cmd_incrementn@n 0005  
                                   _cmd_incrementn 67F4              convertReg2StandardCANid@tempRXBn_SIDH 0009  
            convertReg2StandardCANid@tempRXBn_SIDL 0003                              display_waterTemp@temp 0019  
                                 ?_TMR0_StartTimer 0001                          __end_of_SYSTEM_Initialize 67D6  
                                       __pbssBANK0 00B1                                     ??_host_command 0004  
                                 main@BSPD_counter 0081                                         _cmd_offset 004F  
                                          ?___flge 0011                   __end_of_TMR0_SetInterruptHandler 68B8  
                          __size_of_TMR0_StopTimer 0004                                            ?___wmul 0003  
                                 ??_display_labels 0019                                   ?_TMR1_StartTimer 0001  
                                       ??_TMR0_ISR 0001                                         ??_TMR1_ISR 0001  
                               __size_of_wait2secs 001A                                            _ECANCON 000F72  
                                          _CANSTAT 000F6E                                   ??_display_status 001C  
                       display_laptime@current_dec 001B                         display_laptime@current_int 0019  
                                          _BRGCON1 000E43                                            _BRGCON2 000E44  
                                          _BRGCON3 000E45                                            ?_strlen 0003  
                                 __CFG_CANMX$PORTB 000000                                          ?___xxtofl 0003  
                                          _REFOCON 000F9A                             __end_of_cmd_incrementn 6810  
                                          _OSCCON2 000FD2                                 _display_brake_bias 5A6C  
                         ??_display_bottom_section 0023                                            _RXB0DLC 000F65  
                                          _RXB1DLC 000F35                                            i2u35_48 673A  
                                          _OSCTUNE 000F9B                                            _TXB0DLC 000F25  
                                          _TXB1DLC 000F15                                            _TXB2DLC 000F05  
                             display_battery@volts 0019                                            _SSPCON1 000FC6  
                                       _display_tp 5FE8                                            _SSPSTAT 000FC7  
                                       cmd@command 0011                                ?_display_brake_bias 0019  
                                 ??_SPI_Initialize 0003                                     display@gasPres 0031  
                                  __CFG_PWRTEN$OFF 000000                                     display@engTemp 003F  
                                          __Hparam 0000                                            __Lparam 0000  
                __size_of_convertReg2StandardCANid 0086                          ?_convertReg2StandardCANid 0003  
                                   display@oilTemp 0041                                    __size_of___flge 0120  
                                          ___awdiv 632C                                            ___awmod 6428  
                                  __size_of___wmul 0026                                    _ECAN_Initialize 60EC  
                                     __psmallconst 0F00                               ??_display_brake_bias 001B  
                             __size_of_TMR1_Reload 000A                                            __pcinit 6540  
                                          __ramtop 0F00                                            __ptext0 2D2C  
                                          __ptext1 6810                                            __ptext2 2674  
                                          __ptext3 3308                                            __ptext4 5A6C  
                                          __ptext5 6220                                            __ptext6 5CB4  
                                          __ptext7 6602                                            __ptext8 5DCC  
                                          __ptext9 38DE                                            _display 6220  
                                        _T0CONbits 000FD5                     ??_TMR1_DefaultInterruptHandler 0001  
                                  __size_of_strlen 0040                                          _T1CONbits 000FCD  
                               _display_fuel_level 534A                              _OSCILLATOR_Initialize 685A  
                                     __size_of_cmd 0040                                       __size_of_wr8 0020  
                                       ??___xxtofl 0007                                   ___awmod@dividend 000B  
                __size_of_TMR1_SetInterruptHandler 000A                                            _refresh 68B8  
                         ??_PIN_MANAGER_Initialize 0003                                    ?_cmd_incrementn 0001  
                        ?_TMR1_SetInterruptHandler 0003                                  __CFG_MSSPMSK$MSK7 000000  
                              display_status@radio 001B                                  ?_SPI_Exchange8bit 0001  
                              ?_display_fuel_level 0019                                            main@etc 0090  
                       __size_of_SYSTEM_Initialize 001E                                            main@drs 0077  
                            __size_of_display_gear 04EA                                            main@rpm 0097  
                            __size_of_display_bspd 03CA                               end_of_initialization 6578  
                                          wr8@addr 0004                                 ??_SPI_Exchange8bit 0003  
                             SPI_Exchange8bit@data 0003                                  __end_of_wait2secs 682A  
                                    ??_CAN_receive 0018                            display_rpm@second_digit 0025  
                                   display_etc@etc 0019                                            postdec1 000FE5  
                             ??_display_fuel_level 001B                                            postinc0 000FEE  
                                          postinc2 000FDE                                         main@F12762 00B1  
                                       main@F12754 00D4                                     display_rpm@rpm 0019  
                                          strlen@a 0007                                            strlen@s 0003  
                             __end_of_host_command 6844                           _TMR0_SetInterruptHandler 68AE  
                                        _PORTAbits 000F80                                          _PORTDbits 000F83  
                                     _display_gear 4436                                 display_laptime@lap 0025  
                                     _display_bspd 4920                                      ___xxtofl@sign 000B  
                  __size_of_display_bottom_section 0092                         ??_convertReg2ExtendedCANid 0007  
                                      ?_display_tp 0019                              __end_of_display_grids 4436  
                            __end_of_display_speed 5EE4                              __end_of_display_start 6640  
                                       main@clutch 0080                                         main@launch 007E  
                         __size_of_display_battery 0362                                         display@etc 0039  
                                       display@rpm 002D                            __end_of_ECAN_Initialize 618E  
                         __size_of_display_laptime 05D6                                     _TMR0_StopTimer 68C0  
                         __size_of_display_oilTemp 0104                       __end_of_INTERRUPT_Initialize 68D0  
                              __end_of_CAN_receive 57E4                                      ??_display_end 0019  
                                    ??_display_etc 001B                                     __end_of___flge 5CB4  
                                    ??_display_rpm 001B                                     __end_of___wmul 6772  
                                __size_of_TMR0_ISR 0028                                  __size_of_TMR1_ISR 0010  
                           ?_OSCILLATOR_Initialize 0001                                     __end_of_strlen 65C2  
                              start_initialization 6540                           __size_of_TMR0_Initialize 0038  
                  __size_of_PIN_MANAGER_Initialize 0036                                        __end_of_cmd 6602  
                                      __end_of_wr8 67B8                                   display@battVolts 0043  
              convertReg2StandardCANid@returnValue 000A                             __end_of_TMR0_StopTimer 68C4  
                         __size_of_TMR1_Initialize 003C                             _display_bottom_section 618E  
                                         ??___flge 0019                                           ??___wmul 0007  
                              __size_of_display_tp 0104                                        __pdataBANK0 00D4  
                           __size_of_TMR1_CallBack 001E                                           ??_strlen 0005  
                           display_rpm@first_digit 0023                                  main@timer_started 0076  
                              __end_of_display_end 6540                                __end_of_display_etc 2674  
                              __end_of_display_rpm 3EA8                                        __pbssCOMRAM 0047  
                                    __pcstackBANK0 0060                                  __size_of___xxtofl 0140  
                               display_speed@speed 0019                              _TMR0_InterruptHandler 0049  
                         __size_of_TMR0_StartTimer 0004                                        _CAN_receive 55BE  
                                 ?_ECAN_Initialize 0001                                    ?_TMR0_StopTimer 0001  
                           _PIN_MANAGER_Initialize 66EE                              __size_of_host_command 001A  
                                        __pintcode 0008                   __end_of_TMR1_SetInterruptHandler 68AE  
                                         ?___awdiv 0003                                           ?___awmod 000B  
                                ??_display_battery 001B                            display_laptime@best_dec 001F  
                          display_laptime@best_lap 0027                            display_laptime@best_int 001D  
                                 ??_cmd_incrementn 0003                       ??_INTERRUPT_InterruptManager 0001  
                                ??_display_laptime 0029                                  ??_display_oilTemp 001B  
                                         ?_display 002D                                        __smallconst 0F00  
                         __size_of_TMR1_StartTimer 0004                                        _COMSTATbits 000F71  
                          display_laptime@last_dec 0023                            display_laptime@last_int 0021  
                                         ?_refresh 0001                   __end_of_convertReg2ExtendedCANid 592C  
                             _INTERRUPT_Initialize 68CC                                      _TMR1_CallBack 67D6  
                                ??_TMR0_Initialize 0005                                       _host_command 682A  
                                   ___wmul@product 0007                                           _LATAbits 000F89  
                                         _LATCbits 000F8B                                           _LATDbits 000F8C  
                                         _PIE1bits 000F9D                                           _PIE5bits 000F76  
                                        _wait2secs 6810                __size_of_INTERRUPT_InterruptManager 0030  
                                         i2u138_48 67E2                         ??_TMR0_SetInterruptHandler 0005  
                                         _PIR1bits 000F9E                                           _PIR5bits 000F77  
                        __size_of_SPI_Exchange8bit 0010                                           _RXB0EIDH 000F63  
                                         _RXB0EIDL 000F64                                           _RXB1EIDH 000F33  
                                         _RXB1EIDL 000F34                                           _RCONbits 000FD0  
                                    ??_TMR1_Reload 0003                                           _RXB0SIDH 000F61  
                                         _RXB0SIDL 000F62                                           _RXB1SIDH 000F31  
                                         _RXF0EIDH 000EE2                                           _RXB1SIDL 000F32  
                                         _RXF0EIDL 000EE3                                           _RXF1EIDH 000EE6  
                                         _RXF1EIDL 000EE7                                           _RXF2EIDH 000EEA  
                                         _RXF2EIDL 000EEB                                           _RXF3EIDH 000EEE  
                                         _RXF3EIDL 000EEF                                           _RXF4EIDH 000EF2  
                                         _RXF4EIDL 000EF3                                           _RXF5EIDH 000EF6  
                                         _RXF5EIDL 000EF7                                           _RXF0SIDH 000EE0  
                                         _RXF0SIDL 000EE1                                           _TXB0EIDH 000F23  
                                         _RXF1SIDH 000EE4                                           _TXB0EIDL 000F24  
                                         _RXF1SIDL 000EE5                                           _TXB1EIDH 000F13  
                                         _RXF2SIDH 000EE8                                           _TXB1EIDL 000F14  
                                         _RXF2SIDL 000EE9                                           _TXB2EIDH 000F03  
                                         _RXF3SIDH 000EEC                                           _TXB2EIDL 000F04  
                                         _RXF3SIDL 000EED                                           _RXF4SIDH 000EF0  
                                         _RXF4SIDL 000EF1                                           _TMR0_ISR 6724  
                                         _RXF5SIDH 000EF4                                           _RXF5SIDL 000EF5  
                                         _TMR1_ISR 687C                                           _RXM0EIDH 000EFA  
                                         _RXM0EIDL 000EFB                                           _TXB0SIDH 000F21  
                                         _RXM1EIDH 000EFE                                           _TXB0SIDL 000F22  
                                         _RXM1EIDL 000EFF                                           _TXB1SIDH 000F11  
                                         _TXB1SIDL 000F12                                           _TXB2SIDH 000F01  
                                         _TXB2SIDL 000F02                                          wr32@value 0008  
                                        wr16@value 0008                                           _RXM0SIDH 000EF8  
                                         _RXM0SIDL 000EF9                                           _RXM1SIDH 000EFC  
                                         _RXM1SIDL 000EFD                                        _display_end 64FA  
                                      _display_etc 1F74                                        _display_rpm 38DE  
                      __size_of_display_brake_bias 0128                                  ??_TMR1_Initialize 0005  
                                ___wmul@multiplier 0003                                   __CFG_SOSCSEL$DIG 000000  
                                _display_waterTemp 5CB4                                          main@fuelP 008E  
                                        main@radio 0083                                          display@tp 0035  
                               ?_display_waterTemp 0019                                          main@speed 0084  
                          __size_of_display_labels 0FD6                                       ??_display_tp 001B  
                          __size_of_display_status 06B8                                          copy_data0 6554  
                            ?_INTERRUPT_Initialize 0001                                     ?_TMR1_CallBack 0001  
                              ??_display_waterTemp 001B                           _convertReg2StandardCANid 62A6  
            convertReg2ExtendedCANid@tempRXBn_EIDH 000B              convertReg2ExtendedCANid@tempRXBn_EIDL 0003  
            convertReg2ExtendedCANid@tempRXBn_SIDH 0004                                         ?_wait2secs 0001  
            convertReg2ExtendedCANid@tempRXBn_SIDL 0005                                           __Hrparam 0000  
                                       _FT800_Init 504C                                           __Lrparam 0000  
                               __CFG_BOREN$SBORDIS 000000                            __size_of_SPI_Initialize 000E  
                      __size_of_display_fuel_level 0274                            ??_OSCILLATOR_Initialize 0003  
                                ??_TMR0_StartTimer 0003                                   __size_of___awdiv 0084  
                                       _CIOCONbits 000F70                                   __size_of___awmod 0070  
                        __end_of_display_waterTemp 5DCC                                 __end_of_display_tp 60EC  
                                         rd16@addr 0004                           _TMR1_SetInterruptHandler 68A4  
convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 0011                                           rd16@temp 000A  
                              __end_of_TMR1_Reload 68A4                              _TMR1_InterruptHandler 004B  
                                 __size_of_display 0086  convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 0010  
                                         ___xxtofl 592C                                   display_gear@gear 0019  
                                 __size_of_refresh 0008                             display_fuel_level@fuel 0019  
                                         __ptext10 674C                                           __ptext11 5EE4  
                                         __ptext20 5FE8                                           __ptext12 0F9E  
                                         __ptext21 4CEA                                           __ptext13 3EA8  
                                       _T1GCONbits 000FAA                                           __ptext30 689A  
                                         __ptext22 63B0                                           __ptext14 4436  
                                         __ptext31 68C0                                           __ptext23 6582  
                                         __ptext15 534A                                           __ptext40 66EE  
                                         __ptext32 67B8                                           __ptext24 65C2  
                                         __ptext16 1F74                                           __ptext41 685A  
                                         __ptext33 6640                                           __ptext25 67F4  
                                         __ptext17 64FA                                           __ptext50 686C  
                                         __ptext42 68CC                                           __ptext34 68C4  
                                         __ptext26 6428                                           __ptext18 4920  
                                         __ptext51 55BE                                           __ptext43 60EC  
                                         __ptext35 68A4                                           __ptext27 632C  
                                         __ptext19 618E                                           __ptext60 68D2  
                                         __ptext52 62A6                                           __ptext44 504C  
                                         __ptext36 66B6                                           __ptext28 592C  
                                         __ptext61 0000                                           __ptext53 57E4  
                                         __ptext45 6798                                           __ptext37 68C8  
                                         __ptext29 5B94                                           __ptext46 6498  
                                         __ptext38 68AE                                           __ptext55 687C  
                                         __ptext47 6772                                           __ptext39 688C  
                                         __ptext56 67D6                                           __ptext48 667C  
                                         __ptext57 68D0                                           __ptext49 682A  
                                         __ptext58 68B8                                           __ptext59 6724  
                                ??_TMR1_StartTimer 0003                convertReg2StandardCANid@ConvertedID 000E  
                                 display_bspd@bspd 0019                                      __size_of_rd16 003A  
                                    __size_of_wr16 0026                                      __size_of_wr32 0062  
                                    __size_of_main 05DC                                      __size_of_wr8s 0078  
                          ?_display_bottom_section 001F               __end_of_TMR0_DefaultInterruptHandler 68D4  
            __size_of_TMR0_DefaultInterruptHandler 0002                       _TMR0_DefaultInterruptHandler 68D2  
              convertReg2ExtendedCANid@returnValue 000C                  __size_of_convertReg2ExtendedCANid 0148  
                                         wr32@addr 0004                                           wr16@addr 0004  
                        ?_convertReg2ExtendedCANid 0003                               display_status@clutch 001A  
                             display_status@launch 0020                                           _up_blink 0053  
                                         int$flags 0054                 __end_of_INTERRUPT_InterruptManager 0038  
                       _INTERRUPT_InterruptManager 0008                                           main@bias 007A  
                                         main@gasP 0074                                           main@gear 0086  
                                         main@bspd 0095                                           main@fuel 0092  
                                         main@oilP 0078                             __size_of_display_grids 058E  
                              __CFG_INTOSCSEL$HIGH 000000                             __size_of_display_speed 0118  
                           __size_of_display_start 003E                                        _RXB0CONbits 000F60  
                                      _RXB1CONbits 000F30                                         _INTCONbits 000FF2  
                                         wr8@value 0008                             ??_INTERRUPT_Initialize 0003  
                                  ??_TMR1_CallBack 0001                                           wr8s@addr 0009  
                                         intlevel2 0000                                   ??_TMR0_StopTimer 0003  
                   __end_of_display_bottom_section 6220                                    _display_battery 4CEA  
                          ?_PIN_MANAGER_Initialize 0001                                        _TXB0CONbits 000F20  
                                     ?_CAN_receive 0016                                        _TXB1CONbits 000F10  
                                      ??_wait2secs 0003                                    _display_laptime 3308  
                                      _TXB2CONbits 000F00                                    _display_oilTemp 5EE4  
                         display_bottom_section@tp 0021                                        ?_FT800_Init 0001  
                    ?_TMR0_DefaultInterruptHandler 0001                                   _SPI_Exchange8bit 686C  
                                      _TMR1_Reload 689A                                 __CFG_WDTPS$1048576 000000  
                              host_command@command 0004                         __size_of_display_waterTemp 0118  
                                  display_rpm@diff 0027                                    _TMR0_Initialize 66B6  
                                   _display_labels 0F9E                            display_status@autoShift 0019  
                                      _SSPCON1bits 000FC6                                     _display_status 2674  
           display_laptime@time_difference_decimal 002D                     __end_of_PIN_MANAGER_Initialize 6724  
                                    _display_grids 3EA8                                      _display_speed 5DCC  
                              __CFG_BORPWR$ZPBORMV 000000                                      _display_start 6602  
           display_laptime@time_difference_integer 002F                             display_brake_bias@bias 0019  
                                  _TMR1_Initialize 6640                        display_bottom_section@volts 001F  
